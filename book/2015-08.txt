\documentclass{book}
%\newcommand{\VolumeName}{Volume 2: Axiom Users Guide}
%\input{bookheader.tex}
\pagenumbering{arabic}
\mainmatter
\setcounter{chapter}{0} % Chapter 1

\usepackage{makeidx}
\makeindex
\begin{document}
\begin{verbatim}
\start
Date: Sat, 01 Aug 2015 12:45:44 -0400
From: Raymond Rogers <raymond.rogers72@gmail.com>
To: axiom-developer@nongnu.org
Subject: Re: [Axiom-developer] Proving Axiom Correct

Great!  Actually this list makes a great dictionary for me :)

Might I suggest opening an axiom-developer forum where discussions about 
different categories,  proofs, and typos can be addressed 
individually?   And perhaps a prefered format for the signatures along 
the ideas of input-process-output as blocks together with a "lint" and 
cross reference program.
Even with the correct semantic,s syntax/form can still make things 
unmaintainable; I know I have done it.  Written perfectly correct 
code/mathematical solutions that totally mystified me later.

Ray

On 07/31/2015 07:22 PM, daly@axiom-developer.org wrote:
> I've collected all of the functions that are implemented at the
> category level. For each function I've prepended the signature.  These
> chunks are automatically extracted during build and collected into a
> file in the obj/sys/proofs subdirectory. The file has been uploaded to
> http://daly.axiom-developer.org/coq.v
>
> The file consists of a single COQ Module named Jenks.
> Each category and its asssociated functions are comments in the file.
> The categories in the file are arranged so that more primitive
> categories occur before categories that inherit from them.
>
> The next stage is to begin proving these algorithms correct using COQ.
> Each proven function will be uncommented, along with its associated proof.
>
> Tim

\start
Date: Sat, 15 Aug 2015 14:46:29 -0500
From: daly@axiom-developer.org
To: axiom-developer@nongnu.org
Subject: [Axiom-developer] Proving Axiom Correct

The latest push extracts the functions from the algebra as preparation
for COQ proofs. There is still work to be done to decorate the functions
in domains and packages with their signatures which is the next thing
to pursue.

All of these functions are collected into obj/sys/proofs/coq.v if
the make command line includes COQ=coq, otherwise the extraction
step is ignored. The coq.v file is pushed through coqtop to rerun
any proofs. At the moment all of the functions are comments.

Part of the game is to prove the most primitive functions first.
This has two advantages. First, the proofs can be used during more
complex proofs. Second, a lot of the primitive functions are just
calls to the underlying lisp code.

The underlying lisp code is being proven using ACL2 (also against
auto-extracted code chunks) so there is a nice focus on a small
set of primitives that benefit both the lisp- and spad-level code.

Tim

\start
Date: Sun, 16 Aug 2015 16:44:43 -0400
From: Lawrence Bottorff <borgauf@gmail.com>
To: axiom-developer@nongnu.org
Subject: [Axiom-developer] Trouble with make on clojure literate

First, Is this the right place for this question? If not please inform;
otherwise, I'm having trouble with your clojure.pamphlet project,
specifically, getting the make to work. The

>./tangle clojure.pamphlet Makefile >Makefile

seemed to work, but the

>make

produced

rm -rf tpd
mkdir -p tpd/src/clj/clojure
mkdir -p tpd//src/clj/clojure/core
mkdir -p tpd/src/clj/clojure/java
mkdir -p tpd/src/clj/clojure/pprint
mkdir -p tpd/src/clj/clojure/reflect
mkdir -p tpd/src/clj/clojure/test
mkdir -p tpd/src/jvm/clojure/asm
mkdir -p tpd/src/jvm/clojure/asm/commons
mkdir -p tpd/src/jvm/clojure/lang
mkdir -p tpd/test/clojure
mkdir -p tpd/test/clojure/test_clojure
mkdir -p tpd/test/clojure/test_clojure/annotations
mkdir -p tpd/test/clojure/test_clojure/genclass
mkdir -p tpd/test/clojure/test_clojure/java
mkdir -p tpd/test/clojure/test_clojure/pprint
mkdir -p tpd/test/clojure/test_clojure/protocols
mkdir -p tpd/test/clojure/test_clojure/repl
tangle clojure.pamphlet build.xml         >tpd/build.xml
tangle: fatal: web file `build.xml' not found.
Makefile:23: recipe for target 'all' failed
make: *** [all] Error 1

Please advise.

LB

\start
Date: Sun, 16 Aug 2015 16:06:36 -0500
From: daly@axiom-developer.org
To: Lawrence Bottorff <borgauf@gmail.com>
Subject: Re: [Axiom-developer] Trouble with make on clojure literate

Actually this is a mailing list for Axiom, a computer algebra system.

The Clojure literate program I wrote reconstructs the Clojure language
interpreter from a literate document.

There is no mailing list for it. 

You can contact me directly at daly@axiom-developer.org

I'll look at the problem and get back to you.

Tim Daly


\end{verbatim}
\eject
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\cleardoublepage
%\phantomsection
\addcontentsline{toc}{chapter}{Bibliography}
\bibliographystyle{axiom}
\bibliography{axiom}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\cleardoublepage
%\phantomsection
\addcontentsline{toc}{chapter}{Index}
\printindex
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\end{document}
