\documentclass{book}
%\newcommand{\VolumeName}{Volume 2: Axiom Users Guide}
%\input{bookheader.tex}
\pagenumbering{arabic}
\mainmatter
\setcounter{chapter}{0} % Chapter 1

\usepackage{makeidx}
\makeindex
\begin{document}
\begin{verbatim}
\start
Date: Wed, 1 Dec 2004 15:33:20 +1000
From: Mike Thomas
To: Bill Page, Camm Maguire
Subject: Metadata for the uploaded Windows source/binary package.

Hi all.

The upload is complete, along with a copy of libgmp.dll and
gmp-static-mingw-4.1.tar.gz.

The source (both Axiom and embedded GCL) was updated from CVS HEAD
approximately last Saturday.  It includes the Axiom "mnt/windows" binaries
and all intermediate files + some build logs.

The alterations are largely Bill's original patch kindly supplied to me
earlier in the year; little extra was needed.

I have not yet gone over the changes to ensure that the source tree will
still work on other platforms - I know there are some loose ends yet to be
tidied up in the Makefiles and source.  Those changes should not be
difficult.

I substituted GCL CVS HEAD for GCL 2.6.5 and made appropriate changes to the
pamphlets.

I hand patched the GCL code rather than regenerating patches for the CVS
version.

(Suggestion: Perhaps GCL should have a new "quiet compiler" flag in the
compiler package and a configure option (--with-external-objects ?) to add
external objects to the link.  Each of these would ease the patch workload
in the Axiom build system.)

Camm, I chose CVS HEAD at the time as I was expecting to debug for months
rather than days and figured that it would be easier on a cleaner source
tree - I rewrote the PE-COFF linking in the HEAD branch specifically to
support my attempt to debug Axiom.  Profuse apologies for potentially
undermining your good intentions re the stable version of GCL - 2.6.5.

I used:

  - MinGW32 gcc 3.4.2 with latest libraries, binutils,

  - hosted by MSYS,

  - MikTeX - a free Win32 TeX/LaTeX package,

  - in the particular Axiom build I uploaded, a dynamic GMP library
(libgmp.dll) is needed, but you will be better off building with the static
GMP library I provided separately (from somewhere on the web) to build or
else the GCL internal GMP source (takes longer to build though).

To use the Axiom binary in the uploaded package, just:

1. make a directory "c:/cvs/head" (no other directory will do) and unzip
"axiom.tgz there,

2. put libgmp.dll in the "c:/cvs/head/mnt/windows/bin" directory,

3. double click in Windows explorer on the axiomSYS executable,

4. open a Windows command prompt and execute these two commands:

5. path c:\cvs\head\axiom\mnt\windows\bin;%path%

6. axiomSYS

Surprisingly I was also able to just double click in Windows Explorer on the
"axiomSYS.exe" binary in "c:/cvs/head/mnt/windows/bin" and get AXIOM to work
without setting any environment variables - it found the autoloads without
problems.

Cheers

Mike Thomas

\start
Date: Wed, 1 Dec 2004 00:59:19 -0500
From: Bill Page
To: Tim Daly
Subject: RE: Axiom on Windows

On Tuesday, November 30, 2004 10:10 AM Tim Daly wrote:
> 
> Bill,
> Minor correction. In fact, axiom does have a 'make install'.
> By default 'make install' will install the mnt subdirectory
> into /usr/local/axiom and the axiom command in /usr/local/axiom/bin.
>

Ok, that's great. I didn't know that existed.
 
> The configure process doesn't do anything yet but it will.
> The main reason it doesn't do anything is that there is no
> way to set a shell variable from a running program like
> configure that survives the program exit (as far as I know).

The usual procedure is that there is a file named 'Makefile.in'
that is modified by ./configure to create the actual Makefile
with the proper paths and choice of options (if any) embedded.
I don't think the Axom ./configure script necessarily needs to
be based on autoconf etc. But I think it would be less confusing
for most if the way it works is modelled after what has become
a gnu standard.

> If there were then the 'configure' script would ask you for
> the type of system and automatically set the shell variables
> for AXIOM and PATH.
> 

I think this is easily possible. Perhaps it would be best if
it were to emulate some of the options usually found in
configure such as --prefix, --host, etc.

Maybe (if I ever find time) I will try to change the
configure file to do this. One possible complication is the
interaction with the Makefile.pamphlet file when it extracts
the host specific version. I wonder if it would make more
sense for that to occur during the ./configure step?

Regards,
Bill Page.

\start
Date: 01 Dec 2004 10:05:17 -0500
From: Camm Maguire
To: Tim Daly
Subject: Re: [Gcl-devel] pathname-name behavior change

Greetings, and thanks Tim for isolating the issue.

Rest assured that we will support the old behavior in our CLtL1
build/mode, so that axiom can change to ansi if and when it wants.
This is the raison d'etre of this build, which I consider a valuable
GCL feature.  Much of the heavy lifting in the lisp world has been
done under CLtL1 or the like, and we need to be ready to catch these
gems as they might propagate into the open source world.

This said, what we really mean by our CLtL1 build is a small build as
close to the original GCL as practicable which doesn't break anyone's
existing code.  There may be some ansi features we implement in this
build which don't happen to break such code.  The development process
in general is move to ansi in as straight a line as possible, see what
breaks when done, and revert the mods as necessary in CLtL1.  

This is much like gcc's support for K&R as well as ansi C, selected by
command line options.

I'll let you know when I pinpoint the location of modification and
commit a revert in the case of CLtL1.

BTW, axiom is already making use of this duality in its in-package
usage, which under ansi must trigger an error if the package does not
already exist.  We support the older behavior in CLtL1.

Take care,

Tim Daly writes:

> Camm,
> 
> I traced the problem in the GCL CVS HEAD that I tried to use.
> This is a check of a broken axiom system vs a working axiom using 2.6.5
> I know that CVS HEAD is not ready yet but this change will surely 
> break axiom.
> 
> 
> ====================================================================
> first we trace the failing axiom function
> ====================================================================
> (1) -> )lisp (trace localdatabase)
> 
> Value = (LOCALDATABASE)
> (1) -> )library ZMOD
> 
>   1> (LOCALDATABASE (ZMOD) NIL)
>    )library cannot find the file zmod.
>   <1 (LOCALDATABASE #<hash-table 08508d58>)
> 
> ====================================================================
> then we narrow it down to the failing lisp function
> ====================================================================
> (1) -> )lisp (trace pathname-name)
> 
> Warning: PATHNAME-NAME is being redefined.
> Value = (PATHNAME-NAME)
> 
> ====================================================================
> we load the interpreted localdatabase code
> ====================================================================
> (1) -> )lisp (load "/tmp/axiom/int/interp/daase.lisp")
> 
> Value = T
> 
> ====================================================================
> and try the failing function again. Notice that given a symbol the
> pathname-name function returns a lowercase string
> ====================================================================
> (1) -> )library ZMOD
> 
>   1> (LOCALDATABASE (ZMOD) NIL)
>     2> (PATHNAME-NAME ZMOD)
>     <2 (PATHNAME-NAME "zmod")
>    )library cannot find the file zmod.
>   <1 (LOCALDATABASE #<hash-table 08508d58>)
> 
> ====================================================================
> in a working axiom we do the same thing but given a symbol the
> pathname-name function returns an uppercase string
> ====================================================================
> (1) -> )library ZMOD
> 
>   1> (LOCALDATABASE (ZMOD) NIL)
>     2> (PATHNAME-NAME ZMOD)
>     <2 (PATHNAME-NAME "ZMOD")
>    IntegerMod is now explicitly exposed in frame initial 
>    IntegerMod will be automatically loaded when needed from 
>       /tmp/axiom/int/algebra/ZMOD.NRLIB/code
>   <1 (LOCALDATABASE #<hash-table 0837e118>)
> 
> (1) -> 

\start
Date: 01 Dec 2004 10:15:05 -0500
From: Camm Maguire
To: Mike Thomas
Subject: re: [Gcl-devel] ANSI test Windows OPEN.*failures

Greetings!

Mike Thomas writes:

> Camm Maguire wrote:
> 
> >>file's proposed directory did not exist.  I solved this with
> >>"ENSURE-DIRECTORIES-EXIST" in the function "get-io-index-stream" in
> >>"src/interpreter/nlib.lisp.pamphlet" and when I left for work this morning
> >>the spad compiler was happily doing algebra in the LAYER0COPY target in the
> >>Makefile.
> >>
> >>Why the Linux version of:
> >>
> >>  (open index-file :direction :io :if-exists :overwrite
> >>		       :if-does-not-exist :create)
> >>
> >>apparently builds the directory automatically I must yet discover, but now
> >>that I know where the error is, that should not be a problem.
> >>
> > Wonderful news, Mike!  You da man!  Please let me know if discovering
> > this error poses any problems.
> 
> You'll be pleased to know I finally managed to set up a reasonably
> stable DeMudi Linux system and checked out HEAD GCL's "open" - it does
> not unexpectedly make non-existent directories per my earlier guess.
> I think that the Windows Axiom build is producing harmless
> messages/warnings during the build which are not produced on Linux,
> which lead to the need for the directory "AHYP.erlib"; it was that
> directory which caused the major barf on Windows.
> 

Mike, are the warnings not issues on Linux, or is the warning
reporting code failing on Windows?  If the latter, can we isolate to a
lisp command?

> The database build bug looks like a pathname bug which I will also
> have to track down when I have more time - until then I am copying the
> daase files by hand halfway through the build.
> 

I think this is the pathname-name case issue Tim reported.  Please let
me know if not.

> Putting all this aside, I've today built Axiom on two Windows boxes -
> XP (PIV) and 2000 Pro (AMD64) and once built it runs like a 'ken
> bought one' on both machines (text only).  Now that I'm understanding
> the Axiom source code layout a little better I'm finding it relatively
> easy to work with - it reminds me of Haskell.
> 

Great!

Take care,

> It's now 10 pm, I started at 5.30 am and we're in the middle of a beta
> release at work so I'm going to sleep otherwise I won't survive the
> week.

\start
Date: 01 Dec 2004 12:59:03 -0500
From: Camm Maguire
To: Tim Daly
Subject: Re: pathname-name behavior change

Greetings!

OK, just checked in a reversion in CLtL1 mode.  If you want to check
CVS head for other issues, that would be great, but please know it is
a moving target.

Take care,

Tim Daly writes:

> Steve,
> 
> CLtL Ref Manual ISBN 0-932376-41-X p413
> 
> "Any argument called pathname in this manual may actually be a
> pathname, a string or symbol, or a stream."
> 
> has this changed?

\start
Date: 01 Dec 2004 13:17:15 -0500
From: Camm Maguire
To: Kostas Oikonomou
Subject: Re: Building Axiom 11/15/2004 on Solaris 9 Sparc

Greetings!

Kostas Oikonomou writes:

> Hello Camm,
> 
> Thanks for the reply. I have also corresponded with Tim about this,
> and he recommended checking out of CVS a new branch (axiom--solaris--1).
> So I did that, and now I'm having fun with it.
> 
> No, just kidding, building GCL is painful!  I've seen the .text problem you

Apologies for any difficulties you may be experiencing.  Full
configure and make output is critical for me to figure out what might
be impeding your attempts.

> are referring to on the GCL site. I assume what I checked out of CVS has
> that problem fixed.

Yes, but I would not recommend using this, as it has a lot of untested
work vis a vis 2.6.5.  I'd rather suggest grabbing the solaris patch
off the errata site and applying it.

> 
> To proceed, let me ask you a very simple question.  Right now I'm having
> trouble just getting GCL to build.  (I am using its own bfd, as you also
> suggest.)  But there are other problems with include files not being found.
> So the question is:  can I make changes to files in lsp/gcl-2.6.5a and
> keep trying to get lisp to build, *without* running make from the top axiom
> level?  That takes a long time, because lisp is extracted from the .tgz file,
> everything is configured ...
> 

I am confused about '2.6.5a' -- there is no such version and I feel
this may be at the heart of your problem.

To my understanding, you can configure and build gcl in its own
directory, perhaps with setting some AXIOM environment variables to
find the 'extras', 'cp unixport/saved_gcl ../../obj/solaris/bin';
'touch ../gcldir', then go to the axiom source root and make as usual.

I say to my understanding as I have little experiece with building
axiom this way, so Tim might be of more help.  An alternate path would
be to start with an external built standard gcl tree with
<sourcedir>/bin in your path, apply the following axiom patch, and
then make as usual:

=============================================================================
--- ./lsp/Makefile.pamphlet.orig	2004-08-31 15:24:50.000000000 +0000
+++ ./lsp/Makefile.pamphlet	2004-08-31 15:25:18.000000000 +0000
@@ -618,14 +618,7 @@
 	@echo 1 building ${LSP} ${GCLVERSION}
 
 gcldir: 
-	@echo 2 building ${GCLVERSION}
-	@tar -zxf ${ZIPS}/${GCLVERSION}.tgz
-<<gcl-2.6.5.socket.patch>>
-<<gcl-2.6.5.libspad.patch>>
-<<gcl-2.6.5.toploop.patch>>
-<<gcl-2.6.5.tail-recursive.patch>>
-<<gcl-2.6.5.collectfn.fix>>
-<<gclConfigureMake>>
+	echo '(compiler::link nil "${OUT}/lisp" (format nil "(progn (let ((*load-path* (cons ~S *load-path*))) (compiler::emit-fn t))(when (fboundp (quote si::sgc-on)) (si::sgc-on t)))" si::*system-directory*) "${OBJ}/${SYS}/lib/cfuns-c.o ${OBJ}/${SYS}/lib/sockio-c.o ${OBJ}/${SYS}/lib/libspad.a")' | gcl
 	@echo 13 finished system build on `date` | tee >gcldir
 
 ccldir: ${LSP}/ccl/Makefile
--- ./src/interp/Makefile.pamphlet.orig	2004-06-27 15:01:27.000000000 +0000
+++ ./src/interp/Makefile.pamphlet	2004-07-05 16:16:32.000000000 +0000
@@ -669,8 +669,10 @@
 	@ echo '#+:akcl (setq compiler::*suppress-compiler-notes* t)' >> ${OUT}/makeint.lisp
 	@ echo '#+:akcl (si::gbc-time 0)' >> ${OUT}/makeint.lisp
 	@ echo '#+:akcl (setq si::*system-directory* "${SPAD}/bin/")' >> ${OUT}/makeint.lisp
+#	@ (cd ${OBJ}/${SYS}/bin ; \
+#	  echo '(progn (gbc t) (load "${OUT}/makeint.lisp") (gbc t) (user::spad-save "${SAVESYS}"))' | ${LISPSYS} )
 	@ (cd ${OBJ}/${SYS}/bin ; \
-	  echo '(progn (gbc t) (load "${OUT}/makeint.lisp") (gbc t) (user::spad-save "${SAVESYS}"))' | ${LISPSYS} )
+	  echo '(progn (gbc t) (setq x si::*system-directory*)(load "${OUT}/makeint.lisp") (setq si::*system-directory* x) (unintern (quote x))(gbc t)(user::spad-save "${SAVESYS}"))' | ${LISPSYS} )
 	@ echo 6 ${SAVESYS} created
 	@ cp ${SAVESYS} ${AXIOMSYS}
 	@ echo 6a ${AXIOMSYS} created
=============================================================================

In general, the first step is for you to use either method, making
sure you have the solaris patch applied, and then post the full GCL
configure and make output.  Or perhaps provide ssh access to your
machine if you wish and I can take a look.

\start
Date: Wed, 1 Dec 2004 12:19:16 -0500
From: Tim Daly
To: Kostas Oikonomou
Subject: axiom--solaris--1
Cc: Camm Maguire

Kostas,

The gcl-2.6.5a was an failed attempt. Modify the GCLVERSION in the
top level Makefiles to read gcl-2.6.5 rather than gcl-2.6.5a and
you'll be back to the standard place. From there you can apply
any patches you want.

Also, if you follow the directions on http://arch.axiom-developer.org
for generating a key and then send me the key I can give you write
access to the axiom--solaris--1 archive.

\start
Date: Wed, 1 Dec 2004 12:24:25 -0500
From: Tim Daly
To: Kostas Oikonomou
Subject: axiom--solaris--1
Cc: Camm Maguire

Kostas,

I've put in a request for a userid on a solaris 9 machine but have
yet to get it. So for the moment you have free reign to change
anything in the branch.

\start
Date: 01 Dec 2004 14:39:54 -0500
From: Camm Maguire
To: Tim Daly
Subject: Re: Building Axiom 11/15/2004 on Solaris 9 Sparc
Cc: Kostas Oikonomou

Greetings!

OK, I've applied the following patch to my local copy of
lsp/Makefile.pamphlet: 
=============================================================================
Index: lsp/Makefile.pamphlet
===================================================================
RCS file: /cvsroot/axiom/axiom/lsp/Makefile.pamphlet,v
retrieving revision 1.11
diff -u -r1.11 Makefile.pamphlet
--- lsp/Makefile.pamphlet	15 Oct 2004 23:58:22 -0000	1.11
+++ lsp/Makefile.pamphlet	1 Dec 2004 19:37:50 -0000
@@ -272,6 +272,42 @@
 	  echo 12 applying tail-recursive noise patch ; \
 	  patch <${SPD}/zips/${GCLVERSION}.cmpnew.gcl_cmpcall.lsp.patch )
 @
+\subsubsection{solaris-ld patch}
+Solaris need not put .text at beginning.
+<<gcl-2.6.5.solaris-ld.patch>>=
+	@(cd ${GCLVERSION}/o ; \
+	  echo 13 applying sfaslelf.c solaris ld patch ; \
+	  patch <${SPD}/zips/${GCLVERSION}.o.sfaslelf.c.patch )
+@
+<<gcl-2.6.5.solaris-ld.patch>>=
+	@(cd ${GCLVERSION}/o ; \
+	  echo 14 applying sfaslbfd.c solaris ld patch ; \
+	  patch <${SPD}/zips/${GCLVERSION}.o.sfaslbfd.c.patch )
+@
+<<gcl-2.6.5.solaris-ld.patch>>=
+	@(cd ${GCLVERSION}/o ; \
+	  echo 15 applying sfasli.c solaris ld patch ; \
+	  patch <${SPD}/zips/${GCLVERSION}.o.sfasli.c.patch )
+@
+<<gcl-2.6.5.solaris-ld.patch>>=
+	@(cd ${GCLVERSION}/cmpnew ; \
+	  echo 16 applying gcl_cmpmain.lsp solaris ld patch ; \
+	  patch <${SPD}/zips/${GCLVERSION}.cmpnew.gcl_cmpmain.lsp.patch )
+@
+\subsubsection{64bit patch}
+Corner case arithmetic error on 64bit machines
+<<gcl-2.6.5.64bit.patch>>=
+	@(cd ${GCLVERSION}/h ; \
+	  echo 17 applying mp.h 64bit patch ; \
+	  patch <${SPD}/zips/${GCLVERSION}.h.mp.h.patch )
+@
+\subsubsection{binutils-version patch}
+Different binutils versions have different _raw_size section structure elements.
+<<gcl-2.6.5.binutils-version.patch>>=
+	@(cd ${GCLVERSION}/o ; \
+	  echo 18 applying sfaslbfd.c binutils version patch ; \
+	  patch <${SPD}/zips/${GCLVERSION}.o.sfaslbfd.c.1.patch )
+@
 \subsubsection{collectfn fix}
 GCL-2.6.1 renamed collectfn.lsp to gcl_collectfn.lsp.
 We rename it back into place because we have later Makefiles
@@ -635,6 +671,9 @@
 <<gcl-2.6.5.toploop.patch>>
 <<gcl-2.6.5.h.gmp_wrappers.h.patch>>
 <<gcl-2.6.5.tail-recursive.patch>>
+<<gcl-2.6.5.solaris-ld.patch>>
+<<gcl-2.6.5.64bit.patch>>
+<<gcl-2.6.5.binutils-version.patch>>
 <<gcl-2.6.5.collectfn.fix>>
 <<gclConfigureMake>>
 	@echo 13 finished system build on `date` | tee >gcldir
=============================================================================

and added the patch files to the zips directories included below, and
my freshly checked-out cvs tree is building at present way beyond the
bootsys stage.

Please let me know if there is some problem I'm not seeing.  These
patches are just those on the errata page.  You may or may not want to
apply all of them.

Take care,

Tim Daly writes:

> Camm,
> 
> I merged the patches you sent me and axiom failed to build so 
> rather than do things a patch at a time I tried to get the 
> latest CVS and do a complete build.
> 
> This was only for the axiom--solaris--1 branch and is not intended
> to go into the main branch of axiom until GCL 2.7.0 is released.
> My build is only an attempt to get the solaris port working.
> 
> However it did uncover an interesting bug. My best guess, so far,
> is that pathname-name returns a different case than it used to.
> I'm going to investigate this later this evening if I get time.
> 
> Tim
> 
> 
> 

--[[application/octet-stream; type=patch
LS0tIGgvbXAuaC5vcmkJMjAwNC0xMi0wMSAxOTowMToyMC4wMDAwMDAwMDAgKzAwMDAKKysrIGgv
bXAuaAkyMDA0LTEyLTAxIDE5OjAyOjA5LjAwMDAwMDAwMCArMDAwMApAQCAtNjEsOCArNjEsMTAg
QEAKICAgIGFjdGlvbiBcCiAgICAoKCgoQ01QdDE9KHgpKSsxMDI0KSYtMjA0OCk9PTA/c21hbGxf
Zml4bnVtKENNUHQxKTptYWtlX2ZpeG51bTEoQ01QdDEpKTt9d2hpbGUoMCkKICAgICAgCisjZGVm
aW5lIGluZWcoYV8pIChzaXplb2YoYV8pPT1zaXplb2YodW5zaWduZWQpID8gKHVuc2lnbmVkKS0o
YV8pIDogKHVuc2lnbmVkIGxvbmcpLShhXykpCisKICNkZWZpbmUgYWRkaWkgbXB6X2FkZAotI2Rl
ZmluZSBhZGRzaSh1LGEsYikgKGEgPj0gMCA/ICBtcHpfYWRkX3VpKHUsYixhKSA6IG1wel9zdWJf
dWkodSxiLC1hKSkKKyNkZWZpbmUgYWRkc2kodSxhLGIpIChhID49IDAgPyAgbXB6X2FkZF91aSh1
LGIsYSkgOiBtcHpfc3ViX3VpKHUsYixpbmVnKGEpKSkKICNkZWZpbmUgYWRkc3ModSxhLGIpIGFk
ZHNpKHUsYSxTSV9UT19NUChiLGJpZ19maXhudW0xKSkKIAkgICAgCiAjZGVmaW5lIG11bGlpIG1w
el9tdWwKQEAgLTcxLDkgKzczLDkgQEAKIAkgICAgCiAjZGVmaW5lIHN1YmlpIG1wel9zdWIKICNk
ZWZpbmUgc3Vic2kodSxhLGIpIG1wel9zdWIodSxTSV9UT19NUChhLGJpZ19maXhudW0xKSxiKQot
I2RlZmluZSBzdWJpcyh1LGEsYikgKGIgPj0gMCA/ICBtcHpfc3ViX3VpKHUsYSxiKSA6IG1wel9h
ZGRfdWkodSxhLC1iKSkKKyNkZWZpbmUgc3ViaXModSxhLGIpIChiID49IDAgPyAgbXB6X3N1Yl91
aSh1LGEsYikgOiBtcHpfYWRkX3VpKHUsYSxpbmVnKGIpKSkKICNkZWZpbmUgc3Vic3ModSxhLGIp
IHN1YmlzKHUsU0lfVE9fTVAoYSxiaWdfZml4bnVtMSksYikKLSNkZWZpbmUgc2hpZnRpKHUsYSx3
KSAodz49MCA/IG1wel9tdWxfMmV4cCh1LGEsdykgOiBtcHpfZmRpdl9xXzJleHAodSxNUCh4KSwt
dykpCisjZGVmaW5lIHNoaWZ0aSh1LGEsdykgKHc+PTAgPyBtcHpfbXVsXzJleHAodSxhLHcpIDog
bXB6X2ZkaXZfcV8yZXhwKHUsTVAoeCksaW5lZyh3KSkpCiAKIAogCg==
--[[application/octet-stream; type=patch
LS0tIG8vc2Zhc2xiZmQuYwkyMCBNYXIgMjAwNCAwMTozODoyNSAtMDAwMAkxLjEyLjQuMS4yLjQK
KysrIG8vc2Zhc2xiZmQuYwkyMyBBdWcgMjAwNCAyMzowOToyMyAtMDAwMAkxLjE4CkBAIC0zMDYs
NyArMjk5LDcgQEAKICAgICBzdHJ1Y3QgYmZkX2xpbmtfaGFzaF9lbnRyeSAqaDsKIAogICAgIGlm
ICghc3RybmNtcChlbnRyeV9uYW1lX3B0cixxW3VdLT5uYW1lLDUpKSB7Ci0gICAgICBpbml0X2Fk
ZHJlc3M9cVt1XS0+dmFsdWU7CisgICAgICBpbml0X2FkZHJlc3M9cVt1XS0+dmFsdWUrKHFbdV0t
PnNlY3Rpb24tPm91dHB1dF9zZWN0aW9uLT52bWEtKHVuc2lnbmVkIGxvbmcpbWVtb3J5LT5jZmQu
Y2ZkX3N0YXJ0KTsKICAgICAgIGNvbnRpbnVlOwogICAgIH0KIAo=
--[[application/octet-stream; type=patch
LS0tIG8vc2Zhc2xiZmQuYy5vcmkJMjAwNC0xMi0wMSAxOTowMzowOC4wMDAwMDAwMDAgKzAwMDAK
KysrIG8vc2Zhc2xiZmQuYwkyMDA0LTEyLTAxIDE5OjA1OjM1LjAwMDAwMDAwMCArMDAwMApAQCAt
MjYzLDcgKzI2Myw3IEBACiAKICAgICBjdXJyZW50PXJvdW5kX3VwKGN1cnJlbnQsMTw8cy0+YWxp
Z25tZW50X3Bvd2VyKTsKIAotICAgIGN1cnJlbnQrPXMtPl9yYXdfc2l6ZTsKKyAgICBjdXJyZW50
Kz1iZmRfc2VjdGlvbl9zaXplKGIscyk7CiAKICAgfQogICBjdXJyX3NpemU9KHVuc2lnbmVkIGxv
bmcpY3VycmVudDsKQEAgLTI4OCw3ICsyODgsNyBAQAogCiAgICAgbT1yb3VuZF91cChtLDE8PHMt
PmFsaWdubWVudF9wb3dlcik7CiAgICAgcy0+b3V0cHV0X3NlY3Rpb24tPnZtYT0odW5zaWduZWQg
bG9uZyltOwotICAgIG0rPXMtPl9yYXdfc2l6ZTsKKyAgICBtKz1iZmRfc2VjdGlvbl9zaXplKGIs
cyk7CiAJICAgICAKICAgfQogCkBAIC0zNDQsNiArMzQ0LDggQEAKIAogICAgZm9yIChzPWItPnNl
Y3Rpb25zO3M7cz1zLT5uZXh0KSB7CiAgICAgIAorICAgICB1bnNpZ25lZCBsb25nIHNzPWJmZF9z
ZWN0aW9uX3NpemUoYixzKTsKKwogICAgICBpZiAoIShzLT5mbGFncyAmIFNFQ19MT0FEKSkKICAg
ICAgICBjb250aW51ZTsKICAgICAgCkBAIC0zNTMsNyArMzU1LDcgQEAKIAkJCQkJICAgICB2LDAs
cSkpIAogICAgICAgIEZFZXJyb3IoIkNhbm5vdCBnZXQgcmVsb2NhdGVkIHNlY3Rpb24gY29udGVu
dHNcbiIsMCk7CiAKLSAgICAgbWVtY3B5KCh2b2lkICopKHVuc2lnbmVkIGxvbmcpcy0+b3V0cHV0
X3NlY3Rpb24tPnZtYSx2LHMtPl9yYXdfc2l6ZSk7CisgICAgIG1lbWNweSgodm9pZCAqKSh1bnNp
Z25lZCBsb25nKXMtPm91dHB1dF9zZWN0aW9uLT52bWEsdixzcyk7CiAgICAgIAogICAgfQogIH0K
--[[application/octet-stream; type=patch
LS0tIG8vc2Zhc2xlbGYuYwk4IE1hciAyMDA0IDIyOjAyOjI0IC0wMDAwCTEuOC42LjYKKysrIG8v
c2Zhc2xlbGYuYwkyMyBBdWcgMjAwNCAyMzowOToyMyAtMDAwMAkxLjE1CkBAIC0xMzMsMTMgKzEz
MiwxMiBAQAogCiAKIC8qIGFsaWduIGZvciBwb3dlciBvZiB0d28gbiAqLwotc3RhdGljIHZvaWQg
Kgotcm91bmRfdXAoYWRkcmVzcyxuKQotICAgICB1bnNpZ25lZCBpbnQgYWRkcmVzcyxuOwotewot
IHJldHVybiAgKHZvaWQgKikoKGFkZHJlc3MgKyBuIC0xKSAmIH4obi0xKSkgOwotfQotI2RlZmlu
ZSBST1VORF9VUChhLGIpIHJvdW5kX3VwKGEsYikgCisvKiBzdGF0aWMgdm9pZCAqICovCisvKiBy
b3VuZF91cCh1bnNpZ25lZCBsb25nIGFkZHJlc3MsdW5zaWduZWQgbG9uZyBuKSB7ICovCisvKiB7
ICovCisvKiAgcmV0dXJuICAodm9pZCAqKSgoYWRkcmVzcyArIG4gLTEpICYgfihuLTEpKSA7ICov
CisvKiB9ICovCisjZGVmaW5lIFJPVU5EX1VQKF9hZGRyLF9wcykgKCh2b2lkICopKCgodW5zaWdu
ZWQgbG9uZylfYWRkciArICh1bnNpZ25lZCBsb25nKV9wcyAtMSkgJiB+KCh1bnNpZ25lZCBsb25n
KV9wcy0xKSkpCiAKIGludCB1c2VfbW1hcDsKIApAQCAtMzA5LDQ2ICszMDcsMzEgQEAKICAgICAg
fQogCiAgICB7IAotICAgICBpbnQgaj0wOwotICAgICBmb3IgKGo9MSA7IGogPCAgZmlsZV9oLT5l
X3NobnVtIDsgaisrKQotICAgICAgIHsKKyAgICAgaW50IGo7CisKKyAgICAgZm9yIChqPTEgOyBq
IDwgIGZpbGVfaC0+ZV9zaG51bSA7IGorKykgeworCiAJIHNocCA9ICZTRUNUSU9OX0goaik7IAog
CSBpZiAoKHNocC0+c2hfdHlwZSA9PSBTSFRfUkVMQSB8fCBzaHAtPnNoX3R5cGUgPT0gU0hUX1JF
TCkgJiYKIAkgICAgIHNocC0+c2hfaW5mbzxmaWxlX2gtPmVfc2hudW0gJiYKLQkgICAgIChTRUNU
SU9OX0goc2hwLT5zaF9pbmZvKS5zaF9mbGFncyAmIFNIRl9BTExPQykpCi0JICAgewotCSAgICAg
aW50IGluZGV4X3RvX3JlbG9jYXRlID0gc2hwLT5zaF9pbmZvOworCSAgICAgKFNFQ1RJT05fSChz
aHAtPnNoX2luZm8pLnNoX2ZsYWdzICYgU0hGX0FMTE9DKSAKKwkgICAgICYmIChTRUNUSU9OX0go
c2hwLT5zaF9pbmZvKS5zaF90eXBlID09IFNIVF9QUk9HQklUUworCQl8fCBTRUNUSU9OX0goc2hw
LT5zaF9pbmZvKS5zaF90eXBlID09IFNIVF9OT0JJVFMpKSB7CisKKwkgICBpbnQgazsKKwkgICBj
aGFyICpyZWwgPSAoY2hhciAqKSBiYXNlICsgICBzaHAtPnNoX29mZnNldDsKKwogCSAgICAgaWYg
KHN5bXRhYl9pbmRleCAhPSBzaHAtPnNoX2xpbmspCiAJICAgICAgIEZFZXJyb3IoInVuZXhwZWN0
ZWQgc3ltYm9sIHRhYmxlIHVzZWQiLDApOwotCSAgICAgdGhlX3N0YXJ0ID0gc3RhcnRfYWRkcmVz
cyArIHNlY3Rpb25baW5kZXhfdG9fcmVsb2NhdGVdLnN0YXJ0OwotCSAgIH0KLS8qICAJIGVsc2Ug
aWYgKHNocC0+c2hfdHlwZSA9PSBTSFRfUkVMICovCi0vKiAgCSAgICAgJiYgKFNFQ1RJT05fSChz
aHAtPnNoX2luZm8pLnNoX2ZsYWdzICYgU0hGX0FMTE9DKSkgKi8KLS8qICAJICAgeyAqLwotLyog
IAkgICAgIGludCBpbmRleF90b19yZWxvY2F0ZSA9IHNocC0+c2hfaW5mbzsgKi8KLS8qICAJICAg
ICBpZiAoc3ltdGFiX2luZGV4ICE9IHNocC0+c2hfbGluaykgKi8KLS8qICAJICAgICAgIEZFZXJy
b3IoInVuZXhwZWN0ZWQgc3ltYm9sIHRhYmxlIHVzZWQiKTsgKi8KLS8qICAJICAgICB0aGVfc3Rh
cnQgPSBzdGFydF9hZGRyZXNzICsgc2VjdGlvbltpbmRleF90b19yZWxvY2F0ZV0uc3RhcnQ7ICov
Ci0vKiAgCSAgIH0gKi8KKwkgICB0aGVfc3RhcnQgPSBzdGFydF9hZGRyZXNzICsgc2VjdGlvbltz
aHAtPnNoX2luZm9dLnN0YXJ0OwogCSAKLQkgZWxzZSBpZiAoIChzaHAtPnNoX3R5cGUgPT0gU0hU
X1JFTCkgfHwgKHNocC0+c2hfdHlwZSA9PSBTSFRfUkVMQSkgKQotCSAgIHsgIGlmICgvKiBnZXRf
c2VjdGlvbl9udW1iZXIoIi5yZWwuc3RhYiIpID09IGogfHwgKi8KLQkJICAvKiBOZXdlciBnY2Mg
dXNlcyB0aGVzZSBzZWN0aW9uIG5hbWUgLS0gQ01NIDIwMDQwMjI0Ki8KLQkJICAhc3RybmNtcChz
ZWN0aW9uX25hbWVzK1NFQ1RJT05fSChqKS5zaF9uYW1lLCIucmVsLmRlYnVnIiwxMCkgfHwKLQkJ
ICAvKiBvbGQgaW4gZm9yIGJhY2t3YXJkIGNvbXBhdGliaWxpdHkgKi8KLQkJICAhc3RyY21wKHNl
Y3Rpb25fbmFtZXMrU0VDVElPTl9IKGopLnNoX25hbWUsIi5yZWwuc3RhYiIpKQotCSAgICAgICAg
IGNvbnRpbnVlOwotCSAgICAgRkVlcnJvcigidW5rbm93biByZWwgdHlwZSIsMCk7Ci0JICAgfQot
CSBlbHNlCi0JICAgY29udGludWU7Ci0JIHsKLQkgICBpbnQgaz0wOwotCSAgIGNoYXIgKnJlbCA9
IChjaGFyICopIGJhc2UgKyAgIHNocC0+c2hfb2Zmc2V0OwogCSAgIGZvciAoaz0gMDsgazwgc2hw
LT5zaF9zaXplIDsgays9IHNocC0+c2hfZW50c2l6ZSkgCiAJICAgICByZWxvY2F0ZShzeW1ib2xf
dGFibGUsKEVsZjMyX1JlbGEgKikocmVsICsgayksc2hwLT5zaF90eXBlKTsKKwogCSB9CisKICAg
ICAgICB9CisKICAgIH0KIAogI2lmZGVmIFNUQU5ECkBAIC02OTIsNyArNjc1LDcgQEAKIAkJICBk
ZWZhdWx0OgogCQkgICAgcHJpbnRmKCJbdW5rbm93biByZWwgc2VjbiAlZCB0eXBlPSVkXSIsCiAJ
CQkgICBzeW0tPnN0X3NobmR4LAotCQkJICAgU0VDVElPTl9IKHN5bS0+c3Rfc2huZHgpLnNoX3R5
cGUpOworCQkJICAgKGludClTRUNUSU9OX0goc3ltLT5zdF9zaG5keCkuc2hfdHlwZSk7CiAJCSAg
fQogCSAgICAgIH0KIAkgICAgZWxzZQpAQCAtNzA4LDcgKzY5MSw3IEBACiAJICAgICAgaWYgKHN5
bS0+c3Rfc2huZHggPT0gdGV4dF9pbmRleCAmJgogCQkgIGJjbXAoImluaXRfIixzdHJpbmdfdGFi
bGUgKyBzeW0tPnN0X25hbWUsNCkgPT0gMCkKIAkJewotCQkgICppbml0X2FkZHJlc3NfcHRyID0g
c3ltLT5zdF92YWx1ZTsKKwkJICAqaW5pdF9hZGRyZXNzX3B0ciA9IHN5bS0+c3RfdmFsdWUrc2Vj
dGlvbltzeW0tPnN0X3NobmR4XS5zdGFydDsKIAogCQkgIH0KIAkgICAgZWxzZQkK
--[[application/octet-stream; type=patch
LS0tIGNtcG5ldy9nY2xfY21wbWFpbi5sc3AJNSBBdWcgMjAwNCAyMjowMDo0MSAtMDAwMAkxLjE2
CisrKyBjbXBuZXcvZ2NsX2NtcG1haW4ubHNwCTIzIEF1ZyAyMDA0IDIzOjI4OjQ5IC0wMDAwCkBA
IC04NDcsNyArODQ3LDcgQEAKIAkJICAgICAoc2V0cSBzZmlsZXMgKGNvbmNhdGVuYXRlICdzdHJp
bmcgc2ZpbGVzICIgIiAobmFtZXN0cmluZyB0ZW0pKSkpKQogCSAgICAgICBzZmlsZXMpIAogCSAg
ICAgc2k6OipzeXN0ZW0tZGlyZWN0b3J5KgotCSAgICAgIytnbnUtbGQgKGZvcm1hdCBuaWwgIi1X
bCwtTWFwIH5hIiAobmFtZXN0cmluZyBtYXApKQorCSAgICAgIytnbnUtbGQgKGZvcm1hdCBuaWwg
Ii1XbCwtTWFwIH5hIiAobmFtZXN0cmluZyBtYXApKSAjLWdudS1sZCAiIgogCSAgICAgKGxldCog
KChwYXIgKG5hbWVzdHJpbmcgKG1ha2UtcGF0aG5hbWUgOmRpcmVjdG9yeSAnKDpwYXJlbnQpKSkp
CiAJCSAgICAoaSAoY29uY2F0ZW5hdGUgJ3N0cmluZyAiICIgcGFyKSkKIAkJICAgIChqIChjb25j
YXRlbmF0ZSAnc3RyaW5nICIgIiBzaTo6KnN5c3RlbS1kaXJlY3RvcnkqIHBhcikpKQo=

-- 

\start
Date: Wed, 1 Dec 2004 14:53:48 -0500
From: Stephen Wilson
To: Tim Daly
Subject: Re: [Axiom-mail] Function returning UnivariateTaylorSeries
Cc: Marcus Better

Hello,

I would like to give a final overview of what I have uncovered
regarding this dependent typing issue. Unfortunately the problems it
raises are quite extensive.

We could solve the initial problem wrt Marcus's Foo domain. The
problem is with the interpreter not performing type analysis on the
signature of the bar function:

     bar(): () -> UnivariateTaylorSeries(K, z, 0)

Eventually the signature itself is rewritten inside the interpreter,
but only the parameters from the domain Foo(K, z) are analyzed. The
0 is left untouched. 

It is possible to extend the interpreter to solve the class of
problems which this example represents. It amounts to writing some
code which performs coercions on signature parameters.

However, it is easy to come up with variations on the Foo domain which
would not be addressed. Here are two particularly troubling examples:

================================================================
)abbrev package FOO1 Foo1

Foo1(K, z): Exports == Implementation where
  K : Ring
  z : Symbol
  Exports == with
    bar1: () -> UnivariateTaylorSeries(K,z,0);
  Implementation == add
    bar1(): UnivariateTaylorSeries(K,z,0) ==
      st := generate(const(1)$MappingPackage2(K, K),0)$Stream(K)
      series(st)$UnivariateTaylorSeries(K,z,0)

)abbrev package FOO2 Foo2

Foo2(K, z): Exports == Implementation where
  K : Ring
  z : Symbol
  Exports == with
    bar2: K -> Stream K
  Implementation == add
    bar2(x: K): Stream K ==
      F := Foo1(K, z)
      uts := bar1()$F
      eval(uts, x)
================================================================

The Foo2 domain simply will not compile:

================================================================
   Compiling AXIOM source code from file /home/steve/tmp/foo2.spad 
      using old system compiler.
   FOO2 abbreviates package Foo2 
------------------------------------------------------------------------
   initializing NRLIB FOO2 for Foo2 
   compiling into NRLIB FOO2 
   compiling exported bar2 : K -> Stream K
****** comp fails at level 1 with expression: ******
error in function bar2 

(0)
****** level 1  ******
$x:= 0
$m:= K
$f:=
((((|uts| #) (F #) (|last| #) (|rest| #) ...)))
 
   >> Apparent user error:
   Cannot coerce 0 
      of mode (NonNegativeInteger) 
      to mode K 

protected-symbol-warn called with (NIL)
================================================================

This implies that even if we were to extend the interpreter to handle
`signature coercions' we would still not be able to use our domains
for general library development, as this is a compiler issue.


Another example is the following variation on the original Foo:

================================================================
)abbrev package FOO3 Foo3

Foo3(K, z): Exports == Implementation where
  K : Ring
  z : Symbol
  Exports == with
    bar3: (c:K) -> UnivariateTaylorSeries(K,z,c);
  Implementation == add
    bar3(c:K): UnivariateTaylorSeries(K,z,c) ==
      st := generate(const(1)$MappingPackage(K, K),c)$Stream(K)
      series(st)$UnivariateTaylorSeries(K,z,c)
================================================================

Trying to compile a domain which uses Foo3 will fail. 

Trying to use Foo3 directly will invoke a problem in the interpreter
similar to the one invoked by Foo1. The problem is more severe in this
case since the signature is:

   bar3: (c:K) -> UnivariateTaylorSeries(K,z,c)

As before, K and z will be properly rewritten w.r.t the domain
parameters. Whats left for the interpreter to deduce is what the
symbol 'c' means. As far as I can tell, this information is simply not
available. The database information produced by the compiler gives
type information for bar3's arguments -- nothing with respect to
the binding of symbols to formal parameters. 

Interestingly, the compiler generates a file `info', which for Foo3
looks like this:

================================================================

((|bar| (((|UnivariateTaylorSeries| K |z| |c|) K)
         ((|UnivariateTaylorSeries| K |z| |c|)
          (|series| (|UnivariateTaylorSeries| K |z| |c|) (|Stream| K))
          (|One| (|UnivariateTaylorSeries| K |z| |c|)))
         ((|Stream| K) (|generate| (|Stream| K) (|Mapping| K K) K))
         ((|MappingPackage2| K K) (|const| (|Mapping| K K) K))
         (|locals| (|st| |Stream| K)) (|arguments| (|c| . K))
         (K (|One| K))))) 

================================================================

Notice the `(|arguments| (|c| . K))' form. I am not sure when or how
this info file is used, but it does contain the information we would
need. A general solution to this problem would probably involve an
extension to the database such that the formal argument bindings are
available to the interpreter.

Clearly, tackling this problem would require a solid understanding of
both the compiler and interpreter -- something I do not posses.

I will keep these issues in mind as I learn more about axioms
internals. 

Perhaps down the road there could be an axiom-langextension-1 branch
which could serve as a playpen for exploring and formalizing axioms
dependent type system.

\start
Date: Wed, 1 Dec 2004 13:52:08 -0500
From: Tim Daly
To: list
Subject: axiom--windows--1

I've merged the changes for windows into a new branch:

axiom--windows--1

\start
Date: Wed, 1 Dec 2004 16:44:00 -0500
From: Tim Daly
To: Camm Maguire
Subject: Re: [Gcl-devel] pathname-name behavior change

Camm,

I don't mind upgrading axiom's code to ansi. 
In fact, we should probably have a branch for that task.

\start
Date: Wed, 1 Dec 2004 17:02:42 -0500
From: Tim Daly
To: Stephen Wilson
Subject: re: [Axiom-mail] Function returning UnivariateTaylorSeries
Cc: Marcus Better

Steve,

>Perhaps down the road there could be an axiom-langextension-1 branch
>which could serve as a playpen for exploring and formalizing axioms
>dependent type system.

If you're interested I'd be happy to make a branch for this.
Follow the directions on http://arch.axiom-developer.org for making a key
and send it to me. I'll add you to the authorized_key file.

If you're going to hack into the lisp code I'd greatly appreciate
documenting and comments on what you come to understand as well as
changes to the code. That will make it so much easier to merge later.

I haven't had time to reach all the way up to the spad code level
as there have been various fires burning at the build level.

\start
Date: Thu, 2 Dec 2004 10:02:19 +1000
From: Mike Thomas
To: Camm Maguire, Mike Thomas
Subject: re: [Gcl-devel] ANSI test Windows OPEN.*failures

Hi Camm.

| > You'll be pleased to know I finally managed to set up a reasonably
| > stable DeMudi Linux system and checked out HEAD GCL's "open" - it does
| > not unexpectedly make non-existent directories per my earlier guess.
| > I think that the Windows Axiom build is producing harmless
| > messages/warnings during the build which are not produced on Linux,
| > which lead to the need for the directory "AHYP.erlib"; it was that
| > directory which caused the major barf on Windows.
| >
|
| Mike, are the warnings not issues on Linux, or is the warning
| reporting code failing on Windows?  If the latter, can we isolate to a
| lisp command?

Ultimately, hopefully, and not this week.

| > The database build bug looks like a pathname bug which I will also
| > have to track down when I have more time - until then I am copying the
| > daase files by hand halfway through the build.
| >
|
| I think this is the pathname-name case issue Tim reported.  Please let
| me know if not.

I suspect not as I had the same symptom 6 months ago with an earlier stable
GCL (perhaps 2.6.2?).  Perhaps some other bug since fixed which
coincidentally duplicates that symptom, but...

| > Putting all this aside, I've today built Axiom on two Windows boxes -
| > XP (PIV) and 2000 Pro (AMD64) and once built it runs like a 'ken
| > bought one' on both machines (text only).  Now that I'm understanding
| > the Axiom source code layout a little better I'm finding it relatively
| > easy to work with - it reminds me of Haskell.
| >
|
| Great!

Yes, Axiom was the last serious barrier in relation to application support
on  Windows relative to the Unix platforms.  Next on the plate is to return
to 2.6.5 and ensure that the recent patches haven't broken anything on
Windows.  I think I will also have to bring it up to scratch for the current
MinGW32 gcc version.

Frankly, I would like to dump 2.6.x ASAP.

Have a pleasant evening,

\start
Date: Wed, 1 Dec 2004 19:11:14 -0500
From: Stephen Wilson
To: Tim Daly
Subject: re: [Axiom-mail] Function returning UnivariateTaylorSeries

Tim,

> If you're interested I'd be happy to make a branch for this.

Yes, I am very interested -- too many reasons to list!

> If you're going to hack into the lisp code I'd greatly appreciate
> documenting and comments on what you come to understand as well as
> changes to the code. That will make it so much easier to merge later.

Absolutely. Indeed, as I study the code further, the first
contributions I am likely to make will be in the form of
documentation. The literate programming paradigm is one I adhere to in
my personal projects as well.

\start
Date: Wed, 1 Dec 2004 21:57:25 -0500 
From: Bill Page
To: Mike Thomas
Subject: Axiom on Windows
Cc: Bill Page

Mike,

On Wednesday, December 01, 2004 12:33 AM you wrote:
> 
> The upload is complete, along with a copy of libgmp.dll and
> gmp-static-mingw-4.1.tar.gz.
> 

Great. I have downloaded it and completed a few tests. It
seems to be fully functional. Congratulations!!!

I was very pleasantly surprized to see that AXIOMsys under
windows works with the usual 'gnu readline' line editing.
So it seems we do not need to worry about the clef program.

Since I know several other people are anxious to try Axiom
on Windows, I just couldn't resist preparing a zip file
directly from your uploaded files but containing just the
minimum distribution files (about 45 Mbytes) and some simple
instructions for a manual installation. See updated instructions
here:

http://page.axiom-developer.org/zope/mathaction/AxiomDownload

Of course I have to emphasize to everyone that this is "use
at your own risk" software. Axiom as a whole is still at the
pre-release stage. But I think wider testing and feedback
would be very useful.

> 
> Surprisingly I was also able to just double click in Windows 
> Explorer on the "axiomSYS.exe" binary in
> c:/cvs/head/mnt/windows/bin" and get AXIOM to work
> without setting any environment variables - it found the 
> autoloads without problems.
> 

That is because by default Axiom looks in the place where
it was built for these files. So if you run it from where
it was built, no problem. But if you move Axiom to another
location (the usual case, e.g. c:\Program Files), then you
must set the AXIOM environment variable

  AXIOM=c:/Program Files/axiom/mnt/windows

(See instructions on above web page).

Note that it seems necessary that the slashes in this variable
must be forward / not the usual windows backslash \.

\start
Date: Thu, 2 Dec 2004 14:28:58 +1000
From: Mike Thomas
To: Bill Page
Subject: RE: [Gcl-devel] Axiom on Windows

Hi Bill.

Short on time here this arvo but a quick comment - it isn't readline, just
the normal Windows command line editing - on Windows 98 etc that won't be
present if I recall correctly?

Pleased to hear everything was fine for you!

Cheers

Mike Thomas.

| Mike,
|
| On Wednesday, December 01, 2004 12:33 AM you wrote:
| >
| > The upload is complete, along with a copy of libgmp.dll and
| > gmp-static-mingw-4.1.tar.gz.
| >
|
| Great. I have downloaded it and completed a few tests. It
| seems to be fully functional. Congratulations!!!
|
| I was very pleasantly surprized to see that AXIOMsys under
| windows works with the usual 'gnu readline' line editing.
| So it seems we do not need to worry about the clef program.
|
| Since I know several other people are anxious to try Axiom
| on Windows, I just couldn't resist preparing a zip file
| directly from your uploaded files but containing just the
| minimum distribution files (about 45 Mbytes) and some simple
| instructions for a manual installation. See updated instructions
| here:
|
| http://page.axiom-developer.org/zope/mathaction/AxiomDownload
|
| Of course I have to emphasize to everyone that this is "use
| at your own risk" software. Axiom as a whole is still at the
| pre-release stage. But I think wider testing and feedback
| would be very useful.
|
| >
| > Surprisingly I was also able to just double click in Windows
| > Explorer on the "axiomSYS.exe" binary in
| > c:/cvs/head/mnt/windows/bin" and get AXIOM to work
| > without setting any environment variables - it found the
| > autoloads without problems.
| >
|
| That is because by default Axiom looks in the place where
| it was built for these files. So if you run it from where
| it was built, no problem. But if you move Axiom to another
| location (the usual case, e.g. c:\Program Files), then you
| must set the AXIOM environment variable
|
|   AXIOM=c:/Program Files/axiom/mnt/windows
|
| (See instructions on above web page).
|
| Note that it seems necessary that the slashes in this variable
| must be forward / not the usual windows backslash \.

\start
Date: Thu, 2 Dec 2004 00:40:35 -0500
From: Tim Daly
To: Balbir Thomas
Subject: Re: sman fails to start

>Even with out clef sman fails to start as seen below.
>
>bt@mandelbrot:~/archive/axiom$ sman -debug -noclef -noht -nonag
>sman:main entered
>sman:process_options entered
>sman:set_up_defaults entered
>sman:set_up_defaults exit
>sman:process_arguments entered
>  sman -noclef -gr -nonag -noht -noiw -ihere -ihere -ws '$AXIOM/bin/AXIOMsys'
>-grprog '$AXIOM/lib/viewman' -nagprog '$AXIOM/lib/nagman' -htprog
>'$AXIOM/bin/hypertex -s' -clefprog '' -sessionprog '$AXIOM/lib/session'
>-clientprog '$AXIOM/lib/spadclient' -rm '(null)' -rv '(null)' -paste '(null)'
>sman:process_arguments exit
>sman:process_options exit
>ptyopen: Failed to grant access to slave device: No such file or directory
>ptyopen: Failed to get name of slave device: No such file or directory
>ptyopen: Failed to open slave: Bad address
>sman:start_the_local_spadclient: $AXIOM/lib/spadclient
>fork_Axiom: Failed to reopen server: No such file or directory

Odd. very odd. 
Perhaps X isn't allowing userid bt to open windows? try 'xhost +'
For some reason you can't get pseudo-terminals. This used to be 
a problem way back in history because systems were only set up to
allow 2-3 ptys but modern systems are usually configed with more.
Did you do your own kernel build? Is this a standard distro?

puzzled in CT,
t

\start
Date: Thu, 2 Dec 2004 00:44:50 -0500 
From: Bill Page
To: Dan Martins
Subject: Running Axiom in Texmacs for Windows (was: [Texmacs-dev] Plugins)
Cc: Mike Thomas, Bill Page

Dan,

I know this would not be considered a final solution, but
I have found a way to work around the problems of compiling
tm_axiom.c under windows. tm_axiom.c uses the unix-isms fork
and pipe which are not available under vanilla windows so
tm_axiom.c would have to be seriously re-written in order
to run under native Windows.

But I found that if I copied tm_axiom.exe from the cygwin
distribution of texmacs (which I also happen to have on
this system)

  C:\cygwin\usr\sbin\TeXmacs\bin\tm_axiom.exe

and the cygwin library

  C:\cygwin\bin\cygwin1.dll library

into

  C:\Program Files\WinTeXmacs\TeXmacs\bin

then the new version of Axiom for Windows works with Texmacs
for Windows! Of course cygwin is providing the fork and pipe
emulation that is needed for the unix version of tm_axiom.

In principle, tm_axiom.c is a fairly simple filter program.
Perhaps you or someone on the texmacs-dev list could point
me to a simple example of a native Windows program that does
the same thing? I could try to produce a new version of
tm_axiom.c for the windows distribution.

Regards,
Bill Page.


----- Original Message ----- 
Subject: RE: [Texmacs-dev] Plugins

> Dan,
>
> Axiom uses a "helper" program, as do some of the other
> external applications, but not all. I am not sure about
> Pari. The Axiom helper program is called tm_axiom.c
>
> I just did a search for tm_axiom.exe and did not find it.
> Perhaps this program is not being compiled? That would be
> a problem. I will try to compile it and let you know what
> happens.
>
> Regards,
> Bill Page.
>
> > -----Original Message-----
> > From: Dan Martens [mailto:Dan Martens]
> > Sent: Wednesday, December 01, 2004 10:48 PM
> > To: Page, Bill
> > Subject: Re: [Texmacs-dev] Plugins
> >
> >
> > Hi Bill,
> >
> > Currently we have Pari and Yacas working with Wintexmacs.
> > I  am not quite sure why the pipe would fail.  Do you have
> > an Axiom dist. I can download to debug and test?  Is this
> > a 16bit or 32bit app?
> >
> > Dan
>
>


-----Original Message-----
From: Page, Bill 
Sent: Wednesday, December 01, 2004 10:49 PM
To: 'Dan Martens'
Cc: Page, Bill
Subject: RE: [Texmacs-dev] Plugins
 
> Dan,
> 
> You can download it here:
> 
> http://page.axiom-developer.org/zope/mathaction/AxiomDownload
> 
> It was compiled with MinGW under MSYS. How do I tell if it is
> a 16bit or 32bit app?
> 
> Once you install Axiom just try something simple like:
> 
>   1+1
> 
> to quit type
> 
>   )quit
> 
> and answer Yes. Let me know if you have any problems.
> 
> Is there anything you can suggest that I test?
> 
> Thanks.
> 
> Bill Page.


----- Original Message ----- 
From: Bill Page
To: Dan Martens
Sent: Wednesday, December 01, 2004 10:39 PM
Subject: [Texmacs-dev] Plugins

> Dan,
>
> What is the current situation with plugins for wintexmacs?
> We now have a windows version of Axiom and I can run Axiom
> from the MSDOS command line, but when I use
>
>  Insert/Session/Axiom
>
> (Yes, Axiom shows up in the menu)
>
> then I get a slightly smungged axiom] prompt and then a
> message at the bottom that says
>
>  Error: Cound not creat pipe
>
> I looked at the pluginpaths.txt discussion and I have added
> such a file but the behaviour did not change. (Axiom showed
> up in the Insert/Session menu anyway I presume because I had
> already added the Axiom directory to the system Path.
>
> I am trying this on a Windows 2000 system. Do you know of
> any problems that might cause this?
>
> Is this really working with Pari? (I will install Pari next
> and see.) If so, I wonder what could be the difference?

\start
Date: Thu, 2 Dec 2004 22:01:53 +1000
From: Mike Thomas
To: Bill Page, Dan Martens
Subject: RE: Running Axiom in Texmacs for Windows (was:[Texmacs-dev] Plugins)

Hi Bill/Dan.

I've attached some code which shows how to launch a subprocess with
redirected stdin/out on Windows, which you might like to incorporate into
tm_axiom.c.  I haven't run it for a couple of years but I recall that it
worked when last I tried!

The _spawn family of functions on Windows does almost exactly what fork/exec
does on Unix; you also have _dup2, _pipe etc.  The examples switchable by
macro to use the pure Win32 functions CreateProcess etc and also to redirect
stderr; I made these programs as a learning exercise at the time.  The
threading in this code is, I expect, not relevant to tm_axiom.c and can
safely be disregarded.

You can find the MSDN docs on these functions by googling for "msdn
_spawnvp" etc.

| Dan,
|
| I know this would not be considered a final solution, but
| I have found a way to work around the problems of compiling
| tm_axiom.c under windows. tm_axiom.c uses the unix-isms fork
| and pipe which are not available under vanilla windows so
| tm_axiom.c would have to be seriously re-written in order
| to run under native Windows.
|
| But I found that if I copied tm_axiom.exe from the cygwin
| distribution of texmacs (which I also happen to have on
| this system)
|
|   C:\cygwin\usr\sbin\TeXmacs\bin\tm_axiom.exe
|
| and the cygwin library
|
|   C:\cygwin\bin\cygwin1.dll library
|
| into
|
|   C:\Program Files\WinTeXmacs\TeXmacs\bin
|
| then the new version of Axiom for Windows works with Texmacs
| for Windows! Of course cygwin is providing the fork and pipe
| emulation that is needed for the unix version of tm_axiom.
|
| In principle, tm_axiom.c is a fairly simple filter program.
| Perhaps you or someone on the texmacs-dev list could point
| me to a simple example of a native Windows program that does
| the same thing? I could try to produce a new version of
| tm_axiom.c for the windows distribution.
|
| ----- Original Message -----

| > Dan,
| >
| > Axiom uses a "helper" program, as do some of the other
| > external applications, but not all. I am not sure about
| > Pari. The Axiom helper program is called tm_axiom.c
| >
| > I just did a search for tm_axiom.exe and did not find it.
| > Perhaps this program is not being compiled? That would be
| > a problem. I will try to compile it and let you know what
| > happens.
| >
| > Regards,
| > Bill Page.
| >
| > > -----Original Message-----

| > > Hi Bill,
| > >
| > > Currently we have Pari and Yacas working with Wintexmacs.
| > > I  am not quite sure why the pipe would fail.  Do you have
| > > an Axiom dist. I can download to debug and test?  Is this
| > > a 16bit or 32bit app?
| > >
| > > Dan
| >
| >
|
| -----Original Message-----
|
| > Dan,
| >
| > You can download it here:
| >
| > http://page.axiom-developer.org/zope/mathaction/AxiomDownload
| >
| > It was compiled with MinGW under MSYS. How do I tell if it is
| > a 16bit or 32bit app?
| >
| > Once you install Axiom just try something simple like:
| >
| >   1+1
| >
| > to quit type
| >
| >   )quit
| >
| > and answer Yes. Let me know if you have any problems.
| >
| > Is there anything you can suggest that I test?
| >
| > Thanks.
| >
| > Bill Page.
|
| ----- Original Message -----
|
| > Dan,
| >
| > What is the current situation with plugins for wintexmacs?
| > We now have a windows version of Axiom and I can run Axiom
| > from the MSDOS command line, but when I use
| >
| >  Insert/Session/Axiom
| >
| > (Yes, Axiom shows up in the menu)
| >
| > then I get a slightly smungged axiom] prompt and then a
| > message at the bottom that says
| >
| >  Error: Cound not creat pipe
| >
| > I looked at the pluginpaths.txt discussion and I have added
| > such a file but the behaviour did not change. (Axiom showed
| > up in the Insert/Session menu anyway I presume because I had
| > already added the Axiom directory to the system Path.
| >
| > I am trying this on a Windows 2000 system. Do you know of
| > any problems that might cause this?
| >
| > Is this really working with Pari? (I will install Pari next
| > and see.) If so, I wonder what could be the difference?
| >
| > Regards,
| > Bill Page.
| >
|

/* Run Maxima as a separate process under Windows either from
 * a CVS build or the 5.9.0 release installation, using either
 * CreateProcess() to launch or spawnvp() and with or without
 * some debugging output from the reader threads.
 *
 * Before launching stdin/out/err are each redirected into pipes
 * so that Maxima can be fed commands and its output read from
 * those pipes.
 *
 * The system runs these commands:
 * 
 *   1+2;
 *   integrate(x^2,x);
 *   plot3d(2^(x^2-y^2),[x,-1,1],[y,-2,2]);
 *   plot3d(2^(x^2-y^2),[x,-1,1],[y,-2,2],[plot_format,gnuplot]);
 *   quit();
 * 
 * If you have plotting set up properly, you should see first
 * Schelter's plot window and then a GNUPlot window.
 *
 * Build with the command:
 *
 *    gcc runmaxima.c -o runmaxima.exe
 * 
 * Mike Thomas 20030624 */

#include <windows.h>
#include <process.h>
#include <memory.h>
#include <string.h>
#include <stdio.h>
#include <fcntl.h>
#include <io.h>

/* Use spawnvp() rather than CreateProcess() */
/*#define USE_SPAWN    1*/

/* Use a CVS build of Maxima rather than the standard release 5.9.0 */
/*#define USE_CVS_MAXIMA*/

/* Allow some debugging output from the IO threads */
/*#define DEBUG_OUT*/

#define   OUT_BUFF_SIZE 512
#define   READ_HANDLE 0
#define   WRITE_HANDLE 1

#ifdef USE_CVS_MAXIMA

#define MAXIMA_ROOT "c:/cvs/maxima"
char maxima_exe[] = MAXIMA_ROOT "/src/binary-gcl/maxima.exe";
char maxima_cmd[] = MAXIMA_ROOT "/src/binary-gcl/maxima.exe -eval =
(run)";
char ENV_MAXIMA_VERPKGDATADIR[] = "MAXIMA_VERPKGDATADIR=" =
MAXIMA_ROOT;
char ENV_MAXIMA_VERPKGLIBEXECDIR[] = "MAXIMA_VERPKGLIBEXECDIR=" =
MAXIMA_ROOT "/lisp-utils";
char ENV_MAXIMA_VERPKGLIBDIR[] = "MAXIMA_VERPKGLIBDIR=" MAXIMA_ROOT =
"/src";
char ENV_MAXIMA_INFODIR[] = "MAXIMA_INFODIR=" MAXIMA_ROOT =
"/doc/info";
char ENV_MAXIMA_PLOTDIR[] = "MAXIMA_PLOTDIR=" MAXIMA_ROOT =
"/plotting";
char ENV_in_maxima_local[] = "in_maxima_local=true";

#else /* USE_CVS_MAXIMA */

#define MAXIMA_ROOT "c:/Progra~1/Maxima-5.9.0"
#define MAXIMA_SUBDIR "/maxima/5.9.0"
char maxima_exe[] = MAXIMA_ROOT "/lib" MAXIMA_SUBDIR =
"/binary-gcl/maxima.exe";
char maxima_cmd[] = MAXIMA_ROOT "/lib" MAXIMA_SUBDIR =
"/binary-gcl/maxima.exe -eval (run)";
char ENV_MAXIMA_VERPKGDATADIR[] = "MAXIMA_VERPKGDATADIR=" =
MAXIMA_ROOT;
char ENV_MAXIMA_VERPKGLIBEXECDIR[] = "MAXIMA_VERPKGLIBEXECDIR=" =
MAXIMA_ROOT "/libexec" MAXIMA_SUBDIR;
char ENV_MAXIMA_VERPKGLIBDIR[] = "MAXIMA_VERPKGLIBDIR=" MAXIMA_ROOT =
"/share" MAXIMA_SUBDIR "/src";
char ENV_MAXIMA_INFODIR[] = "MAXIMA_INFODIR=" MAXIMA_ROOT "/info";
char ENV_MAXIMA_PLOTDIR[] = "MAXIMA_PLOTDIR="  MAXIMA_ROOT =
"/libexec" MAXIMA_SUBDIR;
char ENV_in_maxima_local[] = "in_maxima_local=true";

#endif /* USE_CVS_MAXIMA */


int fdStdOutPipe[2], fdStdInPipe[2], fdStdErrPipe[2];

HANDLE hProcess;
STARTUPINFO si;                 /* Only need to set si.cb */
PROCESS_INFORMATION pi;         /* Post launch child process =
information. */

unsigned __stdcall StdOutReadThread ( void* pArguments )
{
    int nExitCode = STILL_ACTIVE;
    int nRead;
    char szBuffer[OUT_BUFF_SIZE];

    GetExitCodeProcess ( hProcess, (unsigned long*) &nExitCode );

    while ( nExitCode == STILL_ACTIVE ) {
#ifdef DEBUG_OUT
        fprintf ( stderr, " - Stdout read loop\n" ); fflush ( stderr );
#endif /* DEBUG_OUT */        
        nRead = _read ( fdStdOutPipe[READ_HANDLE], szBuffer, =
OUT_BUFF_SIZE );
#ifdef DEBUG_OUT
        fprintf ( stderr, "After _read on stdoutpipe (%d bytes read)\n", =
nRead ); fflush ( stderr );
#endif /* DEBUG_OUT */        
        if ( nRead ) {
            fwrite(szBuffer, 1, nRead, stderr);
        }
        GetExitCodeProcess ( hProcess, (unsigned long*) &nExitCode );
    }
    _endthreadex(0);
}

unsigned __stdcall StdErrReadThread ( void* pArguments )
{
    int nExitCode = STILL_ACTIVE;
    int nRead;
    char szBuffer[OUT_BUFF_SIZE];

    GetExitCodeProcess ( hProcess, (unsigned long*) &nExitCode );

    while ( nExitCode == STILL_ACTIVE ) {
#ifdef DEBUG_OUT
        fprintf ( stderr, " - Stderr read loop\n" ); fflush ( stderr );
#endif /* DEBUG_OUT */        
        nRead = _read ( fdStdErrPipe[READ_HANDLE], szBuffer, =
OUT_BUFF_SIZE );
#ifdef DEBUG_OUT
        fprintf ( stderr, "After _read on stderrpipe (%d bytes read)\n", =
nRead ); fflush ( stderr );
#endif /* DEBUG_OUT */        
        if ( nRead ) {
            fwrite(szBuffer, 1, nRead, stderr);
        }
        GetExitCodeProcess ( hProcess, (unsigned long*) &nExitCode );
    }
    _endthreadex(0);
}

int main(int argc, char** argv)
{
    HANDLE hStdOutReadThread;
    int fdStdOut, fdStdIn;
    unsigned threadIDOut;
    HANDLE hStdErrReadThread;
    int fdStdErr;
    unsigned threadIDErr;
    int i;
    char *commands[6];


#ifdef USE_SPAWN    
    char *args[3];
    args[0] = "-eval";
    args[1] = "(run)";
    args[2] = NULL;
#ifdef DEBUG_OUT
    fprintf ( stderr, "SPAWN: %s %s %s\n", maxima_exe, args[0], args[1] =
); fflush ( stderr );
#endif /* DEBUG_OUT */    
#else    
#ifdef DEBUG_OUT
    fprintf ( stderr, "CREATE PROCESS: %s\n", maxima_cmd ); fflush ( =
stderr );
#endif /* DEBUG_OUT */    
#endif

#ifdef DEBUG_OUT
    fprintf ( stderr, "Setting env var: %s\n", ENV_MAXIMA_VERPKGDATADIR =
);
    fprintf ( stderr, "Setting env var: %s\n", =
ENV_MAXIMA_VERPKGLIBEXECDIR );
    fprintf ( stderr, "Setting env var: %s\n", ENV_MAXIMA_VERPKGLIBDIR =
);
    fprintf ( stderr, "Setting env var: %s\n", ENV_MAXIMA_INFODIR );
    fprintf ( stderr, "Setting env var: %s\n", ENV_MAXIMA_PLOTDIR );
    fprintf ( stderr, "Setting env var: %s\n", ENV_in_maxima_local );
#endif /* DEBUG_OUT */    

    /* Make pipes to be passed to the spawned process as stdin/out/err =
*/
    if ( _pipe ( fdStdOutPipe, 512, O_TEXT | O_NOINHERIT ) == -1 ) =
return   1;
    if ( _pipe ( fdStdInPipe,  512, O_TEXT | O_NOINHERIT ) == -1 ) =
return   1;
    if ( _pipe ( fdStdErrPipe, 512, O_TEXT | O_NOINHERIT ) == -1 ) =
return   1;

    /* Duplicate and save original stdin/out/err handles */
    fdStdOut = _dup ( _fileno(stdout) );
    fdStdIn  = _dup ( _fileno(stdin) );
    fdStdErr = _dup ( _fileno(stderr) );

    /* Duplicate write end of new pipes to current stdout/err handles,
     * read to stdin */
    if ( _dup2 ( fdStdOutPipe[WRITE_HANDLE], _fileno(stdout) ) != 0 ) =
return 2;
    if ( _dup2 ( fdStdInPipe[READ_HANDLE],   _fileno(stdin)  ) != 0 ) =
return 2;
    if ( _dup2 ( fdStdErrPipe[WRITE_HANDLE], _fileno(stderr) ) != 0 ) =
return 2;

    /* Close the duplicated handles to the new pipes */
    close ( fdStdOutPipe[WRITE_HANDLE] );
    close ( fdStdInPipe[READ_HANDLE] );
    close ( fdStdErrPipe[WRITE_HANDLE] );
    
    putenv ( ENV_MAXIMA_VERPKGDATADIR );
    putenv ( ENV_MAXIMA_VERPKGLIBEXECDIR );
    putenv ( ENV_MAXIMA_VERPKGLIBDIR );
    putenv ( ENV_MAXIMA_INFODIR );
    putenv ( ENV_MAXIMA_PLOTDIR );
    putenv ( ENV_in_maxima_local );

#ifdef USE_SPAWN    
    /* Spawn process given on the command line*/
    hProcess = (HANDLE) spawnvp ( P_NOWAIT, maxima_exe, args );
#else
    /* Zero startup and process info structures, take care of Windows
     * startup info structure future proofing. */
    ZeroMemory( &si, sizeof(si) );
    si.cb = sizeof(si);
    ZeroMemory( &pi, sizeof(pi) );

    /* Start the child process.  */
    if ( !CreateProcess ( NULL, /* No module name (use command line). */
                          maxima_cmd, /* Command line. */
                          NULL, /* Process handle not inheritable. */
                          NULL, /* Thread handle not inheritable. */
                          TRUE, /* Allow handle inheritance. */
                          0,    /* No creation flags. */
                          NULL, /* Use parent's environment block. */
                          NULL, /* Use parent's starting directory. */
                          &si,  /* Pointer to STARTUPINFO structure.*/
                          &pi ) /* Pointer to PROCESS_INFORMATION =
structure. */ ) {
        fprintf ( stderr, "CreateProcess failed: %s\n", argv[1] ); =
fflush ( stderr );
        return -1;
    }
    hProcess = pi.hProcess;
#endif

    /* Now that the process is launched, replace the original =
stdin/out/err handles */
    if ( _dup2 ( fdStdOut, _fileno ( stdout ) ) != 0 ) return 3;
    if ( _dup2 ( fdStdIn,  _fileno ( stdin  ) ) != 0 ) return 3;
    if ( _dup2 ( fdStdErr, _fileno ( stderr ) ) != 0 ) return 3;

    /* Close duplicates */
    close(fdStdOut);
    close(fdStdIn);
    close(fdStdErr);

    /* Create the stdout listening thread.*/
    hStdOutReadThread = (HANDLE)_beginthreadex( NULL, 0, =
&StdOutReadThread, NULL, 0, &threadIDOut );
    if ( 0 == hStdOutReadThread ) return 5;
    /* Create the stderr listening thread.*/
    hStdErrReadThread = (HANDLE)_beginthreadex( NULL, 0, =
&StdErrReadThread, NULL, 0, &threadIDErr );
    if ( 0 == hStdErrReadThread ) return 5;

    commands[0] = "1+2;";
    commands[1] = "integrate(x^2,x);";
    commands[2] = "plot3d(2^(x^2-y^2),[x,-1,1],[y,-2,2]);";
    commands[3] = =
"plot3d(2^(x^2-y^2),[x,-1,1],[y,-2,2],[plot_format,gnuplot]);";
    commands[4] = "quit();";
    commands[5] = NULL;
    for ( i=0; commands[i] != NULL; i++ ) {
#ifdef DEBUG_OUT
        fprintf ( stderr, "Sending command: %s\n",  commands[i] ); =
fflush ( stderr );
#endif /* DEBUG_OUT */        
        _write ( fdStdInPipe[WRITE_HANDLE], commands[i], strlen ( =
commands[i] ) );
        _write ( fdStdInPipe[WRITE_HANDLE], "\n", strlen ( "\n" ) );
    }
    
    WaitForSingleObject ( hStdErrReadThread, INFINITE );
    WaitForSingleObject ( hStdOutReadThread, INFINITE );

    /* Wait until child process exits to block the terminal. */
#ifdef USE_SPAWN    
    WaitForSingleObject ( hProcess, INFINITE );
#else    
    WaitForSingleObject( pi.hProcess, INFINITE );
#endif
    
#ifndef USE_SPAWN    
    /* Once child process has returned, close the process and thread =
handles,
     * free the commandline and exit without error. */
    CloseHandle( pi.hProcess );
    CloseHandle( pi.hThread );
#endif

    /* As we are using gebinthreadex/endthreadex,
     * we must close the thread handles. */
    CloseHandle ( hStdOutReadThread );
    CloseHandle ( hStdErrReadThread );
    return 0;
}


------=_NextPart_000_00AE_01C4D8BA.88564B90
	name="runwish.c"
	filename="runwish.c"

#include <windows.h>
#include <process.h>
#include <memory.h>
#include <string.h>
#include <stdio.h>
#include <fcntl.h>
#include <io.h>

#define USE_SPAWN    1
#define DO_STDERR 1
//#define USE_SCM 1
    
#define   OUT_BUFF_SIZE 512
#define   READ_HANDLE 0
#define   WRITE_HANDLE 1

int fdStdOutPipe[2], fdStdInPipe[2];
#ifdef DO_STDERR
int fdStdErrPipe[2];
#endif

HANDLE hProcess;
STARTUPINFO si;                 /* Only need to set si.cb */
PROCESS_INFORMATION pi;         /* Post launch child process =
information. */

unsigned __stdcall StdOutReadThread ( void* pArguments )
{
    int nExitCode = STILL_ACTIVE;
    int nRead;
    char szBuffer[OUT_BUFF_SIZE];

    GetExitCodeProcess ( hProcess, (unsigned long*) &nExitCode );

    while ( nExitCode == STILL_ACTIVE ) {
        fprintf ( stderr, " - Stdout read loop\n" ); fflush ( stderr );
        nRead = _read ( fdStdOutPipe[READ_HANDLE], szBuffer, =
OUT_BUFF_SIZE );
        fprintf ( stderr, "After _read on stdoutpipe (%d bytes read)\n", =
nRead ); fflush ( stderr );
        if ( nRead ) {
            fwrite(szBuffer, 1, nRead, stderr);
        }
        GetExitCodeProcess ( hProcess, (unsigned long*) &nExitCode );
    }
    _endthreadex(0);
}

#ifdef DO_STDERR
unsigned __stdcall StdErrReadThread ( void* pArguments )
{
    int nExitCode = STILL_ACTIVE;
    int nRead;
    char szBuffer[OUT_BUFF_SIZE];

    GetExitCodeProcess ( hProcess, (unsigned long*) &nExitCode );

    while ( nExitCode == STILL_ACTIVE ) {
        fprintf ( stderr, " - Stderr read loop\n" ); fflush ( stderr );
        nRead = _read ( fdStdErrPipe[READ_HANDLE], szBuffer, =
OUT_BUFF_SIZE );
        fprintf ( stderr, "After _read on stderrpipe (%d bytes read)\n", =
nRead ); fflush ( stderr );
        if ( nRead ) {
            fwrite(szBuffer, 1, nRead, stderr);
        }
        GetExitCodeProcess ( hProcess, (unsigned long*) &nExitCode );
    }
    _endthreadex(0);
}
#endif

int main(int argc, char** argv)
{
    HANDLE hStdOutReadThread;
    int fdStdOut, fdStdIn;
    unsigned threadIDOut;
#ifdef DO_STDERR
    HANDLE hStdErrReadThread;
    int fdStdErr;
    unsigned threadIDErr;
#endif

#ifdef USE_SPAWN    
    char *args[1];
    args[0] = NULL;
#endif

    int i;
    char *commands[5];

    /* Make pipes to be passed to the spawned process as stdin/out/err =
*/
    if ( _pipe ( fdStdOutPipe, 512, O_TEXT | O_NOINHERIT ) == -1 ) =
return   1;
    if ( _pipe ( fdStdInPipe,  512, O_TEXT | O_NOINHERIT ) == -1 ) =
return   1;
#ifdef DO_STDERR
    if ( _pipe ( fdStdErrPipe, 512, O_TEXT | O_NOINHERIT ) == -1 ) =
return   1;
#endif

    /* Duplicate and save original stdin/out/err handles */
    fdStdOut = _dup ( _fileno(stdout) );
    fdStdIn  = _dup ( _fileno(stdin) );
#ifdef DO_STDERR
    fdStdErr = _dup ( _fileno(stderr) );
#endif

    /* Duplicate write end of new pipes to current stdout/err handles,
     * read to stdin */
    if ( _dup2 ( fdStdOutPipe[WRITE_HANDLE], _fileno(stdout) ) != 0 ) =
return 2;
    if ( _dup2 ( fdStdInPipe[READ_HANDLE],   _fileno(stdin)  ) != 0 ) =
return 2;
#ifdef DO_STDERR
    if ( _dup2 ( fdStdErrPipe[WRITE_HANDLE], _fileno(stderr) ) != 0 ) =
return 2;
#endif

    /* Close the duplicated handles to the new pipes */
    close ( fdStdOutPipe[WRITE_HANDLE] );
    close ( fdStdInPipe[READ_HANDLE] );
#ifdef DO_STDERR
    close ( fdStdErrPipe[WRITE_HANDLE] );
#endif

#ifdef USE_SPAWN    
    /* Spawn process given on the command line*/
    hProcess = (HANDLE) spawnvp ( P_NOWAIT, argv[1], args );
#else
    /* Zero startup and process info structures, take care of Windows
     * startup info structure future proofing. */
    ZeroMemory( &si, sizeof(si) );
    si.cb = sizeof(si);
    ZeroMemory( &pi, sizeof(pi) );
    /* Start the child process.  */
    if ( !CreateProcess ( NULL, /* No module name (use command line). */
                          argv[1], /* Command line. */
                          NULL, /* Process handle not inheritable. */
                          NULL, /* Thread handle not inheritable. */
                          TRUE, /* Allow handle inheritance. */
                          0,    /* No creation flags. */
                          NULL, /* Use parent's environment block. */
                          NULL, /* Use parent's starting directory. */
                          &si,  /* Pointer to STARTUPINFO structure.*/
                          &pi ) /* Pointer to PROCESS_INFORMATION =
structure. */ ) {
        fprintf ( stderr, "CreateProcess failed: %s\n", argv[1] ); =
fflush ( stderr );
        return -1;
    }
    hProcess = pi.hProcess;
#endif
    
    /* Now that the process is launched, replace the original =
stdin/out/err handles */
    if ( _dup2 ( fdStdOut, _fileno ( stdout ) ) != 0 ) return 3;
    if ( _dup2 ( fdStdIn,  _fileno ( stdin  ) ) != 0 ) return 3;
#ifdef DO_STDERR
    if ( _dup2 ( fdStdErr, _fileno ( stderr ) ) != 0 ) return 3;
#endif

    /* Close duplicates */
    close(fdStdOut);
    close(fdStdIn);
#ifdef DO_STDERR
    close(fdStdErr);
#endif

    /* Create the stdout listening thread.*/
    hStdOutReadThread = (HANDLE)_beginthreadex( NULL, 0, =
&StdOutReadThread, NULL, 0, &threadIDOut );
    if ( 0 == hStdOutReadThread ) return 5;
#ifdef DO_STDERR
    /* Create the stderr listening thread.*/
    hStdErrReadThread = (HANDLE)_beginthreadex( NULL, 0, =
&StdErrReadThread, NULL, 0, &threadIDErr );
    if ( 0 == hStdErrReadThread ) return 5;
#endif

#ifdef USE_SCM
    commands[0] = "(print \"HELLO\")";
    commands[1] = "'(expr 1 + 2)";
    commands[2] = "1";
    commands[3] = "(+ 1 2)";
    commands[4] = "(exit)";
    commands[5] = NULL;
#else    
    commands[0] = "puts stdout HELLO";
    commands[1] = "button .hello -text \"hello\"";
    commands[2] = "pack .hello";
    commands[3] = "after 1000[]";
    commands[4] = "    ";
    commands[5] = NULL;
#endif
    
    for ( i=0; commands[i] != NULL; i++ ) {
        fprintf ( stderr, "Sending command: %s\n",  commands[i] ); =
fflush ( stderr );
        _write ( fdStdInPipe[WRITE_HANDLE], commands[i], strlen ( =
commands[i] ) );
        _write ( fdStdInPipe[WRITE_HANDLE], "\n", strlen ( "\n" ) );
    }
    
#ifdef DO_STDERR
    WaitForSingleObject ( hStdErrReadThread, INFINITE );
#endif
    WaitForSingleObject ( hStdOutReadThread, INFINITE );
    /* Wait until child process exits to block the terminal. */
#ifdef USE_SPAWN    
    WaitForSingleObject ( hProcess, INFINITE );
#else    
    WaitForSingleObject( pi.hProcess, INFINITE );
#endif
    
#ifndef USE_SPAWN    
    /* Once child process has returned, close the process and thread =
handles,
     * free the commandline and exit without error. */
    CloseHandle( pi.hProcess );
    CloseHandle( pi.hThread );
#endif

    /* As we are using gebinthreadex/endthreadex,
     * we must close the thread handles. */
    CloseHandle ( hStdOutReadThread );
#ifdef DO_STDERR
    CloseHandle ( hStdErrReadThread );
#endif
    
    return 0;
}

\start
Date: Thu, 2 Dec 2004 08:29:50 -0500
From: Tim Daly
To: Bill Page
Subject: Re: Metadata for the uploaded Windows source/binary package.
Cc: Mike Thomas, Camm Maguire

When you both understand how to build the windows version it
would be useful to write an INSTALL file and put it on the
top level of the axiom--windows--1 branch. --t

\start
Date: Thu, 2 Dec 2004 07:46:51 -0500 
From: Bill Page
To: list
Subject: MathAction upgraded ZWiki-0.36.2 - now has preview option

All,

I have upgraded the MathAction wiki software (ZWiki) to
the latest 0.36.2 release that includes the new preview
option. Now instead of having to press Save to see the
result of your editing, you can choose Preview. Preview
does not save the changes you have made and it does not
send email notices to subscribers. Instead a preview of
what the page will look like appears below the edit window.
If this preview is satisfactory, the user will click on
Save, if not they can continue editing and Preview again
until the desired result is achieved. When the final Save
is clicked, email notices will be sent to all subscribers.

This means that as a subscriber you will no longer be
subjected to a quick series of edit notices as someone
tries to correct and properly format a page.

The preview function applies both to the MathAction wiki
as well as wiki pages inside the Axiom Portal.

Please let me know if you have any problems with this.

\start
Date: Thu, 2 Dec 2004 07:34:31 -0500 
From: Bill Page
To: Mike Thomas, Camm Maguire
Subject: RE: Metadata for the uploaded Windows source/binary package.

Mike,

I have been trying to build the Windows version from the
source that you provided, but I am stuck and a little
confused about what to do with gmp libraries. My build log
stops at the point of link raw_gcl with a list of missing
gmp symbols. When I compare it to your build log I can
see that you have a -lgmp where I do not. Is this something
put there by ./configure because it found something on your
system that is not on mine? Am I missing some ./configure
option in the lsp/Makefile.pamphlet file?

Below you refer to using a static gmp library. How precisely
would a do that? (Sorry to be so dense about this :) Any
clues or references would help.

Regards,
Bill Page.

On Wednesday, December 01, 2004 12:33 AM you wrote:
> 
> The upload is complete, along with a copy of libgmp.dll and
> gmp-static-mingw-4.1.tar.gz.
>... 
> 
> I used:
> 
>   - MinGW32 gcc 3.4.2 with latest libraries, binutils,
> 
>   - hosted by MSYS,
> 
>   - MikTeX - a free Win32 TeX/LaTeX package,
> 
>   - in the particular Axiom build I uploaded, a dynamic GMP
> library (libgmp.dll) is needed, but you will be better off
> building with the static GMP library I provided separately
> (from somewhere on the web) to build or else the GCL internal
> GMP source (takes longer to build though).
> ...


\start
Date: Thu, 2 Dec 2004 22:57:17 +1000
From: Mike Thomas
To: Bill Page, Camm Maguire
Subject: RE: Metadata for the uploaded Windows source/binary package.

Hi Bill.

| I have been trying to build the Windows version from the
| source that you provided, but I am stuck and a little
| confused about what to do with gmp libraries. My build log
| stops at the point of link raw_gcl with a list of missing
| gmp symbols. When I compare it to your build log I can
| see that you have a -lgmp where I do not. Is this something
| put there by ./configure because it found something on your
| system that is not on mine? Am I missing some ./configure
| option in the lsp/Makefile.pamphlet file?
|
| Below you refer to using a static gmp library. How precisely
| would a do that? (Sorry to be so dense about this :) Any
| clues or references would help.

Not dense at all.  I'm assuming here that the source tree you have contains
everything I used including the CVS HEAD GCL - I haven't had time to check
yet.

The -lgmp is being pout there by configure automatically.

If you look in that gmp tar ball I uploaded you'll find a "libgmp.a" which
you should put in the MinGW32 gcc lib directory, and "gmp.h" which goes in
the include directory.

The configure script should pick those up.

If you're using GCL 2.6.5 I don't remember if it autodetects the gmp library
or not.

If completely stuck, you may need to play around with the configure argument
"--enable-dynsysgmp".

| On Wednesday, December 01, 2004 12:33 AM you wrote:
| >
| > The upload is complete, along with a copy of libgmp.dll and
| > gmp-static-mingw-4.1.tar.gz.
| >...
| >
| > I used:
| >
| >   - MinGW32 gcc 3.4.2 with latest libraries, binutils,
| >
| >   - hosted by MSYS,
| >
| >   - MikTeX - a free Win32 TeX/LaTeX package,
| >
| >   - in the particular Axiom build I uploaded, a dynamic GMP
| > library (libgmp.dll) is needed, but you will be better off
| > building with the static GMP library I provided separately
| > (from somewhere on the web) to build or else the GCL internal
| > GMP source (takes longer to build though).
| > ...

\start
Date: Thu, 2 Dec 2004 09:57:05 -0500
From: Dan Martens
To: list
Subject: Re: Running Axiom in Texmacs for Windows (was:	[Texmacs-dev] Plugins)
Cc: Mike Thomas

Hi Bill,

After looking at tm_axiom.c, it looks like it would be very easy to re-write
this for windows.  You can use Mike's provided sample code, or you may even
use my pipe.c/h which provides a very simple API to do this type of thing
(since texmacs does it already).  I have attached them.

Dan
----- Original Message ----- 

> Dan,
>
> I know this would not be considered a final solution, but
> I have found a way to work around the problems of compiling
> tm_axiom.c under windows. tm_axiom.c uses the unix-isms fork
> and pipe which are not available under vanilla windows so
> tm_axiom.c would have to be seriously re-written in order
> to run under native Windows.
>
> But I found that if I copied tm_axiom.exe from the cygwin
> distribution of texmacs (which I also happen to have on
> this system)
>
>   C:\cygwin\usr\sbin\TeXmacs\bin\tm_axiom.exe
>
> and the cygwin library
>
>   C:\cygwin\bin\cygwin1.dll library
>
> into
>
>   C:\Program Files\WinTeXmacs\TeXmacs\bin
>
> then the new version of Axiom for Windows works with Texmacs
> for Windows! Of course cygwin is providing the fork and pipe
> emulation that is needed for the unix version of tm_axiom.
>
> In principle, tm_axiom.c is a fairly simple filter program.
> Perhaps you or someone on the texmacs-dev list could point
> me to a simple example of a native Windows program that does
> the same thing? I could try to produce a new version of
> tm_axiom.c for the windows distribution.
>
> ----- Original Message ----- 
>
> > Dan,
> >
> > Axiom uses a "helper" program, as do some of the other
> > external applications, but not all. I am not sure about
> > Pari. The Axiom helper program is called tm_axiom.c
> >
> > I just did a search for tm_axiom.exe and did not find it.
> > Perhaps this program is not being compiled? That would be
> > a problem. I will try to compile it and let you know what
> > happens.
> >
> > Regards,
> > Bill Page.
> >
> > > -----Original Message-----
> > > From: Dan Martens [mailto:Dan Martens]
> > > Sent: Wednesday, December 01, 2004 10:48 PM
> > > To: Page, Bill
> > > Subject: Re: [Texmacs-dev] Plugins
> > >
> > >
> > > Hi Bill,
> > >
> > > Currently we have Pari and Yacas working with Wintexmacs.
> > > I  am not quite sure why the pipe would fail.  Do you have
> > > an Axiom dist. I can download to debug and test?  Is this
> > > a 16bit or 32bit app?
> > >
> -----Original Message-----
>
> > Dan,
> >
> > You can download it here:
> >
> > http://page.axiom-developer.org/zope/mathaction/AxiomDownload
> >
> > It was compiled with MinGW under MSYS. How do I tell if it is
> > a 16bit or 32bit app?
> >
> > Once you install Axiom just try something simple like:
> >
> >   1+1
> >
> > to quit type
> >
> >   )quit
> >
> > and answer Yes. Let me know if you have any problems.
> >
> > Is there anything you can suggest that I test?
> >
> > Thanks.
> >
> > Bill Page.
>
> ----- Original Message ----- 
>
> > Dan,
> >
> > What is the current situation with plugins for wintexmacs?
> > We now have a windows version of Axiom and I can run Axiom
> > from the MSDOS command line, but when I use
> >
> >  Insert/Session/Axiom
> >
> > (Yes, Axiom shows up in the menu)
> >
> > then I get a slightly smungged axiom] prompt and then a
> > message at the bottom that says
> >
> >  Error: Cound not creat pipe
> >
> > I looked at the pluginpaths.txt discussion and I have added
> > such a file but the behaviour did not change. (Axiom showed
> > up in the Insert/Session menu anyway I presume because I had
> > already added the Axiom directory to the system Path.
> >
> > I am trying this on a Windows 2000 system. Do you know of
> > any problems that might cause this?
> >
> > Is this really working with Pari? (I will install Pari next
> > and see.) If so, I wonder what could be the difference?
> >
> > Regards,
> > Bill Page.
> >

------=_NextPart_000_00D8_01C4D855.4775AA90
	name="pipe.cpp"
	filename="pipe.cpp"

/************************************************************************=
******
* MODULE     : pipe.cpp
* DESCRIPTION: TeXmacs pipe handling in windows
* COPYRIGHT  : (C) 2003 Dan Martens dan_martens@lycos.com
*************************************************************************=
******
* This software falls under the GNU general public license and comes =
WITHOUT
* ANY WARRANTY WHATSOEVER. See the file $TEXMACS_PATH/LICENSE for more =
details.
* If you don't have this file, write to the Free Software Foundation, =
Inc.,
* 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
*************************************************************************=
*****/

#include <windows.h>
#include <sys/pipe.h>
#include <sys/misc.h>
#include <stdio.h>

void PIPE_Dos2Unix(char *buf, int len);
bool PIPE_CheckPipe(HANDLE pipe);
HANDLE PIPE_LaunchChild(char *command, HANDLE childStdErr, HANDLE =
childStdin, HANDLE childStdout);

bool PIPE_Create(char *command, PIPE_CONN *conn){

	HANDLE hOutputReadTmp,hOutputRead,hOutputWrite;
    HANDLE hInputWriteTmp,hInputRead,hInputWrite;
	HANDLE hErrorReadTmp, hErrorRead, hErrorWrite;
	SECURITY_ATTRIBUTES sa;

	memset(conn, 0, sizeof(PIPE_CONN));

	// Set up the security attributes struct.
	sa.nLength= sizeof(SECURITY_ATTRIBUTES);
	sa.lpSecurityDescriptor = NULL;
	sa.bInheritHandle = TRUE;


	if (!CreatePipe(&hOutputReadTmp,&hOutputWrite,&sa,0)){
		goto closeHandles;
	}

	if(!CreatePipe(&hErrorReadTmp, &hErrorWrite, &sa, 0)){
		goto closeHandles;
	}

	if (!CreatePipe(&hInputRead,&hInputWriteTmp,&sa,0))
		goto closeHandles;


	if (!DuplicateHandle(GetCurrentProcess(),hOutputReadTmp,
					   GetCurrentProcess(),
					   &hOutputRead, // Address of new handle.
					   0,FALSE, // Make it uninheritable.
					   DUPLICATE_SAME_ACCESS))
		goto closeHandles;

	if (!DuplicateHandle(GetCurrentProcess(),hInputWriteTmp,
					   GetCurrentProcess(),
					   &hInputWrite, // Address of new handle.
					   0,FALSE, // Make it uninheritable.
					   DUPLICATE_SAME_ACCESS))
		goto closeHandles;


	if(!DuplicateHandle(GetCurrentProcess(), hErrorReadTmp,
						GetCurrentProcess(), &hErrorRead,
						0, FALSE, DUPLICATE_SAME_ACCESS))
		goto closeHandles;


	CloseHandle(hOutputReadTmp);
	CloseHandle(hInputWriteTmp);
	CloseHandle(hErrorReadTmp);

	conn->hErr = (unsigned int)hErrorRead;
	conn->hIn = (unsigned int)hInputWrite;
	conn->hOut = (unsigned int)hOutputRead;

	conn->hProcess = (unsigned int)PIPE_LaunchChild(command, hErrorWrite, =
hInputRead, hOutputWrite);
=09
	if(!conn->hProcess)
		goto closeHandles;

	CloseHandle(hOutputWrite);
	CloseHandle(hInputRead);
	CloseHandle(hErrorWrite);
	conn->isValid = 1;

	return true;

closeHandles:
	CloseHandle(hOutputWrite);
	CloseHandle(hInputRead);
	CloseHandle(hErrorWrite);
	CloseHandle(hOutputReadTmp);
	CloseHandle(hInputWriteTmp);
	CloseHandle(hErrorReadTmp);
	CloseHandle(hErrorRead);
	CloseHandle(hOutputRead);
	CloseHandle(hInputWrite);
	return false;

}

HANDLE PIPE_LaunchChild(char *command, HANDLE childStdErr, HANDLE =
childStdin, HANDLE childStdout){

	PROCESS_INFORMATION pi;
	STARTUPINFO si;
	char commandBuf[MAX_PATH];
	char directory[MAX_PATH];
	char stubPath[MAX_PATH];

	// Set up the start up info struct.
	memset(&si,0, sizeof(STARTUPINFO));
	si.cb = sizeof(STARTUPINFO);
	si.dwFlags = STARTF_USESTDHANDLES|STARTF_USESHOWWINDOW;
	si.hStdOutput = childStdout;
	si.hStdInput  = childStdin;;
	si.hStdError  = childStdErr;
	si.wShowWindow = SW_HIDE;


	strcpy(stubPath, "stub.exe ");
	strcpy(commandBuf, ExpandEnvString(command));
//	ConvertPathing(commandBuf);
	GetDirectory(commandBuf, directory, MAX_PATH);
	StripCommandQuotes(commandBuf);
	if(strlen(directory) == 0){

		InsertFullPath(commandBuf);
		GetDirectory(commandBuf, directory, MAX_PATH);
	}
=09

//	if(GetOsVersion() >= OS_VERSION_WIN_2000)
//	StringInsertString(commandBuf, 0, stubPath);

//	printf("Executing %s in %s\n", commandBuf, directory);
=09
	if (!CreateProcess(NULL,commandBuf,NULL,NULL,TRUE,
		CREATE_NEW_CONSOLE,NULL,directory,&si,&pi)){
		printf("Failed to create child\n");
		return NULL;
	}

	CloseHandle(pi.hThread);
	return pi.hProcess;

}

void PIPE_Close(PIPE_CONN *conn){

	if(!conn->isValid)
		return;

	CloseHandle((HANDLE)conn->hErr);
	CloseHandle((HANDLE)conn->hIn);
	CloseHandle((HANDLE)conn->hOut);
	TerminateProcess((HANDLE)conn->hProcess, 0);
=09
	memset(conn, 0, sizeof(PIPE_CONN));
}

int PIPE_Read(HANDLE file, void *buf, int bufLen){

	DWORD numRead;
	DWORD error;

	//printf("Start Read\n");
	if(!PIPE_CheckPipe(file))
		return 0;

	//printf("Reading pipe\n");
	if(!ReadFile(file, buf, bufLen, &numRead, NULL)){
		error = GetLastError();
		if((error == ERROR_HANDLE_EOF) || (error == ERROR_NO_DATA)){
			((char*)buf)[0] = '\1';
			return 0;
		}
		printf("Error reading pipe - error %d\n", GetLastError()); 
		return -1;
	}

	PIPE_Dos2Unix((char*)buf, numRead);
	return (int)numRead;
}

void PIPE_Dos2Unix(char *buf, int len){

	for(register int i = 0; i < len; i++){
		if(buf[i] == '\r')
			buf[i] = '\n';
	}
}

int PIPE_ReadStderr(PIPE_CONN *conn, void *buf, int bufLen){

	if(!conn || !conn->isValid)
		return -1;

	return PIPE_Read((HANDLE)conn->hErr, buf, bufLen);
}


int PIPE_ReadStdout(PIPE_CONN *conn, void *buf, int bufLen){

	if(!conn || !conn->isValid)
		return -1;

	return PIPE_Read((HANDLE)conn->hOut, buf, bufLen);
}

int PIPE_WriteStdin(PIPE_CONN *conn, void *buf, int bufLen){

	DWORD numWritten;

	//printf("Write pipe\n");

	if(!PIPE_IsChildAlive(conn)){
		printf("Pipe error - child is dead\n");
		return 0;
	}

	if(!WriteFile((HANDLE)conn->hIn, buf, bufLen, &numWritten, NULL)){
		if(GetLastError() == ERROR_BROKEN_PIPE)
			return -1;
	}

//	FlushFileBuffers((HANDLE)conn->hIn);
	return numWritten;
}

bool PIPE_CheckPipe(HANDLE pipe){

	DWORD numAvail;

	if(!PeekNamedPipe(pipe, NULL, 0, NULL, &numAvail, NULL)){
		printf("Peek named pipe failed error %d\n", GetLastError());
		return false;
	}

	if(numAvail == 0)
		return false;

	return true;
}

bool PIPE_IsChildAlive(PIPE_CONN *conn){

	DWORD retVal;

	retVal = WaitForSingleObject((HANDLE)conn->hProcess, 0);
=09
	return retVal != WAIT_OBJECT_0;
}

bool PIPE_CheckStderr(PIPE_CONN *conn){

	if(!conn || !conn->isValid)
		return false;

	if(!PIPE_IsChildAlive(conn))
		return true;

	return PIPE_CheckPipe((HANDLE)conn->hErr);

}

bool PIPE_CheckStdout(PIPE_CONN *conn){

	if(!conn || !conn->isValid)
		return false;

	if(!PIPE_IsChildAlive(conn))
		return true;

	return PIPE_CheckPipe((HANDLE)conn->hOut);
}

------=_NextPart_000_00D8_01C4D855.4775AA90
	name="pipe.h"
	filename="pipe.h"

#ifndef PIPE_H
#define PIPE_H

typedef struct {
	unsigned int hIn;
	unsigned int hOut;
	unsigned int hErr;
	unsigned int hSavedIn;
	unsigned int hSavedOut;
	unsigned int hSavedErr;
	unsigned int bugged;
	unsigned int hProcess;
	unsigned int isValid;
}PIPE_CONN;


bool PIPE_Create(char *command, PIPE_CONN *conn);
void PIPE_Close(PIPE_CONN *conn);
int PIPE_ReadStdout(PIPE_CONN *conn, void *buffer, int bufLen);
int PIPE_WriteStdin(PIPE_CONN *conn, void *buffer, int bufLen);
int PIPE_ReadStderr(PIPE_CONN *conn, void *buffer, int bufLen);
bool PIPE_CheckStdout(PIPE_CONN *conn);
bool PIPE_CheckStderr(PIPE_CONN *conn);
bool PIPE_IsChildAlive(PIPE_CONN *conn);

#endif
------=_NextPart_000_00D8_01C4D855.4775AA90--

\start
Date: Thu, 2 Dec 2004 11:09:05 -0500
From: Stephen Wilson
To: Tim Daly
Subject: commit policy

Tim, *

I have a simple patch which I am ready to upload. It fixes the
following bug:

===============================================
(1) -> )f i n

BOOT>(quit)

-- restart Axiom

(1) -> )f
   Your command is ambiguous. The following are abbreviated by f :
      fin 
      frame 
(1) ->
===============================================

The problem is in src/interp/int-top.boot, function `intloopPrefix?'.

Would you prefer I upload such changes to the axiom--language--1
branch, and send you notification that it would be relevant to
axiom--main--1? Or would you prefer a patch file and I'll simply keep
in sync with axiom--main--1? I have one more patch in the works
relevant to the main archive (a simple grammar issue in the message
database). 

Once the patch is applied, I would very much appreciate anyones
criticisms/comments regarding its style, etc. Its rather verbose for
such a small fix, but I thought it would be a perfect opportunity to
receive some feedback before I commit changes which involve more
involved issues. Please be harsh.

\start
Date: Thu, 2 Dec 2004 10:20:49 -0500
From: Tim Daly
To: Stephen Wilson
Subject: commit policy

Steve,

feel free to change anything you like in the branches.
the point of the branches is to allow people to experiment and
cooperate.

there is no guarantee that a branch will even compile.
and since your name is associated with axiom--language--1 i'd
expect people who change it to coordinate with you, if only as
a courtesy.

re: axiom--main--1 branch

i'm using the axiom--main--* branch to merge changes for testing
before porting them to the savannah cvs so i'd prefer to receive
changes as diffs.

Please run the diffs as:

diff -Naur origfile changedfile >dir.dir.dir.origfile.patch

so, if you changed src/interp/foo.pamphlet and saved it as 
src/interp/foo.pamphlet.new you would do:

cd src/interp
diff -Naur foo.pamphlet foo.pamphlet.new > src.interp.foo.pamphlet.patch

That way I can keep track of what is patched and where. Plus it is easier
to read the diffs to decide what is changed and how well documented the
change is.

Note that the branches are tagged to particular axiom--main builds.
Thus if you send me a patch for src/interp/foo.pamphlet and I merge
it into axiom--main--1 you will NOT see the change appear in, say,
axiom--language--1. That is because axiom--language--1 is tagged to
axiom--main--1--patch-9. Your new change will appear after patch-9.
So if you also want the patch in axiom--language--1 you'll need to
apply it there.

\start
Date: Thu, 2 Dec 2004 17:28:07 +0100
From: Martin Rubey
To: Stephen Wilson
Subject: Re: commit policy

I would suggest that you write a simple bug report and a simple patch and send
both to savannah. The patch should contain the bug number. After submitting the
patch you get a patch number. Then you comment the bug with the patch number.

This way
* it is clear that there was a bug
* it is clear that it is fixed.
* if the patch causes problems, it is easy to detect this and unapply it. (each
  release should contain notes which patches have been applied)

I'm ready to be convinced otherwise,

Martin

Stephen Wilson writes:
 > 
 > Tim, *
 > 
 > I have a simple patch which I am ready to upload. It fixes the
 > following bug:
 > 
 > ===============================================
 > (1) -> )f i n
 > 
 > BOOT>(quit)
 > 
 > -- restart Axiom
 > 
 > (1) -> )f
 >    Your command is ambiguous. The following are abbreviated by f :
 >       fin 
 >       frame 
 > (1) ->
 > ===============================================
 > 
 > The problem is in src/interp/int-top.boot, function `intloopPrefix?'.
 > 
 > Would you prefer I upload such changes to the axiom--language--1
 > branch, and send you notification that it would be relevant to
 > axiom--main--1? Or would you prefer a patch file and I'll simply keep
 > in sync with axiom--main--1? I have one more patch in the works
 > relevant to the main archive (a simple grammar issue in the message
 > database). 
 > 
 > Once the patch is applied, I would very much appreciate anyones
 > criticisms/comments regarding its style, etc. Its rather verbose for
 > such a small fix, but I thought it would be a perfect opportunity to
 > receive some feedback before I commit changes which involve more
 > involved issues. Please be harsh.
 > 

\start
Date: Thu, 2 Dec 2004 11:49:22 -0500
From: Stephen Wilson
To: Tim Daly
Subject: Re: commit policy

Tim,

> i'm using the axiom--main--* branch to merge changes for testing
> before porting them to the savannah cvs so i'd prefer to receive
> changes as diffs.

This is what I expected. Thank you for the details. 

> Note that the branches are tagged to particular axiom--main builds.
> Thus if you send me a patch for src/interp/foo.pamphlet and I merge
> it into axiom--main--1 you will NOT see the change appear in, say,
> axiom--language--1. That is because axiom--language--1 is tagged to
> axiom--main--1--patch-9. Your new change will appear after patch-9.
> So if you also want the patch in axiom--language--1 you'll need to
> apply it there.

Yes, I understand the route one must take to keep one branch in sync
with another. I feel that `tracking' main as much as possible will
aid a merge down the road. 

I'm in a rush at the moment. I'll send the afore mentioned patch later
on today.

\start
Date: Thu, 2 Dec 2004 23:21:35 -0500
From: Balbir Thomas
To: Tim Daly
Subject: Re:[axiom-developer] sman fails to start - SOLVED

Hi,
Thank you for your help. I did have devpts support
enabled in my kernel however I did not have it mounted
"mount -t devpts devpts /dev/pts" solved the problem.
Thanks again.

\start
Date: Fri, 3 Dec 2004 00:14:18 -0500
From: Tim Daly
To: Balbir Thomas
Subject: Re: [axiom-developer] sman fails to start - SOLVED

so graphics works now? that's great. you had me worried. 

could i ask you to write a simple paragraph that i can add to the FAQ
file in case this comes up again? just mention what system you are
using, what the symptom was, and what you did to fix it. it might
come up again and it would be best to remember the solution.

\start
Date: Fri, 3 Dec 2004 04:21:02 -0500
From: Stephen Wilson
To: Tim Daly
Subject: Re: commit policy

--YiEDa0DAkWCtVeE4


Tim,

Please find attached the afore mentioned patches.

They together solve two issues related to system commands. 

 o  `) f i n' no longer means `)fin'. Required fixing `intloopPrefix?'
    and modifying `intloopReadConsole' in src/interp/int-top.boot.pamphlet

 o  Added some simple argument checking to `handleNoParseCommands' in
    src/interp/i-syscmd.boot.pamphlet. Instead of, for example:

    ================================================================
    (1) -> )lisp
 
       >> System error:
       Unexpected end of #<string-input stream from "">.

    protected-symbol-warn called with (NIL)
    (1) -> )boot
 
       >> System error:
       The function |boot| is undefined.

    protected-symbol-warn called with (NIL)
    (1) -> )credits 2
 
       >> System error:
       The function |npcredits| is undefined.

    protected-symbol-warn called with (NIL)
    ================================================================

    We now have something a little more consistent:

    ================================================================
    (1) -> )lisp
       Your argument list is not valid.
    (1) -> )boot
       Your argument list is not valid.
    (1) -> )credits 2
       Your argument list is not valid.
    ================================================================


I know these are small changes, but the system commands might be one
of the first things a new user will learn (they were for me, at
least). First impressions can mean a lot.

If you feel these should not be applied to main, please let me know,
since I'll apply them to axiom--language--1 independently rather than
track a change in main.

Again, any criticism/comments would be appreciated. 

Sincerely,
Steve

--YiEDa0DAkWCtVeE4
	filename="src.interp.int-top.boot.pamphlet.patch"

--- int-top.boot.pamphlet	2004-12-02 00:18:25.000000000 -0500
+++ int-top.boot-0.1.pamphlet	2004-12-03 02:57:03.000000000 -0500
@@ -47,6 +47,21 @@
 
 If none of the above conditions occur we simply evaluate the input line
 and then tail-recursively call [[intloopReadConsole]].
+
+However, there was a small bug in the test for the system command
+[[)fin]]. Originally, the test took the form:
+\begin{verbatim}
+   intloopPrefix?('")fin",a) => []
+\end{verbatim}
+This test was flawed in two ways. First, it would match {\sl any}
+command beginning with [[)fin]]. Second, it would {\sl only} match
+names beginning with [[)fin]], although [[)fi]] is an acceptable
+abbreviation for this command. The improved test takes the form:
+\begin{verbatim}
+    pfx := stripSpaces intloopPrefix?('")fi",a)
+    pfx and ((pfx = '")fi") or (pfx = '")fin")) => []
+\end{verbatim}
+
 <<intloopReadConsole>>=
 intloopReadConsole(b, n)==
     a:= serverReadLine(_*STANDARD_-INPUT_*)
@@ -58,7 +73,8 @@
             intnplisp(a)
             PRINC(MKPROMPT())
             intloopReadConsole('"",n)
-    intloopPrefix?('")fin",a) => []
+    pfx := stripSpaces intloopPrefix?('")fi",a)
+    pfx and ((pfx = '")fi") or (pfx = '")fin")) => []
     b = '"" and (d := intloopPrefix?('")", a)) =>
              setCurrentLine d
              c := ncloopCommand(d,n)
@@ -70,6 +86,60 @@
     PRINC(MKPROMPT())
     intloopReadConsole('"", c)
 @
+
+\section{intloopPrefix?}
+The [[intloopPrefix?(prefix, whole)]] function simply tests if the string
+[[prefix]] is a prefix of the string [[whole]]. The original
+implementation discounts {\sl any} whitespace in [[whole]] in deciding a
+match, when a more sensible behavior would be to discount only leading
+whitespace.
+
+Moreover, the function SUBSTRING\cite{2} was being improperly called.
+The reason why this improper call had gone undetected is that
+generally [[intloopPrefix?]] is invoked with a prefix string of length
+one -- hence the start position for the substring would generally
+begin at index [[spaces]] (which is what we want).
+
+The original code read:
+\begin{verbatim}
+intloopPrefix?(prefix,whole) ==
+     #prefix > #whole => false
+     good:=true
+     spaces := 0
+     i := 0
+     len := #prefix
+     wlen := #whole
+     for j in 0.. while (good and i < len and j < wlen) repeat
+       good:= (prefix.i = whole.j) or (whole.j = char " ")
+       if prefix.i = whole.j then i := i+1
+       if whole.j = char " " then spaces := spaces + 1
+     spaces = wlen => nil
+     if good then SUBSTRING(whole,#prefix+spaces-1,nil) else good
+
+\end{verbatim}
+
+The improved version of [[inloopPrefix?(prefix, whole)]] returns the
+string [[whole]] sans leading whitespace if the match succeeds, else nil.
+
+<<intloopPrefix?>>=
+intloopPrefix?(prefix,whole) ==
+     #prefix > #whole => false
+     good := true
+     leading := true
+     spaces := 0
+     i := 0
+     len := #prefix
+     wlen := #whole
+     for j in 0.. while (good and i < len and j < wlen) repeat
+       good := (prefix.i = whole.j) or (leading and (whole.j = char " "))
+       if prefix.i = whole.j then i := i+1
+       if (whole.j = char " ") and leading then 
+         spaces := spaces + 1
+       else leading := false
+     spaces = wlen => nil
+     if good then SUBSTRING(whole,spaces,nil) else good
+
+@
 \section{License}
 <<license>>=
 -- Copyright (c) 1991-2002, The Numerical ALgorithms Group Ltd.
@@ -119,20 +189,8 @@
                     SpadInterpretStream(1, ["TIM", "DALY", "?"], true))
 
 <<intloopReadConsole>>
- 
-intloopPrefix?(prefix,whole) ==
-     #prefix > #whole => false
-     good:=true
-     spaces := 0
-     i := 0
-     len := #prefix
-     wlen := #whole
-     for j in 0.. while (good and i < len and j < wlen) repeat
-       good:= (prefix.i = whole.j) or (whole.j = char " ")
-       if prefix.i = whole.j then i := i+1
-       if whole.j = char " " then spaces := spaces + 1
-     spaces = wlen => nil
-     if good then SUBSTRING(whole,#prefix+spaces-1,nil) else good
+
+<<intloopPrefix?>> 
  
 intloopProcess(n,interactive,s)==
      StreamNull s => n
@@ -402,5 +460,6 @@
 \eject
 \begin{thebibliography}{99}
 \bibitem{1} [[src/interp/server.boot.pamphlet]]
+\bibitem{2} [[src/interp/vmlisp.lisp.pamphlet]]
 \end{thebibliography}
 \end{document}

--YiEDa0DAkWCtVeE4
	filename="src.interp.i-syscmd.boot.pamphlet.patch"

--- i-syscmd.boot.pamphlet	2004-12-02 00:18:25.000000000 -0500
+++ i-syscmd.boot-0.1.pamphlet	2004-12-03 02:44:39.000000000 -0500
@@ -20,6 +20,56 @@
 It appears that probe-file is now case-sensitive. In order to get around
 this we include the file extensions in both upper and lower case in the
 search lists. Lower case names are preferred.
+
+\section{handleNoParseCommands} 
+The system commands given by the global variable
+[[|$noParseCommands|]]\cite{1} require essentially no
+preprocessing/parsing of their arguments. Here we dispatch the
+functions which implement these commands.
+
+There are four standard commands which receive arguments -- [[lisp]],
+[[synonym]], [[system]] and [[boot]]. There are five standard commands
+which do not receive arguments -- [[quit]], [[fin]], [[pquit]],
+[[credits]] and [[copyright]]. As these commands do not necessarily
+exhaust those mentioned in [[|$noParseCommands|]], we provide a
+generic dispatch based on two conventions: commands which do not
+require an argument name themselves, those which do have their names
+prefixed by [[np]].
+
+<<handleNoParseCommands>>=
+handleNoParseCommands(unab, string) ==
+  string := stripSpaces string
+  spaceIndex := SEARCH('" ", string)
+  unab = "lisp" =>
+    if (null spaceIndex) then
+      sayKeyedMsg("S2IV0005", NIL)
+      nil
+    else nplisp(stripLisp string)
+  unab = "boot" =>
+    if (null spaceIndex) then
+      sayKeyedMsg("S2IV0005", NIL)
+      nil
+    else npboot(SUBSEQ(string, spaceIndex+1))
+  unab = "system" =>
+    if (null spaceIndex) then
+      sayKeyedMsg("S2IV0005", NIL)
+      nil
+    else npsystem(unab, string)
+  unab = "synonym" =>
+    npsynonym(unab, (null spaceIndex => '""; SUBSEQ(string, spaceIndex+1=
)))
+  null spaceIndex =>
+    FUNCALL unab
+  MEMBER(unab, '( quit     _
+                  fin      _
+		  pquit    _
+		  credits  _
+		  copyright )) =>  
+    sayKeyedMsg("S2IV0005", NIL)
+    nil
+  funName := INTERN CONCAT('"np",STRING unab)
+  FUNCALL(funName, SUBSEQ(string, spaceIndex+1))
+
+@
 \section{License}
 <<license>>=
 -- Copyright (c) 1991-2002, The Numerical ALgorithms Group Ltd.
@@ -1483,8 +1533,7 @@
   null u => nil
   $doNotAddEmptyModeIfTrue: local:= true
   u = $quadSymbol =>
-    sayBrightly ['"   mode",:bright '"=10",
-      '"denotes",:bright '"any","type"]
+    sayBrightly ['"   mode denotes", :bright '"any", "type"]
   u = "%" =>
     sayKeyedMsg("S2IZ0063",NIL)
     sayKeyedMsg("S2IZ0064",NIL)
@@ -1959,19 +2008,7 @@
         nil
    nil
 
-handleNoParseCommands(unab, string) ==
-  string := stripSpaces string
-  spaceIndex := SEARCH('" ", string)
-  unab = "lisp" =>
-    nplisp(stripLisp string)
-  unab = "synonym" =>
-    npsynonym(unab, (null spaceIndex => '""; SUBSEQ(string, spaceIndex+1=
)))
-  unab = "system" =>
-    npsystem(unab, string)
-  null spaceIndex =>
-    FUNCALL unab
-  funName := INTERN CONCAT('"np",STRING unab)
-  FUNCALL(funName, SUBSEQ(string, spaceIndex+1))
+<<handleNoParseCommands>>
 
 npboot str ==
   sex := string2BootTree str
@@ -2124,6 +2161,6 @@
 @
 \eject
 \begin{thebibliography}{99}
-\bibitem{1} nothing
+\bibitem{1} [[src/interp/setq.lisp.pamphlet]]
 \end{thebibliography}
 \end{document}

--YiEDa0DAkWCtVeE4

--- CHANGELOG	2004-12-03 03:21:44.000000000 -0500
+++ CHANGELOG-0.1	2004-12-03 03:21:47.000000000 -0500
@@ -1,3 +1,6 @@
+20041203 sxw src/interp/i-syscmd.boot.pamphet strengthen handleNoParseCommands, document
+20041203 sxw src/interp/int-top.boot.pamphlet intloopPrefix? bigfixes, document
+20041203 sxw src/interp/int-top.boot.pamphlet improve )fin test intloopReadConsol
 20041124 tpd src/doc/book add quotes by Christopher Alexander
 20041122 tpd src/algebra/Makefile finish unique echo numbering
 20041122 tpd src/algebra/Makefile fix echo numbering

--YiEDa0DAkWCtVeE4--

\start
Date: Fri, 3 Dec 2004 06:12:47 -0500 
From: Bill Page
To: Dan Martins, Mike Thomas
Subject: RE: Running Axiom in Texmacs for Windows (was:	[Texmacs-dev] Plug ins)

Dan, Mike,

On Thursday, December 02, 2004 7:02 AM Mike wrote:
> 
> I've attached some code which shows how to launch a
> subprocess with redirected stdin/out on Windows, which
> you might like to incorporate into tm_axiom.c.  I haven't
> run it for a couple of years but I recall that it
> worked when last I tried!
> ...

On Thursday, December 02, 2004 9:57 AM you Dan wrote:
> 
> After looking at tm_axiom.c, it looks like it would be very 
> easy to re-write this for windows.  You can use Mike's provided
> sample code, or you may even use my pipe.c/h which provides a
> very simple API to do this type of thing (since texmacs does
> it already).  I have attached them.
> 

Thank you both very much for your help. These examples
were very instructional and inspiring. Really. But as
Tim Daly always says: "There ain't no such thing as
a simple job!" ... :) After about a days work, however
I do have a radically revised version of the tm_axiom
program that seems to work very well under Windows. I
have attached the zip file containing the source program
and compiled code (compiled on MinGW/MSYS).

In the end I basically opted for the style and example
provided by Mike (though I am Dan's approach would have
probably worked nearly as well). The thing that I enjoyed
about Mike's version was the use of threads. It seems to
me that this "light weight" kind of process handling is
one of the things that Windows actually does very well
and so for a Windows version, I decided I would like to
learn more about this. Too my great pleasure some simple
experiments seemed to show that it was indeed faster than
the Cygwin version that uses the old Unix fork and pipe
approach. Cygwin TeXmacs users should be able to benefit
directly from this new version. But it might also be
worthwhile investigating backporting this new version of
tm_axiom (I called it tmwin_axiom) back to Unix.

The program is written in old fashioned vanilla C.

Perhaps this experience will be relevant when it comes
to porting some of the other components (graphics
hyperdoc, etc.) to Windows.

Anyway, I would be very pleased if you could give this
version a try. I would like to include it in the pre-
release Windows distribution of Axiom that we now have
on the MathAction web site.

------_=_NextPart_000_01C4D929.054AEF20
	name="tmwin_axiom.zip"
	filename="tmwin_axiom.zip"

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

------_=_NextPart_000_01C4D929.054AEF20--

\start
Date: Fri, 3 Dec 2004 06:42:33 -0500
From: Balbir Thomas
To: Tim Daly
Subject: writeup for faq on sman/devpts problem

Hi,
Here is the writeup you asked for . 

----------------------------------------------------------------------------
Q Graphics don't work or sman fails to start ?

First try running sman as :
sman -debug -noclef -nonag -noht
Try this as root also.
If graphics still don't work or sman fails to start then
look at the error messages . Does it show something like :

ptyopen: Failed to grant access to slave device: No such file or directory
ptyopen: Failed to get name of slave device: No such file or directory
ptyopen: Failed to open slave: Bad address

If so you may need to do a few things 
1) Make sure that devpts support is enabled in you kernel 
   ( CONFIG_DEVPTS_FS=y )
2) Make sure the directory /dev/pts exists
3) Mount devpts as in :
   "mount -t devpts devpts /dev/pts"
   You may also want to add the following line to your /etc/fstab file
   devpts          /dev/pts        devpts  gid=5,mode=602          0       0
   This will ensure that next time you reboot devpts is automatically
   mounted.

----------------------------------------------------------------------------

This got graphics working for me and it looks great . I will ofcourse
be playing around and testing it further and will make a post if something
comes up. I am using Debian woody (stable) distribution with kernel 2.4.19.
This may or may not be a problem due to the age of this rather old linux
distribution. Debian sarge is expected soon and hopefully this should not
be an issue. I am not sure if devpts is mounted by default on debian
testing and/or unstable.

PS:You may find the following article interesting if you have
not seen it already :
http://www.math.unm.edu/~wester/cas/book/Wester.pdf.
A comparison of various symbolic algebra systems including
axiom.

\start
Date: Fri, 3 Dec 2004 07:50:47 -0500 
From: Bill Page
To: Dan Martins, Mike Thomas
Subject: RE: Running Axiom in Texmacs for Windows (was:	[Texmacs-dev] Plug ins)

All,

Having produced now for the third time a revision of the
TeXmacs Axiom interface program (the most recent one for
Windows), I have begun to think that we should revisit our
decision of last year not to distribute a version of this
program with Axiom. At the time we all seemed to feel that
it would be better if these interface programs where only
included with the TeXmacs distribution itself.

But despite a year of quite good progress with both
TeXmacs and Axiom, I notice that we still have a serious
problem with TeXmacs inability to fold Axiom's sometimes
rather long LaTeX output. We do have a solution written
many years ago by Robert Sutor in the form a C program
filter. I originally modified the Texmacs-Axiom interface
program to include this filter and the result was that
TeXmacs could then do a very good job of reproducing the
examples in the Axiom book and tutorials. Unfortunately
the developers of TeXmacs decided not to accept this
revised interface program for the TeXmacs distribution.

In the mean time I have also incorporated Sutors's line-
breaker program in the MathAction wiki to solve the same
problem with very long LaTeX lines. It seems to me that this
filter program is working very reliably. Therefore I think
I would like to add the line-breaker code into the newly
revised TeXmacs-Axiom interface program. Do this would make
that new program more than 90% new source code that is only
loosely based on the original TeXmacs version. So I think
it would be well justified to include this program with
our Axiom distributions.

What do other people think?

\start
Date: Fri, 3 Dec 2004 07:37:20 -0500 
From: Bill Page
To: Dan Martins, Mike Thomas
Subject: RE: Running Axiom in Texmacs for Windows (was:	[Texmacs-dev] Plug ins)

Please replace the previous zip file of the same name
with the attached updated version.

On Friday, December 03, 2004 6:13 AM I wrote:

> ... After about a days work, however I do have a
> radically revised version of the tm_axiom program
> that seems to work very well under Windows. I have
> attached the zip file containing the source program
> and compiled code (compiled on MinGW/MSYS).
> 

Of course the version I sent out earlier this mornig
yielded to a little more testing. I found and fixed
some problems with the way it handled and displayed
syntax and other errors. Other than that, it seems
quite stable. Let me know if it works ok for you when
you get a chance.

Thanks.

Bill Page.


------_=_NextPart_000_01C4D934.D4AEAA80
	name="tmwin_axiom.zip"
	filename="tmwin_axiom.zip"

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
AAAAAAIAAgB4AAAA8S4AAAAA

\start
Date: Fri, 3 Dec 2004 09:43:31 -0500
From: Tim Daly
To: Bill Page
Subject: Re: Running Axiom in Texmacs for Windows (was:	[Texmacs-dev] Plug ins)
Cc: Mike Thomas, Dan Martens

Bill,

Perhaps you should check this code into the axiom--windows--1
branch so we can keep it where it can be maintained as part
of the port.

axiom--t--1

\start
Date: Fri, 3 Dec 2004 09:52:48 -0500
From: Tim Daly
To: Bill Page
Subject: Re: Running Axiom in Texmacs for Windows (was:	[Texmacs-dev] Plug ins)
Cc: Mike Thomas, Dan Martens

Bill,

As usual, you're a few emails ahead of me. 

Yes, we should move the texmacs support of axiom to become
the axiom support of texmacs.

I suggest you make a src/texmacs subdir and check the code
into the windows branch. From there we can make it do line-breaking,
move the code into pamphlet format, and update the src/Makefile.pamphlet
to handle the new subdir and code compiles.

Once that is done we can look at merging the changes into the main
branch.

\start
Date: Fri, 3 Dec 2004 10:06:15 -0500
From: Tim Daly
To: Balbir Thomas
Subject: Re: writeup for faq on sman/devpts problem

Balbir,

The FAQ file in axiom--main--1 has been updated.
This will be posted in the savannah CVS at the next release.

\start
Date: Fri, 3 Dec 2004 10:17:08 -0500
From: Tim Daly
To: Balbir Thomas
Subject: Re: writeup for faq on sman/devpts problem

re: Wester

I've known him for years although we've never met in person.
He's been active for a very long time and does excellent work.
It's good to see that he released this document. 

If you look at src/doc/Rosetta.pamphlet that document was originally
written by him, modified by me and Hulpke (of GAP fame), and used 
with Wester's permission.

I think we can learn a lot from his book in terms of questions to
address and work to do. The axiom system has not changed significantly
from the 1997 version so most of his complaints are still valid.

\start
Date: Fri, 3 Dec 2004 15:52:20 +0100 (CET)
From: Joris van der Hoeven
To: list
Subject: RE: Running Axiom in Texmacs for Windows (was: [Texmacs-dev] Plug ins)
Cc: Mike Thomas, Dan Martins


On Fri, 3 Dec 2004, Page, Bill wrote:
> But despite a year of quite good progress with both
> TeXmacs and Axiom, I notice that we still have a serious
> problem with TeXmacs inability to fold Axiom's sometimes
> rather long LaTeX output. We do have a solution written
> many years ago by Robert Sutor in the form a C program
> filter. I originally modified the Texmacs-Axiom interface
> program to include this filter and the result was that
> TeXmacs could then do a very good job of reproducing the
> examples in the Axiom book and tutorials. Unfortunately
> the developers of TeXmacs decided not to accept this
> revised interface program for the TeXmacs distribution.

The point is that we feel that the formula breaking code should
rather be improved in TeXmacs itself, so as to benefit to all
plug-ins at the same time. Of course, you may do things manually
by yourself for each plug-in, but should not forget to remove
this code when TeXmacs will do things better.

\start
Date: Fri, 3 Dec 2004 16:27:18 +0100 (CET)
From: Joris van der Hoeven
To: Bill Page
Subject: RE: Running Axiom in Texmacs for Windows (was: [Texmacs-dev] Plug ins)
Cc: Mike Thomas

On Fri, 3 Dec 2004, Page, Bill wrote:
> On Friday, December 03, 2004 9:53 AM you wrote:
> Hmmm... did Joris hear you say that?? :))

Yes I did. Whenever the axiom developers decide to include
the TeXmacs plug-in into Axiom itself, then please keep me informed.

\start
Date: Fri, 3 Dec 2004 10:08:06 -0500 
From: Bill Page
To: Tim Daly
Subject: RE: Running Axiom in Texmacs for Windows (was:	[Texmacs-dev] Plug ins)
Cc: Mike Thomas, Dan Martens

Tim,

On Friday, December 03, 2004 9:53 AM you wrote:
> 
> Yes, we should move the texmacs support of axiom to become
> the axiom support of texmacs.
> 

Hmmm... did Joris hear you say that?? :))

> I suggest you make a src/texmacs subdir and check the code
> into the windows branch. From there we can make it do
> line-breaking, move the code into pamphlet format, and
> update the src/Makefile.pamphlet to handle the new subdir
> and code compiles.
> 

Ok, will do. Sometime this weekend.

> Once that is done we can look at merging the changes into
> the main branch.

Oh, you mean do it the right way? ;)

I don't know if you have been looking at the MathAction
web statistics yet, but I think the following facts are
quite interesting:

http://page.axiom-developer.org/usage/usage_200412.html#TOPURLS

According to this, the recently (< 48 hrs.) uploaded version of
Axiom for Windows (axiom-windows-0.1.0.zip) is quite popular!
There have been more than 29 downloads since in was uploaded
Wednesday night. These statistics are current as of 11:45 PM
yesterday. The "Total URLs By KBytes" table shows that the
total downloads is already approaching one terabyte.

The another thing that surprizes me is how popular the
bibliography section on the Axiom Portal is. Looking at the
same totals for last month (November) confirms this since
it is ranked in 6th place in terms of the number of hits.
In comparison to other high content pages, this was only
really exceed by MathAction - both getting about 450 hits
during the month.

I think we are really going to blow your bandwidth margins
this month! I hope more people will be getting into the
"spirit of giving" mood as this year draws to a close.
The number of hits on the donation links is still far too
small to even show up on in these web stats.

\start
Date: Fri, 03 Dec 2004 15:29:53 +0100
From: Manuel Bronstein
To: Camm Maguire
Subject: Re: Quick question on the symbol issue: 

Hello,

> Assuming the rather more likely scenario that the design simply did
> not intend for users to set by hand symbols beginning with % (as it
> does appear to be used as some sort of escape), the following patch
> will increment the counter as necessary to step over symbols already
> so interned:

Many thanks for your patch, which does solve the problem.
I can't remember exactly the original design decision about this,
but it was probably the case, and it's a good design to assume now anyways.

Regarding your other questions, I would pick the safe side and not
unintern previously interned symbols in resetNew()  (better to waste
indices than risk trashing a user variable). I also would not deviate
from lisp's behavior regarding GENSYM.

Best, and sorry for replying so late,

\start
Date: Fri, 3 Dec 2004 12:55:55 -0500
From: Tim Daly
To: Stephen Wilson
Subject: Re: commit policy

patches applied in axiom--main--1
i'm building the system now to test the patches.

curiously the first patch was ok but the second patch had
the equal signs replaced with = (equalsign3D) which is 
something that windows tends to do. it's odd that both
patches were not equally affected.

\start
Date: Fri, 3 Dec 2004 23:21:03 +0600 (NOVT)
From: Andrey G. Grozin
To: list
Subject: RE: Running Axiom in Texmacs for Windows (was: [Texmacs-dev] Plug ins)
Cc: Mike Thomas

On Fri, 3 Dec 2004, Joris van der Hoeven wrote:
> On Fri, 3 Dec 2004, Page, Bill wrote:
> > But despite a year of quite good progress with both
> > TeXmacs and Axiom, I notice that we still have a serious
> > problem with TeXmacs inability to fold Axiom's sometimes
> > rather long LaTeX output. We do have a solution written
> > many years ago by Robert Sutor in the form a C program
> > filter. I originally modified the Texmacs-Axiom interface
> > program to include this filter and the result was that
> > TeXmacs could then do a very good job of reproducing the
> > examples in the Axiom book and tutorials. Unfortunately
> > the developers of TeXmacs decided not to accept this
> > revised interface program for the TeXmacs distribution.
> The point is that we feel that the formula breaking code should
> rather be improved in TeXmacs itself, so as to benefit to all
> plug-ins at the same time. Of course, you may do things manually
> by yourself for each plug-in, but should not forget to remove
> this code when TeXmacs will do things better.
Just try to expand (x+y+z)^10 in asxiom under TeXmacs. Currently, with 
TeXmacs doing line breaking, the output is perfect. With this C code 
inserted into tm_axiom the output contained unbalanced large brackets, 
and was absolutely useless and broken.

\start
Date: Fri, 3 Dec 2004 12:51:40 -0500 
From: Bill Page
To: Andrey G. Grozin
Subject: RE: Running Axiom in Texmacs for Windows (was:	[Texmacs-dev] Plug ins)
Cc: Mike Thomas

On Friday, December 03, 2004 12:21 PM Andrey G. Grozin
> ...
> Just try to expand (x+y+z)^10 in asxiom under TeXmacs. 
> Currently, with TeXmacs doing line breaking, the output
> is perfect.

But that is trivial. If the C code is not doing it right
I think it can be easily fixed. (But see evidence to the
contrary at the web site below.)

Try this in TeXmacs instead

  (1/x+y+z)^10

> With this C code inserted into tm_axiom the output contained
> unbalanced large brackets, and was absolutely useless and
> broken.

This doesn't seem to happen using exactly the same code on
MathAction. See

  http://page.axiom-developer.org/zope/mathaction/VeryLongLaTeX

The only difference is that the mathematics is rendered on
MathAction using LaTeX. Perhaps the problem you are seeing
is related to a LaTeX to TeXmacs conversion problem.

\start
Date: Fri, 3 Dec 2004 14:10:49 -0500
From: Stephen Wilson
To: Tim Daly
Subject: Re: commit policy

> patches applied in axiom--main--1
> i'm building the system now to test the patches.

Great. 

> curiously the first patch was ok but the second patch had
> the equal signs replaced with = (equalsign3D) which is 
> something that windows tends to do. it's odd that both
> patches were not equally affected.

How odd. One of the changes in that patch was to remove an escaped,
non-printable, character embedded in a print statement. The escape
sequence was intended to be seen by the terminal, triggering boldface,
color, etc. This is clearly not the best method for triggering such
behavior. Moreover, TeX does not accept such characters. 

My emailer set the encoding to `quoted-printable' instead of
`7bit'. I dont see the = problem here. It seems likely the patch
was effected during transfer (I tested that the patches applied
properly before I sent them). 

Unfortunately, I have no idea how to fix this. 

\start
Date: Fri, 3 Dec 2004 15:22:30 -0500
From: Tim Daly
To: Stephen Wilson
Subject: Re: commit policy

not to worry. i fixed it by hand. 
i generally read patches before applying them anyway. --t

\start
Date: Fri, 3 Dec 2004 15:35:30 -0500
From: Dan Martens
To: Bill Page, Mike Thomas
Subject: Re: Running Axiom in Texmacs for Windows (was:	[Texmacs-dev] Plugins)

Hi Bill,

That's great news!  So you have tested this with wintexmacs or just 
standalone on the command line?  I have not gotten around to running Axiom 
yet as I have been busy with other projects.  I promise to soon though :)

If you did get it working under wintexmacs, please provide the following 
info:

1) Was there anything special required (aside from tm_axiom.exe) to run it 
in a texmacs session?
2) Where would the standard distribution be installed on a typical windows 
box?  (ie. C:\Program Files\Axiom).
3) Is the binary that TeXmacs should look for an execute the tm_axiom.exe?

Once I have this info, I will add Axiom to the auto-search mechanism for the 
next windows release.

Dan
----- Original Message ----- 

> Please replace the previous zip file of the same name
> with the attached updated version.
>
> On Friday, December 03, 2004 6:13 AM I wrote:
>
>> ... After about a days work, however I do have a
>> radically revised version of the tm_axiom program
>> that seems to work very well under Windows. I have
>> attached the zip file containing the source program
>> and compiled code (compiled on MinGW/MSYS).
>>
>
> Of course the version I sent out earlier this mornig
> yielded to a little more testing. I found and fixed
> some problems with the way it handled and displayed
> syntax and other errors. Other than that, it seems
> quite stable. Let me know if it works ok for you when
> you get a chance.
>

\start
Date: Fri, 3 Dec 2004 15:50:30 -0500 
From: Bill Page
To: Dan Martins, Mike Thomas
Subject: RE: Running Axiom in Texmacs for Windows (was:	[Texmacs-dev] Plug ins)

On Sent: Friday, December 03, 2004 3:36 PM Dan Martens wrote 

> That's great news!  So you have tested this with wintexmacs or
> just standalone on the command line?

Yes, I have installed it in wintexmacs and used it in place
of the Cygwin version. So far it seems to be working fine
(and noticably faster).

>  I have not gotten around to running Axiom yet as I have been
> busy with other projects.  I promise to soon though :)

Great. I think you will find it an exciting tool - especially
when used with TeXmacs.

> If you did get it working under wintexmacs, please provide
> the following info:
>
> 1) Was there anything special required (aside from tm_axiom.exe)
> to run it in a texmacs session?

No, just start use

  Insert/Session/Axiom

and start typing Axiom commands.

> 2) Where would the standard distribution be installed on a typical
> windows box?  (ie. C:\Program Files\Axiom).

This has not been decided yet but yes, I have my copy installed in

  c:\Program Files\axiom\mnt\windows

There are a number of sub-directories include one called bin
where the programs are stored. Other sub-directories include
things like the algebra library files etc.

> 3) Is the binary that TeXmacs should look for and execute the
> tm_axiom.exe?

That is the name of the interface program. I believe that it is
configurable in some script that is specific to each "plug=in" but
such configuration requires some extra skill and knowledge - not
for a beginning user.

Anyway, I think that TeXmacs currently looks for the actual
external program. In the case of Axiom TeXmacs looks for an
executable named AXIOMsys - the main Axiom program. Axiom showed
up right away when I installed your version of TeXmacs on the
same system where I had already installed Axiom. I think all
that it needed was for AXIOMsys to be in the path. But it
would not run because it tried to load the tm_axiom plugin
which it assumed was in one of the TeXmacs directories as in
the case of the linux distribution.

All that I had to do was provide TeXmacs with an executable
named tm_axiom and put it a place where TeXmacs could run
it. I haven't tried but I presume that it would probably
work any place in the PATH. In my case I copied it directly
in the TeXmacs bin sub-directory.

Since it seems that many of the external routines that assist
TeXmacs with interfacing with other systems will have to be
re-written specifically for Windows, perhaps it would be less
confusing of they were given Windows version specific names,
e.g. tmwin_axiom.exe
 
> Once I have this info, I will add Axiom to the auto-search
> mechanism for the next windows release.

TeXmacs seems to find Axiom automatically already (provided that
it is configured to run from the command line via the PATH).

\start
Date: Fri, 3 Dec 2004 16:02:51 -0500
From: Dan Martens
To: Bill Page, Mike Thomas
Subject: Re: Running Axiom in Texmacs for Windows (was:	[Texmacs-dev] Plugins)

> TeXmacs seems to find Axiom automatically already (provided that
> it is configured to run from the command line via the PATH).

Because of the difference between the general conventions and layouts of 
Linux vs. Windows, I had to add some extra functionality for the PATH issue. 
What wintexmacs does is the following.

1) On first use, searches for known binaries.  When found, it adds the path 
to the pluginpaths.txt file.
2) From then on, when wintexmacs loads, it adds the each path in 
pluginpaths.txt to it's own PATH variable.  This is to remove the user 
having to add the path manually (as most windows users do not want to do).

So, I can add the search binary to wintexmacs list, then it will pick up the 
path automatically.  If you don't think this is necessary, then I won't add 
it.

\start
Date: Fri, 3 Dec 2004 16:08:11 -0500 
From: Bill Page
To: list
Subject: RE: Running Axiom in Texmacs for Windows (was:	[Texmacs-dev] Plug ins)
Cc: Mike Thomas

Dan,

> ...
> This is to remove the user having to add the path manually
> (as most windows users do not want to do).

Agreed. Most applications are installed into a standard location
and many even make entries in the Windows registry. But all of
that is quite foriegn to unix developers (although some unix/linux
distributions are becoming more standardized, e.g. debian).

> So, I can add the search binary to wintexmacs list, then
> it will pick up the path automatically.  If you don't think this
> is necessary, then I won't add it.

The question is: what to look for. Should it look for the actual
program itself (e.g. AXIOMsys as the Linux version currently does,
even though it can not use it directly)? Or should it look for
the interface program? Up until recently the interface programs
were considered by the TeXmacs developers as part of the TeXmacs
system and not part of the external system. But if some external
systems begin to develop their own TeXmacs-specific interfaces,
(such as the Axiom developers and now comtemplating) then it would
make more sense for TeXmacs to look for the interface program.

\start
Date: Fri, 3 Dec 2004 14:19:47 -0800 (PST)
From: Cliff Yapp
To: list, 
Subject: Crazy idea

I have no idea how workable this is, but would it be possible to
combine the windows axiom, wintexmacs, and whatever other pieces are
needed into a single installable archive?  I can't help thinking it
would be really cool to have something like the following:

a) use InnoSetup (or another such tool, but InnoSetup is totally free
and has so far worked very well with Maxima releases) to make the
archive+install dialogs.  Check out the current Maxima windows release
for an example.  This will result in one very large but totally self
contained installable.

b) Set up an icon+startup config so clicking on an Axiom icon will
start up TeXmacs with an Axiom session in it.  Wala, a nice clean
spiffy user experience out of the box.  Can TeXmacs be set up that way?

I dunno if this makes much sense, but given how big Axiom is anyway and
how fast the internet has become, mightn't it be worth the extra space
to have a package like that?

\start
Date: Fri, 3 Dec 2004 17:30:45 -0500 
From: Bill Page
To: Cliff Yapp
Subject: RE: Crazy idea
Cc: Dan Martins

C.Y.

About a Windows package install: Yes this is very possible.
For example Dick Martins is already packaging his TeXmacs
for Windows this way. See

http://www.texmacs.org/tmweb/download/windows.en.html

I think he is quickly becoming an expert at such packaging.
If we are real nice to him and influence him to become
involved with Axiom, then maybe we can get him to do it for
use <grin> (or at least get some helpful hints.) Maybe he
would be interested in creating a combined distribution
as you suggest.

> -----Original Message-----
> 
> I have no idea how workable this is, but would it be possible to
> combine the windows axiom, wintexmacs, and whatever other pieces are
> needed into a single installable archive?  I can't help thinking it
> would be really cool to have something like the following:
> 
> a) use InnoSetup (or another such tool, but InnoSetup is totally free
> and has so far worked very well with Maxima releases) to make the
> archive+install dialogs.  Check out the current Maxima windows release
> for an example.  This will result in one very large but totally self
> contained installable.
> 
> b) Set up an icon+startup config so clicking on an Axiom icon will
> start up TeXmacs with an Axiom session in it.  Wala, a nice clean
> spiffy user experience out of the box.  Can TeXmacs be set up 
> that way?
> 
> I dunno if this makes much sense, but given how big Axiom is 
> anyway and
> how fast the internet has become, mightn't it be worth the extra space
> to have a package like that?

\start
Date: Fri, 3 Dec 2004 17:03:26 -0500 
From: Bill Page
To: Mike Thomas
Subject: RE: Metadata for the uploaded Windows source/binary package.
Cc: Camm Maguire, Bill Page

Mike,

I am still have trouble with the Windows build. I installed
the gmp library as you described below and that part of the
configuration now seems to work. But I still have many
undefined symbols. (See tail of log below.) These seem to
me to be internal GCL stuff so something weird must be
going on.

On Thursday, December 02, 2004 7:57 AM you wrote:

> |
> | Below you refer to using a static gmp library. How precisely
> | would I do that? (Sorry to be so dense about this :) Any
> | clues or references would help.
> 
> Not dense at all.  I'm assuming here that the source tree you 
> have contains everything I used including the CVS HEAD GCL -
> I haven't had time to check yet.
> 
> The -lgmp is being pout there by configure automatically.
> 
> If you look in that gmp tar ball I uploaded you'll find a 
> "libgmp.a" which you should put in the MinGW32 gcc lib 
> directory, and "gmp.h" which goes inthe include directory.
> 
> The configure script should pick those up.
>

Yes, it did pick it up. See the tail of the log below.
 
> If you're using GCL 2.6.5 I don't remember if it autodetects 
> the gmp library or not.

No, I am using what you called gclcvs from your 200 Mb
upload (really only about 60 Mb was essential, the rest is
mostly unused zip files ... )

> 
> If completely stuck, you may need to play around with the 
> configure argument "--enable-dynsysgmp".
> 

I am running that test now.

\start
Date: Fri, 3 Dec 2004 18:10:00 -0500
From: Dan Martens
To: Bill Page, Cliff Yapp
Subject: Re: Crazy idea
Cc: Joris van der Hoeven

Hi Bill,

LOL...it's Dan Martens and I'd be glad to help.  Anything for open source :)

A combined install for Axiom and wintexmacs.....hmmm  The only problem is 
that it would be absolutlely huge.  Is there a big demand for such an 
install?

For our install, we used the Nullsoft installer system.  I used to use 
installshield, but one of our users/developers turned me on to NSIS.  It is 
an awsome and powerful package.  The scripting is very similar to assembly 
and it puts out a nice build.

Do you have a windows install package yet for axiom?

Dan
----- Original Message ----- 

> C.Y.
>
> About a Windows package install: Yes this is very possible.
> For example Dick Martins is already packaging his TeXmacs
> for Windows this way. See
>
> http://www.texmacs.org/tmweb/download/windows.en.html
>
> I think he is quickly becoming an expert at such packaging.
> If we are real nice to him and influence him to become
> involved with Axiom, then maybe we can get him to do it for
> use <grin> (or at least get some helpful hints.) Maybe he
> would be interested in creating a combined distribution
> as you suggest.
>
>> -----Original Message-----
>>
>> I have no idea how workable this is, but would it be possible to
>> combine the windows axiom, wintexmacs, and whatever other pieces are
>> needed into a single installable archive?  I can't help thinking it
>> would be really cool to have something like the following:
>>
>> a) use InnoSetup (or another such tool, but InnoSetup is totally free
>> and has so far worked very well with Maxima releases) to make the
>> archive+install dialogs.  Check out the current Maxima windows release
>> for an example.  This will result in one very large but totally self
>> contained installable.
>>
>> b) Set up an icon+startup config so clicking on an Axiom icon will
>> start up TeXmacs with an Axiom session in it.  Wala, a nice clean
>> spiffy user experience out of the box.  Can TeXmacs be set up
>> that way?
>>
>> I dunno if this makes much sense, but given how big Axiom is
>> anyway and
>> how fast the internet has become, mightn't it be worth the extra space
>> to have a package like that?
>>

\start
Date: Fri, 3 Dec 2004 18:21:30 -0500 
From: Bill Page
To: Dan Martins, Cliff Yapp
Subject: RE: Crazy idea
Cc: Joris van der Hoeven

Hi Bill,

Thanks for the note on Windows installers. No we
haven't even thought about it yet (except of C.Y.)

> LOL...it's Dan Martens and I'd be glad to help.

Sorry, I gotta get some sleep. At first I wrote
Dean Martin and then corrected it...  TTYL.

\start
Date: Sat, 4 Dec 2004 00:44:50 -0500
From: Tim Daly
To: Stephen Wilson
Subject: Re: commit policy

patches applied to axiom--main--1
rebuilt system. passed tests.
it will be in the next savannah CVS update. 

\start
Date: Sat, 4 Dec 2004 11:11:45 +0100 (CET)
From: Joris van der Hoeven
To: list
Subject: Re: [Texmacs-dev] Crazy idea

> b) Set up an icon+startup config so clicking on an Axiom icon will
> start up TeXmacs with an Axiom session in it.  Wala, a nice clean
> spiffy user experience out of the box.  Can TeXmacs be set up that way?

>From the TeXmacs point of view, this is easy: you may use
the -x (--execute) or -i (--initialize) option in order to
customize the initialization.

\start
Date: Sat, 4 Dec 2004 16:03:04 -0500
From: Bill Page
To: Tim Daly, Stephen Wilson
Subject: Re: commit policy

Tim

On Saturday, December 04, 2004 12:45 AM you wrote:
> 
> patches applied to axiom--main--1
> rebuilt system. passed tests.
> it will be in the next savannah CVS update. 
> 

Great. Did you get a chance to modify the 'axiom' script
to include graphics?

Here are a couple of problems I have noticed with the
graphics so far.

------ example axiom output ----

(4) -> draw(sin(x)^2/x^2,x=0..10)            
   Compiling function %H with type DoubleFloat -> DoubleFloat 
   Graph data being transmitted to the viewport manager...
   AXIOM2D data being transmitted to the viewport manager...

   (4)  TwoDimensionalViewport: "DSIN(x)**2/(x*x)"
                                                 Type:
TwoDimensionalViewport
(5) -> Cannot open
/home/wspage/axiom-build/mnt/linux/../../share/graph/header.ps to read.

------

The graph is drawn with the title just as show above
starting with a 'D'. Where did that come from?

The second problem was caused when I clicked on the
PS button on the 2D Control Panel. It seems that the
file header.ps is missing.

\start
Date: Sun, 5 Dec 2004 00:23:49 -0500
From: Bill Page
To: Tim Daly
Subject: patch for graphics

On Saturday, December 04, 2004 4:03 PM I wrote:
> TwoDimensionalViewport
> (5) -> Cannot open 
> /home/wspage/axiom-build/mnt/linux/../../share/graph/header.ps
>  to read.
> 

The problem is obviously that Gfun.c looks in the wrong
place. A quick patch file is below for your convenience.
Later I will try to use arch to patch axiom--main--1.

Note: After making the change Gfun.c, make took a very long
time to get to the point of rebuilding the graphics programs.
It did things like re-build AXIOMsys and the daase files
before getting around to the graphdir. Is there a short-cut?
Can we not be make this more efficient by including some
dependencies in the part that makes the databases so that
it doesn't get rebuilt if it doesn't have to? Do you have
any hints on how to do this?

--- axiom/src/graph/Gdraws/Gfun.c.pamphlet	2004-11-29
23:16:13.000000000 -0500
+++ axiom-build/src/graph/Gdraws/Gfun.c.pamphlet	2004-12-04
22:27:45.000000000 -0500
@@ -871,41 +871,41 @@
   else if ((envAXIOM = getenv("AXIOM")) != NULL) {
     psData[headerps].flag = yes;
     sprintf(psData[headerps].filename, "%s%s", envAXIOM,
-	    "/../../share/graph/header.ps");
+	    "/lib/graph/header.ps");
     sprintf(psData[drawps].filename, "%s%s", envAXIOM,
-	    "/../../share/graph/draw.ps");
+	    "/lib/graph/draw.ps");
     sprintf(psData[drawarcps].filename, "%s%s", envAXIOM,
-	    "/../../share/graph/drawarc.ps");
+	    "/lib/graph/drawarc.ps");
     sprintf(psData[drawfilledps].filename, "%s%s", envAXIOM,
-	    "/../../share/graph/drwfilled.ps");
+	    "/lib/graph/drwfilled.ps");
     sprintf(psData[drawcolorps].filename, "%s%s", envAXIOM,
-	    "/../../share/graph/drawcolor.ps");
+	    "/lib/graph/drawcolor.ps");
     sprintf(psData[fillpolyps].filename, "%s%s", envAXIOM,
-	    "/../../share/graph/fillpoly.ps");
+	    "/lib/graph/fillpoly.ps");
     sprintf(psData[colorpolyps].filename, "%s%s", envAXIOM,
-	    "/../../share/graph/colorpoly.ps");
+	    "/lib/graph/colorpoly.ps");
     sprintf(psData[fillwolps].filename, "%s%s", envAXIOM,
-	    "/../../share/graph/fillwol.ps");
+	    "/lib/graph/fillwol.ps");
     sprintf(psData[colorwolps].filename, "%s%s", envAXIOM,
-	    "/../../share/graph/colorwol.ps");
+	    "/lib/graph/colorwol.ps");
     sprintf(psData[drawpointps].filename, "%s%s", envAXIOM,
-	    "/../../share/graph/drawpoint.ps");
+	    "/lib/graph/drawpoint.ps");
     sprintf(psData[drawlineps].filename, "%s%s", envAXIOM,
-	    "/../../share/graph/drawline.ps");
+	    "/lib/graph/drawline.ps");
     sprintf(psData[drawlinesps].filename, "%s%s", envAXIOM,
-	    "/../../share/graph/drawlines.ps");
+	    "/lib/graph/drawlines.ps");
     sprintf(psData[drawrectps].filename, "%s%s", envAXIOM,
-	    "/../../share/graph/drawrect.ps");
+	    "/lib/graph/drawrect.ps");
     sprintf(psData[drawstrps].filename, "%s%s", envAXIOM,
-	    "/../../share/graph/drawstr.ps");
+	    "/lib/graph/drawstr.ps");
     sprintf(psData[drawIstrps].filename, "%s%s", envAXIOM,
-	    "/../../share/graph/drawIstr.ps");
+	    "/lib/graph/drawIstr.ps");
     sprintf(psData[fillarcps].filename, "%s%s", envAXIOM,
-	    "/../../share/graph/fillarc.ps");
+	    "/lib/graph/fillarc.ps");
     sprintf(psData[setupps].filename, "%s%s", envAXIOM,
-	    "/../../share/graph/setup.ps");
+	    "/lib/graph/setup.ps");
     sprintf(psData[endps].filename, "%s%s", envAXIOM,
-	    "/../../share/graph/end.ps");
+	    "/lib/graph/end.ps");
   }
   else {
     fprintf(stderr, " need environment variable AXIOM or DEVE; process
aborted\n");

\start
Date: Sun, 5 Dec 2004 00:38:40 -0500
From: Bill Page
To: Tim Daly
Subject: postscript files from Axiom graphics

Tim,

After patching the Gfun.c.pamphlet (see previous message)
I can now click the PS button and also use the write function
e.g.

  graph1:=draw(sin(x),x=0..1)
  write(graph1,"graphs","postscript")

The resulting postscript file is named axiom2D.ps in the
directory

  /home/wspage/graphs.VIEW

I can view this with ghostview with no problem except that
it appears in black and white where the graph being displayed
in the view port was in color. (Perhaps I missed some option
to create a color postscript file?)

-----

So now that I have done this interactively, it appears that
writing the postscript is actually done by the view2D program.
view2D does not start if I try to run sman in a console
outside the X-windows environment. And if I start Axiom with
AXIOMsys the Axiom commands above fail with the message
"viewport already closed". (It was never opened.) So for use
in MathAction I am wondering how to generate postscript files
"in batch" and without X-windows present. Can you think of
any way to do this?

\start
Date: Sun, 5 Dec 2004 13:01:33 -0500
From: Tim Daly
To: Bill Page
Subject: Re: postscript files from Axiom graphics

Bill,

re: make doing more work than required.

yes, this needs to be cleaned up. in general the makefiles are
designed to do the absolute minimum amount of work.

the technique i use is the same one i use on noweb. make has the
property that if you have a stanza with no dependencies you can
use this as a "marker". so for noweb you'll see that i have a
stanza:


noweb:
	.......	
	echo "mark that we built noweb" >noweb

which creates a file called noweb. as long as that file exists
this stanza will never be rerun. removing the noweb file indicates
that this stanza needs to be rerun.

this technique was used to keep interpsys from being
rebuilt when not required. interpsys loads a subset of the
algebra. i determined this subset by a frequency analysis of
the file loads. the top N files were chosen to be preloaded
into the image because they are used so often.

so there should be an interpsys marker file which guards against
unnecessary rebuilds. however the stanzas for files that get 
preloaded need to erase this marker file in order to force the
rebuild. this is work yet to be done.

re: Gfun.c.pamphlet

please diff -Naur Gfun.c.pamphlet and Gfun.c.pamphlet.new 
and send me the diff. 

re: color

there are a lot of options possible while creating graphs, none
of which i remember so we'll have to drag them out of the code
and document them both in the code.pamphlet files and in 
bookvol1.pamphlet (the tutorial volume in book--main--1).

as an aside, you'll note that the book is now in 3 volumes
 bookvol1 -- tutorial
 bookvol2 -- programming
 bookvol3 -- reference

re: batch generation

we did this when we made the axiom images in the book.
i believe some of the code lives in appendix F of the book.
however, it is possible we had X around.

the issue is two-fold. first, axiom needs to write the data
from the formulas. second, there is a program called viewAlone
which can display that data. Automating the first step should
be reasonably easy. I believe the functions to do it exist.

In order to display the data there is a program
[[src/graph/viewAlone]] which gets built by the make. If you look at
the file [[src/graph/fileformats.pamphlet]] you'll see that i've
documented the file formats used by viewAlone, at least in the 2D case.  
you can run this program on the file [[int/graph/parabola]]

i don't remember how the postscript generation is done but i know
we wrote a bunch of postscript macros. however the ps
generation occurs it is likely that it does not depend on X.
we may have to modify the code to give a "-batch" fastpath.

\start
Date: Sun, 5 Dec 2004 14:40:10 -0500
From: Tim Daly
To: Constantine Frangos
Subject: Re: Axiom-math post from Constantine Frangos	requires approval

Constantine,
 
I picked up a copy of matlab and one of the books. 
I'll try installing it later this week and then I can
help you with your translation problems. I'm not familiar
with Matlab.

Matlab seems, at first reading, to be somewhat primitive but
perhaps I'm missing the point. In any case it clearly provides
functionality that the student needs in some easy to use form.

Perhaps we can learn some lessons from it and create a "matlab
compatibility package" that covers the functions in ways that
a matlab user can understand.

\start
Date: Sun, 5 Dec 2004 13:25:40 -0800 (PST)
From: Cliff Yapp
To: Dan Martens Dan Martens, Bill Page
Subject: Re: Crazy idea
Cc: Joris van der Hoeven

--- Dan Martens Dan Martens wrote:

> A combined install for Axiom and wintexmacs.....hmmm  The only
> problem is that it would be absolutlely huge.  Is there a big 
> demand for such an install?

Well, it's a bit hard to tell I guess.  My logic is basically thus:

a)  Windows end users are used to installs with a minimum of user
effort.
b)  Windows is likely to be the largest distribution platform (sad but
true based on Maxima's download figures.)
c)  The speed of modern internet connections (and the size of Axiom by
itself - already over 40 megs) would seem to suggest that another
ten-fifteen megs or so probably won't make or break the download.
d)  A positive, simple install experience + the Axiom book + a pretty
TeXmacs interface will do a lot to convince people checking out the
package that enough effort has been put into the user experience for it
to be more worthwhile than it is frustrating.  From experience, the
typical response of a Windows user to hearing about a program is
something along the lines of "cool, where can I download it" and they
don't even think about downloading and hand configuring other
components.  To them it is a sign of an immature program, at least from
a user experience standpoint.  

> For our install, we used the Nullsoft installer system.  I used to
> use installshield, but one of our users/developers turned me on to 
> NSIS.  It is an awsome and powerful package.  The scripting is very 
> similar to assembly and it puts out a nice build.

Hmm.  Haven't used that one, but it looks nice.

> Do you have a windows install package yet for axiom?
> 
> Dan

The zip file is here: 
http://page.axiom-developer.org/axiom-windows-0.1.0.zip

I don't have a good windows box to practice on, so I can't say much
about it from personal experience.

\start
Date: Mon, 6 Dec 2004 09:41:58 +1000
From: Mike Thomas
To: Bill Page
Subject: RE: [Gcl-devel] RE: Metadata for the uploaded Windowssource/binary package.

Hi Bill.

Sorry to be out of touch when you are so obviously ready to get to work but
I've been flat out over the past week on other stuff.

I had hoped last week to reproduce your source tree, but I've yet to succeed
in getting a clean ssh arch download of the Windows source; I get hung
processes during patch application and network timeouts, but that is a
separate story which I hope to look at more closely this week.

| I am still have trouble with the Windows build. I installed
| the gmp library as you described below and that part of the
| configuration now seems to work. But I still have many
| undefined symbols. (See tail of log below.)

I believe you have forgotten to attach that tail.  If possible, just attach
all relevant logs and send them directly to me if the list can't deal with
that sort of thing.


| > If completely stuck, you may need to play around with the
| > configure argument "--enable-dynsysgmp".
| >
|
| I am running that test now.

The other alternative is just to let GCL build GMP from the sources in the
build tree, but I believe from your description that you were effectively
doing that in the first instance.  Hopefully the logs will help.

\start
Date: Sun, 5 Dec 2004 19:25:25 -0500
From: Tim Daly
To: Mike Thomas
Subject: Re: [Gcl-devel] RE: Metadata for the uploaded Windowssource/binary package.
Cc: Bill Page

Mike,

I also found hung processes during the patch phase of the download 
to your box. I meant to mention it to you. I thought at first it
was a lack of space (which went away as a probable cause after
I started using /usr/axiom). My experience was that the process
always failed at the second or third patch.

It can't be your version of tla because I compiled my own (unless
I was using your version accidently.

I eventually solved the problem by doing the tla on another system,
tgz'd it up and then using scp to copy it to your system and unpack it.

\start
Date: Mon, 6 Dec 2004 09:53:04 +1000
From: Mike Thomas
To: Bill Page
Subject: RE: [Gcl-devel] RE: Metadata for the uploaded Windowssource/binary package.

| I believe you have forgotten to attach that tail.  If possible, 
| just attach all relevant logs and send them directly to me if the 
| list can't deal with that sort of thing.

Sorry Bill; I just found the second message you sent on Saturday!!

\start
Date: Sun, 5 Dec 2004 19:48:54 -0500
From: Bill Page
To: Mike Thomas
Subject: RE: Metadata for the uploaded Windowssource/binary package.

Mike,

On Sunday, December 05, 2004 6:42 PM you wrote:
> 
> Sorry to be out of touch when you are so obviously ready
> to get to work but I've been flat out over the past week
> on other stuff.

I know the problem ... I *should* have been flat out on
other stuff myself :)

> 
> I had hoped last week to reproduce your source tree, but
> I've yet to succeed in getting a clean ssh arch download
> of the Windows source; I get hung processes during patch
> application and network timeouts, but that is a separate
> story which I hope to look at more closely this week.

I am *not* working with the arch axiom--windows--1 source
(yet). I just wanted instead to begin with your original
axiom.tgz that you uploaded to axiom-developer.org and
reproduce exactly what you had done. After succeeding at
that, then I am planning to start work on the version in
arch - which should be the same, but one can never be to
over confident...

\start
Date: Mon, 6 Dec 2004 00:09:38 -0500
From: Tim Daly
To: list
Subject: valgrind

well, hypertex worked. sort of. occasionally. 
it failed to start somewhat randomly.

Tim (aka Tim Jr.) suggested valgrind, a thoroughly useful debugging
tool. it seems hypertex is writing over itself which i never would
have found without this tool.

if you're coding C this is a must-have tool. 

it would be amusing to run GCL under valgrind.

\start
Date: Mon, 6 Dec 2004 09:49:34 +0000
From: Mike Dewar
To: Bill Page
Subject: re: commit policy

On Sat, Dec 04, 2004 at 04:03:04PM -0500, Bill Page wrote:
> (4) -> draw(sin(x)^2/x^2,x=0..10)            
>    Compiling function %H with type DoubleFloat -> DoubleFloat 
>    Graph data being transmitted to the viewport manager...
>    AXIOM2D data being transmitted to the viewport manager...
> 
>    (4)  TwoDimensionalViewport: "DSIN(x)**2/(x*x)"
>                                                  Type:
> TwoDimensionalViewport
> (5) -> Cannot open
> /home/wspage/axiom-build/mnt/linux/../../share/graph/header.ps to read.
> 
> ------
> 
> The graph is drawn with the title just as show above
> starting with a 'D'. Where did that come from?

There are a few places in Axiom where an expression needs to be
linearised: this is one of them and printing parameterised types is
another.  Somebody had the bright idea of using the facility for
conversion to Fortran (which I wrote) which by default uses the double
precision names for intrinsic functions, with the results you see.  I
remember reporting this as a bug when Axiom was still an IBM project,
before it even came to NAG!

\start
Date: Mon, 6 Dec 2004 17:38:31 +1000
From: Mike Thomas
To: Tim Daly
Subject: RE: [Gcl-devel] RE: Metadata for the
Cc: Bill Page

Hi Tim/Bill.

Thanks for that.

I gave up on the ssh checkout for today and just used tla under a Windows
command prompt to check out the code.  I will now try for a  GCL version
2.6.5 build to ensure that all Axiom platforms are working off the same GCL
code base.

I've already found one infelicity and need to find out your standard process
for generating those Makefile.pamphlet patches to the GCL source tree -
specifically, what "diff" command line arguments do you use to make each
patch?

Bill, I'm interested in seeing that extra information if you can still be
bothered to chase your own GCL HEAD build.  I think it would be good to try
uncovering the problem so that you can gain some faith in the process.

I spent odd moments over the weekend (text mode) and today (Windows
TeXmacs - no cygwin involved at all) trying to crash Axiom and or TeXmacs.
I'm very pleased to report that I failed completely.  My main attack has
been to type in code snippets which solve specific problems from the Axiom
book and various web sites.  Axiom is certainly a stunning program.

I'm also hoping that someone on the Maxima development team will build a
tm_maxima equivalent for Windows based on Bill's superb weekend efforts.  I
just wish we had savable worksheets for both CAS systems - TeXmacs seems not
to be able to do that yet.

Attached is a picture of Windows Axiom in TeXmacs.

Bill, I can send you an up to date PDF copy of the Axiom book built from CVS
if you would like to include it in your web zip file.

| -----Original Message-----
|
| Mike,
|
| I also found hung processes during the patch phase of the download
| to your box. I meant to mention it to you. I thought at first it
| was a lack of space (which went away as a probable cause after
| I started using /usr/axiom). My experience was that the process
| always failed at the second or third patch.
|
| It can't be your version of tla because I compiled my own (unless
| I was using your version accidently.
|
| I eventually solved the problem by doing the tla on another system,
| tgz'd it up and then using scp to copy it to your system and unpack it.
|

------=_NextPart_000_0152_01C4DBBA.67057F30
	name="texmacs_axiom_windows.jpg"
	filename="texmacs_axiom_windows.jpg"

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
5rwDt6j6VlHE7+oMd/51l/tIlpuj6uaqYhsOdkqGwOVrIqry+OJjY2N5Q4taXblrnbkdOfbuAWZc
Tv6gx3/nWX+0iV9DxEMm1NZ6fijqzR5TUVCy3HVKlhtfH1pWOMMYZuC9++2/Me4d/cvcazwAsm0M
/qUTkcpl8TUecj1b826IrGlcg+vl5iffPqv6JpffTy8xPvn1X9E0vvoiiy5AeXmJ98+q/oml99PL
zE++fVf0TS++iJZcgPLzE++fVf0TS++nl5iffPqv6JpffREsuQHl5iffPqv6JpffTy8xPvn1X9E0
vvoiWXIDy8xPvn1X9E0vvp5eYn3z6r+iaX30RLLkB5eYn3z6r+iaX308vMT759V/RNL76IllyA8v
MT759V/RNL76eXmJ98+q/oml99ESy5A+VbWeArBwrZ/UsIceZwjw1Fu59Z2cvr5eYn3z6r+iaX30
RLLkB5eYn3z6r+iaX308vMT759V/RNL76IllyA8vMT759V/RNL76eXmJ98+q/oml99ESy5AeXmJ9
8+q/oml99PLzE++fVf0TS++iJZcgPLzE++fVf0TS++nl5iffPqv6JpffREsuQHl5iffPqv6JpffT
y8xPvn1X9E0vvoiWXIDy8xPvn1X9E0vvp5eYn3z6r+iaX30RLLkB5eYn3z6r+iaX308vMT759V/R
NL76IllyA8vMT759V/RNL76ixaq0xFkpcnHmNQMvTN5JbLcHQEr29Ohfzbkea3oT6B6kRLLkCV5e
Yn3z6r+iaX308vMT759V/RNL76IllyBFv6q0xkHwvv5jUFt0DueEz4Og8xu9bd3dD0HUKV5eYn3z
6r+iaX30RLLkB5eYn3z6r+iaX308vMT759V/RNL76IllyA8vMT759V/RNL76eXmJ98+q/oml99ES
y5AeXmJ98+q/oml99PLzE++fVf0TS++iJZcgPLzE++fVf0TS++nl5iffPqv6JpffREsuQHl5iffP
qv6JpffTy8xPvn1X9E0vvoiWXIDy8xPvn1X9E0vvp5eYn3z6r+iaX30RLLkB5eYn3z6r+iaX308v
MT759V/RNL76IllyA8vMT759V/RNL76eXmJ98+q/oml99ESy5AeXmJ98+q/oml99PLzE++fVf0TS
++iJZcgPLzE++fVf0TS++nl5iffPqv6JpffREsuQHl5iffPqv6JpffTy8xPvn1X9E0vvoiWXIDy8
xPvn1X9E0vvp5eYn3z6r+iaX30RLLkB5eYn3z6r+iaX308vMT759V/RNL76IllyA8vMT759V/RNL
76eXmJ98+q/oml99ESy5AeXmJ98+q/oml99PLzE++fVf0TS++iJZcgPLzE++fVf0TS++nl5iffPq
v6JpffREsuQHl5iffPqv6JpffTy8xPvn1X9E0vvoiWXIDy8xPvn1X9E0vvp5eYn3z6r+iaX30RLL
kB5eYn3z6r+iaX308vMT759V/RNL76IllyA8vMT759V/RNL76eXmJ98+q/oml99ESy5AeXmJ98+q
/oml99PLzE++fVf0TS++iJZcgPLzE++fVf0TS++nl5iffPqv6JpffREsuQHl5iffPqv6JpffTy8x
Pvn1X9E0vvoiWXIDy8xPvn1X9E0vvp5eYn3z6r+iaX30RLLkB5eYn3z6r+iaX308vMT759V/RNL7
6IllyA8vMT759V/RNL76eXmJ98+q/oml99ESy5AeXmJ98+q/oml99PLzE++fVf0TS++iJZcgPLzE
++fVf0TS++nl5iffPqv6JpffREsuQHl5iffPqv6JpffTy8xPvn1X9E0vvoiWXIDy8xPvn1X9E0vv
p5eYn3z6r+iaX30RLLkB5eYn3z6r+iaX308vMT759V/RNL76IllyA8vMT759V/RNL76rGuc5iMni
cbRxc2SndXs27M812COIudMYz0DHOHex3q7wiLqG4P/Z

------=_NextPart_000_0152_01C4DBBA.67057F30--

\start
Date: Mon, 6 Dec 2004 08:06:55 -0500
From: Tim Daly
To: Mike Dewar, Bill Page
Subject: re: commit policy

>> (4) -> draw(sin(x)^2/x^2,x=0..10)            
>>    Compiling function %H with type DoubleFloat -> DoubleFloat 
>>    Graph data being transmitted to the viewport manager...
>>    AXIOM2D data being transmitted to the viewport manager...
>> 
>>    (4)  TwoDimensionalViewport: "DSIN(x)**2/(x*x)"
>>                                                  Type:
>> TwoDimensionalViewport
>> (5) -> Cannot open
>> /home/wspage/axiom-build/mnt/linux/../../share/graph/header.ps to read.
>> 
>> ------
>> 
>> The graph is drawn with the title just as show above
>> starting with a 'D'. Where did that come from?

>There are a few places in Axiom where an expression needs to be
>linearised: this is one of them and printing parameterised types is
>another.  Somebody had the bright idea of using the facility for
>conversion to Fortran (which I wrote) which by default uses the double
>precision names for intrinsic functions, with the results you see.  I
>remember reporting this as a bug when Axiom was still an IBM project,
>before it even came to NAG!

ok, so i'm a LITTLE behind in fixing bugs :-)
it's likely the bug was on my desk at ibm. 
hopefully this will get fixed this time.

Bill, could you submit this as a bug report so it doesn't get lost?

\start
Date: Mon, 6 Dec 2004 08:58:13 -0500
From: Tim Daly
To: Bill Page
Subject: re: postscript files from Axiom graphics

Bill,

Another partially-implemented feature that will minimize the work
done and accomplish your goal is the "PART=" mechanism.

You will eventually be able to type:

make PART=graphics

and only the graphics will be rebuilt. This mechanism used to
exist and I have not yet recovered it.

\start
Date: Mon, 6 Dec 2004 15:26:59 +0100 (CET)
From: Waldek Hebisch
To: list
Subject: axiom on AMD64

I am trying to build CVS axion (from December 5) on AMD64. I am 
using `fedora64' target (my machine is a Mandrake 9.1, but Fedora
looks close enough ...). I have noticed two problems:

when running `r21bugsbig' axiom spent 7 hours after printing the
line:

g : LX := reduce(*, [X - rho for rho in r]) ;

I had to kill axiom process to go further. 

Next problem is that library settinge form the `Makefile.fedora64',
namely the line:
 
LDF:="-L/usr/X11R6/lib64 -L/usr/local/lib64 -L/usr/openwin/lib64 -L/usr/lib64 "

apparently did not propagate to `view2D' directory. More precisely,
the build failed at link stage:

34 linking /pom/kompi/axiom/axiom2/mnt/fedora64/lib/view2D
gcc-3.3.1: /usr/X11R6/lib/libXpm.a: No such file or directory
make[4]: *** [/pom/kompi/axiom/axiom2/mnt/fedora64/lib/view2D] Error 1
make[4]: Leaving directory `/pom/kompi/axiom/axiom2/src/graph/view2D'
make[3]: *** [view2Ddir] Error 2

PS. I have September version working (build after hand tweaks). I am
rebuilding to get `sman' running.

\start
Date: Mon, 6 Dec 2004 11:45:36 -0500
From: Tim Daly
To: Camm Maguire
Subject: GCL and valgrind

Camm,

I ran GCL under valgrind and found no errors.
I then ran interpsys under valgrind and get:

=================================================================
bash-2.05b# valgrind --tool=memcheck ./interpsys
==9634== Memcheck, a memory error detector for x86-linux.
==9634== Copyright (C) 2002-2004, and GNU GPL'd, by Julian Seward et al.
==9634== Using valgrind-2.2.0, a program supervision framework for x86-linux.
==9634== Copyright (C) 2000-2004, and GNU GPL'd, by Julian Seward et al.
==9634== For more details, rerun with: -v
==9634== 
==9634== Syscall param sigaction(act) contains uninitialised or unaddressable byte(s)
==9634==    at 0x1BA0144F: __GI___libc_sigaction (in /lib/libc-2.3.2.so)
==9634==    by 0x1BA01539: sigaction (in /lib/libc-2.3.2.so)
==9634==    by 0x81B23F2: bsdSignal (in /home/axiom/obj/linux/bin/interpsys)
==9634==    by 0x804C801: open_server (in /home/axiom/obj/linux/bin/interpsys)
==9634==  Address 0x52BFDF7C is on thread 1's stack
                        AXIOM Computer Algebra System 
             Version of Thursday November 18, 2004 at 21:11:34 
-----------------------------------------------------------------------------
   Issue )copyright to view copyright notices.
   Issue )summary for a summary of useful system commands.
   Issue )quit to leave AXIOM and return to shell.
-----------------------------------------------------------------------------
 
   Re-reading compress.daase   Re-reading interp.daase
   Re-reading operation.daase
   Re-reading category.daase
   Re-reading browse.daase==9634== 
==9634== Conditional jump or move depends on uninitialised value(s)
==9634==    at 0x805E438: mark_stack_carefully (in /home/axiom/obj/linux/bin/interpsys)
==9634== 
==9634== Conditional jump or move depends on uninitialised value(s)
==9634==    at 0x805E444: mark_stack_carefully (in /home/axiom/obj/linux/bin/interpsys)
==9634== 
==9634== Use of uninitialised value of size 4
==9634==    at 0x805E453: mark_stack_carefully (in /home/axiom/obj/linux/bin/interpsys)
==9634== 
==9634== Conditional jump or move depends on uninitialised value(s)
==9634==    at 0x805E4B6: mark_stack_carefully (in /home/axiom/obj/linux/bin/interpsys)
==9634== 
==9634== Use of uninitialised value of size 4
==9634==    at 0x805E4B8: mark_stack_carefully (in /home/axiom/obj/linux/bin/interpsys)
==9634== 
==9634== Conditional jump or move depends on uninitialised value(s)
==9634==    at 0x805DB95: mark_object (in /home/axiom/obj/linux/bin/interpsys)
==9634== 
==9634== Use of uninitialised value of size 4
==9634==    at 0x805DB97: mark_object (in /home/axiom/obj/linux/bin/interpsys)
==9634== 
==9634== Use of uninitialised value of size 4
==9634==    at 0x805DB9D: mark_object (in /home/axiom/obj/linux/bin/interpsys)
==9634== 
==9634== Use of uninitialised value of size 4
==9634==    at 0x805DBA3: mark_object (in /home/axiom/obj/linux/bin/interpsys)
==9634== 
==9634== Use of uninitialised value of size 4
==9634==    at 0x805DFB8: mark_object (in /home/axiom/obj/linux/bin/interpsys)
==9634== 
==9634== Use of uninitialised value of size 4
==9634==    at 0x805DFCE: mark_object (in /home/axiom/obj/linux/bin/interpsys)
==9634== 
==9634== Use of uninitialised value of size 4
==9634==    at 0x805DF61: mark_object (in /home/axiom/obj/linux/bin/interpsys)
==9634== 
==9634== Use of uninitialised value of size 4
==9634==    at 0x805DB24: mark_cons (in /home/axiom/obj/linux/bin/interpsys)
==9634== 
==9634== Use of uninitialised value of size 4
==9634==    at 0x805DB36: mark_cons (in /home/axiom/obj/linux/bin/interpsys)
==9634== 
==9634== Use of uninitialised value of size 4
==9634==    at 0x805E340: mark_object (in /home/axiom/obj/linux/bin/interpsys)
==9634== 
==9634== Use of uninitialised value of size 4
==9634==    at 0x805E347: mark_object (in /home/axiom/obj/linux/bin/interpsys)
==9634== 
==9634== Use of uninitialised value of size 4
==9634==    at 0x805E36E: mark_object (in /home/axiom/obj/linux/bin/interpsys)
==9634== 
==9634== Use of uninitialised value of size 4
==9634==    at 0x805E008: mark_object (in /home/axiom/obj/linux/bin/interpsys)
==9634== 
==9634== Use of uninitialised value of size 4
==9634==    at 0x805E01E: mark_object (in /home/axiom/obj/linux/bin/interpsys)
==9634== 
==9634== Use of uninitialised value of size 4
==9634==    at 0x805DDF6: mark_object (in /home/axiom/obj/linux/bin/interpsys)
==9634== 
==9634== Use of uninitialised value of size 4
==9634==    at 0x805DEC8: mark_object (in /home/axiom/obj/linux/bin/interpsys)
==9634== 
==9634== Use of uninitialised value of size 4
==9634==    at 0x805DED4: mark_object (in /home/axiom/obj/linux/bin/interpsys)
==9634== 
==9634== Use of uninitialised value of size 4
==9634==    at 0x805DEEF: mark_object (in /home/axiom/obj/linux/bin/interpsys)
==9634== 
==9634== Use of uninitialised value of size 4
==9634==    at 0x805DF08: mark_object (in /home/axiom/obj/linux/bin/interpsys)


"running /root/.axiom.input"
Value = NIL
Value = NIL
(1) -> 1

   (1)  1
                                                        Type: PositiveInteger
(2) -> )quit
==9634== 
==9634== ERROR SUMMARY: 4508 errors from 25 contexts (suppressed: 21 from 1)
==9634== malloc/free: in use at exit: 0 bytes in 0 blocks.
==9634== malloc/free: 0 allocs, 0 frees, 0 bytes allocated.
==9634== For a detailed leak analysis,  rerun with: --leak-check=yes
==9634== For counts of detected errors, rerun with: -v
bash-2.05b# 

\start
Date: Mon, 6 Dec 2004 11:55:15 -0500
From: Tim Daly
To: list
Subject: socket support under SBCL

given that we want to work on porting to many common lisps the key
issue is socket support. for SBCL the socket docs are at:

http://www.sbcl.org/manual/Networking.html#Networking

\start
Date: Mon, 6 Dec 2004 13:50:48 -0500
From: Tim Daly
To: Bill Page
Subject: Re: postscript files from Axiom graphics]

Bill,

I merged your Gfun.c pathname changes into axiom--main--1.
It's being built and tested now.

\start
Date: Mon, 6 Dec 2004 16:28:38 -0500 
From: Bill Page
To: Tim Daly
Subject: RE: Lulu publishing

I would like to here more from subscribers to axiom-developer
about our current plans to publish a series of Axiom books
on Lulu. Tim Daly has setup the arch repository book--main--1
with 3 volumes:

 bookvol1 -- tutorial
 bookvol2 -- programming
 bookvol3 -- reference

Our goal is to get the Volume 1 out to press in Lulu as
soon as possible. 95% of this volume is complete, but it
would be great to have more proof reading and corrections
by other people.

We were also hoping to include a CDrom with volume 1, but
we received a quotation from Lulu which calls for a minimum
publishing run of 100 copies at an up front cost of about
$1,200 USD for a 250 page volume including a CDrom. So far the
limited donations to the Axiom Foundation would not let us
seriously consider this option.

---------

Here is an article about Lulu and publishing open source software:

http://www.newsforge.com/article.pl?sid=04/11/10/2135209

Lulu.com is the brainchild of Red Hat founder Bob Young. With Lulu,
Young offers would-be publishers, whether book authors, musicians,
photographers, or artists, the opportunity to expose and sell their
work for little or no upfront investment. But Lulu.com is more than
just an on-demand publishing house. True to the open spirit, it is
also a community -- a haven where artistic people can gather to share
experiences and seek advice from one another. They can network,
looking for opportunities to collaborate and muster up creative
synergy. It is open and it is free. And now, it is for software
developers too.

Lulu this month announced http://www.lulu.com/static/pr/11_03.php
that software developers can now publish their works at Lulu.com
and sell hard copies of instruction manuals and boxed sets of
programs. This could be a boon to open source software developers
and customers alike, since fans cannot usually walk into their
local software store and pick up a copy of the latest open source
applications.

\start
Date: Mon, 6 Dec 2004 17:16:20 -0500
From: Dan Martens
To: Bill Page, Mike Thomas
Subject: Re: Axiom for Windows and TeXmacs

Hi Bill,

I've been very busy here trying to keep up with my emails.  I will whip up
an axiom script tomorrow.  Where would you like me to post the build when
done?

Dan
----- Original Message ----- 

> Mike,
>
> On Monday, December 06, 2004 2:39 AM you wrote:
> > ...
> > I've already found one infelicity and need to find out your
> > standard process for generating those Makefile.pamphlet
> > patches to the GCL source tree - specifically, what "diff"
> > command line arguments do you use to make each patch?
>
> I believe it is diff -Naur
>
> >
> > Bill, I'm interested in seeing that extra information if
> > you can still be bothered to chase your own GCL HEAD build.
> > I think it would be good to try uncovering the problem so
> > that you can gain some faith in the process.
>
> I will get back to that later today. So far the only
> difference I can see is that last week I had not updated
> to the latest versions of MinGW runtime 3.35 and Win32 3.1.
> I have now done this and I will let you know the results
> later.
>
> >
> > I spent odd moments over the weekend (text mode) and today
> > (Windows TeXmacs - no cygwin involved at all) trying to
> > crash Axiom and or TeXmacs. I'm very pleased to report that
> > I failed completely.  My main attack has been to type in
> > code snippets which solve specific problems from the Axiom
> > book and various web sites.  Axiom is certainly a stunning
> > program.
>
> Wonderful. I was *very impressed* with the speed of Axiom
> under Windows and I also have not found any peculiarities
> in the output compared to Axiom on Linux. My first impression
> is that Axiom on Windows is faster than Axiom under Linux on
> the same hardware. But that seems improbable.  Perhaps it has
> something to do with the changes in GCL head? Certainly the
> combination of TeXmacs for Windows and Axiom is faster than
> TeXmacs for Linux and Axiom for Linux but I think that has
> to do with the threaded interface program.
>
> >
> > I'm also hoping that someone on the Maxima development
> > team will build a tm_maxima equivalent for Windows based
> > on Bill's superb weekend efforts.
>
> I would be very happy to work with someone who knows Maxima
> to produce a new native Windows tm_maxima. The version of
> TeXmacs for Windows is still very new and only a few plug-ins
> have been tested with it - most require a rewrite specifically
> for windows because Windows process handling is different from
> Linux. I think that example of threaded process handling that
> Mike Thomas sent me is superior to the older TeXmacs interface
> code (on Windows at least and possibly also under linux).
>
> If someone volunteers to help with testing, I could probably
> produce a first attempt at a tm_maxima by merging the new
> process code with the conversions embedded in the old tm_maxima
> for Linux. This might take a 1/2 day work.
>
> About Maxima and TeXmacs for Windows, see:
>
> http://www.math.utexas.edu/pipermail/maxima/2004/006925.html
> http://www.math.utexas.edu/pipermail/maxima/2003/005702.html
>
> This tutorial should be updated for the new native Windows
> version:
>
> http://www.fmi.uni-passau.de/~seidl/texmacs/tmtour.html
>
> I am also mildly motivated to add Maxima support to MathAction
> but so far only Bob McElrath has shown any direct interest
> and unfortunately he has had other priorities and not
> enough time.
>
> I am very impressed by Dan Martin's work with porting TeXmacs
> to windows. From the description at
>
> http://www.texmacs.org/tmweb/download/windows.en.html
>
> I think it is currently rather undervalued by the original
> TeXmacs developers perhaps because Windows is viewed as a
> less desirable target platform by most open source
> developers? But the reality is that the number of potential
> windows users still far exceeds the number linux desktop
> users. I think that it is interesting to see from the
> MathAction web stats that in just 5 days, the new Windows
> version of Axiom has already by downloaded more that 125
> times!
>
> > I just wish we had saveable worksheets for both CAS systems -
> > TeXmacs seems not to be able to do that yet.
>
> I am not sure I understand your comment. It is already
> possible now to save a TeXmacs document that includes any
> kind of session output (including Axiom) as if it was a
> "worksheet". My only quibble with TeXmacs is that it currently
> has no easy way to re-execute all of the session commands
> embedded in a document with one click. One must visit each
> command in the document and press Enter to cause it to be
> re-executed.
>
> Or do you mean simply that you cannot access Maxima from
> TeXmacs for Windows? I think both the Cygwin and Linux
> versions of TeXmacs can do this.
>
> >
> > Attached is a picture of Windows Axiom in TeXmacs.
> >
> > Bill, I can send you an up to date PDF copy of the Axiom
> > book built from CVS if you would like to include it in
> > your web zip file.
> >
>
> That's a cool idea. I think we need to give some thought to
> how to package Axiom for Windows. As C Y (subject: crazy
> idea) has pointed out, Windows users tend to have greater
> expectations when in comes to the completeness. C Y's
> "crazy idea" was that maybe we should include TeXmacs for
> Windows together with the Axiom for Windows - assuming
> that TeXmacs would be the preferred interface. Even if
> we don't do that, then at least I think the Windows package
> should include the tm_axiom interface and as you suggest,
> the Axiom book.
>
> Dan Martin has offered to provide a auto-install script
> for Axiom for Windows using the Nullsoft installer system.
>
> Is your PDF version of the book built with working internal
> links? The method that I used most recently (dvipdfm under
> Debian) did not produce working links.
>

\start
Date: Mon, 6 Dec 2004 17:18:30 -0500 
From: Bill Page
To: Mike Thomas
Subject: RE: Metadata for the uploaded Windows source/binary package.

Mike,

On Sunday, December 05, 2004 7:15 PM you wrote:
> 
> Could you also send me the output from "msysinfo", your 
> binutils version and confirm that you have installed the
> latest MinGW runtime and Win32 libraries (I have MinGW
> runtime 3.35 and Win32 3.1 from the MinGW Sourceforge
> download area):

On December 6, 2004 3:50 PM I wrote:

>On Monday, December 06, 2004 2:39 AM you wrote:
>
>> ... 
>> Bill, I'm interested in seeing that extra information if
>> you can still be bothered to chase your own GCL HEAD build.
>> I think it would be good to try uncovering the problem so
>> that you can gain some faith in the process.
>
> I will get back to that later today. So far the only
> difference I can see is that last week I had not updated
> to the latest versions of MinGW runtime 3.35 and Win32 3.1.
> I have now done this and I will let you know the results
> later.

Ok, having installed the updated runtime modules, the Axiom
build from your original Windows sources is now will on it's
way to completion in the middle of compiling the algebra.
Thank you!

When this completes, I will start working with the
axiom--windows-1 arch sources. My first attempt to build
from these failed due to a compile error in bsdsignal.c.
I will check what is different between what is in your original
sources versus what is in axiom--windows-1. Perhaps those
patches got missed when Tim created the archive? I will
let you know if/when I submit new patches.

--------

For the record (and also to encourage other people to try
it):

I installed a completely new MinGW/MSYS configuration from the
'current' file list at:

http://www.mingw.org/download.shtml#hdr2

In the following order:

1)  MinGW-3.1.0-1.exe
    http://prdownloads.sf.net/mingw/MinGW-3.1.0-1.exe?download
2)  MSYS-1.0.10.exe
    http://prdownloads.sf.net/mingw/MSYS-1.0.10.exe?download
3)  msysDTK-1.0.1.exe
    http://prdownloads.sf.net/mingw/msysDTK-1.0.1.exe?download

Then untarred the following:
 (cd /mingw; tar xzvf /home/bpage/... )

4)  gcc-core-3.4.2-20040916-1.tar.gz
 
http://prdownloads.sf.net/mingw/gcc-core-3.4.2-20040916-1.tar.gz?download
5)  binutils-2.15.91-20040904-1.tar.gz
 
http://prdownloads.sf.net/mingw/binutils-2.15.91-20040904-1.tar.gz?download
6)  w32api-3.1.tar.gz
    http://prdownloads.sf.net/mingw/w32api-3.1.tar.gz?download
7)  mingw-runtime-3.5.tar.gz
    http://prdownloads.sf.net/mingw/mingw-runtime-3.5.tar.gz?download

> 
> $ ld --version
> GNU ld version 2.15.91 20040904
> 
> $ msysinfo
> msysinfo-1.3: Send this to the MSYS support list:
> 
> MSYS 1.0.10(0.46/3/2) 2004-03-15 07:17 i686 unknown; targ=MINGW32
> GNU bash, version 2.04.0(1)-release (i686-pc-msys); ENV=.profile
> GNU Make version 3.79.1,Built for i686-pc-msys; MAKE_MODE=unix
> gcc.exe (GCC) 3.4.2 (mingw-special); targ=MINGW32
> GNU ld version 2.15.91 20040904
>    789320 Tue Mar 16 13:32:49 2004 /bin/msys-1.0.dll
>     52064 Thu Jan 02 08:05:27 2003 /bin/msysltdl-3.dll
>    135680 Tue Mar 16 13:32:48 2004 /bin/make.exe
>     88064 Tue Sep 21 18:15:22 2004 /mingw/bin/gcc.exe
>    642048 Sun Sep 05 09:45:43 2004 /mingw/bin/ld.exe
> HOME=/home/miketh
> Sysname=MINGW32_NT-5.1  OSTYPE=msys  TERM=cygwin
> PATH=.:/usr/local/bin:/mingw/bin:/bin:/c/lang/texmf/miktex/bin/:
> /c/lang/Tcl-8.4.1.0/bin:/c/WINDOWS/system32:/c/WINDOWS:/c/WINDOW
> S/System32/Wbem:/c/Program Files/Common Files/Adaptec Shared/Sys
> tem:/c/Program Files/Common Files/GTK/2.0/bin:/c/Program Files/a
> xiom/mnt/windows/bin:/c/lang/texmf/miktex/bin/:/c/lang/MSDOTN~1/
> Bin/:/c/PROGRA~1/MICROS~1.NET/Common7/IDE/:/c/WINDOWS/MICROS~1.N
> ET/FRAMEW~1/V10~1.370/:/c/PROGRA~1/MICROS~1.NET/Vc7/bin/:/c/lang
> /TCL-84~1.0/bin:/c/WINDOWS/system32:/c/WINDOWS:/c/WINDOWS/System
> 32/Wbem:/c/PROGRA~1/COMMON~1/ADAPTE~1/System:/c/lang/smlnj-110.4
> 7/bin:/c/lang/Palmdev/apache-ant-1.5.4/bin
> 

My configuration now matches yours:

$ ld --version
GNU ld version 2.15.91 20040904
Copyright 2002 Free Software Foundation, Inc.
This program is free software; you may redistribute it under the terms of
the GNU General Public License.  This program has absolutely no warranty.

Administrator@ASUS ~
$ msysinfo
msysinfo-1.3: Send this to the MSYS support list:

MSYS 1.0.10(0.46/3/2) 2004-03-15 07:17 i686 unknown; targ=MINGW32
GNU bash, version 2.04.0(1)-release (i686-pc-msys); ENV=.profile
GNU Make version 3.79.1,Built for i686-pc-msys; MAKE_MODE=unix
gcc.exe (GCC) 3.4.2 (mingw-special); targ=MINGW32
GNU ld version 2.15.91 20040904
   789320 Tue Mar 16 13:32:49 2004 /bin/msys-1.0.dll
    52064 Thu Jan 02 08:05:27 2003 /bin/msysltdl-3.dll
   135680 Tue Mar 16 13:32:48 2004 /bin/make.exe
    88064 Tue Sep 21 04:15:22 2004 /mingw/bin/gcc.exe
   642048 Sat Sep 04 19:45:43 2004 /mingw/bin/ld.exe
HOME=/home/bpage
Sysname=MINGW32_NT-5.1  OSTYPE=msys  TERM=msys
PATH=.:/usr/local/bin:/mingw/bin:/bin:/c/texmf/miktex/bin:/c/WIN
DOWS/system32:/c/WINDOWS:/c/WINDOWS/System32/Wbem:/c/Program Fil
es/Plone/Python:/c/Program Files/Aldor/bin:/usr/bin:/c/ghc/ghc-6
.2.1/bin:/c/r37/lisp/csl/winvc:.:/mingw/bin
$ ls -tx /home/bpage
w32api-3.1.tar.gz                   mingw-runtime-3.5.tar.gz
axiom/                              small-miktex-2.4.1705.exe*
.ssh/                               .arch-params/
msysDTK-1.0.1.exe*                  tla-setup.exe*
binutils-2.15.91-20040904-1.tar.gz  MinGW-3.1.0-1.exe*
gcc-core-3.4.2-20040916-1.tar.gz    MSYS-1.0.10.exe*
gmp-static-mingw-4.1.tar.gz         tm_axiom.c

\start
Date: Mon, 6 Dec 2004 14:55:01 -0800 (PST)
From: Cliff Yapp
To: Bill Page
Subject: RE: Lulu publishing

--- Bill Page wrote:

> I would like to here more from subscribers to axiom-developer
> about our current plans to publish a series of Axiom books
> on Lulu. Tim Daly has setup the arch repository book--main--1
> with 3 volumes:
> 
>  bookvol1 -- tutorial
>  bookvol2 -- programming
>  bookvol3 -- reference
> 
> Our goal is to get the Volume 1 out to press in Lulu as
> soon as possible. 95% of this volume is complete, but it
> would be great to have more proof reading and corrections
> by other people.

Dumb question from He Who Probably Missed the Email - is bookvol1 the
current Axiom - the 30 year horizon book, or just some smaller part of
it? (I assume from the page count it is just a part of it.)  If so, is
there any chance that someday one large, massive book could be made
available, for people like me who are likely to spend altogether too
much time wondering "now where did volume two go?"

> We were also hoping to include a CDrom with volume 1, but
> we received a quotation from Lulu which calls for a minimum
> publishing run of 100 copies at an up front cost of about
> $1,200 USD for a 250 page volume including a CDrom. So far the
> limited donations to the Axiom Foundation would not let us
> seriously consider this option.

Well, I guess the following might be my questions about something like
this:

a)  What is the cost per book without CD?  (As a probably irrelevant
side note, what would hardback cost? :-)

b)  Given the program can be downloaded in any case (and most likely a
more current version than that on a CD) how much will such a CD be
used?

c)  If people do desire CDs, what would be the cost of having some
printed, with nice art etc., and selling those off the website? 
Mightn't that be cheaper, and ultimately about as effective?  If
they're already willing to order the book online, one more form for the
CD, which we can stick right next to the link for the book, won't be
that much more trouble.  It would also allow people to get an
"official" CD by itself if they so desire.

d)  Thinking like a marketer for a second (ugh) who will be buying this
book?  OK, us, but we have all probably downloaded Axiom a gazillion
times anyway and are willing to compile our own cvs code.  Small
market, no CD demand.  General public?  Relatively unlikely.  Academics
doing research will have access to fast internet, so they aren't likely
to need a CD.  The one potential significant market I see (for some
definition of significant) is going to be the previously mentioned use
of the Axiom books as a course tool.  (Particularly the tutorial if the
split is made.)  For such a case, presumable the school would make an
order and some up front cash would be available to do the printing. 
Granted it might take several schools given the individual classes
probably won't be that big, but there they have a captive audience to
whom the content is relevant, and a CD is useful because the professor
can then say "this course is based off the version of the program on
the included CDROM."

Anyway - the idea of a CD is neat, but unless we expect to be stocked
in Barnes and Noble on the shelves I don't think we need to worry about
it up front.  An "official" cd is a good idea (I think the FSF sells
such CDs, actually) but I think at least initially we don't need to
have it included in the book.

Just my two (or three or four ;-) cents.

\start
Date: Tue, 7 Dec 2004 09:16:47 +1000
From: Mike Thomas
To: Bill Page
Subject: RE: Metadata for the uploaded Windows source/binary package.

Hi Bill.

| Ok, having installed the updated runtime modules, the Axiom
| build from your original Windows sources is now will on it's
| way to completion in the middle of compiling the algebra.
| Thank you!

That's certainly a relief.

| When this completes, I will start working with the
| axiom--windows-1 arch sources. My first attempt to build
| from these failed due to a compile error in bsdsignal.c.

I don't get a problem there and include my build log up to that point  in
case it gives you some ideas.

My AXIOM variable is:

  AXIOM=/c/arch/axiom--windows--1--patch-1/mnt/windows

Expect at least one failure in GCL due to a Makefile problem:

======================================================================

$ cat zips/gcl-2.6.5.unixport.makefile_1.patch
*** lsp/gcl-2.6.5/unixport/makefile     Mon Dec  6 17:39:31 2004
--- lsp/gcl-2.6.5/unixport/makefile.orig        Wed Jul 14 00:32:10 2004
***************
*** 28,34 ****
        rm -rf gmp
        mkdir gmp
        a="$^" ; \
!       for i in $$a ; do \
                cp $$i gmp/$$(echo $$i | sed -e 's,\.\./,,1' -e 's,/,_,g') ;
\
        done
        touch $@
--- 28,34 ----
        rm -rf gmp
        mkdir gmp
        a="$^" ; \
!       for i in $^ ; do \
                cp $$i gmp/$$(echo $$i | sed -e 's,\.\./,,1' -e 's,/,_,g') ;
\
        done
        touch $@

======================================================================

and later probably also because I haven't built 2.6.5 as patched in Axiom
with gcc 3.4.2 before.

I'm unsure about Tim's patch process at this stage but I'm sure you will be
able to incorporate the patch above somehow.

| I will check what is different between what is in your original
| sources versus what is in axiom--windows-1. Perhaps those
| patches got missed when Tim created the archive? I will
| let you know if/when I submit new patches.

No worries.  I am being badly frustrated by arch at present.  If your
download stops (for example, last night my modem connection timed out during
the download after four hours and over thirty megabytes) you have to start
all over again because it does everything in a huge monolithic file.

| PATH=.:/usr/local/bin:/mingw/bin:/bin:/c/texmf/miktex/bin:/c/WIN
| DOWS/system32:/c/WINDOWS:/c/WINDOWS/System32/Wbem:/c/Program Fil
| es/Plone/Python:/c/Program Files/Aldor/bin:/usr/bin:/c/ghc/ghc-6
| .2.1/bin:/c/r37/lisp/csl/winvc:.:/mingw/bin

GHC - yay.

======================================================================
13 making noweb
tar: contrib/kostas/Makefile: Cannot create symlink to `Makefile.make': No
such file or directory
tar: Error exit delayed from previous errors
patching file `modules.c'
patching file `Makefile'
make[1]: [install-shell] Error 1 (ignored)
make[1]: [install-code] Error 1 (ignored)
make[1]: [install-elisp] Error 1 (ignored)
0 SPAD=/c/arch/axiom--windows--1--patch-1/mnt/windows SYS=windows
SPD=/c/arch/axiom--windows--1--patch-1
LSP=/c/arch/axiom--windows--1--patch-1/lsp
GCLDIR=/c/arch/axiom--windows--1--patch-1/lsp/gcl-2.6.5
SRC=/c/arch/axiom--windows--1--patch-1/src
INT=/c/arch/axiom--windows--1--patch-1/int
OBJ=/c/arch/axiom--windows--1--patch-1/obj
MNT=/c/arch/axiom--windows--1--patch-1/mnt
ZIPS=/c/arch/axiom--windows--1--patch-1/zips
TMP=/c/arch/axiom--windows--1--patch-1/obj/tmp
SPADBIN=/c/arch/axiom--windows--1--patch-1/mnt/windows/bin
INC=/c/arch/axiom--windows--1--patch-1/src/include
CCLBASE=/c/arch/axiom--windows--1--patch-1/obj/windows/ccl/ccllisp
PART=cprogs SUBPART=everything NOISE=-o
/c/arch/axiom--windows--1--patch-1/obj/tmp/trace GCLVERSION=gcl-2.6.5
TANGLE=/c/arch/axiom--windows--1--patch-1/mnt/windows/bin/lib/notangle
10 copying /c/arch/axiom--windows--1--patch-1/src/scripts to
/c/arch/axiom--windows--1--patch-1/mnt/windows/bin
1 making a windows system, PART=cprogs SUBPART=everything
2 Environment SPAD=/c/arch/axiom--windows--1--patch-1/mnt/windows
SYS=windows SPD=/c/arch/axiom--windows--1--patch-1
LSP=/c/arch/axiom--windows--1--patch-1/lsp
GCLDIR=/c/arch/axiom--windows--1--patch-1/lsp/gcl-2.6.5
SRC=/c/arch/axiom--windows--1--patch-1/src
INT=/c/arch/axiom--windows--1--patch-1/int
OBJ=/c/arch/axiom--windows--1--patch-1/obj
MNT=/c/arch/axiom--windows--1--patch-1/mnt
ZIPS=/c/arch/axiom--windows--1--patch-1/zips
TMP=/c/arch/axiom--windows--1--patch-1/obj/tmp
SPADBIN=/c/arch/axiom--windows--1--patch-1/mnt/windows/bin
INC=/c/arch/axiom--windows--1--patch-1/src/include
CCLBASE=/c/arch/axiom--windows--1--patch-1/obj/windows/ccl/ccllisp
PART=cprogs SUBPART=everything NOISE=-o
/c/arch/axiom--windows--1--patch-1/obj/tmp/trace GCLVERSION=gcl-2.6.5
TANGLE=/c/arch/axiom--windows--1--patch-1/mnt/windows/bin/lib/notangle
make[1]: Entering directory `/c/arch/axiom--windows--1--patch-1'
11 checking directory structure
12 Environment: PLF=MSYSplatform CCF=-O2 -Wall -D_GNU_SOURCE -DMSYSplatform
LDF=-L/usr/X11R6/lib CC=gcc AWK=awk RANLIB=ranlib TOUCH=touch TAR=tar
AXIOMXLROOT=/c/arch/axiom--windows--1--patch-1/mnt/windows/compiler O=o
BYE=bye LISP=lsp
LISPCFG=--enable-debug --enable-vssize=65536*2 --enable-maxpage=128*1024
DAASE=/c/arch/axiom--windows--1--patch-1/src/share XLIB=/usr/X11R6/lib
18 making /c/arch/axiom--windows--1--patch-1/src
make[2]: Entering directory `/c/arch/axiom--windows--1--patch-1/src'
1 making /c/arch/axiom--windows--1--patch-1/src/scripts
make[3]: Entering directory `/c/arch/axiom--windows--1--patch-1/src/scripts'
1 making /c/arch/axiom--windows--1--patch-1/src/scripts
make[3]: Leaving directory `/c/arch/axiom--windows--1--patch-1/src/scripts'
17 making /c/arch/axiom--windows--1--patch-1/src/lib
make[3]: Entering directory `/c/arch/axiom--windows--1--patch-1/src/lib'
1 making /c/arch/axiom--windows--1--patch-1/int/lib/bsdsignal.c from
/c/arch/axiom--windows--1--patch-1/src/lib/bsdsignal.c.pamphlet
2 making /c/arch/axiom--windows--1--patch-1/obj/windows/lib/bsdsignal.o from
/c/arch/axiom--windows--1--patch-1/int/lib/bsdsignal.c
9 making /c/arch/axiom--windows--1--patch-1/int/lib/cursor.c from
/c/arch/axiom--windows--1--patch-1/src/lib/cursor.c.pamphlet
.....

\start
Date: Mon, 6 Dec 2004 18:58:51 -0500 
From: Bill Page
To: Mike Thomas
Subject: RE: [Gcl-devel] RE: Metadata for the uploaded Windows source/binary package.

Mike,

On December 6, 2004 6:17 PM you wrote:

>| When this completes, I will start working with the
>| axiom--windows-1 arch sources. My first attempt to build
>| from these failed due to a compile error in bsdsignal.c.
>
>I don't get a problem there and include my build log up to that
>point in case it gives you some ideas.
>
>My AXIOM variable is:
>
>  AXIOM=/c/arch/axiom--windows--1--patch-1/mnt/windows
>

You are right, it was my error.

>Expect at least one failure in GCL due to a Makefile problem:

Ok.

>| I will check what is different between what is in your
>| original sources versus what is in axiom--windows-1. Perhaps
>| those patches got missed when Tim created the archive? I will
>| let you know if/when I submit new patches.
>
> No worries.  I am being badly frustrated by arch at present.
> If your download stops (for example, last night my modem connection
> timed out during the download after four hours and over thirty
> megabytes) you have to start all over again because it does
> everything in a huge monolithic file.

4 hours and 30 Mb over a modem connection!? You must be desparate
for privacy... :) Even I, who live on a farm out in the country
too far away from the usual high speed internet, couldn't live
without my sat downlink... :))

> GHC - yay.

I wish I had more time to play.

----------

My axiom build direct from you uploaded sources just finished
with the following messages:

...

   Loading ZDSOLVE.NRLIB/code for package ZeroDimensionalSolvePackage 
   Loading ZLINDEP.NRLIB/code for package IntegerLinearDependence 
   Loading ZMOD.NRLIB/code for domain IntegerMod 
The syntax of the command is incorrect.
The syntax of the command is incorrect.

"building browse.daase" 
"building category.daase" 
"building interp.daase"  
   >> System error:
   Cannot coerce NIL to a PATHNAME.

protected-symbol-warn called with (NIL)
(1) -> cp: cannot stat `c:/cvs/head/axiom/int/algebra/*.daase': No such file
or directory
make[3]: *** [c:/cvs/head/axiom/int/algebra/dbcomplete] Error 1
make[3]: Leaving directory `/c/cvs/head/axiom/src/algebra'
make[2]: *** [algebradir] Error 2
make[2]: Leaving directory `/c/cvs/head/axiom/src'
make[1]: *** [srcdir] Error 2
make[1]: Leaving directory `/c/cvs/head/axiom'
make: *** [all] Error 2

-------

I recall that you previously had some problems building the
database but I thought that had been corrected. Am I missing
something or do I still have to copy the database files
from somewhere else?

\start
Date: Tue, 7 Dec 2004 10:45:58 +1000
From: Mike Thomas
To: Bill Page
Subject: RE: [Gcl-devel] RE: Metadata for the uploaded Windows source/binary package.

Hi Bill.

| 4 hours and 30 Mb over a modem connection!? You must be desparate
| for privacy... :) Even I, who live on a farm out in the country
| too far away from the usual high speed internet, couldn't live
| without my sat downlink... :))

Just cost and hassle.


|    Loading ZDSOLVE.NRLIB/code for package ZeroDimensionalSolvePackage
|    Loading ZLINDEP.NRLIB/code for package IntegerLinearDependence
|    Loading ZMOD.NRLIB/code for domain IntegerMod
| The syntax of the command is incorrect.
| The syntax of the command is incorrect.
|
| "building browse.daase"
| "building category.daase"
| "building interp.daase"
|    >> System error:
|    Cannot coerce NIL to a PATHNAME.
|
| protected-symbol-warn called with (NIL)
| (1) -> cp: cannot stat `c:/cvs/head/axiom/int/algebra/*.daase':
| No such file
| or directory
| make[3]: *** [c:/cvs/head/axiom/int/algebra/dbcomplete] Error 1
| make[3]: Leaving directory `/c/cvs/head/axiom/src/algebra'
| make[2]: *** [algebradir] Error 2
| make[2]: Leaving directory `/c/cvs/head/axiom/src'
| make[1]: *** [srcdir] Error 2
| make[1]: Leaving directory `/c/cvs/head/axiom'
| make: *** [all] Error 2
|
| -------
|
| I recall that you previously had some problems building the
| database but I thought that had been corrected. Am I missing
| something or do I still have to copy the database files
| from somewhere else?

Yes, this is the part where I copy the files by hand and restart the build
with "make".  That bug is, I suppose, the next on the list.

\start
Date: Tue, 7 Dec 2004 10:45:59 +1000
From: Mike Thomas
To: Bill Page, Camm Maguire
Subject: RE: [Gcl-devel] RE: Metadata for the uploaded Windows source/binary package.

Hi Bill.

| Mike,
|
| On December 6, 2004 6:17 PM you wrote:
|
| > Expect at least one failure in GCL due to a Makefile problem:
|
| Yes it did fail as you said... :(
|
| >
| > ======================================================================
| >
| > $ cat zips/gcl-2.6.5.unixport.makefile_1.patch
| > ...
|
| Is it your plan to include such patches in the Axiom build?
| If yes, then I guess I would add this patch to the
| lsp/Makefile.pamphlet section for gcl-2.6.5, right?

Yes, but you should probably regenerate with the correct diff arguments you
mentioned earlier.

| Is there any chance there will be a gcl-2.6.6 with these
| patches?

Camm and I haven't discussed such a plan, but we are accumulating
alterations which would be made in such an event.  I would like very much to
get Axiom built with 2.6.5 on Windows before such a release was put
together.

\start
Date: Mon, 6 Dec 2004 19:20:22 -0500 
From: Bill Page
To: Mike Thomas
Subject: RE: [Gcl-devel] RE: Metadata for the uploaded Windows source/binary package.

Mike,

On December 6, 2004 6:17 PM you wrote:

> Expect at least one failure in GCL due to a Makefile problem:

Yes it did fail as you said... :(

>
> ======================================================================
>
> $ cat zips/gcl-2.6.5.unixport.makefile_1.patch
> ...

Is it your plan to include such patches in the Axiom build?
If yes, then I guess I would add this patch to the
lsp/Makefile.pamphlet section for gcl-2.6.5, right?

Is there any chance there will be a gcl-2.6.6 with these
patches?

\start
Date: Mon, 6 Dec 2004 20:13:05 -0500 
From: Bill Page
To: Cliff Yapp
Subject: RE: Lulu publishing

On Monday, December 06, 2004 5:55 PM, C Y wrote:

> --- Bill Page wrote:
> 
> > I would like to here more from subscribers to axiom-developer
> > about our current plans to publish a series of Axiom books
> > on Lulu. Tim Daly has setup the arch repository book--main--1
> > with 3 volumes:
> > 
> >  bookvol1 -- tutorial
> >  bookvol2 -- programming
> >  bookvol3 -- reference
> > 
> > Our goal is to get the Volume 1 out to press in Lulu as
> > soon as possible. 95% of this volume is complete, but it
> > would be great to have more proof reading and corrections
> > by other people.
> 
> Dumb question from He Who Probably Missed the Email -

For Those-with-Quick-Deletekey-Finger there is always:

http://page.axiom-developer.org/zope/mathaction/AxiomBook

I am trying to keep this page reasonably up to date.

> is bookvol1 the current Axiom - the 30 year horizon book, or
> just some smaller part of it? (I assume from the page count it
> is just a part of it.)

Yes, it is a smaller part - just an "Introduction and getting
started" sort of book.

> If so, is there any chance that someday one large, massive book
> could be made available, for people like me who are likely to
> spend altogether too much time wondering "now where did volume
> two go?"

At Lulu there is apparently a current limit of 700 pages.

> 
> > We were also hoping to include a CDrom with volume 1, but
> > we received a quotation from Lulu which calls for a minimum
> > publishing run of 100 copies at an up front cost of about
> > $1,200 USD for a 250 page volume including a CDrom. So far the
> > limited donations to the Axiom Foundation would not let us
> > seriously consider this option.
> 
> Well, I guess the following might be my questions about something like
> this:
> 
> a)  What is the cost per book without CD?

Without the CD, the book is printed purely on demand. The
cost is just the price set by us minus the paper cost and
royalty percentage.

With the CD the price is also set by us but there is a
minimum print run of 100 copies which means that we have
to pay up front to produce those copies, but that the
cost would be fully recovered *if* we actually sold that
many (or more) copies.

> (As a probably irrelevant side note, what would hardback
> cost? :-)

I did not ask specifically for a quotation but from the
info on the Lulu web site I would say that the "upfront"
costs for a minimum print run are about the same. There
is also an additional charge for the cover stock.

> 
> b)  Given the program can be downloaded in any case (and
> most likely a more current version than that on a CD) how
> much will such a CD be used?

That is a good question. However I think there is still
some considerable resistance for people to download 50 Mb.
of software. Many would rather stick a CD into their
machines.

> 
> c)  If people do desire CDs, what would be the cost of
> having some printed, with nice art etc., and selling
> those off the website? Mightn't that be cheaper, and
> ultimately about as effective?  If they're already willing
> to order the book online, one more form for the CD, which
> we can stick right next to the link for the book, won't
> be that much more trouble.  It would also allow people
> to get an "official" CD by itself if they so desire.

The problem as I see it is the actual distribution. Are
you volunteering to fill and ship the orders that are
received?

> 
> d) Thinking like a marketer for a second (ugh) who will
> be buying this book?  OK, us, but we have all probably
> downloaded Axiom a gazillion times anyway and are willing
> to compile our own cvs code.  Small market, no CD demand.
> General public?  Relatively unlikely.  
> Academics doing research will have access to fast internet,
> so they aren't likely to need a CD.  The one potential
> significant market I see (for some definition of significant)
> is going to be the previously mentioned use of the Axiom
> books as a course tool.  (Particularly the tutorial if the
> split is made.)  For such a case, presumable the school
> would make an order and some up front cash would be available
> to do the printing. Granted it might take several schools
> given the individual classes probably won't be that big,
> but there they have a captive audience to whom the content
> is relevant, and a CD is useful because the professor
> can then say "this course is based off the version of the
> program on the included CDROM."
>

I think that you should try thinking instead like an
institutional (e.g. university, government etc.) purchasing
department or book store. It seems to me that they very
much prefer to purchase a "packaged product".
 
> Anyway - the idea of a CD is neat, but unless we expect
> to be stocked in Barnes and Noble on the shelves I don't
> think we need to worry about it up front.  An "official"
> cd is a good idea (I think the FSF sells such CDs, actually)
> but I think at least initially we don't need to have it
> included in the book.
>

Agreed.
 
> Just my two (or three or four ;-) cents.
> 

Thanks. Your comments are appreciated.

My point of view right now is that it would be very
convenient if the Axiom Foundation had a tangible "boxed
product" to sell. Many people are reluctant to just give
a donation - even to a obviously worthy cause - but they
are none the less willing to purchase something like a
book or a CD at a price that includes some margin that
supports the activities that produce those products. It
seems to me that Lulu is a convenient way to do this.

Some organizations even resort to selling things like
t-shirts and coffee mugs ... 

\start
Date: Mon, 6 Dec 2004 17:33:59 -0500 
From: Bill Page
To: Dan Martins
Subject: RE: Axiom for Windows and TeXmacs
Cc: Mike Thomas

Dan,

On December 6, 2004 5:16 PM you wrote:

>
> I've been very busy here trying to keep up with my emails.
> I will whip up an axiom script tomorrow.  Where would you
> like me to post the build when done?

Please pardon my ignorance of the self installer process, but
what do you mean by "the build"? Is it the final .exe (about
50 Mb big) or is it just the script (small)? If it is the big
file, I can ask Tim Daly to setup a user id for you on
axiom-developer where you can do the upload. Otherwise if
small then email attachment to me. With a little hand-holding
I can probably figure out the rest of what to do with NULLSOFT.

As suggested in other emails, I would like to include the new
tm_axiom code and the axiom book (pdf) in the Windows installation
package.

How can we resolve the problem of how to enable TeXmacs for
Windows to find the tm_axiom plug-in? In the past these plug-ins
where distributed with TeXmacs but in this case I am quite sure
that the Axiom developers would prefer to maintain the plug-in
themselves. Perhaps there needs to be a mix of some plug-ins
supplied by TeXmacs and others supplied by the target programs.
Ideally one should be able install TeXmacs and Axion and either
order and still have the interface operational.

\start
Date: Mon, 6 Dec 2004 18:01:56 -0500 
From: Bill Page
To: Mike Thomas
Subject: RE: Metadata for the uploaded Windows source/binary package.

On December 6, 2004 5:19 PM I wrote:

> ...
> When this completes, I will start working with the
> axiom--windows-1 arch sources. My first attempt to build
> from these failed due to a compile error in bsdsignal.c.
> I will check what is different between what is in your original
> sources versus what is in axiom--windows-1. Perhaps those
> patches got missed when Tim created the archive? I will
> let you know if/when I submit new patches.

Forget that. There is no difference. The problem was just
that I set the AXIOM variable incorrectly. On windows
it must be:

export AXIOM=/home/bpage/axiom-build/mnt/windows
export PATH=$AXIOM/bin:$PATH

I think we gotta fix up ./configure so it at least says
the right thing (if not acutally doing the right thing :)

\start
Date: Mon, 6 Dec 2004 15:49:49 -0500 
From: Bill Page
To: Mike Thomas
Subject: Axiom for Windows and TeXmacs
Cc: Dan Martins

Mike,

On Monday, December 06, 2004 2:39 AM you wrote:
> ... 
> I've already found one infelicity and need to find out your 
> standard process for generating those Makefile.pamphlet
> patches to the GCL source tree - specifically, what "diff"
> command line arguments do you use to make each patch?

I believe it is diff -Naur

> 
> Bill, I'm interested in seeing that extra information if
> you can still be bothered to chase your own GCL HEAD build.
> I think it would be good to try uncovering the problem so
> that you can gain some faith in the process.

I will get back to that later today. So far the only
difference I can see is that last week I had not updated
to the latest versions of MinGW runtime 3.35 and Win32 3.1.
I have now done this and I will let you know the results
later.

> 
> I spent odd moments over the weekend (text mode) and today
> (Windows TeXmacs - no cygwin involved at all) trying to
> crash Axiom and or TeXmacs. I'm very pleased to report that
> I failed completely.  My main attack has been to type in
> code snippets which solve specific problems from the Axiom
> book and various web sites.  Axiom is certainly a stunning
> program.

Wonderful. I was *very impressed* with the speed of Axiom
under Windows and I also have not found any peculiarities
in the output compared to Axiom on Linux. My first impression
is that Axiom on Windows is faster than Axiom under Linux on
the same hardware. But that seems improbable.  Perhaps it has
something to do with the changes in GCL head? Certainly the
combination of TeXmacs for Windows and Axiom is faster than
TeXmacs for Linux and Axiom for Linux but I think that has
to do with the threaded interface program.

> 
> I'm also hoping that someone on the Maxima development
> team will build a tm_maxima equivalent for Windows based
> on Bill's superb weekend efforts.

I would be very happy to work with someone who knows Maxima
to produce a new native Windows tm_maxima. The version of
TeXmacs for Windows is still very new and only a few plug-ins
have been tested with it - most require a rewrite specifically
for windows because Windows process handling is different from
Linux. I think that example of threaded process handling that
Mike Thomas sent me is superior to the older TeXmacs interface
code (on Windows at least and possibly also under linux).

If someone volunteers to help with testing, I could probably
produce a first attempt at a tm_maxima by merging the new
process code with the conversions embedded in the old tm_maxima
for Linux. This might take a 1/2 day work.

About Maxima and TeXmacs for Windows, see:

http://www.math.utexas.edu/pipermail/maxima/2004/006925.html
http://www.math.utexas.edu/pipermail/maxima/2003/005702.html

This tutorial should be updated for the new native Windows
version:

http://www.fmi.uni-passau.de/~seidl/texmacs/tmtour.html

I am also mildly motivated to add Maxima support to MathAction
but so far only Bob McElrath has shown any direct interest
and unfortunately he has had other priorities and not
enough time.

I am very impressed by Dan Martin's work with porting TeXmacs
to windows. From the description at

http://www.texmacs.org/tmweb/download/windows.en.html

I think it is currently rather undervalued by the original
TeXmacs developers perhaps because Windows is viewed as a
less desirable target platform by most open source
developers? But the reality is that the number of potential
windows users still far exceeds the number linux desktop
users. I think that it is interesting to see from the
MathAction web stats that in just 5 days, the new Windows
version of Axiom has already by downloaded more that 125
times!

> I just wish we had saveable worksheets for both CAS systems -
> TeXmacs seems not to be able to do that yet.

I am not sure I understand your comment. It is already
possible now to save a TeXmacs document that includes any
kind of session output (including Axiom) as if it was a
"worksheet". My only quibble with TeXmacs is that it currently
has no easy way to re-execute all of the session commands
embedded in a document with one click. One must visit each
command in the document and press Enter to cause it to be
re-executed.

Or do you mean simply that you cannot access Maxima from
TeXmacs for Windows? I think both the Cygwin and Linux
versions of TeXmacs can do this.

> 
> Attached is a picture of Windows Axiom in TeXmacs.
> 
> Bill, I can send you an up to date PDF copy of the Axiom
> book built from CVS if you would like to include it in
> your web zip file.
> 

That's a cool idea. I think we need to give some thought to
how to package Axiom for Windows. As C Y (subject: crazy
idea) has pointed out, Windows users tend to have greater
expectations when in comes to the completeness. C Y's
"crazy idea" was that maybe we should include TeXmacs for
Windows together with the Axiom for Windows - assuming
that TeXmacs would be the preferred interface. Even if
we don't do that, then at least I think the Windows package
should include the tm_axiom interface and as you suggest,
the Axiom book.

Dan Martin has offered to provide a auto-install script
for Axiom for Windows using the Nullsoft installer system.

Is your PDF version of the book built with working internal
links? The method that I used most recently (dvipdfm under
Debian) did not produce working links.

\start
Date: Mon, 6 Dec 2004 21:46:31 -0500
From: Tim Daly
To: Bill Page
Subject: Re: Axiom for Windows and TeXmacs
Cc: Mike Thomas

Mike, 

Go to axiom.axiom-developer.org and look at the FAQ.
I wrote the directions for patching down.

\start
Date: Mon, 6 Dec 2004 21:50:53 -0500
From: Tim Daly
To: Bill Page
Subject: Re: Axiom for Windows and TeXmacs
Cc: Bill Page, Mike Thomas, Dan Martens

>I think that it is interesting to see from the MathAction web stats
>that in just 5 days, the new Windows version of Axiom has already by
>downloaded more that 125 times!

who are these people?! :-). Frankly, i'm amazed.

\start
Date: Mon, 6 Dec 2004 22:20:40 -0500
From: Tim Daly
To: Bill Page
Subject: Re: Lulu publishing

perhaps we could include a coupon in the books for a CD
and then arrange with cheapCDs for reproduction and delivery.

\start
Date: Mon, 6 Dec 2004 22:26:19 -0500
From: Tim Daly
To: Bill Page
Subject: Re: [Gcl-devel] RE: Metadata for the uploaded Windows source/binary package.
Cc: Mike Thomas

Mike, 

Send me the patch and I'll look at merging it into main.
I plan to push main to savannah shortly. I'm still testing it.

\start
Date: Tue, 7 Dec 2004 12:17:04 +1000
From: Mike Thomas
To: Bill Page
Subject: RE: [Gcl-devel] Axiom for Windows and TeXmacs
Cc: Dan Martins

Hi Bill.

| > I just wish we had saveable worksheets for both CAS systems -
| > TeXmacs seems not to be able to do that yet.
|
| I am not sure I understand your comment. It is already
| possible now to save a TeXmacs document that includes any
| kind of session output (including Axiom) as if it was a
| "worksheet". My only quibble with TeXmacs is that it currently
| has no easy way to re-execute all of the session commands
| embedded in a document with one click. One must visit each
| command in the document and press Enter to cause it to be
| re-executed.

Yes, this last; although I hadn't realised it was even possible by the
method you mention (What do I click on to do so?).

A worksheet to me is a live document where the state of the (in this case
Axiom, but also any other) system is accurately saved and restored and
separately saveable in a word processing format native to the particular
system.  Note that I realise I'm asking for an ideal state of affairs (see
your/Cliff's comments about Windows users below) rather than negatively
criticising the enormous amount of hard work which has made the current
offering what it is today.

| > Bill, I can send you an up to date PDF copy of the Axiom
| > book built from CVS if you would like to include it in
| > your web zip file.
| >
|
| That's a cool idea. I think we need to give some thought to
| how to package Axiom for Windows. As C Y (subject: crazy
| idea) has pointed out, Windows users tend to have greater
| expectations when in comes to the completeness. C Y's
| "crazy idea" was that maybe we should include TeXmacs for
| Windows together with the Axiom for Windows - assuming
| that TeXmacs would be the preferred interface. Even if
| we don't do that, then at least I think the Windows package
| should include the tm_axiom interface and as you suggest,
| the Axiom book.
|
| links? The method that I used most recently (dvipdfm under
| Debian) did not produce working links.

Sadly no working links - dvips followed by Ghostscript.  I think the PS file
was amongst those I sent originally.

\start
Date: Mon, 6 Dec 2004 21:33:47 -0500 
From: Bill Page
To: Tim Daly
Subject: RE: Axiom for Windows and TeXmacs
Cc: Mike Thomas, Dan Martens

<grin>

Tim, I think you have to "get out more"... :) One sees
exactly the same thing with Maxima. There are apparently
many more Windows users than Linux users. And sales of Maple
and Mathematica are also greatly dominated by Windows.

I think your question though: "who are these people" is a
good one. I would really like to know too. Unfortunately
it seems that in spite of all the systems that we have in
place to facilitate two-way communications over the web and
via email, the ratio of people who visit (and download) to
those who stop and talk is remarkably small. I used to think
that the ratio was at least 100:1 but lately the evidence
that I have from the Axiom project (and several other similar
things in which I am involved) is that it must be more like
1000:1.

Therefore, it seems to me that in order to find more people
interested in actively participating in Axiom development
we really have no choice but to push ahead with increasing
our exposure. Frankly a few hundred people subscribed to
axiom-developer is just not enough.

BTW, I would not be too surprized if the number of downloads
of the Windows version continued at this rate for a while
longer.

> -----Original Message-----
> 
> >I think that it is interesting to see from the MathAction
> >web stats that in just 5 days, the new Windows version of
> >Axiom has already by downloaded more that 125 times!
> 
> who are these people?! :-). Frankly, i'm amazed.
> 

\start
Date: Mon, 6 Dec 2004 22:42:18 -0500
From: Tim Daly
To: Mike Thomas
Subject: Re: [Gcl-devel] RE: Metadata for the uploaded Windows source/binary package.
Cc: Bill Page

Mike,

|    Loading ZLINDEP.NRLIB/code for package IntegerLinearDependence
|    Loading ZMOD.NRLIB/code for domain IntegerMod
| The syntax of the command is incorrect.
| The syntax of the command is incorrect.
|
| "building browse.daase"
| "building category.daase"
| "building interp.daase"
|    >> System error:
|    Cannot coerce NIL to a PATHNAME.

odd. perhaps a command i use is missing?
can you modify the makefile and remove the '@' in front of the 
commands so we can see what the failing commands are?

\start
Date: Mon, 6 Dec 2004 22:56:09 -0500
From: Tim Daly
To: Bill Page
Subject: Re: [Gcl-devel] RE: Metadata for the uploaded Windows source/binary package.
Cc: Mike Thomas

>> Expect at least one failure in GCL due to a Makefile problem:
>
>Yes it did fail as you said... :(
>
>>
>> ======================================================================
>>
>> $ cat zips/gcl-2.6.5.unixport.makefile_1.patch
>> ...
>
>Is it your plan to include such patches in the Axiom build?
>If yes, then I guess I would add this patch to the
>lsp/Makefile.pamphlet section for gcl-2.6.5, right?
>
>Is there any chance there will be a gcl-2.6.6 with these
>patches?

I have a pre-patching scheme that I use between releases.
Some of the patches get merged and some I just carry over
because they are axiom specific. 

\start
Date: Tue, 7 Dec 2004 13:29:55 +1000
From: Mike Thomas
To: Bill Page
Subject: RE: [Gcl-devel] RE: Metadata for the uploaded Windows source/binary package.

This is a multi-part message in MIME format.

------=_NextPart_000_01AB_01C4DC60.D6F925C0
	charset="iso-8859-1"

| Send me the patch and I'll look at merging it into main.
| I plan to push main to savannah shortly. I'm still testing it.

Attached and below - probably be incorporated into the other patch to the
same file.

$ diff -Naur lsp/gcl-2.6.5/unixport/makefile{,.orig}
--- lsp/gcl-2.6.5/unixport/makefile     Tue Dec  7 13:26:18 2004
+++ lsp/gcl-2.6.5/unixport/makefile.orig        Wed Jul 14 00:32:10 2004
@@ -28,7 +28,7 @@
        rm -rf gmp
        mkdir gmp
        a="$^" ; \
-       for i in $$a ; do \
+       for i in $^ ; do \
                cp $$i gmp/$$(echo $$i | sed -e 's,\.\./,,1' -e 's,/,_,g') ;
\
        done
        touch $@

------=_NextPart_000_01AB_01C4DC60.D6F925C0
	name="gcl-2.6.5.unixport.makefile_1.patch"

*** lsp/gcl-2.6.5/unixport/makefile	Tue Dec  7 13:26:18 2004
--- lsp/gcl-2.6.5/unixport/makefile.orig	Wed Jul 14 00:32:10 2004
***************
*** 28,34 ****
  	rm -rf gmp
  	mkdir gmp
  	a="$^" ; \
! 	for i in $$a ; do \
  		cp $$i gmp/$$(echo $$i | sed -e 's,\.\./,,1' -e 's,/,_,g') ; \
  	done
  	touch $@
--- 28,34 ----
  	rm -rf gmp
  	mkdir gmp
  	a="$^" ; \
! 	for i in $^ ; do \
  		cp $$i gmp/$$(echo $$i | sed -e 's,\.\./,,1' -e 's,/,_,g') ; \
  	done
  	touch $@

\start
Date: Mon, 6 Dec 2004 23:16:18 -0500 
From: Bill Page
To: Mike Thomas, Tim Daly
Subject: RE: [Gcl-devel] RE: Metadata for the uploaded W indows source/binary package.

Mike,

I think your patch below was generated with the opposite
convention to what Tim uses. You should write:

$ diff -Naur lsp/gcl-2.6.5/unixport/Makefile.orig Makefile

Cheers,
Bill Page.

-----Original Message-----

| Send me the patch and I'll look at merging it into main.
| I plan to push main to savannah shortly. I'm still testing it.

Attached and below - probably be incorporated into the other patch to the
same file.

$ diff -Naur lsp/gcl-2.6.5/unixport/makefile{,.orig}
--- lsp/gcl-2.6.5/unixport/makefile     Tue Dec  7 13:26:18 2004
+++ lsp/gcl-2.6.5/unixport/makefile.orig        Wed Jul 14 00:32:10 2004
@@ -28,7 +28,7 @@
        rm -rf gmp
        mkdir gmp
        a="$^" ; \
-       for i in $$a ; do \
+       for i in $^ ; do \
                cp $$i gmp/$$(echo $$i | sed -e 's,\.\./,,1' -e 's,/,_,g') ;
\
        done
        touch $@

\start
Date: Tue, 7 Dec 2004 00:07:18 -0500
From: Tim Daly
To: Bill Page
Subject: Re: [Gcl-devel] RE: Metadata for the uploaded Windows source/binary package.
Cc: Mike Thomas

Bill, Mike,

I can handle the reverse patch problem easily enough as I don't
actually use the patches as sent. I read them for content and
it was already clear to me that the patch was reversed. no problem
there.

however, i'm not a sed user to any degree. 
what does the sed line do?

   cp $$i gmp/$$(echo $$i | sed -e 's,\.\./,,1' -e 's,/,_,g') ;

\start
Date: Mon, 6 Dec 2004 23:32:58 -0500
From: Dan Martens
To: Bill Page
Subject: Axiom Windows Installer Build
Cc: Mike Thomas

Here you go :)

The installer script will be in the Program Files\axiom directory when you 
choose to install source.

Probably best to copy it to the axiom server before distributing it.

ftp://ftp.texmacs.org/pub/TeXmacs/windows/deps/axiom-0.1.exe 

\start
Date: Tue, 7 Dec 2004 14:38:00 +1000
From: Mike Thomas
To: Bill Page
Subject: RE: [Gcl-devel] RE: Metadata for the uploaded Windows source/binary package.

Thanks Bill.

My mistake.

I'm working now on another patch to deal with a call to GCL malloc from the
MinGW32 runtime before main() is called and there may yet be another one as
well dealing with a memory mapping bug.  Time (hopefully today) will tell.

When I send Tim the new patch(es) I'll include whatever else is needed to
execute and document those new patches in the Makefile as well.  Hopefully
at that point GCL 2.6.5 itself will be a clean build under gcc 3.4.2 and the
latest runtime and you can proceed with what is ultimately the more
important work for you - adding features to Windows Axiom.

| -----Original Message-----

| Mike,
|
| I think your patch below was generated with the opposite
| convention to what Tim uses. You should write:
|
| $ diff -Naur lsp/gcl-2.6.5/unixport/Makefile.orig Makefile
|
| Cheers,
| Bill Page.
|
| -----Original Message-----
|
| | Send me the patch and I'll look at merging it into main.
| | I plan to push main to savannah shortly. I'm still testing it.
|
| Attached and below - probably be incorporated into the other patch to the
| same file.
|
| $ diff -Naur lsp/gcl-2.6.5/unixport/makefile{,.orig}
| --- lsp/gcl-2.6.5/unixport/makefile     Tue Dec  7 13:26:18 2004
| +++ lsp/gcl-2.6.5/unixport/makefile.orig        Wed Jul 14 00:32:10 2004
| @@ -28,7 +28,7 @@
|         rm -rf gmp
|         mkdir gmp
|         a="$^" ; \
| -       for i in $$a ; do \
| +       for i in $^ ; do \
|                 cp $$i gmp/$$(echo $$i | sed -e 's,\.\./,,1' -e
| 's,/,_,g') ;
| \
|         done
|         touch $@
|

\start
Date: Tue, 7 Dec 2004 14:44:47 +1000
From: Mike Thomas
To: Bill Page
Subject: RE: [Gcl-devel] RE: Metadata for the uploaded Windows source/binary package.

| however, i'm not a sed user to any degree.
| what does the sed line do?
|
|    cp $$i gmp/$$(echo $$i | sed -e 's,\.\./,,1' -e 's,/,_,g') ;

No idea but I think at that stage the makefile is building a list of object
files to send to the linker.  The change is to do with a shell variable
substitution bug under MSYS rather than the sed script itself.  I am
preparing a documentation patch for you as well and will send when ready if
you can hold off for a while.

\start
Date: Tue, 7 Dec 2004 15:26:29 +1000
From: Mike Thomas
To: Bill Page
Subject: RE: [Gcl-devel] RE: Metadata for the uploaded Windows source/binary package.

OK.

I'm now up to three patches for Windows!

| I am
| preparing a documentation patch for you as well and will send
| when ready if
| you can hold off for a while.

I'm not sure what your CVS updateing time constraints are Tim, but I'm going
to need at least a few more hours as I will need to check out a fresh source
tree to diff - rather frustratingly, tla crashes when I try to get the diffs
to the repository:

===================================================================
C:\arch\axiom--windows--1--patch-1>tla changes
* looking for arch@axiom-developer.org--axiom/axiom--windows--1--patch-1 to
compare with
Missing inode signature. Cannot verify reference tree integrity: you should
remove and recreate this reference tree.
    tree:
C:/arch/axiom--windows--1--patch-1/{arch}/++pristine-trees/unlocked/axiom/ax
iom--windows/axiom--windows--1/arc
h@axiom-developer.org--axiom/axiom--windows--1--patch-1
    archive: arch@axiom-developer.org--axiom
    revision: axiom--windows--1--patch-1
* comparing to arch@axiom-developer.org--axiom/axiom--windows--1--patch-1
Error calling `vu_lstat' for "./make.log" (The handle is invalid.)
PANIC: I/O error

===================================================================

Alternatively I'll just send the relevant files by email once I've tested a
few things - perhaps another hour all going well.

\start
Date: Tue, 7 Dec 2004 03:07:21 -0500 
From: Bill Page
To: Mike Thomas, Tim Daly
Subject: RE: State of play with GCL 2.6.5 on Windows

Mike,

On Tuesday, December 07, 2004 3:01 AM you wrote:
> 
> Item 3, the 2.6.5 AHYP crash cause was in the cfun.c.pamphlet 
> DIRECTORYP, this had a bug on Windows now hopefully fixed.

but you attached cfuns.lisp.pamphlet. Where there any changes
in cfuns-c.c.pamphlet?

\start
Date: Tue, 7 Dec 2004 02:58:09 -0500 
From: Bill Page
To: Tim Daly, Mike Thomas
Subject: system::getenv does not return MSYS environment variables

Tim, Mike,

Doubly odd. When I went back to check my build.log for the last
compile I just noticed that

| The syntax of the command is incorrect.
| The syntax of the command is incorrect.

does not appear in the log that I captured with

  make | tee build.log

But if I repeat the make, then sure enough they do show up again,
presumably from stderr.

Comparing the contents of the log to the stanza
  ${INT}/algebra/dbcomplete:
in src/algebra/Makefile and noting the location of the marker
  4301 rebuilding databases ...
it seems to me that these syntax error messages must originate
during the call to the make-databases lisp function since
the Loading messages are generated by AXIOMsys and the message
"building browse.daase" is generated in make-databases.

In any case make-databases seems to be doing something that
Windows doesn't like. When I look at src/interp/daase.lisp.pamphlet
I see a lot of file manipulation like probe-file, namestring,
rename-file, delete-file, etc. But running as much of AXIOMsys
that got built (it kicks me into BOOT) I can tell that in spite
of the fact that probe-file returns a string starting with "c:/"
(a Windows convention that refers to a drive c), the rename-
file functions etc. do seem to work. However I note that I can
cause namestring to return the message "Cannot coerce NIL to
a PATHNAME" if I do something like (namestring (probe-file "xxx"))
when "xxx" doesn't exist.

Apparently at the point that that "Cannot coerce NIL ..." occurs
make-databases has successfully built the *.build files (I checked
that they do actually exist in int/algebra) and it is calling
(create-initializers) before doing the file renaming etc.

I don't clearly understand what create-initializers does, but
one thing seemed strange. The call to

  (|getEnv| "AXIOM")

returns NIL even though

  echo $AXIOM

shows that the environment variable is set. But stranger still is

  (|getEnv| "PATH")

does return the PATH in windows format (with ; ) while the

  echo $PATH

shows it correctly in unix format (with : ).

In cfuns.lisp I see

(deffun |getEnv| (varname) (system::getenv varname))

and it seems that (system::getenv "AXIOM") also returns
NIL. I think that is wrong!

One of the external lib/cfunc.c routines is copyEnvValue which
calls the stdlib routine getenv(). A simple test program shows
that this gets both AXIOM and PATH variables properly. But it is
apparently no longer used in Axiom. I wonder what GCL is calling
of system::getenv?

Anyway, that's about as far as I can get understanding this
error right now.

> -----Original Message-----
> Mike,
> 
> |    Loading ZLINDEP.NRLIB/code for package IntegerLinearDependence
> |    Loading ZMOD.NRLIB/code for domain IntegerMod
> | The syntax of the command is incorrect.
> | The syntax of the command is incorrect.
> |
> | "building browse.daase"
> | "building category.daase"
> | "building interp.daase"
> |    >> System error:
> |    Cannot coerce NIL to a PATHNAME.
> 
> odd. perhaps a command i use is missing?
> can you modify the makefile and remove the '@' in front of the 
> commands so we can see what the failing commands are?
> 

\start
Date: Tue, 7 Dec 2004 10:15:40 +0100
From: Martin Rubey
To: Bill Page
Subject: RE: Lulu publishing

 > We were also hoping to include a CDrom with volume 1, but we received a
 > quotation from Lulu which calls for a minimum publishing run of 100 copies
 > at an up front cost of about $1,200 USD for a 250 page volume including a
 > CDrom. So far the limited donations to the Axiom Foundation would not let us
 > seriously consider this option.

I don't think that this is worth it. If possible, I'd follow the suggestions
already given: 

* include a possibility of ordering a CD in the book and, more importantly,

* make it very easy to order a CD from the website.

I think that the CD will mostly serve people with a bad internet connection,
and I'm afraid that this is the case in some countries which may become very
important for Axiom: Russia, for example, many countries in Africa and probably
in South-America. Therefore I'd also suggest that both book and CD should cost
almost nothing. 

I believe that it would be quite possible to tell the people: pay as much as
you want to, but at least bla$, where bla$ is the actual cost.

I know of a community in France you can visit (nearly) any time you want -- a
very nice place. You can choose the amount you pay within a given range, which
depends on the country you come from. I.e., Austrians usually pay quite a lot
more than people from Hungary, but it might be that a rich Hungarian chooses to
pay more or as much as some poor Austrian. Of course, it is not possible to
control this, and in fact, there is no control. It just works. Seemingly: the
community exists already quite a long time, I think they started to invite
people in the early seventies.

The point I'm trying to make: maybe it would be wiser *not* to try to make any
money with the book, but rather try to make it as accessible as possible. I
suspect that this is the reason for the predominance of MS Windows, in fact.

I don't know if this is feasible. Is it possible to collect orders on the Axiom
website and then forward them to Lulu?

\start
Date: Tue, 7 Dec 2004 04:06:05 -0500 
From: Bill Page
To: Tim Daly, Mike Thomas
Subject: RE: system::getenv does not return MSYS environment variables

On December 7, 2004 2:58 AM I wrote:

>...
> it seems that (system::getenv "AXIOM") also returns
> NIL. I think that is wrong!

Ok, I said to myself: Why don't I give it a Windows AXIOM
environment variable using

  Start/Control Panel/System/Advanced/Environment Variable

My first attempt was to add

  AXIOM  c:\cvs\head\axiom\mnt\windows

Sure enough when I got into AXIOMsys (BOOT>) the result
I got from

  (|getEnv| "AXIOM")

was  c:\\cvs\\head\\axiom\\mnt\\windows

Well, that was almost ok, so I decided to change the
Windows environment variable to

  AXIOM  c:/cvs/head/axiom/mnt/windows

even though that is technically not a path in Windows. Note:
By experiment last week I discovered that this is actually
the format of the environment variable that works with Mike
Thomas's current binary version of AXIOM to get it to run
on windows if it is not located where it was originally built.

This now looks good in (|getEnv| "AXIOM") so I decided to
try make again. I was confused that in spite of setting the
AXIOM variable in Windows, I still had to set it again in
MSYS. The environment variables are copied but but the format
was wrong for the Axiom make. It expects the "MSYS" format

  export AXIOM=/c/cvs/head/axiom/mnt/windows

and the PATH set as usual. In spite of setting AXIOM in
MSYS like this, (|getEnv| "AXIOM") still returns the value
as set in Windows not MSYS!

Now when I do make instead of "syntax error" in the log I see:

'rm' is not recognized as an internal or external command,
operable program or batch file.
'sort' is not recognized as an internal or external command,
operable program or batch file.

----
Better.

Could this be a problem with GCL (or somewhere in Axiom)
not using the .exe extension needed by windows? Both rm.exe
and sort.exe do exist in /bin

A quick grep shows that sort and rm occur in br-data.boot and
br-saturn.boot

Finally, I decide to set the Windows AXIOM environment variable
to

  AXIOM  /c/cvs/head/axiom/mnt/windows

(and restart MSYS)

Now the the make ends in

   Loading c:/cvs/head/axiom/mnt/windows/autoload/br-saturn.
 
   >> System error:
   Cannot rename the file #P"libdb.text" to #P"olibdb.text".

protected-symbol-warn called with (NIL)

-------

libdb.text also occurs in br-saturn.boot

I think that is an improvement. At this point I think a
'make clean' and start again is in order since I now seem
to at least have the AXIOM environment variable properly
set.

I think the in GCL on windows this weirdness concerning
Windows environment variables versus MSYS environment
variables (needed during the build at least) may have to
be more carefully thought out.

\start
Date: Tue, 7 Dec 2004 04:53:37 -0500 
From: Bill Page
To: Martin Rubey
Subject: RE: Lulu publishing

Martin,

Thanks for your comments. Although I (mostly) express the
opposite view below, I think it is important that we
consider this from all sides.

Overall I am inclined to think that producing CD's either
separately or as part of a book package is probably not
currently worth the effort.

On December 7, 2004 4:16 AM Martin Rubey wrote:
> 
>> We were also hoping to include a CDrom with volume 1, but 
>> we received a quotation from Lulu which calls for a minimum
>> publishing run of 100 copies ...
> 
> I don't think that this is worth it. If possible, I'd follow 
> the suggestions already given: 
> 
> * include a possibility of ordering a CD in the book and, 
> more importantly,
> 
> * make it very easy to order a CD from the website.
>

Who will actually ship these orders? Who will make the copies
of the CD? If we get 10 orders, ok no problem. But if there
were 100's or more, then that requires someone who commits to
doing this task in a reliable and timely manner.
 
> I think that the CD will mostly serve people with a bad 
> internet connection, and I'm afraid that this is the case
> in some countries which may become very important for Axiom:
> Russia, for example, many countries in Africa and probably
> in South-America. Therefore I'd also suggest that both book 
> and CD should cost almost nothing. 

In my experience that is not true. Most of the people I have
met in the countries you mention are quite used to downloading
software or obtaining copies from other sources. They are quite
used to not having easy access to boxed sofware from foriegn
sources. There are many complications like simply trying to
get something through customs brokers etc. But for (most) of
them, the Internet download is the fast track.

In my opinion CD's best serve those people who required some
tangible piece of hardware or physical book when then place
an order through a conventional institution (like a book
store). It is possible these days to download Maple and
Mathematica over the web and then pay via credit card to
receive a license that allows one to use the program after
the trial period expires. But as far as I know most people
and universitys still prefer to order and receive a boxed
set of CD's complete with a user's guide and other
documentation.
 
> I believe that it would be quite possible to tell the
> people: pay as much as you want to, but at least bla$,
> where bla$ is the actual cost.
>

Yes, but it does complicate the institutional bookkeeping. :)
 
> 
> The point I'm trying to make: maybe it would be wiser *not* 
> to try to make any money with the book, but rather try to
> make it as accessible as possible. I suspect that this is
> the reason for the predominance of MS Windows, in fact.

Could you explain that? MS Windows is almost always sold as
a boxed set and Microsoft certainly intends that it make money
through sales.

I don't think that setting a reasonable price on something
necessarily makes it less accessible. Afterall, everything
that is available at some set price in a boxed set of CD's
or a hardcopy book is also and always (by nature of the
BSD license) also available for free online. Really what
people are paying for is the package (and the privilege of
directly supporting the development through sales). This
is (more or less) the strategy that has been pursued by most
linux vendors such as RedHat and Suse.

> 
> I don't know if this is feasible. Is it possible to
> collect orders on the Axiom website and then forward
> them to Lulu?
> 

Yes, that is possible. In fact it is encouraged by Lulu
since they provide several ways to interface to their
ordering system.

But if you are thinking about ordering CD's from Lulu
separately from a book, I am not so sure that Lulu provides
such a service. And if they did, I expect that there would
still be a requirement for a minimum production run. Perhaps
there is another company that is prepared to ship CD's in
smaller runs? But the cost, I expect is almost all in the
production, handling and shiping of the CD's. The only way
to do this at a lower cost is at some minimum level of mass
production.

\start
Date: Tue, 7 Dec 2004 05:30:15 -0500 
From: Bill Page
To: Tim Daly
Subject: RE: Axiom for Windows and TeXmacs
Cc: Dan Martens

Tim.

On Monday, December 06, 2004 9:51 PM you asked:

>> I think that it is interesting to see from the MathAction web
>> stats that in just 5 days, the new Windows version of Axiom
>> has already by downloaded more that 125 times!
>
> who are these people?! :-). Frankly, i'm amazed.

Athough it does not directly answer your question, I think
the graph and the table here:

http://page.axiom-developer.org/usage/usage_200412.html#TOPCTRYS

which shows the breakdown of MathAction users by country is
quite interesting. For example it shows that the web site has
been accessed by people from at least 37 different countries
from the period Dec 1 to Dec 7. Last month (Nov) is was only
19 countries but 46 countries in October.

Of those countries so far this month, the majority of hits
from recognizable ip addresses are from the US commericial
category. It is also the next highest in total number of
kilobytes downloaded except for Italy (which is double at 18%).
Surprizingly perhaps US Educational is still quite low,
accounting for only 2% of the bandwidth. But compared to
numbers in previous months, it is increasing.

Of course one should take these statistics with a "pound
of caution" since they do not clearly separate out accesses
by search engines and other agressive agents on the web.

\start
Date: Tue, 07 Dec 2004 22:02:44 +1000
From: Mike Thomas
To: Bill Page, Tim Daly, Camm Maguire
Subject: Last note for the evening on Axiom Windows development

Hi all.

One last thought for the evening...

There are a number of "system()" calls to Unix utilities for directory 
make/delete and file copy in "src/interp"  - this may explain 
directories not being made on Windows and *.daase files not being in place.

These functions should be replaced with C equivalents in 
cfun.c.pamphlet, not only for the lack of those utilities on Windows but 
also because the semantics of system() are different (no POSIX shell, 
file path expectations are different, no wildcard expansion by cmd.exe 
etc) so it is a comprehensively non-portable way to do things.

\start
Date: Tue, 7 Dec 2004 06:29:52 -0500 
From: Bill Page
To: Mike Thomas
Subject: RE: [Gcl-devel] Axiom for Windows and TeXmacs
Cc: Dan Martins

On Monday, December 06, 2004 9:17 PM Mike Thomas wrote:
> 
> | > I just wish we had saveable worksheets for both CAS
> | > systems - TeXmacs seems not to be able to do that yet.
> |
> | I am not sure I understand your comment. It is already
> | possible now to save a TeXmacs document that includes any
> | kind of session output (including Axiom) as if it was a
> | "worksheet". My only quibble with TeXmacs is that it currently
> | has no easy way to re-execute all of the session commands
> | embedded in a document with one click. One must visit each
> | command in the document and press Enter to cause it to be
> | re-executed.
> 
> Yes, this last; although I hadn't realised it was even possible
> by the method you mention (What do I click on to do so?).

Just open an existing worksheet containing some session
(such as Axiom) and then click at the end of the line
containing the first Axiom command and press Enter. The
old output will be replaced with the new output. TeXmacs
(usually) places the cursor at the end of the next line.
So all you have to do is press Enter again. Except at
the end of a sequence of commands broken by some non-
executable text. In that case it opens a new prompt. To
skip to the next command you can press down-arrow.

> 
> A worksheet to me is a live document where the state of
> the (in this case Axiom, but also any other) system is
> accurately saved and restored and separately saveable in
> a word processing format native to the particular system.

Yes I agree completely. It should be essentially like
an OpenOffice calc spreadsheet. But most people settle
for something less. This brings back an arguement that
I had long ago with the Maple designers. I told them
that there user interface as "not really a worksheet"
and I compared it to visicalc (at least I think that as
the paradigm at the time). I explained that it should not
be possible for the contents of the worksheet to be
inconsistent with the state of the "calculation engine".
A little while later Maple came out with a new "feature"
which was symbolic formulas arranged in a tabular format
and they called that a spreadsheet interface. As far as
I know it is little used in Maple and from my point of
view it still completely misses the point.

Anyway everyone is used by now to having to re-execute
the entire document after inserting and editing formulas
within the a document in order to ensure the consistency
of the content of the document with the calculation being
performed in the order implied by the physical organization
of the document. Maple even has a single button now that
does this re-execution in one step. That is, I guess what
I would like to have in TeXmacs. Joris has told me that if
I knew enough about writing scheme code for TeXmacs that
this would be easy. :)

\start
Date: Tue, 7 Dec 2004 13:55:25 +0100
From: Martin Rubey
To: Bill Page
Subject: RE: Lulu publishing

Dear Bill,

 > Overall I am inclined to think that producing CD's either separately or as
 > part of a book package is probably not currently worth the effort.

well, I think we agree here.

 > > * include a possibility of ordering a CD in the book and, 
 > > more importantly,
 > > 
 > > * make it very easy to order a CD from the website.
 > >
 > 
 > Who will actually ship these orders? Who will make the copies of the CD? If
 > we get 10 orders, ok no problem. But if there were 100's or more, then that
 > requires someone who commits to doing this task in a reliable and timely
 > manner.

We agree here, too.

 > > I think that the CD will mostly serve people with a bad internet
 > > connection, and I'm afraid that this is the case in some countries which
 > > may become very important for Axiom: Russia, for example, many countries
 > > in Africa and probably in South-America. Therefore I'd also suggest that
 > > both book and CD should cost almost nothing.
 > 
 > In my experience that is not true. Most of the people I have met in the
 > countries you mention are quite used to downloading software or obtaining
 > copies from other sources. They are quite used to not having easy access to
 > boxed sofware from foriegn sources. There are many complications like simply
 > trying to get something through customs brokers etc. But for (most) of them,
 > the Internet download is the fast track.

OK. Convinced. So we agree here, too, now.

 > > I believe that it would be quite possible to tell the people: pay as much
 > > as you want to, but at least bla$, where bla$ is the actual cost.
 > 
 > Yes, but it does complicate the institutional bookkeeping. :)

Still another point where we agree. :-)

 > > The point I'm trying to make: maybe it would be wiser *not* to try to make
 > > any money with the book, but rather try to make it as accessible as
 > > possible. I suspect that this is the reason for the predominance of MS
 > > Windows, in fact.
 > 
 > Could you explain that? MS Windows is almost always sold as a boxed set and
 > Microsoft certainly intends that it make money through sales.

Well, in my experience, MS DOS and MS Windows were de facto free for
everybody. I don't know anybody who actually paid for it (privately), except
through buying a computer where it is already pre-installed. But I'm quite sure
that those who acquired MS Windows by buying a computer would be aware of the
fact that they actually paid for it.

And, it was always policy of MS to give away copies of MS Windows, MS Office
etc. for free or little cost to schools and universities.

They are making money by hooking people onto their products, thus making
business buy them.

If the "hooking" part doesn't imply the "money" part, I don't see a problem.

 > > I don't know if this is feasible. Is it possible to collect orders on the
 > > Axiom website and then forward them to Lulu?
 > 
 > Yes, that is possible. In fact it is encouraged by Lulu since they provide
 > several ways to interface to their ordering system.
 > 
 > But if you are thinking about ordering CD's from Lulu separately from a
 > book, I am not so sure that Lulu provides such a service.

No, I thought about providing the CD by other means.

\start
Date: Tue, 7 Dec 2004 06:25:22 -0800 (PST)
From: Cliff Yapp
To: Tim Daly, Bill Page
Subject: Re: Lulu publishing

--- Tim Daly wrote:

> perhaps we could include a coupon in the books for a CD
> and then arrange with cheapCDs for reproduction and delivery.

Hmm, that's an interesting idea.  To answer the earlier question (a
fair one) I'm not really interested in filling CD orders myself, at
least not right now.  I haven't looked at the cheap CD sellers lately
(spoiled rotten by university bandwidth) - would they work with smaller
quantities of CDs?

\start
Date: 07 Dec 2004 09:36:40 -0500
From: Camm Maguire
To: Tim Daly
Subject: Re: GCL and valgrind

Hi Tim!  And thank you so much for the introduction to valgrind!

The code indicated is in the garbage collector.  You can trigger the
same running ordinary gcl under valgrind by invoking (gbc t).  When
gcl is built with debugging, source line numbers are also printed, and
when valgrind is run with --db-attach=yes, one can step into the
debugger at the point in question.  Very useful.

Unfortunately, I'm not really sure what can be done about this.  GCL's
garbage collection algorithm is 'conservative', at least with respect
to the C stack.  What this means is that the C stack is walked looking
for potential lisp objects, which are marked when found.  The origin
of this walk is the address of the argc argument to main() -- the
endpoint is the address of a dummy local variable in the top stack
frame (i.e. that of the current function).  Normally, the assembler
code output by gcc fills in the stack continuously by pushing normal
word-sized arguments with each function call.  Apparently situations
can also arise where the stack pointer is incremented by a larger
amount in one step, presumably to achieve certain alignment, leaving
an uninitialized 'hole' in the active stack region.  These situations
appear to be quite rare (given the size of the stack traversed in this
algorithm).  

I'm still looking into this to see if I can recognize where and why
the stack is differently initialized at these points.  But broadly
speaking, the 'conservative' algorithm makes no assumptions about the
contents of the stack at all, and takes the cautious point of view
that if there is anything that looks like an object pointer that could
be stored in a local variable in any frame above the present one, that
it should be marked regardless of whether this is an accidental
situation or not.  More specifically, there is no way (that I know of
at least) to distinguish between initialized stack and 'holes', nor is
there any way within C to ensure that the stack is contiguous.  One
might attempt something very ugly and quite unworkable, to store the
last address of the caller which would be compared with the first
address of the callee at every function call, doing a memset if there
was a gap.  Needless to say this is fraught with peril an highly
unportable.  There might be some gcc/gas switches which could help
too.  Its worth looking at for a bit.  But I just wanted to say that
these messages do not point to an error in the implementation of the
algorithm.  This is the way the algorithm is supposed to work,
processing possibly random uninitialized junk, but marking any object in
the heap possibly pointed to just to be safe.

Take care,

Tim Daly writes:

> Camm,
> 
> I ran GCL under valgrind and found no errors.
> I then ran interpsys under valgrind and get:
> 
> =================================================================
> bash-2.05b# valgrind --tool=memcheck ./interpsys
> ==9634== Memcheck, a memory error detector for x86-linux.
> ==9634== Copyright (C) 2002-2004, and GNU GPL'd, by Julian Seward et al.
> ==9634== Using valgrind-2.2.0, a program supervision framework for x86-linux.
> ==9634== Copyright (C) 2000-2004, and GNU GPL'd, by Julian Seward et al.
> ==9634== For more details, rerun with: -v
> ==9634== 
> ==9634== Syscall param sigaction(act) contains uninitialised or unaddressable byte(s)
> ==9634==    at 0x1BA0144F: __GI___libc_sigaction (in /lib/libc-2.3.2.so)
> ==9634==    by 0x1BA01539: sigaction (in /lib/libc-2.3.2.so)
> ==9634==    by 0x81B23F2: bsdSignal (in /home/axiom/obj/linux/bin/interpsys)
> ==9634==    by 0x804C801: open_server (in /home/axiom/obj/linux/bin/interpsys)
> ==9634==  Address 0x52BFDF7C is on thread 1's stack
>                         AXIOM Computer Algebra System 
>              Version of Thursday November 18, 2004 at 21:11:34 
> -----------------------------------------------------------------------------
>    Issue )copyright to view copyright notices.
>    Issue )summary for a summary of useful system commands.
>    Issue )quit to leave AXIOM and return to shell.
> -----------------------------------------------------------------------------
>  
>    Re-reading compress.daase   Re-reading interp.daase
>    Re-reading operation.daase
>    Re-reading category.daase
>    Re-reading browse.daase==9634== 
> ==9634== Conditional jump or move depends on uninitialised value(s)
> ==9634==    at 0x805E438: mark_stack_carefully (in /home/axiom/obj/linux/bin/interpsys)
> ==9634== 
> ==9634== Conditional jump or move depends on uninitialised value(s)
> ==9634==    at 0x805E444: mark_stack_carefully (in /home/axiom/obj/linux/bin/interpsys)
> ==9634== 
> ==9634== Use of uninitialised value of size 4
> ==9634==    at 0x805E453: mark_stack_carefully (in /home/axiom/obj/linux/bin/interpsys)
> ==9634== 
> ==9634== Conditional jump or move depends on uninitialised value(s)
> ==9634==    at 0x805E4B6: mark_stack_carefully (in /home/axiom/obj/linux/bin/interpsys)
> ==9634== 
> ==9634== Use of uninitialised value of size 4
> ==9634==    at 0x805E4B8: mark_stack_carefully (in /home/axiom/obj/linux/bin/interpsys)
> ==9634== 
> ==9634== Conditional jump or move depends on uninitialised value(s)
> ==9634==    at 0x805DB95: mark_object (in /home/axiom/obj/linux/bin/interpsys)
> ==9634== 
> ==9634== Use of uninitialised value of size 4
> ==9634==    at 0x805DB97: mark_object (in /home/axiom/obj/linux/bin/interpsys)
> ==9634== 
> ==9634== Use of uninitialised value of size 4
> ==9634==    at 0x805DB9D: mark_object (in /home/axiom/obj/linux/bin/interpsys)
> ==9634== 
> ==9634== Use of uninitialised value of size 4
> ==9634==    at 0x805DBA3: mark_object (in /home/axiom/obj/linux/bin/interpsys)
> ==9634== 
> ==9634== Use of uninitialised value of size 4
> ==9634==    at 0x805DFB8: mark_object (in /home/axiom/obj/linux/bin/interpsys)
> ==9634== 
> ==9634== Use of uninitialised value of size 4
> ==9634==    at 0x805DFCE: mark_object (in /home/axiom/obj/linux/bin/interpsys)
> ==9634== 
> ==9634== Use of uninitialised value of size 4
> ==9634==    at 0x805DF61: mark_object (in /home/axiom/obj/linux/bin/interpsys)
> ==9634== 
> ==9634== Use of uninitialised value of size 4
> ==9634==    at 0x805DB24: mark_cons (in /home/axiom/obj/linux/bin/interpsys)
> ==9634== 
> ==9634== Use of uninitialised value of size 4
> ==9634==    at 0x805DB36: mark_cons (in /home/axiom/obj/linux/bin/interpsys)
> ==9634== 
> ==9634== Use of uninitialised value of size 4
> ==9634==    at 0x805E340: mark_object (in /home/axiom/obj/linux/bin/interpsys)
> ==9634== 
> ==9634== Use of uninitialised value of size 4
> ==9634==    at 0x805E347: mark_object (in /home/axiom/obj/linux/bin/interpsys)
> ==9634== 
> ==9634== Use of uninitialised value of size 4
> ==9634==    at 0x805E36E: mark_object (in /home/axiom/obj/linux/bin/interpsys)
> ==9634== 
> ==9634== Use of uninitialised value of size 4
> ==9634==    at 0x805E008: mark_object (in /home/axiom/obj/linux/bin/interpsys)
> ==9634== 
> ==9634== Use of uninitialised value of size 4
> ==9634==    at 0x805E01E: mark_object (in /home/axiom/obj/linux/bin/interpsys)
> ==9634== 
> ==9634== Use of uninitialised value of size 4
> ==9634==    at 0x805DDF6: mark_object (in /home/axiom/obj/linux/bin/interpsys)
> ==9634== 
> ==9634== Use of uninitialised value of size 4
> ==9634==    at 0x805DEC8: mark_object (in /home/axiom/obj/linux/bin/interpsys)
> ==9634== 
> ==9634== Use of uninitialised value of size 4
> ==9634==    at 0x805DED4: mark_object (in /home/axiom/obj/linux/bin/interpsys)
> ==9634== 
> ==9634== Use of uninitialised value of size 4
> ==9634==    at 0x805DEEF: mark_object (in /home/axiom/obj/linux/bin/interpsys)
> ==9634== 
> ==9634== Use of uninitialised value of size 4
> ==9634==    at 0x805DF08: mark_object (in /home/axiom/obj/linux/bin/interpsys)
> 
> 
> "running /root/.axiom.input"
> Value = NIL
> Value = NIL
> (1) -> 1
> 
>    (1)  1
>                                                         Type: PositiveInteger
> (2) -> )quit
> ==9634== 
> ==9634== ERROR SUMMARY: 4508 errors from 25 contexts (suppressed: 21 from 1)
> ==9634== malloc/free: in use at exit: 0 bytes in 0 blocks.
> ==9634== malloc/free: 0 allocs, 0 frees, 0 bytes allocated.
> ==9634== For a detailed leak analysis,  rerun with: --leak-check=yes
> ==9634== For counts of detected errors, rerun with: -v
> bash-2.05b# 
> 

\start
Date: Tue, 7 Dec 2004 12:06:29 -0500
From: Tim Daly
To: Camm Maguire
Subject: Re: GCL and valgrind

Camm,

No problem. I have been using valgrind, was impressed with the tool,
and decided to try it on a larger program.

\start
Date: Tue, 7 Dec 2004 22:42:20 +0100 (CET)
From: Joris van der Hoeven
To: Bill Page
Subject: Re: [Texmacs-dev] \left( and \right) conversions from LaTeX

> What I see in TeXmacs is literally
>
>   <left-(-1> and <right-)-1>
>
> instead of the acutal parenthesis.

Are you sure that they are in math-mode and that you have
the necessary fonts? If so, then can you attach a small
concrete example file which demonstrates the problem?

\start
Date: 07 Dec 2004 17:00:56 -0500
From: Camm Maguire
To: Bill Page
Subject: Re: [Gcl-devel] RE: Metadata for the uploaded Windows source/binary package.
Cc: Mike Thomas

Greetings!

Bill Page writes:

> Mike,
> 
> On December 6, 2004 6:17 PM you wrote:
> 
> > Expect at least one failure in GCL due to a Makefile problem:
> 
> Yes it did fail as you said... :(
> 
> >
> > ======================================================================
> >
> > $ cat zips/gcl-2.6.5.unixport.makefile_1.patch
> > ...
> 
> Is it your plan to include such patches in the Axiom build?
> If yes, then I guess I would add this patch to the
> lsp/Makefile.pamphlet section for gcl-2.6.5, right?
> 
> Is there any chance there will be a gcl-2.6.6 with these
> patches?
> 

We can roll out a 2.6.6 with minimal patches for axiom's sake once all
is finalized.  Please advise.

\start
Date: 07 Dec 2004 17:13:23 -0500
From: Camm Maguire
To: Tim Daly
Subject: Re: [Gcl-devel] RE: Metadata for the uploaded Windows source/binary package.
Cc: Mike Thomas, Bill Page

Greetings!

Tim Daly writes:

> Bill, Mike,
> 
> I can handle the reverse patch problem easily enough as I don't
> actually use the patches as sent. I read them for content and
> it was already clear to me that the patch was reversed. no problem
> there.
> 
> however, i'm not a sed user to any degree. 
> what does the sed line do?
> 
>    cp $$i gmp/$$(echo $$i | sed -e 's,\.\./,,1' -e 's,/,_,g') ;
> 

When building gmp locally, we copy and rename the object modules into
unixport/gmp in such a manner as to avoid namespace conflicts.  The
sed strips '../' from the path and then replaces '/' with '_'.

\start
Date: 07 Dec 2004 17:16:52 -0500
From: Camm Maguire
To: Bill Page
Subject: Re: Axiom for Windows and TeXmacs
Cc: Mike Thomas, Dan Martins

Greetings!

Bill Page writes:

> Mike,
> 
> I would be very happy to work with someone who knows Maxima
> to produce a new native Windows tm_maxima. The version of
> TeXmacs for Windows is still very new and only a few plug-ins
> have been tested with it - most require a rewrite specifically
> for windows because Windows process handling is different from
> Linux. I think that example of threaded process handling that
> Mike Thomas sent me is superior to the older TeXmacs interface
> code (on Windows at least and possibly also under linux).
> 

There are some performance enhancements in 2.7.0, but I would have
thought you would not be likely to see them.  If you do discover any
performance differences between 2.6.5 and head, I'd be most
appreciative if you'd send me a quick report.

\start
Date: 07 Dec 2004 17:26:06 -0500
From: Camm Maguire
To: Bill Page
Subject: Re: Axiom for Windows and TeXmacs
Cc: Mike Thomas, Dan Martens

Greetings!

Bill Page writes:

> <grin>
> 
> Tim, I think you have to "get out more"... :) One sees
> exactly the same thing with Maxima. There are apparently
> many more Windows users than Linux users. And sales of Maple
> and Mathematica are also greatly dominated by Windows.
> 
> I think your question though: "who are these people" is a

Mike and I were discussing this a while ago.  We were trying to decide
if the community of Windows users was likely to be more user oriented
and less contributor oriented.  It would be interesting to know what
experience you accumulate here.  I suppose Linux is somewhat of an
exception, as it *only* exists because of its user/contributors, so we
may be somewhat spoiled by this example.

\start
Date: 07 Dec 2004 17:30:29 -0500
From: Camm Maguire
To: Bill Page
Subject: Re: system::getenv does not return MSYS environment variables
Cc: Mike Thomas

Greetings!

Bill Page writes:

> Tim, Mike,
> One of the external lib/cfunc.c routines is copyEnvValue which
> calls the stdlib routine getenv(). A simple test program shows
> that this gets both AXIOM and PATH variables properly. But it is
> apparently no longer used in Axiom. I wonder what GCL is calling
> of system::getenv?

This is just a wrapper around the C library getenv.  Does this not
work on Windows?  Code is in main.c.

\start
Date: 07 Dec 2004 17:35:11 -0500
From: Camm Maguire
To: Waldek Hebisch
Subject: Re: axiom on AMD64

Greetings!

Just a note here that axiom is (apparently) fully functional on Debian
amd64.  You should be able to find the build logs at
debian-amd64.alioth.debian.org if this helps.

Take care,

Waldek Hebisch writes:

> I am trying to build CVS axion (from December 5) on AMD64. I am 
> using `fedora64' target (my machine is a Mandrake 9.1, but Fedora
> looks close enough ...). I have noticed two problems:
> 
> when running `r21bugsbig' axiom spent 7 hours after printing the
> line:
> 
> g : LX := reduce(*, [X - rho for rho in r]) ;
> 
> I had to kill axiom process to go further. 
> 
> Next problem is that library settinge form the `Makefile.fedora64',
> namely the line:
>  
> LDF:="-L/usr/X11R6/lib64 -L/usr/local/lib64 -L/usr/openwin/lib64 -L/usr/lib64 "
> 
> apparently did not propagate to `view2D' directory. More precisely,
> the build failed at link stage:
> 
> 34 linking /pom/kompi/axiom/axiom2/mnt/fedora64/lib/view2D
> gcc-3.3.1: /usr/X11R6/lib/libXpm.a: No such file or directory
> make[4]: *** [/pom/kompi/axiom/axiom2/mnt/fedora64/lib/view2D] Error 1
> make[4]: Leaving directory `/pom/kompi/axiom/axiom2/src/graph/view2D'
> make[3]: *** [view2Ddir] Error 2
> 
> PS. I have September version working (build after hand tweaks). I am
> rebuilding to get `sman' running.
> 

\start
Date: 07 Dec 2004 17:38:46 -0500
From: Camm Maguire
To: Bill Page
Subject: Re: [Gcl-devel] Axiom on Windows
Cc: Mike Thomas

Greetings!

Bill Page writes:

> Mike,
> 
> On Wednesday, December 01, 2004 12:33 AM you wrote:
> > 
> > The upload is complete, along with a copy of libgmp.dll and
> > gmp-static-mingw-4.1.tar.gz.
> > 
> 
> Great. I have downloaded it and completed a few tests. It
> seems to be fully functional. Congratulations!!!
> 
> I was very pleasantly surprized to see that AXIOMsys under
> windows works with the usual 'gnu readline' line editing.
> So it seems we do not need to worry about the clef program.
> 

Mostly by historical accident, we also ship axiom on Debian using
GCL's readline support.  Seems to work well, though have no direct
personal experience with alternate clef.

\start
Date: Tue, 7 Dec 2004 18:39:11 -0500
From: Tim Daly
To: Mike Thomas
Subject: Re: [Gcl-devel] RE: Metadata for the uploaded Windows source/binary package.
Cc: Bill Page

Mike,

I've applied the patch and I'm in the process of rebuilding and
restarting the tests in axiom--main--1. Once it passes testing
I'll commit the change.

\start
Date: Wed, 8 Dec 2004 09:24:13 +1000
From: Mike Thomas
To: "Bill Page \(E-mail\)" <Bill Page>, Tim Daly
Subject: re: State of play with GCL 2.6.5 on Windows


Hi Bill.

| On Tuesday, December 07, 2004 3:01 AM you wrote:
| >
| > Item 3, the 2.6.5 AHYP crash cause was in the cfun.c.pamphlet
| > DIRECTORYP, this had a bug on Windows now hopefully fixed.
|
| but you attached cfuns.lisp.pamphlet. Where there any changes
| in cfuns-c.c.pamphlet?

The workaround is in the lisp file.  I've attached the C file in case I've
missed something.  In the light of the stuff I mentioned late last night and
also some further tests I did I'm still not happy with this but for the time
being the patch works - when I have some more time I'll go further into it.

------=_NextPart_000_023A_01C4DD07.AEBD5610
	name="cfuns-c.c.pamphlet"
	filename="cfuns-c.c.pamphlet"

\documentclass{article}
\usepackage{axiom}
\begin{document}
\title{\$SPAD/src/lib cfuns-c.c}
\author{The Axiom Team}
\maketitle
\begin{abstract}
\end{abstract}
\eject
\tableofcontents
\eject
\section{License}
<<license>>=
/*
Copyright (c) 1991-2002, The Numerical ALgorithms Group Ltd.
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are
met:

    - Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.

    - Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in
      the documentation and/or other materials provided with the
      distribution.

    - Neither the name of The Numerical ALgorithms Group Ltd. nor the
      names of its contributors may be used to endorse or promote =
products
      derived from this software without specific prior written =
permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/
@
<<*>>=
<<license>>

#include "useproto.h"
#include <stdio.h>
#include <unistd.h>
#include <stdlib.h>
#include <string.h>
#include <malloc.h>
#include <sys/types.h>
#include <sys/stat.h>

#include "cfuns-c.H1"


int
#ifdef _NO_PROTO
CLgetpid()
#else
CLgetpid(void)
#endif
{
    return getpid();
}

int
#ifdef _NO_PROTO
addtopath(dir)
    char *dir;
#else
addtopath(char *dir)
#endif
{
    char *path, *newpath;

    path = getenv("PATH");
    if (path == NULL)
        return -1;

    newpath = (char *) malloc(1 + strlen(path) + strlen(dir) + =
strlen("PATH=:"));
    if (newpath == NULL)
        return -1;

#ifndef MSYSplatform
    sprintf(newpath, "PATH=%s;%s", path, dir);
#else /* MSYSplatform */
#endif /* MSYSplatform */

    return putenv(newpath);
}

/*
 * Test whether the path is the name of a directory.  Returns 1 if so, 0 =
if
 * not, -1 if it doesn't exist.
 */


int
#ifdef _NO_PROTO
directoryp(path)
    char *path;
#else
directoryp(char *path)
#endif
{
    struct stat buf;
    int code;

    code = stat(path, &buf);
    if (code == -1) {
        return (-1);
    }
    else {
        return ((buf.st_mode & S_IFDIR) != 0);
    }
}

int 
#ifdef _NO_PROTO
make_path_from_file(s, t)
    char *s, *t;
#else
make_path_from_file(char *s, char *t)
#endif
{
    char *pos=NULL;
    char *c;

    /** simply copies the path name from t into s **/
    for (c = t + strlen(t); c != s; c--)
        if ( ( *c == '/' ) || ( *c == '\\' ) ) {
            pos = c;
            break;
        }
    /** Check to see if the path was actually present **/
    if (c == t) {               /** No Path, so return the pwd **/
        return (-1);
    }
    /** now just do the copying **/
    strncpy(s, t, pos - t);
    return 1;
}

int
#ifdef _NO_PROTO
writeablep(path)
    char *path;
#else
writeablep(char *path)
#endif
{
    struct stat buf;
    char newpath[100];
    int code;

#ifndef MSYSplatform
    code = stat(path, &buf);
    if (code == -1) {
        /** The file does not exist, so check to see
                 if the directory is writable                  *****/
        if (make_path_from_file(newpath, path) == -1 ||
            stat(newpath, &buf) == -1) {
            return (-1);
        }
        else {
            if (geteuid() == buf.st_uid) {
                return (2 * ((buf.st_mode & S_IWUSR) != 0));
            }
            else if (getegid() == buf.st_gid) {
                return (2 * ((buf.st_mode & S_IWGRP) != 0));
            }
            else {
                return (2 * ((buf.st_mode & S_IWOTH) != 0));
            }
        }
    }
    else if (geteuid() == buf.st_uid) {
        return ((buf.st_mode & S_IWUSR) != 0);
    }
    else if (getegid() == buf.st_gid) {
        return ((buf.st_mode & S_IWGRP) != 0);
    }
    else {
        return ((buf.st_mode & S_IWOTH) != 0);
    }
#else /* MSYSplatform */
    return ( 1 );
#endif /* MSYSplatform */
}


int
#ifdef _NO_PROTO
readablep(path)
    char *path;
#else
readablep(char *path)
#endif
{
#ifndef MSYSplatform
    struct stat buf;
    int code;

    code = stat(path, &buf);
    if (code == -1) {
        return (-1);
    }
    else if (geteuid() == buf.st_uid) {
        return ((buf.st_mode & S_IREAD) != 0);
    }
    else if (getegid() == buf.st_gid) {
        return ((buf.st_mode & S_IRGRP) != 0);
    }
    else {
        return ((buf.st_mode & S_IROTH) != 0);
    }
#else /* MSYSplatform */
    return ( 1 );
#endif /* MSYSplatform */
}



long
#ifdef _NO_PROTO
findString(file, string)
    char *file, *string;
#else
findString(char *file, char *string)
#endif
{
    int nstring, charpos;
    FILE *fn;
    char buffer[1024];

    if ((fn = fopen(file, "r")) == NULL)
        return -1;

    for (charpos = 0, nstring = strlen(string);
         fgets(buffer, sizeof buffer, fn) != NULL;
         charpos += strlen(buffer)
        )
        if (!strncmp(buffer, string, nstring))
            return charpos;
    return -1;

}

int
#ifdef _NO_PROTO
copyEnvValue(varName, buffer)
    char *varName, *buffer;
#else
copyEnvValue(char *varName, char *buffer)
#endif
{
    char *s;

    s = getenv(varName);
    if (s == NULL)
        return 0;
    strcpy(buffer, s);
    return strlen(s);
}

@
\eject
\begin{thebibliography}{99}
\bibitem{1} nothing
\end{thebibliography}
\end{document}

------=_NextPart_000_023A_01C4DD07.AEBD5610--

\start
Date: Tue, 7 Dec 2004 19:17:08 -0500
From: Tim Daly
To: Bill Page
Subject: Re: system::getenv does not return MSYS environment variables
Cc: Mike Thomas, Camm Maguire

Bill,

It could depend on how you are launching the program.
If you launch main.c using an icon and launch your
test program by an MSYS shell command they could be
running in different environments.

Try running AXIOMsys from a shell command and then ask for the
value of the environment variables using the )lisp axiom command
and the )sys axiom command and see if they differ.

\start
Date: Tue, 7 Dec 2004 19:19:25 -0500
From: Tim Daly
To: Mike Thomas
Subject: re: State of play with GCL 2.6.5 on Windows
Cc: Bill Page

Mike,

Unless you and Bill object I'm going to only apply the gcl
unixport/makefile patch and the cfuns.c patch to the axiom--windows--1
branch for the moment.  There doesn't seem to be a reaon to push these
to savannah yet as there will be a lot of small changes to the windows
branch.

\start
Date: Wed, 8 Dec 2004 10:01:17 +1000
From: Mike Thomas
To: Tim Daly
Subject: re: State of play with GCL 2.6.5 on Windows
Cc: Bill Page

Hi Tim.

| Unless you and Bill object I'm going to only apply the gcl
| unixport/makefile patch and the cfuns.c patch to the axiom--windows--1
| branch for the moment.  There doesn't seem to be a reaon to push these
| to savannah yet as there will be a lot of small changes to the windows
| branch.
|

This seems sensible to me as, additionally, there are still some alterations
in the toplevel makefile eg "pwd -W" which I am assuming don't work on other
platforms and which would need to be handled in a system specific manner at
that level.

With regard to that issue, can we assume that the Axiom build will only
support GNU make or do you plan to be more portable with regard build
support tools (other than the Lisp compiler which you have discussed
elsewhere)?

\start
Date: Wed, 8 Dec 2004 10:17:23 +1000
From: Mike Thomas
To: Bill Page
Subject: RE: system::getenv does not return MSYS environment variables

Hi Bill.

I suspect something is wrong at your end, I have no troubles reading either
MSYS or Windows environment variables (I believe the build would not work if
this were not the case):

====================================================
(1) -> )lisp (si::getenv "HISTFILE")

Value = "C:/msys/1.0/home/miketh/.bash_history"
(1) -> )lisp (si::getenv "PROCESSOR_ARCHITECTURE")

Value = "x86"

====================================================

The above example was running within an MSYS shell.

Is it possible you were expecting an Axiom system launched separately from
an MSYS shell to see the environment variables in a separate MSYS shell?

This won't work as manipulation by one process of it's own environment (Eg
an MSYS Bash shell setting the HISTFILE variable) does not affect the local
environment's of processes running separately from that first process (eg.
MS Word launched from the Windows start menu.)

\start
Date: Wed, 8 Dec 2004 10:22:11 +1000
From: Mike Thomas
To: list
Subject: Test summary
Cc: Bill Page

Hi Tim/Bill.

Is a summary of test failures saved somewhere during the build?  It looks
like the tests are OK on Windows but there are so many it is difficult to be
certain by eyeball.

\start
Date: Wed, 8 Dec 2004 10:17:25 +1000
From: Mike Thomas
To: Tim Daly, Bill Page
Subject: RE: [Gcl-devel] State of play with GCL 2.6.5 on Windows

Hi there.

I wrote yestrday evening:

| What a chase - the algebra is now compiling with GCL 2.6.5 on Windows; who
| knows what lies ahead, but it's probably OK.
...
| Fingers crossed and hope to rest

I'm pleased to say that the above build of my locally modified Windows arch
checkout of Axiom using stable GCL 2.6.5 worked as expected - still hand
copying daase files of course.

\start
Date: Tue, 7 Dec 2004 18:23:01 -0500 
From: Bill Page
To: Camm Maguire
Subject: RE: system::getenv does not return MSYS environment variables
Cc: Mike Thomas

Camm,

On Tuesday, December 07, 2004 5:30 PM you replied:
> 
> Bill Page writes:
>> One of the external lib/cfunc.c routines is copyEnvValue which
>> calls the stdlib routine getenv(). A simple test program shows
>> that this gets both AXIOM and PATH variables properly. But it
>> is apparently no longer used in Axiom. I wonder what GCL is
>> calling of system::getenv?
> 
> This is just a wrapper around the C library getenv.  Does this
> not work on Windows?  Code is in main.c.
> 

Yes I see the code in main.c that implements system::getenv.
I am at a complete loss to explain following since apparently
both copyEnvValue.c in Axiom's lib/cfun-c.c *and* system::getenv
both call getenv from <stdlib>. Are there two different stdlib's??

What is observe is the following::

1) In Windows I go

     Start/Control Panel/System/Advanced/Enviroment Variables

   and I set an environment variable, say

     W1 c:/xxx/yyy

2) Then I start an MSYS shell. I can see the environment variable
   W1 from the shell

     echo $W1
     c:/xxx/yyy

3) Set another environment variable here in MSYS

     export M1=d:/www/zzz
     echo $M1
     d:/www/zzz

4) Start GCL (in my case it was AXIOMsys) and interrogate
   the environment variables

   (system::getenv "W1")
   "c:/xxx/yyy"

   (system::getenv "M1")
    NIL

   GCL doesn't see the MSYS environment variable.

 5) Write a simple C program that calls getenv directly

    # test.c
    #include <stdlib.h>
    #include <stdio.h>
    main () {
      fprintf(stdout,"W1=%s\n",getenv("W1"));
      fprintf(stdout,"M1=%s\n",getenv("M1"));
    }

    gcc test.c -o test
    test
    W1=c:/xxx/yyy
    M1=d:/www/zzz

    In this case the program sees both environment
    variables.

 6) Can you guess what happens if we use the same
    environment variable names in both Windows and
    in MSYS?

\start
Date: 07 Dec 2004 20:31:00 -0500
From: Camm Maguire
To: Mike Thomas
Subject: re: [Gcl-devel] State of play with GCL 2.6.5 on Windows
Cc: Bill Page

Greetings!

Mike Thomas writes:

> Hi there.
> 
> I wrote yestrday evening:
> 
> | What a chase - the algebra is now compiling with GCL 2.6.5 on Windows; who
> | knows what lies ahead, but it's probably OK.
> ...
> | Fingers crossed and hope to rest
> 
> I'm pleased to say that the above build of my locally modified Windows arch
> checkout of Axiom using stable GCL 2.6.5 worked as expected - still hand
> copying daase files of course.
> 

Sorry I've missed the details here.  What's the problem with the
database build?

\start
Date: Tue, 7 Dec 2004 21:28:09 -0500
From: Tim Daly
To: Mike Thomas
Subject: re: State of play with GCL 2.6.5 on Windows
Cc: Bill Page

Mike,

>This seems sensible to me as, additionally, there are still some alterations
>in the toplevel makefile eg "pwd -W" which I am assuming don't work on other
>platforms and which would need to be handled in a system specific manner at
>that level.
>
>With regard to that issue, can we assume that the Axiom build will only
>support GNU make or do you plan to be more portable with regard build
>support tools (other than the Lisp compiler which you have discussed
>elsewhere)?

Hopefully axiom will build on every system with the minimum of changes.
Originally axiom used vanilla make but there were some features of gmake
that made it easier to use (e.g. the shell command). From my point of
view it would be better if everything was in common lisp as it makes
porting so much easier. I've had some discussions about moving the
C code portions (such as sockets and the X into CLX). I find it
incredibly tedious to port C code. The MACOSX and BSD ports of working
C code stumble over the fact that each system seems to have a need to
change the tree of includes. So portability is one of the key issues.
The less C code, the less we depend on special features of tools, the
easier life will be.

\start
Date: Tue, 7 Dec 2004 21:31:21 -0500
From: Tim Daly
To: Mike Thomas
Subject: Re: Test summary
Cc: Bill Page

Mike,

The tests do ')set message test on'

If a test fails it prints out:

Daly bug:

so do

cd int/input
fgrep Daly *.output | uniq

and you'll see which tests fail. Some of these failures have been
there since the code was shipped to NAG so it is not necessarily
the case that they have been introduced locally.

\start
Date: Wed, 8 Dec 2004 11:53:59 +1000
From: Mike Thomas
To: Camm Maguire
Subject: re: [Gcl-devel] State of play with GCL 2.6.5 on Windows
Cc: Bill Page

Hi Camm.

| > I'm pleased to say that the above build of my locally modified
| Windows arch
| > checkout of Axiom using stable GCL 2.6.5 worked as expected - still hand
| > copying daase files of course.
| >
|
| Sorry I've missed the details here.

Not surprising given the flurry of emails.


|  What's the problem with the
| database build?

There is a long standing problem that on Windows you have to copy by hand
the daase files by hand half way through the build:

   cp src/share/algebra/*.daase int/algebra/

This may be related to the issue mentioned here last night:

   http://lists.nongnu.org/archive/html/axiom-developer/2004-12/msg00117.htm
l

which I have yet to look into.

One thing I forgot to mention in that email is that I have also noticed in
the past hard wired Unix paths in the Makefiles some of which I fixed but
not yet pervasively.

There is a second daase problem (recent) in that the arch archive for
Windows either downloaded onto my machine incorrectly or else is completely
missing the src/share directory (tla is not working very well for me).

\start
Date: Tue, 7 Dec 2004 21:34:03 -0500
From: Tim Daly
To: Mike Thomas
Subject: re: [Gcl-devel] State of play with GCL 2.6.5 on Windows
Cc: Bill Page

Mike,

What is the issue with the daase files? I know we had that a while
ago but I don't remember the exact issue. The build ought to work.

\start
Date: Tue, 7 Dec 2004 16:53:14 -0500 
From: Bill Page
To: Joris van der Hoeven
Subject: re: [Texmacs-dev] \left( and \right) conversions from LaTeX
Cc: Dan Martins, Bill Page

This is the native windows version of Axiom where I see
the problm (I am not yet sure about other versions). Your
point about fonts is good because I think by default the
native Windows version installs with fewer fonts. I do
however also have miktex installed on the same machine.
Do I have to do anything in particular to make sure that
TeXmacs sees and makes use of the MikTeX fonts? How can
I check if I "have all the necessary fonts"?

I am not sure I understand your question abouot "math-mode".
The symbols appear in the output generated by an Axiom
session. Other mathematical notations appear normally such
as large integral signs etc.

Is it ok if I send you an example file that includes
an Axiom session?

> -----Original Message-----
> 
> > What I see in TeXmacs is literally
> >
> >   <left-(-1> and <right-)-1>
> >
> > instead of the acutal parenthesis.
> 
> Are you sure that they are in math-mode and that you have
> the necessary fonts? If so, then can you attach a small
> concrete example file which demonstrates the problem?

\start
Date: Wed, 8 Dec 2004 12:14:12 +1000
From: Mike Thomas
To: Tim Daly
Subject: re: [Gcl-devel] State of play with GCL 2.6.5 on Windows
Cc: Bill Page

Hi Tim.

| What is the issue with the daase files? I know we had that a while
| ago but I don't remember the exact issue. The build ought to work.

Please see separate reply to Camm.  I haven't had time to look further into
this one yet but I expect the solution to be simple if tedious.

\start
Date: Tue, 7 Dec 2004 22:22:06 -0500
From: Tim Daly
To: Mike Thomas
Subject: Re: Test summary
Cc: Bill Page

How does this list look compared to yours?

$ fgrep Daly *.output | uniq
bugs.output:Daly Bug
calculus2.output:Daly Bug
collect.output:Daly Bug
curl.output:Daly Bug               <Windows only
dhtri.output:Daly Bug              <Windows only
easter.output:Daly Bug
equation2.output:Daly Bug
exit.output:Daly Bug
exlap.output:Daly Bug
expr.output:Daly Bug
exsum.output:Daly Bug
ffrac.output:Daly Bug
file.output:Daly Bug               <Windows only
float1.output:Daly Bug
fname.output:Daly Bug              <Windows only
fname1.output:Daly Bug             <Windows only
fns.output:Daly Bug
grpthry.output:Daly Bug
gstbl.output:Daly Bug              <Windows only
herm.output:Daly Bug
ico.output:Daly Bug                <Windows only
kafile.output:Daly Bug             <Windows only
knot2.output:Daly Bug
lexp.output:Daly Bug
lib.output:Daly Bug                <Windows only
multiple.output:Daly Bug           <Windows only
ndftip.output:Daly Bug
nepip.output:Daly Bug
noptip.output:Daly Bug
nqip.output:Daly Bug
nsfip.output:Daly Bug
parabola.output:Daly Bug           <Windows only
pat.output:Daly Bug
r21bugs.output:Daly Bug
repa6.output:Daly Bug
segbind.output:Daly Bug            <Windows only
textfile.output:Daly Bug           <Windows only
torus.output:Daly Bug
tutchap1.output:Daly Bug
tutchap2.output:Daly Bug
tutchap4.output:Daly Bug           <Windows only
void.output:Daly Bug
xpoly.output:Daly Bug

My list reads:


bugs.output:Daly Bug
calculus2.output:Daly Bug
collect.output:Daly Bug
easter.output:Daly Bug
equation2.output:Daly Bug
exit.output:Daly Bug
exlap.output:Daly Bug
expr.output:Daly Bug
exsum.output:Daly Bug
ffrac.output:Daly Bug
float1.output:Daly Bug
fns.output:Daly Bug
grpthry.output:Daly Bug
herm.output:Daly Bug
knot2.output:Daly Bug
lexp.output:Daly Bug
ndftip.output:Daly Bug
nepip.output:Daly Bug
noptip.output:Daly Bug
nqip.output:Daly Bug
nsfip.output:Daly Bug
pat.output:Daly Bug
r21bugs.output:Daly Bug
repa6.output:Daly Bug
torus.output:Daly Bug
tutchap1.output:Daly Bug
tutchap2.output:Daly Bug
void.output:Daly Bug
xpoly.output:Daly Bug

\start
Date: Wed, 8 Dec 2004 12:36:16 +1000
From: Mike Thomas
To: Tim Daly
Subject: RE: Test summary
Cc: Bill Page

Thanks Tim.

| The tests do ')set message test on'
| 
| If a test fails it prints out:
| 
| Daly bug:
| 
| so do
| 
| cd int/input
| fgrep Daly *.output | uniq
| 
| and you'll see which tests fail. Some of these failures have been
| there since the code was shipped to NAG so it is not necessarily
| the case that they have been introduced locally.


How does this list look compared to yours?

$ fgrep Daly *.output | uniq
bugs.output:Daly Bug
calculus2.output:Daly Bug
collect.output:Daly Bug
curl.output:Daly Bug
dhtri.output:Daly Bug
easter.output:Daly Bug
equation2.output:Daly Bug
exit.output:Daly Bug
exlap.output:Daly Bug
expr.output:Daly Bug
exsum.output:Daly Bug
ffrac.output:Daly Bug
file.output:Daly Bug
float1.output:Daly Bug
fname.output:Daly Bug
fname1.output:Daly Bug
fns.output:Daly Bug
grpthry.output:Daly Bug
gstbl.output:Daly Bug
herm.output:Daly Bug
ico.output:Daly Bug
kafile.output:Daly Bug
knot2.output:Daly Bug
lexp.output:Daly Bug
lib.output:Daly Bug
multiple.output:Daly Bug
ndftip.output:Daly Bug
nepip.output:Daly Bug
noptip.output:Daly Bug
nqip.output:Daly Bug
nsfip.output:Daly Bug
parabola.output:Daly Bug
pat.output:Daly Bug
r21bugs.output:Daly Bug
repa6.output:Daly Bug
segbind.output:Daly Bug
textfile.output:Daly Bug
torus.output:Daly Bug
tutchap1.output:Daly Bug
tutchap2.output:Daly Bug
tutchap4.output:Daly Bug
void.output:Daly Bug
xpoly.output:Daly Bug

\start
Date: Tue, 7 Dec 2004 22:30:10 -0500
From: Stephen Wilson
To: Tim Daly
Subject: re: Test summary
Cc: Mike Thomas, Bill Page

Tim,

Is this list likely to change any time in the future?

If so, perhaps there is a simple way to include it in the
axiom--main--1 sources, or on Savanna, so that developers on alternate
branches have a reliable reference.

Just a thought.

On Tue, Dec 07, 2004 at 10:22:06PM -0500, root wrote:
> My list reads:
> 
> 
> bugs.output:Daly Bug
> calculus2.output:Daly Bug
> collect.output:Daly Bug
> easter.output:Daly Bug
> equation2.output:Daly Bug
> exit.output:Daly Bug
> exlap.output:Daly Bug
> expr.output:Daly Bug
> exsum.output:Daly Bug
> ffrac.output:Daly Bug
> float1.output:Daly Bug
> fns.output:Daly Bug
> grpthry.output:Daly Bug
> herm.output:Daly Bug
> knot2.output:Daly Bug
> lexp.output:Daly Bug
> ndftip.output:Daly Bug
> nepip.output:Daly Bug
> noptip.output:Daly Bug
> nqip.output:Daly Bug
> nsfip.output:Daly Bug
> pat.output:Daly Bug
> r21bugs.output:Daly Bug
> repa6.output:Daly Bug
> torus.output:Daly Bug
> tutchap1.output:Daly Bug
> tutchap2.output:Daly Bug
> void.output:Daly Bug
> xpoly.output:Daly Bug

\start
Date: Tue, 7 Dec 2004 13:42:33 -0500 
From: Bill Page
To: list
Subject: \left( and \right) conversions from LaTeX
Cc: Dan Martins

TeXmacs developers;

The Axiom developers plan to distribute a new version of
tm_axiom plug-in together with open source Axiom as an
officially supported interface for TeXmacs. Currently we
have a beta test version of this interface for Windows that
uses an efficient threaded technique for the interprocess
communication. A linux version will follow. I am currently
extending this new plug-in to include the Axiom tex output
line-breaker algorithm. I have integrated the same code
that I used on MathAction and it seems to be working well.
It successfully wraps example expressions like

  (x+y+z)^10

and

  (1/x+y+z)^10

But by default the line-breaker code writes left and right
parenthesis, as LaTeX expandable \lefth( and \right) symbols.
Unfortunately TeXmacs (at least the native Windows version)
no longer seems to translate these correctly. (I was sure
that this used to work in previous versions of TeXmacs.)
What I see in TeXmacs is literally

  <left-(-1> and <right-)-1> 

instead of the acutal parenthesis. As I understand it, these
codes are intended to display as larger parenthesis of some
fixed size. However these are now displayed only as formating
codes exactly as as shown above but highlighted in red - not
as actual parenthesis.

So I see two problems.

 1) The conversion form LaTeX \left( and \right) should
    really just be to TeXmacs \left( and \right( . Note:
    TeXmacs \left( and \right) seem to work fine when
    entered at the keyboard. Is there some way I can
    configure TeXmacs to do this conversion from LaTeX?

 2) Why aren't the <left-(-1> and right codes displayed
    as actual parenthesis? Just for interest sake, I
    would like to know how to enter these things at the
    keyboard.

Until this is resolved, it is easy for me to convert the
\left( and \right) symbols to just ( and ). But of course
this does look nearly as nice for complex highly folded
mathematics.

Is this a known problem? Or have I misunderstood something
about how LaTeX to TeXmacs is supposed to work?

\start
Date: Wed, 8 Dec 2004 13:42:42 +1000
From: Mike Thomas
To: Tim Daly
Subject: RE: Test summary
Cc: Bill Page

Thanks Tim.

I looked at the first few Windows bugs with causes listed below.

For the time being I'll look into the daase thing anyway - I already have
another patch for you to probe-file - testing now; but that is not the end
of the story.

| curl.output:Daly Bug               <Windows only

It tries to draw and fails on the socket call - this is not implemented yet
so not surprising.


| dhtri.output:Daly Bug              <Windows only

A complaint about DHMATRIX being missing.

| file.output:Daly Bug               <Windows only

Hard wired Unix /tmp path


| fname.output:Daly Bug              <Windows only
| fname1.output:Daly Bug             <Windows only

Looks like more nasty Unixisms - yet unproven

\start
Date: Wed, 8 Dec 2004 00:00:10 -0500
From: Tim Daly
To: Stephen Wilson
Subject: re: Test summary
Cc: Mike Thomas, Bill Page

Steve,

>Is this list likely to change any time in the future?
>
>If so, perhaps there is a simple way to include it in the
>axiom--main--1 sources, or on Savanna, so that developers on alternate
>branches have a reliable reference.

At IBM I incorporated automated regression testing into the makefiles.
I've yet to recover that facility but the "Daly Bug" message is part
of it. Some of the files have deliberate errors in them (demonstrating
"correct" failure cases) so the )set message test option allows the
regression software to distinguish the failures. (The "Daly Bug"
message was so named because I needed a unique string and since I
was the only one who would ever see the test results I used my name.
Apparently once IBM sold it NAG never changed it).

If you check out the src/input/Makefile.dvi you'll see that there are
other cases that do not run. In particular, the graphics test cases
do not yet run and I'm working on getting them running as I write this.
Running these cases requires sman to work properly and that only 
came into the build a few weeks ago.

Once the regression testing works we'll have a baseline of failures.
If you look at the src/input/bugs.input.pamphlet file you'll see
that I used to keep track of reported bugs, with failing examples,
as well as fixes. These were kept around to ensure that they continued
to work and that reported bug test cases were not lost.

So, the answer to your question is that, yes, we can do that and it
should happen in the near future but in a more generally useful way.
I will add both failure lists (unix and windows) to the README file
on savannah at the next push.


Also of note is that I've collected the test suites from other computer
algebra systems and plan to apply them to axiom. However I'd like to 
generalize the test suites so that they can be used by many systems
in addition to axiom. The long term win here is that we can all benefit
from a "standardized test suite" where the mathematics and the known
answers are supplied as well as the test cases. I've christened this
testing effort CATS (Computer Algebra Test Suite). In the long term
I want axiom to run all the standardized tests in CATS. The CATS
branch was on the previous arch server but I have yet to recreate
that branch here. If there is any interest in developing better
testing I'll do it now.

The challenge, of course, is to write the mathematics behind the
tests into pamphlet files so the tests are properly documented
and can be used with some confidence that the answer is correct.

\start
Date: Tue, 7 Dec 2004 23:09:41 -0500 
From: Bill Page
To: Tim Daly
Subject: RE: system::getenv does not return MSYS environment variables
Cc: Camm Maguire, Mike Thomas, Bill Page

Tim,

On Tuesday, December 07, 2004 7:17 PM you wrote:
> 
> It could depend on how you are launching the program.
> If you launch main.c using an icon and launch your
> test program by an MSYS shell command they could be
> running in different environments.

Yes, I understand. But I am runing AXIOMsys only from
within the MSYS shell the way we must during the build.

> 
> Try running AXIOMsys from a shell command and then ask
> for the value of the environment variables using the
> )lisp axiom command and the )sys axiom command and see
> if they differ.

I just spent the last 3 hours worrying that all of this
was not reproducible and that I must have just been
going crazy last night. Now I know that it is only hard
to reproduce. My first attempt to do the equivalent of
what you suggested above actually worked (contrary to
my previous email and my emails of last night). The
short story is that I can now reproduce this problem by
attempting to build the database files several times
while trying variations ( ':' '\' and '/' ) of the AXIOM
variable in Windows.

The long story follows:

I could not do exactly what you suggest above because
I am not working with a complete build of AXIOM. I am
working with Mike's original /cvs/head/axiom build. I am
specifically looking at the database build problem. Until
Mike's work last night we did not have a 2.6.5 version
that built all the way up to the database problem. 
I have not yet tried to install all of Mike's changes
to the 2.6.5 build but I will likely shift this work
over to 2.6.5 once I can get it that far.

Anyway, my procedure is to run Mike's /cvs/head version up
to the point where it fails in make-databases. I detailed
what I was doing in several emails last night. If you wade
through that (something I just finished doing) you will
see that I isolated the "syntax error" messages as occurring
during the execution of the make-databases function.

AXIONsys is actually built but the database files are still
missing from mnt. They can actually be found in int but
they have not been renamed.

It is possible to start AXIOMsys anyway but it bails out
into the BOOT> prompt which where I can start executing
lisp commands. That is where is am doing my tests. Last
night tried to see what was going on in make-databases
and experimented with several file access commands like
probe-file and namestring. At least one of the failure
messages probably occurs when namestring is called to
convert a NIL. That's when I tried (|getEnv| "AXIOM") which
is used in one place to construct part of a file name. It
just calls system::getenv in turn.

I discovered that I could not longer get the AXIOM
environment variable using |getEnv| nor system::getenv. But
that outside of AXIOMsys, echo $AXIOM as fine. And my test
program (see previous message) also was fine. Every time
I tried to use system:getenv for the AXIOM variable it
failed. But the PATH variable was retrieved just fine.

That is all I knew until Camm asked about my report
tonight. I wrote up exact the test that I had done the
night before. But when you asked me to do a few more
tests, I found that the failure no longer occurred. Of
course in the mean time the machine on which I had been
working had been powered down and rebooted...

So what exactly did I do to reproduce the problem again?
I just did a 'make clean' and ran the build up to the
make-databases failure again. Then I started reading my
notes from last night (something I was reminded to do from
Mike's recent comments :) and followed the same steps of
setting the AXIOM variable in Windows before starting MSYS.
Re-running the build caused the "syntax errors" to change
to "rm not found" just like I reported last night. As Mike
noted, system commands like "rm" and "sort" occur in some
of the boot code that is used during the make-databases
function.

But here is where it gets weird. Doing the above also subtly
screws up the Windows environment. Now I was suddenly unable
to retrieve the value of the PATH variable this time
using system:getenv and several attempts and stopping the
MSYS shell checking Windows and restarting MSYS only made
this worse. Other environment variables started disappearing.
Right now the system is about back in the state is was last
night. Even logging out and back into Windows doesn't cure
the problem. (I fully expect that a full reboot a would :)

So, what have a learned: One thing, I guess is that compiling
AXIOM under GCL can really subtly mess up the Windows memory
management!

I also looked at the GCL code for getenv in main.c and I
noticed a scary section involving a call to free on the
pointer returned by the system getenv call. I imagine that
would really mess up Windows memory - but as far as I can
tell that option is not used during the Windows build.
Right?

I agree with Mike that we should focus on removing the
non-portable code from bootsys (and maybe elsewhere too?)
although I don't have any direct evidence that the problem
I am seeing with environment variables is necessarily
related those non-portable functions but they do appear at
about the same time. I rather suspect that it is some Windows
memory corruption that is the "first cause" of the failure
and these other commands are not really the problem. Perhaps
changing the Windows environment variables just allows the
process to go a little further. But they are probably easier
to fix than memory.

It is quire remarkable then that simply copying in new
database files and continuing actually allows the build
to complete. So far I have not seen any evidence of any
memory management problems in the running Axiom build
that I extracted from Mike's original cvs/head build, but
then I have not actually tried any commands that manipulate
files.

I apologize that this email once again has got so long.
Maybe I should go back to leaving this debugging stuff to
the experts like Camm and Mike! 

\start
Date: Wed, 8 Dec 2004 00:20:51 -0500
From: Tim Daly
To: Bill Page
Subject: Re: system::getenv does not return MSYS environment variables
Cc: Mike Thomas, Camm Maguire

Bill,

First, you're doing a great job on the debugging front.
Somebody has to collect the clues.

Second, we do need to collect and document all of the system
dependent code into a new src/interp/lisp file because these
will come up again at every port effort. In particular we
should have several sections of the pamphlet file:

file commands
  rm vs erase functionality
  mv vs move 

path naming issues
  / vs \
  / vs c:

system services
  getenv
  sockets
  X

lisp system commands
  system
  save-system
  
We can write cover functions and then #+ for each system.
Perhaps we can do this effort in the axiom--windows--1 branch as
that is where most of them will show up. Well, the lisp system
commands and sockets are likely to show up in the sbcl branch.

I'll create a file there and look at moving some functions to it.

Third, do you know about the DAASE shell variable? If you set this
variable axiom will use it to look for databases. Unfortunately I
don't remember what the exact issue is. All I can remember is a
report that the newly built databases did not work on some platform
but I dropped the ball somewhere chasing that one.

\start
Date: Wed, 8 Dec 2004 00:29:54 -0500
From: Tim Daly
To: list
Subject: Re: system::getenv does not return MSYS environment variables
Cc: Bill Page, Mike Thomas, Camm Maguire

Bill, Mike,

I put the unixport/makefile change into the windows branch.

\start
Date: Tue, 7 Dec 2004 23:47:54 -0500 
From: Bill Page
To: Tim Daly
Subject: RE: system::getenv does not return MSYS environment variables
Cc: Mike Thomas

Tim,

On Wednesday, December 08, 2004 12:21 AM you wrote:

> ...   
> We can write cover functions and then #+ for each system.
> Perhaps we can do this effort in the axiom--windows--1
> branch as that is where most of them will show up. Well,
> the lisp system commands and sockets are likely to show
> up in the sbcl branch.
> 
> I'll create a file there and look at moving some functions
> to it.

Great idea! Yes, I think doing this for Windows would be
especially useful and a good place to start.

> 
> Third, do you know about the DAASE shell variable? If you
> set this variable axiom will use it to look for databases.

Yes, it also occurs along with the AXIOM variable in the
same section of the src/interp/daase.lisp.pamphlet file that
I have been looking at. It's use appears to be option for
a possible non-standard location of the daase files. It
has no assigned value in the current build.

> Unfortunately I don't remember what the exact issue is.
> All I can remember is a report that the newly built
> databases did not work on some platform but I dropped
> the ball somewhere chasing that one.
> 

The database structure looks quite complicated to me
since it includes lots of reference to external files etc.
Maybe in some cases or some non-standard file structures
(this used to be more common than today) some parts of these
file names had to be modified by the use of this DAASE shell
variable?

Do you have a problem report tucked away somewhere? If so,
maybe I can keep it in mind as I look at this code.

\start
Date: Tue, 7 Dec 2004 23:34:03 -0500 
From: Bill Page
To: Mike Thomas
Subject: RE: [Gcl-devel] RE: system::getenv does not return MSYS environment variables

Mike,

On Tuesday, December 07, 2004 7:17 PM you wrote:
> 
> I suspect something is wrong at your end, I have no
> troubles reading either MSYS or Windows environment
> variables (I believe the build would not work if
> this were not the case):

Yes, you are right. It apparently takes some special
effort to create the situation where the failure starts
to occur. (See previous message.)

> 
> Is it possible you were expecting an Axiom system
> launched separately from an MSYS shell to see the
> environment variables in a separate MSYS shell?

No I understand that MSYS is a sub-process running under
windows.

But as I am quite sure you are aware, Windows memory
protection is quite a bit "softer" than under Linux. It is
quite easy (especially on older versions of windows) for
one miss-behaving process to step on the memory of other
processes or even the operating system. When I am feeling
generous to the Windows OS designers (not often), I might
claim that this is the price one pays for focusing on
"open" threaded processes for speed versus the security
and greater overhead of the Unix OS design. Hardware
advances have made it all moot anyway, but Windows still
has some of the original legacy.

Some of the things that I hear about that GCL apparently
does in memory really scares me when I think about Windows ...
that's when I feel like it's purely amazing that any of this
works at all! :)) I think the extraordinary skills of the
GCL developers (you included) are absolutely essential to
this success.

\start
Date: Wed, 8 Dec 2004 01:22:29 -0500
From: Tim Daly
To: Bill Page
Subject: Re: system::getenv does not return MSYS environment variables
Cc: Mike Thomas, Bill Page

I've created src/interp/port.lisp.pamphlet and will begin looking
for functions that are sensitive to porting issues. This has been
checked into axiom--windows--1

\start
Date: Wed, 8 Dec 2004 01:22:37 -0500 
From: Bill Page
To: Tim Daly
Subject: RE: system::getenv does not return MSYS environment variables
Cc: Mike Thomas

Tim,

>From what I have seen, the following should give you
a list to start:

$ cd src/interp
$ grep -i 'obey' *.boot.* *.lisp.*
$ grep -i '(system ' *.boot.* *.lisp.*

These problems all have to do with the fact that (system
calls windows command.com which is a very limite and non-
unix-like shell (MSDOS). I notice that some other platforms
use their own replacement shell programs. This is possibility
for windows too. There are some good open source possibly
even posix compliant shells for windows that Axiom could
just incorporate for use in Windows. But then, maybe it is
best just to avoid this and call lisp functions directly -
surely that would be more efficient then loading a shell.

On Wednesday, December 08, 2004 1:22 AM you wrote:
> 
> 
> I've created src/interp/port.lisp.pamphlet and will begin
> looking for functions that are sensitive to porting issues.
> This has been checked into axiom--windows--1
> 

\start
Date: Wed, 8 Dec 2004 02:15:26 -0500
From: Tim Daly
To: list
Subject: axiom--main--1--patch-13

Up until this point it was not possible to test the input files
which include the draw function calls since these required sman.
Now that sman and graphics work we can start testing these functions.

I've modified the src/input/Makefile.pamphlet so that it will invoke
sman rather than axiom for testing the files which include the draw
functions. At present it is only one input file (wiggle.input).
During the build process you will see graphs appear and disappear.
I'll be adding more input test files as soon as I can.

This will clearly be a problem with the various ports as we are 
not yet able to run graphics. However this change will not affect
the port branches.

I'll be running a full system test of axiom--main--1 overnight.

\start
Date: Wed, 8 Dec 2004 02:48:11 -0500 
From: Bill Page
To: Joris van der Hoeven
Subject: [Texmacs-dev] \left( and \right) conversions from LaTeX
Cc: Dan Martins, Bill Page

Joris,

I have found that if I edit the document tree and replace
<with|mathdisplay|true| ... > by <with|mode|math| ... >
then the parenthesis are displayed properly. The only way
I found this was by manually entering a formula that uses
such parenthese and then locating it in the document tree.
All I did was change the result of the LaTeX conversion to
the same thing and it works. (but this editing is tedious).

This suggests to me that the LaTeX conversion to TeXmacs
form must be wrong.

I don't understand the difference between

<with|mathdisplay|true| ... > and <with|mode|math| ... >

could you explain?

> -----Original Message-----
> 
> > What I see in TeXmacs is literally
> >
> >   <left-(-1> and <right-)-1>
> >
> > instead of the acutal parenthesis.
> 
> Are you sure that they are in math-mode and that you have
> the necessary fonts? If so, then can you attach a small
> concrete example file which demonstrates the problem?

\start
Date: Wed, 8 Dec 2004 04:20:06 -0500 
From: Bill Page
To: Mike Thomas
Subject: RE: Database fixes.

Mike,

That's great news. It will be nice to put this part of the
project "to bed" ...

The Makefile.pamphlet file that you attached did not contain
a <<windows>> section. Does this file have to be merged with
the existing one or is it the wrong file?

Thanks.

Bill Page.

On Wednesday, December 08, 2004 3:12 AM you wrote:
> 
> I haven't built Axiom from scratch with the attached changed 
> and added files but running the following exerpt from the
> makefile in int/algebra now runs to completion and so
> I expect the daase files should rebuild:
> 
>   )lisp (make-databases "" nil)
> 
> The GCL patch fixes a GCL 2.6.5 vs CVS HEAD GCL deficiency,
> the src directory stuff the "makedir" problem I mentioned
> yesterday.  It hasn't yet gone into Tim's new port file but
> that can be sorted out later by whomever.
> 
> I won't be available for at least the next 24 hours for 
> anything at all so best of luck.
> 

\start
Date: Wed, 8 Dec 2004 11:21:03 +0100 (CET)
From: Joris van der Hoeven
To: Bill Page
Subject: Re: [Texmacs-dev] \left( and \right) conversions from LaTeX
Cc: Dan Martins

On Wed, 8 Dec 2004, Page, Bill wrote:
> I don't understand the difference between
> <with|mathdisplay|true| ... > and <with|mode|math| ... >

You mean "math-display" instead of "mathdisplay"? This corresponds to
display style in TeX/LaTeX. The second one selects math mode.
So the parentheses indeed do not seem to be in math mode for some reason.

Can you send a simple LaTeX fragment which was not correctly converted
according to you?

\start
Date: Wed, 8 Dec 2004 07:12:59 -0500
From: Tim Daly
To: list
Subject: book volume 4

I think we need a 4th volume of the axiom book written by and for 
developers. We need to document the internals, the build method,
the various tweaks and tricks that are possible, methods of writing
tests, how to add new directories, porting issues, documentation
standards, beginners guides, etc.

I'll make a stab at an outline and upload it later today to
book--main--1

\start
Date: Wed, 8 Dec 2004 05:54:46 -0500 
From: Bill Page
To: Joris van der Hoeven
Subject: RE: [Texmacs-dev] \left( and \right) conversions from LaTeX
Cc: Dan Martins,

Thanks Joris.

Attached are two files. One is LaTeX generated by Axiom and
the line-breaker filter interface (TeXmacs communication
protocol mark-up removed and wrapped in standard LaTeX
document preamble. It compiles nicely in LaTeX to a pdf file
(I can it too if you like).

The other is a TeXmacs document containing the imported LaTeX
(also looks real nice!) and then exactly the same thing as
an Axiom session with the same interface with line-breaker
filter, showing the tags displayed instead of actual parenthesis.

Regards,
Bill Page.

> -----Original Message-----
> 
> On Wed, 8 Dec 2004, Page, Bill wrote:
> > I don't understand the difference between
> > <with|mathdisplay|true| ... > and <with|mode|math| ... >
> 
> You mean "math-display" instead of "mathdisplay"? This corresponds to
> display style in TeX/LaTeX. The second one selects math mode.
> So the parentheses indeed do not seem to be in math mode for 
> some reason.
> 
> Can you send a simple LaTeX fragment which was not correctly converted
> according to you?
> 

------_=_NextPart_000_01C4DD14.54EDEDE0
	name="axiom-import-test.tex"
	filename="axiom-import-test.tex"

\documentclass{article}
\begin{document}

Test equations with expandable parenthesis.

$$
{\left(
\begin{array}{@{}l}
\displaystyle
{{x^{10}}\,{z^{10}}}+{{\left({{10}\,{x^{10}}\, =
y}+{{10}\,{x^9}}\right)}\,{z^9}}+ 
\\
\\
\displaystyle
{{\left({{45}\,{x^{10}}\,{y^2}}+{{90}\,{x^9}\, =
y}+{{45}\,{x^8}}\right)}\,{z^8}}+ 
\\
\\
\displaystyle
{{\left({{120}\,{x^{10}}\,{y^3}}+{{360}\,{x^9}\,{y^2}}+{{360}\,{x^8}\, =
y}+{{120}\,{x^7}}\right)}\,{z^7}}+ 
\\
\\
\displaystyle
{{\left({
\begin{array}{@{}l}
\displaystyle
{{210}\,{x^{10}}\,{y^4}}+{{840}\,{x^9}\,{y^3}}+{{1260}\,{x^8}\,{y^2}}+{{=
840}\,{x^7}\, y}+ 
\\
\\
\displaystyle
{{210}\,{x^6}}
\end{array}
}\right)}\,{z^6}}+ 
\\
\\
\displaystyle
{{\left({
\begin{array}{@{}l}
\displaystyle
{{252}\,{x^{10}}\,{y^5}}+{{1260}\,{x^9}\,{y^4}}+{{2520}\,{x^8}\,{y^3}}+ =

\\
\\
\displaystyle
{{2520}\,{x^7}\,{y^2}}+{{1260}\,{x^6}\, y}+{{252}\,{x^5}}
\end{array}
}\right)}\,{z^5}}+ 
\\
\\
\displaystyle
{{\left({
\begin{array}{@{}l}
\displaystyle
{{210}\,{x^{10}}\,{y^6}}+{{1260}\,{x^9}\,{y^5}}+{{3150}\,{x^8}\,{y^4}}+ =

\\
\\
\displaystyle
{{4200}\,{x^7}\,{y^3}}+{{3150}\,{x^6}\,{y^2}}+{{1260}\,{x^5}\, =
y}+{{210}\,{x^4}}
\end{array}
}\right)}\,{z^4}}+ 
\\
\\
\displaystyle
{{\left({
\begin{array}{@{}l}
\displaystyle
{{120}\,{x^{10}}\,{y^7}}+{{840}\,{x^9}\,{y^6}}+{{2520}\,{x^8}\,{y^5}}+ =

\\
\\
\displaystyle
{{4200}\,{x^7}\,{y^4}}+{{4200}\,{x^6}\,{y^3}}+{{2520}\,{x^5}\,{y^2}}+{{8=
40}\,{x^4}\, y}+ 
\\
\\
\displaystyle
{{120}\,{x^3}}
\end{array}
}\right)}\,{z^3}}+ 
\\
\\
\displaystyle
{{\left({
\begin{array}{@{}l}
\displaystyle
{{45}\,{x^{10}}\,{y^8}}+{{360}\,{x^9}\,{y^7}}+{{1260}\,{x^8}\,{y^6}}+{{2=
520}\,{x^7}\,{y^5}}+ 
\\
\\
\displaystyle
{{3150}\,{x^6}\,{y^4}}+{{2520}\,{x^5}\,{y^3}}+{{1260}\,{x^4}\,{y^2}}+{{3=
60}\,{x^3}\, y}+ 
\\
\\
\displaystyle
{{45}\,{x^2}}
\end{array}
}\right)}\,{z^2}}+ 
\\
\\
\displaystyle
{{\left({
\begin{array}{@{}l}
\displaystyle
{{10}\,{x^{10}}\,{y^9}}+{{90}\,{x^9}\,{y^8}}+{{360}\,{x^8}\,{y^7}}+{{840=
}\,{x^7}\,{y^6}}+ 
\\
\\
\displaystyle
{{1260}\,{x^6}\,{y^5}}+{{1260}\,{x^5}\,{y^4}}+{{840}\,{x^4}\,{y^3}}+{{36=
0}\,{x^3}\,{y^2}}+ 
\\
\\
\displaystyle
{{90}\,{x^2}\, y}+{{10}\, x}
\end{array}
}\right)}\, z}+ 
\\
\\
\displaystyle
{{x^{10}}\,{y^{10}}}+{{10}\,{x^9}\,{y^9}}+{{45}\,{x^8}\,{y^8}}+{{120}\,{=
x^7}\,{y^7}}+{{210}\,{x^6}\,{y^6}}+ 
\\
\\
\displaystyle
{{252}\,{x^5}\,{y^5}}+{{210}\,{x^4}\,{y^4}}+{{120}\,{x^3}\,{y^3}}+{{45}\=
,{x^2}\,{y^2}}+{{10}\, x \, y}+ 1 
\end{array}
\right)}\over{x^{10}}\leqno(1)
$$

\end{document}


------_=_NextPart_000_01C4DD14.54EDEDE0
	name="axiom-import-test.tm"
	filename="axiom-import-test.tm"

<TeXmacs|wintexmacs-1.0.4.1 Release 1.1dev>

<style|<tuple|article|axiom>>

<\body>
  Test equations with expandable parenthesis.

  \;

  Imported a LaTeX generated by Axiom and filtered by line-breaker

  program:

  \;

  <\equation*>
    =
<frac|<left|(><tabular*|<tformat|<table|<row|<cell|<with|math-display|tr=
ue|x<rsup|10><space|0.25spc>z<rsup|10>+<left|(>10<space|0.25spc>x<rsup|1=
0><space|0.25spc>y+10<space|0.25spc>x<rsup|9><right|)><space|0.25spc>z<r=
sup|9>+>>>|<row|<cell|>>|<row|<cell|<with|math-display|true|<left|(>45<s=
pace|0.25spc>x<rsup|10><space|0.25spc>y<rsup|2>+90<space|0.25spc>x<rsup|=
9><space|0.25spc>y+45<space|0.25spc>x<rsup|8><right|)><space|0.25spc>z<r=
sup|8>+>>>|<row|<cell|>>|<row|<cell|<with|math-display|true|<left|(>120<=
space|0.25spc>x<rsup|10><space|0.25spc>y<rsup|3>+360<space|0.25spc>x<rsu=
p|9><space|0.25spc>y<rsup|2>+360<space|0.25spc>x<rsup|8><space|0.25spc>y=
+120<space|0.25spc>x<rsup|7><right|)><space|0.25spc>z<rsup|7>+>>>|<row|<=
cell|>>|<row|<cell|<with|math-display|true|<left|(><tabular*|<tformat|<t=
able|<row|<cell|<with|math-display|true|210<space|0.25spc>x<rsup|10><spa=
ce|0.25spc>y<rsup|4>+840<space|0.25spc>x<rsup|9><space|0.25spc>y<rsup|3>=
+1260<space|0.25spc>x<rsup|8><space|0.25spc>y<rsup|2>+840<space|0.25spc>=
x<rsup|7><space|0.25spc>y+>>>|<row|<cell|>>|<row|<cell|<with|math-displa=
y|true|210<space|0.25spc>x<rsup|6>>>>>>>><right|)><space|0.25spc>z<rsup|=
6>+>>|<row|<cell|>>|<row|<cell|<with|math-display|true|<left|(><tabular*=
|<tformat|<table|<row|<cell|<with|math-display|true|252<space|0.25spc>x<=
rsup|10><space|0.25spc>y<rsup|5>+1260<space|0.25spc>x<rsup|9><space|0.25=
spc>y<rsup|4>+2520<space|0.25spc>x<rsup|8><space|0.25spc>y<rsup|3>+>>>|<=
row|<cell|>>|<row|<cell|<with|math-display|true|2520<space|0.25spc>x<rsu=
p|7><space|0.25spc>y<rsup|2>+1260<space|0.25spc>x<rsup|6><space|0.25spc>=
y+252<space|0.25spc>x<rsup|5>>>>>>>><right|)><space|0.25spc>z<rsup|5>+>>=
|<row|<cell|>>|<row|<cell|<with|math-display|true|<left|(><tabular*|<tfo=
rmat|<table|<row|<cell|<with|math-display|true|210<space|0.25spc>x<rsup|=
10><space|0.25spc>y<rsup|6>+1260<space|0.25spc>x<rsup|9><space|0.25spc>y=
<rsup|5>+3150<space|0.25spc>x<rsup|8><space|0.25spc>y<rsup|4>+>>>|<row|<=
cell|>>|<row|<cell|<with|math-display|true|4200<space|0.25spc>x<rsup|7><=
space|0.25spc>y<rsup|3>+3150<space|0.25spc>x<rsup|6><space|0.25spc>y<rsu=
p|2>+1260<space|0.25spc>x<rsup|5><space|0.25spc>y+210<space|0.25spc>x<rs=
up|4>>>>>>>><right|)><space|0.25spc>z<rsup|4>+>>|<row|<cell|>>|<row|<cel=
l|<with|math-display|true|<left|(><tabular*|<tformat|<table|<row|<cell|<=
with|math-display|true|120<space|0.25spc>x<rsup|10><space|0.25spc>y<rsup=
|7>+840<space|0.25spc>x<rsup|9><space|0.25spc>y<rsup|6>+2520<space|0.25s=
pc>x<rsup|8><space|0.25spc>y<rsup|5>+>>>|<row|<cell|>>|<row|<cell|<with|=
math-display|true|4200<space|0.25spc>x<rsup|7><space|0.25spc>y<rsup|4>+4=
200<space|0.25spc>x<rsup|6><space|0.25spc>y<rsup|3>+2520<space|0.25spc>x=
<rsup|5><space|0.25spc>y<rsup|2>+840<space|0.25spc>x<rsup|4><space|0.25s=
pc>y+>>>|<row|<cell|>>|<row|<cell|<with|math-display|true|120<space|0.25=
spc>x<rsup|3>>>>>>>><right|)><space|0.25spc>z<rsup|3>+>>|<row|<cell|>>|<=
row|<cell|<with|math-display|true|<left|(><tabular*|<tformat|<table|<row=
|<cell|<with|math-display|true|45<space|0.25spc>x<rsup|10><space|0.25spc=
>y<rsup|8>+360<space|0.25spc>x<rsup|9><space|0.25spc>y<rsup|7>+1260<spac=
e|0.25spc>x<rsup|8><space|0.25spc>y<rsup|6>+2520<space|0.25spc>x<rsup|7>=
<space|0.25spc>y<rsup|5>+>>>|<row|<cell|>>|<row|<cell|<with|math-display=
|true|3150<space|0.25spc>x<rsup|6><space|0.25spc>y<rsup|4>+2520<space|0.=
25spc>x<rsup|5><space|0.25spc>y<rsup|3>+1260<space|0.25spc>x<rsup|4><spa=
ce|0.25spc>y<rsup|2>+360<space|0.25spc>x<rsup|3><space|0.25spc>y+>>>|<ro=
w|<cell|>>|<row|<cell|<with|math-display|true|45<space|0.25spc>x<rsup|2>=
>>>>>>><right|)><space|0.25spc>z<rsup|2>+>>|<row|<cell|>>|<row|<cell|<wi=
th|math-display|true|<left|(><tabular*|<tformat|<table|<row|<cell|<with|=
math-display|true|10<space|0.25spc>x<rsup|10><space|0.25spc>y<rsup|9>+90=
<space|0.25spc>x<rsup|9><space|0.25spc>y<rsup|8>+360<space|0.25spc>x<rsu=
p|8><space|0.25spc>y<rsup|7>+840<space|0.25spc>x<rsup|7><space|0.25spc>y=
<rsup|6>+>>>|<row|<cell|>>|<row|<cell|<with|math-display|true|1260<space=
|0.25spc>x<rsup|6><space|0.25spc>y<rsup|5>+1260<space|0.25spc>x<rsup|5><=
space|0.25spc>y<rsup|4>+840<space|0.25spc>x<rsup|4><space|0.25spc>y<rsup=
|3>+360<space|0.25spc>x<rsup|3><space|0.25spc>y<rsup|2>+>>>|<row|<cell|>=
>|<row|<cell|<with|math-display|true|90<space|0.25spc>x<rsup|2><space|0.=
25spc>y+10<space|0.25spc>x>>>>>>><right|)><space|0.25spc>z+>>|<row|<cell=
|>>|<row|<cell|<with|math-display|true|x<rsup|10><space|0.25spc>y<rsup|1=
0>+10<space|0.25spc>x<rsup|9><space|0.25spc>y<rsup|9>+45<space|0.25spc>x=
<rsup|8><space|0.25spc>y<rsup|8>+120<space|0.25spc>x<rsup|7><space|0.25s=
pc>y<rsup|7>+210<space|0.25spc>x<rsup|6><space|0.25spc>y<rsup|6>+>>>|<ro=
w|<cell|>>|<row|<cell|<with|math-display|true|252<space|0.25spc>x<rsup|5=
><space|0.25spc>y<rsup|5>+210<space|0.25spc>x<rsup|4><space|0.25spc>y<rs=
up|4>+120<space|0.25spc>x<rsup|3><space|0.25spc>y<rsup|3>+45<space|0.25s=
pc>x<rsup|2><space|0.25spc>y<rsup|2>+10<space|0.25spc>x<space|0.25spc>y+=
1>>>>>><right|)>|x<rsup|10>><leqno>(1)

    <\with|mode|text>
      \;
    </with>
  </equation*>

  The next is exactly the same output from Axiom using the same filter =
but
  run as a session.

  \;

  <with|prog-language|axiom|prog-session|default|<\session>
    <\input|<with|color|red|<with|mode|math|\<rightarrow\>> >>
      (1/x+y+z)^10
    </input>

    <\output>
      \;

      <with|mode|math|math-display|true|><frac|<left|(>
      <tabular*|<tformat|<table|<row|<cell|
      <with|math-display|true|x<rsup|10> z<rsup|10>+<left|(>10 =
x<rsup|10>
      y+10 x<rsup|9><right|)> z<rsup|9>+ =
>>>|<row|<cell|>>|<row|<cell|<with|math-display|true|<left|(>45
      x<rsup|10> y<rsup|2>+90 x<rsup|9> y+45 x<rsup|8><right|)> =
z<rsup|8>+
      =
>>>|<row|<cell|>>|<row|<cell|<with|math-display|true|<left|(>120
      x<rsup|10> y<rsup|3>+360 x<rsup|9> y<rsup|2>+360 x<rsup|8> =
y+120
      x<rsup|7><right|)> z<rsup|7>+ =
>>>|<row|<cell|>>|<row|<cell|<with|math-display|true|<left|(><tabular*|<=
tformat|<table|<row|<cell|
      <with|math-display|true|210 x<rsup|10> y<rsup|4>+840 x<rsup|9>
      y<rsup|3>+1260 x<rsup|8> y<rsup|2>+840 x<rsup|7> y+
      >>>|<row|<cell|>>|<row|<cell|<with|math-display|true|210 =
x<rsup|6>
      >>>>>> ><right|)> z<rsup|6>+ =
>>|<row|<cell|>>|<row|<cell|<with|math-display|true|<left|(><tabular*|<t=
format|<table|<row|<cell|
      <with|math-display|true|252 x<rsup|10> y<rsup|5>+1260 =
x<rsup|9>
      y<rsup|4>+2520 x<rsup|8> y<rsup|3>+
      >>>|<row|<cell|>>|<row|<cell|<with|math-display|true|2520 =
x<rsup|7>
      y<rsup|2>+1260 x<rsup|6> y+252 x<rsup|5> >>>>>> ><right|)> =
z<rsup|5>+
      =
>>|<row|<cell|>>|<row|<cell|<with|math-display|true|<left|(><tabular*|<t=
format|<table|<row|<cell|
      <with|math-display|true|210 x<rsup|10> y<rsup|6>+1260 =
x<rsup|9>
      y<rsup|5>+3150 x<rsup|8> y<rsup|4>+
      >>>|<row|<cell|>>|<row|<cell|<with|math-display|true|4200 =
x<rsup|7>
      y<rsup|3>+3150 x<rsup|6> y<rsup|2>+1260 x<rsup|5> y+210 =
x<rsup|4>
      >>>>>> ><right|)> z<rsup|4>+ =
>>|<row|<cell|>>|<row|<cell|<with|math-display|true|<left|(><tabular*|<t=
format|<table|<row|<cell|
      <with|math-display|true|120 x<rsup|10> y<rsup|7>+840 x<rsup|9>
      y<rsup|6>+2520 x<rsup|8> y<rsup|5>+
      >>>|<row|<cell|>>|<row|<cell|<with|math-display|true|4200 =
x<rsup|7>
      y<rsup|4>+4200 x<rsup|6> y<rsup|3>+2520 x<rsup|5> =
y<rsup|2>+840
      x<rsup|4> y+ =
>>>|<row|<cell|>>|<row|<cell|<with|math-display|true|120
      x<rsup|3> >>>>>> ><right|)> z<rsup|3>+
      =
>>|<row|<cell|>>|<row|<cell|<with|math-display|true|<left|(><tabular*|<t=
format|<table|<row|<cell|
      <with|math-display|true|45 x<rsup|10> y<rsup|8>+360 x<rsup|9>
      y<rsup|7>+1260 x<rsup|8> y<rsup|6>+2520 x<rsup|7> y<rsup|5>+
      >>>|<row|<cell|>>|<row|<cell|<with|math-display|true|3150 =
x<rsup|6>
      y<rsup|4>+2520 x<rsup|5> y<rsup|3>+1260 x<rsup|4> =
y<rsup|2>+360
      x<rsup|3> y+ =
>>>|<row|<cell|>>|<row|<cell|<with|math-display|true|45
      x<rsup|2> >>>>>> ><right|)> z<rsup|2>+
      >>|<row|<cell|>>|<row|<cell|<with|math-display|true|<left|(><tabul=
ar*|<tformat|<table|<row|<cell|
      <with|math-display|true|10 x<rsup|10> y<rsup|9>+90 x<rsup|9>
      y<rsup|8>+360 x<rsup|8> y<rsup|7>+840 x<rsup|7> y<rsup|6>+
      >>>|<row|<cell|>>|<row|<cell|<with|math-display|true|1260 =
x<rsup|6>
      y<rsup|5>+1260 x<rsup|5> y<rsup|4>+840 x<rsup|4> y<rsup|3>+360
      x<rsup|3> y<rsup|2>+ =
>>>|<row|<cell|>>|<row|<cell|<with|math-display|true|90
      x<rsup|2> y+10 x >>>>>> ><right|)> z+
      >>|<row|<cell|>>|<row|<cell|<with|math-display|true|x<rsup|10>
      y<rsup|10>+10 x<rsup|9> y<rsup|9>+45 x<rsup|8> y<rsup|8>+120 =
x<rsup|7>
      y<rsup|7>+210 x<rsup|6> y<rsup|6>+ =
>>>|<row|<cell|>>|<row|<cell|<with|math-display|true|252
      x<rsup|5> y<rsup|5>+210 x<rsup|4> y<rsup|4>+120 x<rsup|3> =
y<rsup|3>+45
      x<rsup|2> y<rsup|2>+10 x \ y+ 1 >>>>>>
      <right|)>|x<rsup|10>><leqno>(1)<with|mode|math|>

      <axiomtype|Fraction Polynomial Integer>
    </output>

    <\input|<with|color|red|<with|mode|math|\<rightarrow\>> >>
      \;
    </input>
  </session>>
</body>
------_=_NextPart_000_01C4DD14.54EDEDE0--

\start
Date: Wed, 8 Dec 2004 13:09:50 +0100 (CET)
From: Waldek Hebisch
To: list
Subject: axiom on AMD64

I wrote:
> Next problem is that library settinge form the `Makefile.fedora64',
> namely the line:
>
> LDF:="-L/usr/X11R6/lib64 -L/usr/local/lib64 -L/usr/openwin/lib64 -L/usr/lib64 "
>
> apparently did not propagate to `view2D' directory. More precisely,
> the build failed at link stage:
>
> 34 linking /pom/kompi/axiom/axiom2/mnt/fedora64/lib/view2D
> gcc-3.3.1: /usr/X11R6/lib/libXpm.a: No such file or directory
> make[4]: *** [/pom/kompi/axiom/axiom2/mnt/fedora64/lib/view2D] Error 1
> make[4]: Leaving directory `/pom/kompi/axiom/axiom2/src/graph/view2D'
> make[3]: *** [view2Ddir] Error 2

I solved the problem adding:

XLIB=/usr/X11R6/lib64

to the `fedora64' section (I build on Mandrake 9.1 and it has `libXpm.a'
in `/usr/X11R6/lib64'). The `LDF' variable did propagate correctly ...

Now axiom (and graphics!!) works OK.

\start
Date: Tue, 7 Dec 2004 18:00:53 +1000
From: Mike Thomas
To: Tim Daly, Bill Page
Subject: State of play with GCL 2.6.5 on Windows

Hi again.

What a chase - the algebra is now compiling with GCL 2.6.5 on Windows; who
knows what lies ahead, but it's probably OK.  Apart from:

 1. the crashing "tla",

 2. the absence of the "src/share" directory from "axiom--windows--1" (or at
least the copy I managed to download via HTTP repository tla),

 3. a new kind of crash compiling AHYP, and

 4. a total of 4 new Axiom source tree GCL patches to backport CVS HEAD
changes for gcc 3.4.2 and latest libraries to GCL 2.6.5,

everything went OK.

Item 3, the 2.6.5 AHYP crash cause was in the cfun.c.pamphlet DIRECTORYP,
this had a bug on Windows now hopefully fixed.  I had to remove
ensure-directory-exists from src/interp/nlib.lisp.pamphlet as it was
apparently not present in 2.6.5.  Hopefully everything is still OK for the
CVS HEAD GCL build.

Four new patches and those modified files I can remember are attached for
Tim to incorporate into his arch/CVS complex non-linear system so that
current state on Windows can be recorded for posterity.  This is due to the
aforementioned tla problems on Windows.

Fingers crossed and hope to rest

Mike Thomas

------=_NextPart_000_01C3_01C4DC86.B2284B10
	name="Makefile"
	filename="Makefile"

SPD=$(shell pwd -W)
SYS=$(notdir $(AXIOM))
SPAD=${SPD}/mnt/${SYS}
LSP=${SPD}/lsp
#GCLVERSION=gcl-2.4.1
#GCLVERSION=gcl-2.5
#GCLVERSION=gcl-2.5.2
#GCLVERSION=gcl-2.6.1
#GCLVERSION=gcl-2.6.2
#GCLVERSION=gcl-2.6.2a
#GCLVERSION=gcl-2.6.3
GCLVERSION=gcl-2.6.5
AWK=gawk
GCLDIR=${LSP}/${GCLVERSION}
SRC=${SPD}/src
INT=${SPD}/int
OBJ=${SPD}/obj
MNT=${SPD}/mnt
ZIPS=${shell pwd}/zips
TMP=${OBJ}/tmp
SPADBIN=${MNT}/${SYS}/bin
INC=${SPD}/src/include
CCLBASE=${OBJ}/${SYS}/ccl/ccllisp
INSTALL=/usr/local/axiom
COMMAND=${INSTALL}/mnt/${SYS}/bin/axiom
TANGLE=${SPADBIN}/lib/notangle

NOISE="-o ${TMP}/trace"

PART=	cprogs
SUBPART= everything


ENV= SPAD=${SPAD} SYS=${SYS} SPD=${SPD} LSP=${LSP} =
GCLDIR=${GCLDIR} \
     SRC=${SRC} INT=${INT} OBJ=${OBJ} MNT=${MNT} ZIPS=${ZIPS} =
TMP=${TMP} \
     SPADBIN=${SPADBIN} INC=${INC} CCLBASE=${CCLBASE} =
PART=${PART} \
     SUBPART=${SUBPART} NOISE=${NOISE} GCLVERSION=${GCLVERSION} \
     TANGLE=${TANGLE} 

all: noweb litcmds
	@ echo 1 making a ${SYS} system, PART=${PART} SUBPART=${SUBPART}
	@ echo 2 Environment ${ENV}
	@ ${TANGLE} -t8 -RMakefile.${SYS} Makefile.pamphlet >Makefile.${SYS}
	@ ${ENV} $(MAKE) -f Makefile.${SYS} 
	@echo 3 finished system build on `date` | tee >lastBuildDate

start: noweb litcmds

book:
	@ echo 79 building the book as ${MNT}/${SYS}/doc/book.dvi 
	@ mkdir -p ${TMP}
	@ mkdir -p ${MNT}/${SYS}/doc
	@ cp ${SRC}/doc/book.pamphlet ${MNT}/${SYS}/doc
	@ cp -pr ${SRC}/doc/ps ${MNT}/${SYS}/doc
	@ (cd ${MNT}/${SYS}/doc ; \
          if [ .${NOISE} = . ] ; then \
	    ( latex book.pamphlet --interaction nonstopmode ; \
	      latex book.pamphlet --interaction nonstopmode ) ; \
	   else \
	    ( latex book.pamphlet --interaction nonstopmode >${TMP}/trace ; \
	      latex book.pamphlet --interaction nonstopmode >${TMP}/trace ) ; \
	  fi ; \
	  rm book.pamphlet ; \
	  rm book.toc ; \
	  rm book.log ; \
	  rm book.aux )
	@ echo 80 The book is at ${MNT}/${SYS}/doc/book.dvi 

noweb:
	@echo 13 making noweb
	@mkdir -p ${OBJ}/noweb
	@mkdir -p ${TMP}
	@mkdir -p ${MNT}/${SYS}/bin/lib
	@( cd ${OBJ}/noweb ; \
	tar -zxf ${ZIPS}/noweb-2.10a.tgz ; \
	cd ${OBJ}/noweb/src/c ; \
	patch <${ZIPS}/noweb.modules.c.patch ; \
	cd ${OBJ}/noweb/src ; \
	./awkname ${AWK} ; \
	patch <${ZIPS}/noweb.src.Makefile.patch ; \
	${ENV} ${MAKE} BIN=${MNT}/${SYS}/bin/lib LIB=${MNT}/${SYS}/bin/lib \
                MAN=${MNT}/${SYS}/bin/man \
                TEXINPUTS=${MNT}/${SYS}/bin/tex all install =
>${TMP}/trace )
	@echo The file marks the fact that noweb has been made > noweb

nowebclean:
	@echo 14 cleaning ${OBJ}/noweb
	@rm -rf ${OBJ}/noweb
	@rm -f noweb

litcmds:
	@echo 0 ${ENV}
	@echo 10 copying ${SRC}/scripts to ${MNT}/${SYS}/bin
	@cp -pr ${SRC}/scripts/* ${MNT}/${SYS}/bin

install:
	@echo 78 installing Axiom in ${INSTALL}
	@mkdir -p ${INSTALL}
	@cp -pr ${MNT} ${INSTALL}
	@echo AXIOM=${INSTALL}/mnt/${SYS} >${COMMAND}
	@cat ${SRC}/etc/axiom >>${COMMAND}
	@chmod +x ${COMMAND}
	@echo 79 Axiom installation finished.
	@echo
	@echo Please add $(shell dirname ${COMMAND}) to your PATH variable
	@echo Start Axiom with the command $(shell basename ${COMMAND})
	@echo 



document: noweb litcmds
	@ echo 4 making a ${SYS} system, PART=${PART} SUBPART=${SUBPART}
	@ echo 5 Environment ${ENV}
	@ ${TANGLE} -t8 -RMakefile.${SYS} Makefile.pamphlet >Makefile.${SYS}
	@ ${ENV} $(MAKE) -f Makefile.${SYS} document
	@echo 6 finished system build on `date` | tee >lastBuildDate

clean: noweb litcmds
	@ echo 7 making a ${SYS} system, PART=${PART} SUBPART=${SUBPART}
	@ echo 8 Environment ${ENV}
	@ ${TANGLE} -t8 -RMakefile.${SYS} Makefile.pamphlet >Makefile.${SYS}
	@ ${ENV} $(MAKE) -f Makefile.${SYS} clean
	@ rm -f noweb 
	@ rm -f *~
	@echo 9 finished system build on `date` | tee >lastBuildDate


------=_NextPart_000_01C3_01C4DC86.B2284B10
	name="gcl-2.6.5.unixport.makefile.1.patch"

--- lsp/gcl-2.6.5/unixport/makefile.orig	Tue Dec  7 13:59:51 2004
+++ lsp/gcl-2.6.5/unixport/makefile	Tue Dec  7 14:00:15 2004
@@ -29,7 +29,7 @@
 	rm -rf gmp
 	mkdir gmp
 	a="$^" ; \
-	for i in $^ ; do \
+	for i in $$a ; do \
 		cp $$i gmp/$$(echo $$i | sed -e 's,\.\./,,1' -e 's,/,_,g') ; \
 	done
 	touch $@

------=_NextPart_000_01C3_01C4DC86.B2284B10
	name="gcl-2.6.5.mingfile.c.patch"
	filename="gcl-2.6.5.mingfile.c.patch"

--- lsp/gcl-2.6.5/o/mingfile.c.orig	Tue Dec  7 15:09:44 2004
+++ lsp/gcl-2.6.5/o/mingfile.c	Tue Dec  7 15:10:17 2004
@@ -10,7 +10,7 @@
 	object path;
 	check_arg(1);
 	check_type_or_pathname_string_symbol_stream(&vs_base[0]);
-	path = vs_base[0] = truename(coerce_to_pathname(vs_base[0]));
+	path = vs_base[0] = coerce_to_pathname(vs_base[0]);
 	
 	if (vs_base[0]->pn.pn_name==Cnil && =
vs_base[0]->pn.pn_type==Cnil) {
 		coerce_to_filename(vs_base[0], filename);

------=_NextPart_000_01C3_01C4DC86.B2284B10
	name="gcl-2.6.5.h.mingw.defs.patch"
	filename="gcl-2.6.5.h.mingw.defs.patch"

--- lsp/gcl-2.6.5/h/mingw.defs.orig	Tue Dec  7 16:04:00 2004
+++ lsp/gcl-2.6.5/h/mingw.defs	Tue Dec  7 16:05:11 2004
@@ -20,7 +20,7 @@
 FIRST_FILE   = $(ODIR)/firstfile.o
 LAST_FILE    = $(ODIR)/lastfile.o
 LIBFILES     = bcmp.o bzero.o bcopy.o
-EXTRAS       = ${ODIR}/mingwin.o ${ODIR}/mingfile.o
+EXTRAS       = ${ODIR}/mingwin.o ${ODIR}/mingfile.o =
${OBJ}/${SYS}/lib/cfuns-c.o ${OBJ}/${SYS}/lib/sockio-c.o
 
 # When using SFASL it is good to have (si::build-symbol-table)
 INITFORM     = (si::build-symbol-table)

------=_NextPart_000_01C3_01C4DC86.B2284B10
	name="gcl-2.6.5.alloc.c.patch"
	filename="gcl-2.6.5.alloc.c.patch"

--- lsp/gcl-2.6.5/o/alloc.c.orig	Tue Dec  7 14:15:00 2004
+++ lsp/gcl-2.6.5/o/alloc.c	Tue Dec  7 14:15:49 2004
@@ -1485,7 +1485,17 @@
 	     	RECREATE_HEAP
 #endif
 		;
-	   }
+#ifdef       __MINGW32__
+                /* If malloc() gets called by the C runtime before
+                 * main starts and the shared memory is not yet
+                 * initialised causing boofo.
+                 * SET_REAL_MAXPAGE calls init_shared_memory().
+                 * This problem arose with gcc 3.4.2 and new libs.
+                 */
+                SET_REAL_MAXPAGE
+                ;
+#endif
+            }
 	}
 
 #endif	

------=_NextPart_000_01C3_01C4DC86.B2284B10
	name="Makefile.pamphlet"
	filename="Makefile.pamphlet"

\documentclass{article}
\usepackage{../src/scripts/tex/axiom}
\begin{document}
\title{\$SPAD/lsp Makefile}
\author{The Axiom Team}
\maketitle
\begin{abstract}
\end{abstract}
\eject
\tableofcontents
\eject
\section{The Makefile}
We create a dummy file {\bf gcldir} after gcl has been built so
it is not rebuilt. We need to do this because we have no control
over the gcl Makefiles.

Patches are applied to the distribution before we do the configure.
\section{Gnu Common Lisp 2.6.5}
\subsection{gmp wrappers patch}
The file [[gmp_wrappers.h]] has the declaration of the integer [[j]]
out of order. This causes the compiler to complain. This patch puts
the declaration at the beginning of the function.
<<gcl-2.6.5.h.gmp_wrappers.h.patch>>=
	@(cd ${GCLVERSION}/h ; \
	  echo 28 applying gmp_wrappers patch ; \
	  patch <${SPD}/zips/${GCLVERSION}.h.gmp_wrappers.h.patch )
@
\section{Gnu Common Lisp 2.5.2}
\subsubsection{socket patch}
This patch is to {\bf h/386-linux.defs} to include two 
global variables, {\bf EXTRAS} and {\bf EXTRA\_LIB}
\begin{verbatim}
EXTRAS = ${OBJ}/${SYS}/lib/cfuns-c.o ${OBJ}/${SYS}/lib/sockio-c.o
EXTRA_LIB=${OBJ}/${SYS}/lib/libspad.a
\end{verbatim}
The {\bf EXTRAS} variable is used to include two files into the
running image. The {\bf cfuns-c} file contains low-level directory
manipulation routines. The {\bf sockio-c} file contains low level
socket code. Note that versions of GCL beyond gcl-2.4.1 may have
routines already available. If so the Axiom references to these
routines should be rewritten.

We also need to create two .ini files, one for cfuns-c and one
for sockio-c. These are referenced in the gcl-2.4.1 makefiles
but, since no initialization is needed, we simply create empty files.
<<gcl-2.5.2.socket.patch>>=
	@(cd ${GCLVERSION}/h ; \
	  echo 3 applying EXTRAS patch to h/linux.defs ; \
	  patch <${SPD}/zips/${GCLVERSION}.h.linux.defs.patch )
	@(echo 4 setup ini files for EXTRAS patch ; \
	  touch ${OBJ}/${SYS}/lib/cfuns-c.ini ; \
	  touch ${OBJ}/${SYS}/lib/sockio-c.ini )
@
<<gcl-2.6.1.socket.patch>>=
	@(cd ${GCLVERSION}/h ; \
	  echo 3 applying EXTRAS patch to h/linux.defs ; \
	  patch <${SPD}/zips/${GCLVERSION}.h.linux.defs.patch )
	@(echo 4 setup ini files for EXTRAS patch ; \
	  touch ${OBJ}/${SYS}/lib/cfuns-c.ini ; \
	  touch ${OBJ}/${SYS}/lib/sockio-c.ini )
@
<<gcl-2.6.2.socket.patch>>=
	@(cd ${GCLVERSION}/h ; \
	  echo 3 applying EXTRAS patch to h/linux.defs ; \
	  patch <${SPD}/zips/${GCLVERSION}.h.linux.defs.patch )
	@(echo 4 setup ini files for EXTRAS patch ; \
	  touch ${OBJ}/${SYS}/lib/cfuns-c.ini ; \
	  touch ${OBJ}/${SYS}/lib/sockio-c.ini )
@
<<gcl-2.6.2a.socket.patch>>=
	@(cd ${GCLVERSION}/h ; \
	  echo 3 applying EXTRAS patch to h/linux.defs ; \
	  patch <${SPD}/zips/${GCLVERSION}.h.linux.defs.patch )
	@(echo 4 setup ini files for EXTRAS patch ; \
	  touch ${OBJ}/${SYS}/lib/cfuns-c.ini ; \
	  touch ${OBJ}/${SYS}/lib/sockio-c.ini )
@
<<gcl-2.6.3.socket.patch>>=
	@(cd ${GCLVERSION}/h ; \
	  echo 3 applying EXTRAS patch to h/linux.defs ; \
	  patch <${SPD}/zips/${GCLVERSION}.h.linux.defs.patch )
	@(echo 4 setup ini files for EXTRAS patch ; \
	  touch ${OBJ}/${SYS}/lib/cfuns-c.ini ; \
	  touch ${OBJ}/${SYS}/lib/sockio-c.ini )
@
<<gcl-2.6.5.socket.patch>>=
	@(cd ${GCLVERSION}/h ; \
	  echo 3 applying EXTRAS patch to h/linux.defs ; \
	  patch <${SPD}/zips/${GCLVERSION}.h.linux.defs.patch ; \
	  patch <${SPD}/zips/${GCLVERSION}.h.mingw.defs.patch )
	@(echo 4 setup ini files for EXTRAS patch ; \
	  touch ${OBJ}/${SYS}/lib/cfuns-c.ini ; \
	  touch ${OBJ}/${SYS}/lib/sockio-c.ini )
@
\subsubsection{fortran patch}
Communication over sockets (basically to the NAG fortran library)
requires us to have XDR enabled.
<<gcl-2.5.2.fortran.patch>>=
	@(cd ${GCLVERSION}/h ; \
	  echo 5 applying HAVE_XDR patch to h/linux.h ; \
	  patch <${SPD}/zips/${GCLVERSION}.h.linux.h.patch )
@
This patch is no longer necessary as of GCL-2.6.1 because the 
C preparser symbol HAVE_XDR is now the default in GCL.
\subsubsection{libspad patch}
The second patch changes the {\bf unixport/makefile} to reference
the {\bf libspad.a} library when building the raw system image.
from {\bf libspad.a}
<<gcl-2.5.2.libspad.patch>>=
	@(cd ${GCLVERSION}/unixport ; \
	  echo 6 applying libspad.a patch to unixport/makefile ; \
	  patch <${SPD}/zips/${GCLVERSION}.unixport.makefile.patch )
@
<<gcl-2.6.1.libspad.patch>>=
	@(cd ${GCLVERSION}/unixport ; \
	  echo 6 applying libspad.a patch to unixport/makefile ; \
	  patch <${SPD}/zips/${GCLVERSION}.unixport.makefile.patch )
@
<<gcl-2.6.2.libspad.patch>>=
	@(cd ${GCLVERSION}/unixport ; \
	  echo 6 applying libspad.a patch to unixport/makefile ; \
	  patch <${SPD}/zips/${GCLVERSION}.unixport.makefile.patch )
@
<<gcl-2.6.2a.libspad.patch>>=
	@(cd ${GCLVERSION}/unixport ; \
	  echo 6 applying libspad.a patch to unixport/makefile ; \
	  patch <${SPD}/zips/${GCLVERSION}.unixport.makefile.patch )
@
<<gcl-2.6.3.libspad.patch>>=
	@(cd ${GCLVERSION}/unixport ; \
	  echo 6 applying libspad.a patch to unixport/makefile ; \
	  patch <${SPD}/zips/${GCLVERSION}.unixport.makefile.patch )
@
<<gcl-2.6.5.libspad.patch>>=
	@(cd ${GCLVERSION}/unixport ; \
	  echo 6 applying libspad.a patch to unixport/makefile ; \
	  patch <${SPD}/zips/${GCLVERSION}.unixport.makefile.patch )
@
\subsubsection{toploop patch}
This patch turns off the banner display every time GCL starts.
We could use the -batch flag but that would be a pervasive change.
It isn't critical to the system builds but we will later be 
capturing stdin and stdout and we do not want extra information
printed.
<<gcl-2.5.2.toploop.patch>>=
	@(cd ${GCLVERSION}/unixport ; \
	  echo 7 applying toploop patch to unixport/init_gcl.lsp ; \
	  patch <${SPD}/zips/${GCLVERSION}.unixport.init_gcl.lsp.in.patch )
@
<<gcl-2.6.1.toploop.patch>>=
	@(cd ${GCLVERSION}/unixport ; \
	  echo 7 applying toploop patch to unixport/init_gcl.lsp ; \
	  patch <${SPD}/zips/${GCLVERSION}.unixport.init_gcl.lsp.in.patch )
@
<<gcl-2.6.2.toploop.patch>>=
	@(cd ${GCLVERSION}/unixport ; \
	  echo 7 applying toploop patch to unixport/init_gcl.lsp ; \
	  patch <${SPD}/zips/${GCLVERSION}.unixport.init_gcl.lsp.in.patch )
@
<<gcl-2.6.2a.toploop.patch>>=
	@(cd ${GCLVERSION}/unixport ; \
	  echo 7 applying toploop patch to unixport/init_gcl.lsp ; \
	  patch <${SPD}/zips/${GCLVERSION}.unixport.init_gcl.lsp.in.patch )
@
<<gcl-2.6.3.toploop.patch>>=
	@(cd ${GCLVERSION}/unixport ; \
	  echo 7 applying toploop patch to unixport/init_gcl.lsp ; \
	  patch <${SPD}/zips/${GCLVERSION}.unixport.init_gcl.lsp.in.patch )
@
<<gcl-2.6.5.toploop.patch>>=
	@(cd ${GCLVERSION}/unixport ; \
	  echo 7 applying toploop patch to unixport/init_gcl.lsp ; \
	  patch <${SPD}/zips/${GCLVERSION}.unixport.init_gcl.lsp.in.patch )
@
\subsubsection{object to float patch}
GCL 2.5.2 contains no reference to this function and it was removed.
Axiom uses this function so we re-implement it here.
<<gcl-2.5.2.objecttofloat.patch>>=
	@(cd ${GCLVERSION}/o ; \
	  echo 8 applying object_to_float patch ; \
	  patch <${SPD}/zips/${GCLVERSION}.o.cmpaux.c.patch )
@
This patch is no longer necessary as of GCL-2.6.1 because object_to_float
is now defined by default.
\subsubsection{in-package patch}
This changes the common lisp 2.0 defined behavior of in-package
(throw an error if the package does not exist) so that it mirrors
the 1.0 defined behavior (create the package if it does not exist).
This patch is intended to be temporary. Axiom's common lisp code
should be fixed and this patch removed before shipment.
<<gcl-2.5.2.in-package.patch>>=
	@(cd ${GCLVERSION}/o ; \
	  echo 9 applying in-package patch ; \
	  patch <${SPD}/zips/${GCLVERSION}.o.package.d.patch )
@
I believe that all instances of in-package have been fixed and 
that this patch is no longer necessary.
\subsubsection{EXIT and MAX\_STACK\_SIZE patchs}
Axiom uses EXIT as a function. GCL 2.5.2 decided to make it a 
synonym to the BYE function. We fix this for Axiom.
We also patch the MAX_STACK_SIZE to be 16Mb.
<<gcl-2.5.2.exit.patch>>=
	@(cd ${GCLVERSION}/o ; \
	  echo 10 applying EXIT patch ; \
	  echo 18 applying MAX_STACK_SIZE patch ; \
	  patch <${SPD}/zips/${GCLVERSION}.o.main.c.patch )
@
As of GCL-2.6.1 EXIT is no longer defined.
<<gcl-2.6.1.exit.patch>>=
	@(cd ${GCLVERSION}/o ; \
	  echo 18 applying MAX_STACK_SIZE patch ; \
	  patch <${SPD}/zips/${GCLVERSION}.o.main.c.patch )
@
As of GCL-2.6.1 EXIT is no longer defined.
<<gcl-2.6.2.exit.patch>>=
	@(cd ${GCLVERSION}/o ; \
	  echo 18 applying MAX_STACK_SIZE patch ; \
	  patch <${SPD}/zips/${GCLVERSION}.o.main.c.patch )
@
\subsubsection{tail-recursive patch}
Bill Schelter added tail recursion for Axiom. In order to test it
he left code in the system to print a message when the code was
executed. We no longer care but it is still in GCL. We patch the
call rather than the cmpnote function as cmpnote might have later
usage.
<<gcl-2.5.2.tail-recursive.patch>>=
	@(cd ${GCLVERSION}/cmpnew ; \
	  echo 11 applying tail-recursive noise patch ; \
	  patch <${SPD}/zips/${GCLVERSION}.cmpnew.cmpflet.lsp.patch )
	@(cd ${GCLVERSION}/cmpnew ; \
	  echo 12 applying tail-recursive noise patch ; \
	  patch <${SPD}/zips/${GCLVERSION}.cmpnew.cmpcall.lsp.patch )
@
GCL 2.6.1 renamed the files.
<<gcl-2.6.1.tail-recursive.patch>>=
	@(cd ${GCLVERSION}/cmpnew ; \
	  echo 11 applying tail-recursive noise patch ; \
	  patch <${SPD}/zips/${GCLVERSION}.cmpnew.gcl_cmpflet.lsp.patch )
	@(cd ${GCLVERSION}/cmpnew ; \
	  echo 12 applying tail-recursive noise patch ; \
	  patch <${SPD}/zips/${GCLVERSION}.cmpnew.gcl_cmpcall.lsp.patch )
@
<<gcl-2.6.2.tail-recursive.patch>>=
	@(cd ${GCLVERSION}/cmpnew ; \
	  echo 11 applying tail-recursive noise patch ; \
	  patch <${SPD}/zips/${GCLVERSION}.cmpnew.gcl_cmpflet.lsp.patch )
	@(cd ${GCLVERSION}/cmpnew ; \
	  echo 12 applying tail-recursive noise patch ; \
	  patch <${SPD}/zips/${GCLVERSION}.cmpnew.gcl_cmpcall.lsp.patch )
@
<<gcl-2.6.2a.tail-recursive.patch>>=
	@(cd ${GCLVERSION}/cmpnew ; \
	  echo 11 applying tail-recursive noise patch ; \
	  patch <${SPD}/zips/${GCLVERSION}.cmpnew.gcl_cmpflet.lsp.patch )
	@(cd ${GCLVERSION}/cmpnew ; \
	  echo 12 applying tail-recursive noise patch ; \
	  patch <${SPD}/zips/${GCLVERSION}.cmpnew.gcl_cmpcall.lsp.patch )
@
<<gcl-2.6.3.tail-recursive.patch>>=
	@(cd ${GCLVERSION}/cmpnew ; \
	  echo 11 applying tail-recursive noise patch ; \
	  patch <${SPD}/zips/${GCLVERSION}.cmpnew.gcl_cmpflet.lsp.patch )
	@(cd ${GCLVERSION}/cmpnew ; \
	  echo 12 applying tail-recursive noise patch ; \
	  patch <${SPD}/zips/${GCLVERSION}.cmpnew.gcl_cmpcall.lsp.patch )
@
<<gcl-2.6.5.tail-recursive.patch>>=
	@(cd ${GCLVERSION}/cmpnew ; \
	  echo 11 applying tail-recursive noise patch ; \
	  patch <${SPD}/zips/${GCLVERSION}.cmpnew.gcl_cmpflet.lsp.patch )
	@(cd ${GCLVERSION}/cmpnew ; \
	  echo 12 applying tail-recursive noise patch ; \
	  patch <${SPD}/zips/${GCLVERSION}.cmpnew.gcl_cmpcall.lsp.patch )
@
\subsubsection{MSYS shell makefile variable patch}
This patch works around a bug in the MSYS make when executing
shell commands.
<<gcl-2.6.5.windows.variable.patch>>=
	@(cd ${GCLVERSION}/unixport ; \
	  echo 13 applying Windows shell variable patch to unixport/makefile ; \
	  patch <${SPD}/zips/${GCLVERSION}.unixport.makefile.1.patch )
@
\subsubsection{MinGW32 gcc 3.4.2 and MinGW32 runtime 3.5 malloc patch}
This patch works around a bug in the MinGW32 runtime which calls malloc
before main - which intrun calls GCL's malloc which has not been =
initialised.
<<gcl-2.6.5.alloc.c.patch>>=
	@(cd ${GCLVERSION}/o ; \
	  echo 14 applying MinGW32 malloc before main workaround to o/alloc.c ; =
\
	  patch <${SPD}/zips/${GCLVERSION}.alloc.c.patch )
@
\subsubsection{MinGW32 directory wildcard patch}
Wildcards were not being passed through - truename not required here.
<<gcl-2.6.5.mingfile.c.patch>>=
	@(cd ${GCLVERSION}/o ; \
	  echo 15 applying MinGW32 directory wildcard patch to o/mingfile.c ; \
	  patch <${SPD}/zips/${GCLVERSION}.mingfile.c.patch )
@
\subsubsection{collectfn fix}
GCL-2.6.1 renamed collectfn.lsp to gcl_collectfn.lsp.
We rename it back into place because we have later Makefiles
that depend on it. The alternative is to propagate the name changes thru
all of those Makefile and they would now need to know about the =
GCLVERSION
variable. 
<<gcl-2.6.1.collectfn.fix>>=
	@(cd ${GCLVERSION}/cmpnew ; \
	  echo 26 copy gcl_collectfn.lsp to collectfn.lsp ; \
	  cp gcl_collectfn.lsp ${OBJ}/${SYS}/collectfn.lsp )
@
<<gcl-2.6.2.collectfn.fix>>=
	@(cd ${GCLVERSION}/cmpnew ; \
	  echo 26 copy gcl_collectfn.lsp to collectfn.lsp ; \
	  cp gcl_collectfn.lsp ${OBJ}/${SYS}/collectfn.lsp )
@
In this version we have created a new subdirectory for use by GCL
during compile time at [[obj/sys/lsp]]. We copy two files from 
GCL, the [[collectfn.lsp]] file and the [[sys-proclaim.lisp]] file. 
The collectfn.lsp contains code which extends the GCL compiler and
collects type information. The compile-file function writes this
type information to a [[.fn]] file as structs. These structs can
be loaded and written out as a file of lisp proclaims. The =
sys-proclaim.lisp
file contains the proclaims for GCL's function definitions.
<<gcl-2.6.2a.collectfn.fix>>=
	@(cd ${GCLVERSION}/cmpnew ; \
	  echo 26 copy gcl_collectfn.lsp to ${OBJ}/${SYS}/lsp/collectfn.lsp ; \
	  cp gcl_collectfn.lsp ${OBJ}/${SYS}/lsp/collectfn.lsp )
	@(cd ${GCLVERSION}/lsp ; \
	  echo 27 copy sys-proclaim.lisp to ${OBJ}/${SYS}/lsp/sys-proclaim.lisp =
; \
	  cp sys-proclaim.lisp ${OBJ}/${SYS}/lsp/sys-proclaim.lisp )
@
<<gcl-2.6.3.collectfn.fix>>=
	@(cd ${GCLVERSION}/cmpnew ; \
	  echo 26 copy gcl_collectfn.lsp to ${OBJ}/${SYS}/lsp/collectfn.lsp ; \
	  cp gcl_collectfn.lsp ${OBJ}/${SYS}/lsp/collectfn.lsp )
	@(cd ${GCLVERSION}/lsp ; \
	  echo 27 copy sys-proclaim.lisp to ${OBJ}/${SYS}/lsp/sys-proclaim.lisp =
; \
	  cp sys-proclaim.lisp ${OBJ}/${SYS}/lsp/sys-proclaim.lisp )
@
<<gcl-2.6.5.collectfn.fix>>=
	@(cd ${GCLVERSION}/cmpnew ; \
	  echo 26 copy gcl_collectfn.lsp to ${OBJ}/${SYS}/lsp/collectfn.lsp ; \
	  cp gcl_collectfn.lsp ${OBJ}/${SYS}/lsp/collectfn.lsp )
	@(cd ${GCLVERSION}/lsp ; \
	  echo 27 copy sys-proclaim.lisp to ${OBJ}/${SYS}/lsp/sys-proclaim.lisp =
; \
	  cp sys-proclaim.lisp ${OBJ}/${SYS}/lsp/sys-proclaim.lisp )
@
\subsection{The GCL-2.5.2 stanza}
\subsubsection{Configure and Make GCL}
We enable several features of GCL. 
The [[--enable-readline]] uses GNU readline for the prompts. It has been
removed and replaced with clef which is Axiom's version of readline.
The [[--enable-maxpage]] is set to allow the image to grow 4 times what =
it would by default. 
The [[--enable-vssize]] allows virtual stack to grow by twice the normal =
size. 
The [[--enable-statsysbfd]] uses a static system bfd library for loading =
and
relocating object files.
 
Finally we load some routines for performance reasons. =
[[lsp/sys-proclaim]]
contains common lisp proclaim statements for the various GCL lisp =
routines.
[[cmpnew/gcl_collectfn]] contains modifications to the common lisp =
compiler
to collect compile-time type information which will be written to [[.fn]]
files as common lisp structs. These [[.fn]] files can be loaded and =
turned
into common lisp proclaim statements which the compiler can use to =
generate
faster code, mostly fast-path function calls. The call to =
[[compiler::emit-fn]]
enables the [[.fn]] file generation whenever compile-file is called. We
default this code into the image so it is always avaiable.
<<gclConfigureMake>>=
	@(cd ${GCLVERSION} ; \
	./configure ${LISPCFG} ; \
	${ENV} ${MAKE} ; \
	echo '(progn (load "cmpnew/gcl_collectfn.lsp") (load =
"lsp/sys-proclaim.lisp") (compiler::emit-fn t) (system::save-system =
"${OUT}/lisp"))' | unixport/saved_gcl )
@
GCL 2.5.2 changes are due to David Mentre (david.mentre@wanadoo.fr).
The key problem to solve is that 2.5.2 uses the common lisp 2.0 standard.
In Common Lisp 1.0 if you do (in-package 'foo) and the foo package does
not exist it is created. In Common Lisp 2.0 if you do (in-package 'foo) 
and the foo package does not exist it is an error. The file 
``gcl-2.5.2/o/package.d'' has been changed to keep the old behavior.
This is an incorrect fix in the long term. Axiom should be changed
everywhere to conform to the common lisp 2.0 standard. 

GCL 2.5.2 requires a different Makefile. In particular, GCL 2.5.2
has a different method of building the lisp image. And, just to
keep us on our toes, they've renamed the files we need to patch.
The new patches are in the zips directory. Patches now are prefixed
by GCLVERSION. 

This stanza will be written out when the GCLVERSION variable is
``gcl-2.5.2''. It will overwrite the default version. See the 
top level Makefile.pamphlet.
<<gcl-2.5.2>>=
# gcl version 2.5.2
OUT=${OBJ}/${SYS}/bin

all:
	@echo 1 building ${LSP} ${GCLVERSION}

gcldir: 
	@echo 2 building ${GCLVERSION}
	@tar -zxf ${ZIPS}/${GCLVERSION}.tgz
<<gcl-2.5.2.socket.patch>>
<<gcl-2.5.2.fortran.patch>>
<<gcl-2.5.2.libspad.patch>>
<<gcl-2.5.2.toploop.patch>>
<<gcl-2.5.2.objecttofloat.patch>>
<<gcl-2.5.2.in-package.patch>>
<<gcl-2.5.2.exit.patch>>
<<gcl-2.5.2.tail-recursive.patch>>
<<gclConfigureMake>>
	@echo 13 finished system build on `date` | tee >gcldir

ccldir: ${LSP}/ccl/Makefile
	@echo 14 building CCL
	@mkdir -p ${INT}/ccl
	@mkdir -p ${OBJ}/${SYS}/ccl
	@( cd ccl ; ${ENV} ${MAKE} )

${LSP}/ccl/Makefile: ${LSP}/ccl/Makefile.pamphlet
	@echo 15 making ${LSP}/ccl/Makefile from ${LSP}/ccl/Makefile.pamphlet
	@( cd ccl ; ${SPADBIN}/document ${NOISE} Makefile )

document:
	@echo 16 making docs in ${LSP}
	@mkdir -p ${INT}/doc/lsp/ccl
	@( cd ccl ; ${ENV} ${MAKE} document )

clean:
	@echo 17 cleaning ${LSP}/ccl
	@( cd ccl ; ${ENV} ${MAKE} clean )

@
\subsection{The GCL-2.6.1 stanza}
GCL 2.6.1 has support for --enable-static for static linking.
Axiom will eventually support static images.

GCL 2.6.1 is supposed to build and run on Windows under mingw.
Axiom will eventually support a windows version.

GCL 2.6.1 continues its tradition of renaming files we need to patch.
The new patches are in the zips directory. 

This stanza will be written out when the GCLVERSION variable is
``gcl-2.6.1''. It will overwrite the default version. See the 
top level Makefile.pamphlet.
<<gcl-2.6.1>>=
# gcl version 2.6.1
OUT=${OBJ}/${SYS}/bin

all:
	@echo 1 building ${LSP} ${GCLVERSION}

gcldir: 
	@echo 2 building ${GCLVERSION}
	@tar -zxf ${ZIPS}/${GCLVERSION}.tgz
<<gcl-2.6.1.socket.patch>>
<<gcl-2.6.1.libspad.patch>>
<<gcl-2.6.1.toploop.patch>>
<<gcl-2.6.1.exit.patch>>
<<gcl-2.6.1.tail-recursive.patch>>
<<gcl-2.6.1.collectfn.fix>>
<<gclConfigureMake>>
	@echo 13 finished system build on `date` | tee >gcldir

ccldir: ${LSP}/ccl/Makefile
	@echo 14 building CCL
	@mkdir -p ${INT}/ccl
	@mkdir -p ${OBJ}/${SYS}/ccl
	@( cd ccl ; ${ENV} ${MAKE} )

${LSP}/ccl/Makefile: ${LSP}/ccl/Makefile.pamphlet
	@echo 15 making ${LSP}/ccl/Makefile from ${LSP}/ccl/Makefile.pamphlet
	@( cd ccl ; ${SPADBIN}/document ${NOISE} Makefile )

document:
	@echo 16 making docs in ${LSP}
	@mkdir -p ${INT}/doc/lsp/ccl
	@( cd ccl ; ${ENV} ${MAKE} document )

clean:
	@echo 17 cleaning ${LSP}/ccl
	@( cd ccl ; ${ENV} ${MAKE} clean )

@
\subsection{The GCL-2.6.2 stanza}
GCL 2.6.2 has support for --enable-static for static linking.
Axiom will eventually support static images.

GCL 2.6.2 is supposed to build and run on Windows under mingw.
Axiom will eventually support a windows version.

GCL 2.6.2 continues its tradition of renaming files we need to patch.
The new patches are in the zips directory. 

This stanza will be written out when the GCLVERSION variable is
``gcl-2.6.2''. It will overwrite the default version. See the 
top level Makefile.pamphlet.
<<gcl-2.6.2>>=
# gcl version 2.6.2
OUT=${OBJ}/${SYS}/bin

all:
	@echo 1 building ${LSP} ${GCLVERSION}

gcldir: 
	@echo 2 building ${GCLVERSION}
	@tar -zxf ${ZIPS}/${GCLVERSION}.tgz
<<gcl-2.6.2.socket.patch>>
<<gcl-2.6.2.libspad.patch>>
<<gcl-2.6.2.toploop.patch>>
<<gcl-2.6.2.exit.patch>>
<<gcl-2.6.2.tail-recursive.patch>>
<<gcl-2.6.2.collectfn.fix>>
<<gclConfigureMake>>
	@echo 13 finished system build on `date` | tee >gcldir

ccldir: ${LSP}/ccl/Makefile
	@echo 14 building CCL
	@mkdir -p ${INT}/ccl
	@mkdir -p ${OBJ}/${SYS}/ccl
	@( cd ccl ; ${ENV} ${MAKE} )

${LSP}/ccl/Makefile: ${LSP}/ccl/Makefile.pamphlet
	@echo 15 making ${LSP}/ccl/Makefile from ${LSP}/ccl/Makefile.pamphlet
	@( cd ccl ; ${SPADBIN}/document ${NOISE} Makefile )

document:
	@echo 16 making docs in ${LSP}
	@mkdir -p ${INT}/doc/lsp/ccl
	@( cd ccl ; ${ENV} ${MAKE} document )

clean:
	@echo 17 cleaning ${LSP}/ccl
	@( cd ccl ; ${ENV} ${MAKE} clean )

@
\subsection{Directory move}
The latest version of GCL no longer uses the version number in the
directory name. We fix that here.
<<gcl-2.6.2a-mvdir>>=
	@echo 27 renaming gcl to ${GCLVERSION}
	@mv gcl gcl-2.6.2a
@

\subsection{The GCL-2.6.2a stanza}

GCL-2.6.2a has a variable si::*optimize-maximum-pages* which defaults
to t which eliminates an old problem of spinning the gc for temporary
allocations of eg. strings in a 32 page space on a heap growing to
quite large size.  You might want to investigate (time ..) and (room)
on computationally intensive jobs with and without this variable set.

This stanza will be written out when the GCLVERSION variable is
``gcl-2.6.2a''. It will overwrite the default version. See the 
top level Makefile.pamphlet.
<<gcl-2.6.2a>>=
# gcl version 2.6.2a
OUT=${OBJ}/${SYS}/bin

all:
	@echo 1 building ${LSP} ${GCLVERSION}

gcldir: 
	@echo 2 building ${GCLVERSION}
	@tar -zxf ${ZIPS}/${GCLVERSION}.tgz
<<gcl-2.6.2a-mvdir>>
<<gcl-2.6.2a.socket.patch>>
<<gcl-2.6.2a.libspad.patch>>
<<gcl-2.6.2a.toploop.patch>>
<<gcl-2.6.2a.tail-recursive.patch>>
<<gcl-2.6.2a.collectfn.fix>>
<<gclConfigureMake>>
	@echo 13 finished system build on `date` | tee >gcldir

ccldir: ${LSP}/ccl/Makefile
	@echo 14 building CCL
	@mkdir -p ${INT}/ccl
	@mkdir -p ${OBJ}/${SYS}/ccl
	@( cd ccl ; ${ENV} ${MAKE} )

${LSP}/ccl/Makefile: ${LSP}/ccl/Makefile.pamphlet
	@echo 15 making ${LSP}/ccl/Makefile from ${LSP}/ccl/Makefile.pamphlet
	@( cd ccl ; ${SPADBIN}/document ${NOISE} Makefile )

document:
	@echo 16 making docs in ${LSP}
	@mkdir -p ${INT}/doc/lsp/ccl
	@( cd ccl ; ${ENV} ${MAKE} document )

clean:
	@echo 17 cleaning ${LSP}/ccl
	@( cd ccl ; ${ENV} ${MAKE} clean )

@
\subsection{Directory move}
The latest version of GCL no longer uses the version number in the
directory name. We fix that here.
<<gcl-2.6.3-mvdir>>=
	@echo 27 renaming gcl to ${GCLVERSION}
	@mv gcl gcl-2.6.3
@
\subsection{The GCL-2.6.3 stanza}
This stanza will be written out when the GCLVERSION variable is
``gcl-2.6.3''. It will overwrite the default version. See the 
top level Makefile.pamphlet.
<<gcl-2.6.3>>=
# gcl version 2.6.3
OUT=${OBJ}/${SYS}/bin

all:
	@echo 1 building ${LSP} ${GCLVERSION}

gcldir: 
	@echo 2 building ${GCLVERSION}
	@tar -zxf ${ZIPS}/${GCLVERSION}.tgz
<<gcl-2.6.3-mvdir>>
<<gcl-2.6.3.socket.patch>>
<<gcl-2.6.3.libspad.patch>>
<<gcl-2.6.3.toploop.patch>>
<<gcl-2.6.3.tail-recursive.patch>>
<<gcl-2.6.3.collectfn.fix>>
<<gclConfigureMake>>
	@echo 13 finished system build on `date` | tee >gcldir

ccldir: ${LSP}/ccl/Makefile
	@echo 14 building CCL
	@mkdir -p ${INT}/ccl
	@mkdir -p ${OBJ}/${SYS}/ccl
	@( cd ccl ; ${ENV} ${MAKE} )

${LSP}/ccl/Makefile: ${LSP}/ccl/Makefile.pamphlet
	@echo 15 making ${LSP}/ccl/Makefile from ${LSP}/ccl/Makefile.pamphlet
	@( cd ccl ; ${SPADBIN}/document ${NOISE} Makefile )

document:
	@echo 16 making docs in ${LSP}
	@mkdir -p ${INT}/doc/lsp/ccl
	@( cd ccl ; ${ENV} ${MAKE} document )

clean:
	@echo 17 cleaning ${LSP}/ccl
	@( cd ccl ; ${ENV} ${MAKE} clean )

@
\subsection{The GCL-2.6.5 stanza}
This stanza will be written out when the GCLVERSION variable is
``gcl-2.6.5''. It will overwrite the default version. See the 
top level Makefile.pamphlet.
<<gcl-2.6.5>>=
# gcl version 2.6.5
OUT=${OBJ}/${SYS}/bin

all:
	@echo 1 building ${LSP} ${GCLVERSION}

gcldir: 
	@echo 2 building ${GCLVERSION}
	@tar -zxf ${ZIPS}/${GCLVERSION}.tgz
<<gcl-2.6.5.socket.patch>>
<<gcl-2.6.5.libspad.patch>>
<<gcl-2.6.5.toploop.patch>>
<<gcl-2.6.5.tail-recursive.patch>>
<<gcl-2.6.5.windows.variable.patch>>
<<gcl-2.6.5.alloc.c.patch>>
<<gcl-2.6.5.mingfile.c.patch>>
<<gclConfigureMake>>
	@echo 13 finished system build on `date` | tee >gcldir

ccldir: ${LSP}/ccl/Makefile
	@echo 14 building CCL
	@mkdir -p ${INT}/ccl
	@mkdir -p ${OBJ}/${SYS}/ccl
	@( cd ccl ; ${ENV} ${MAKE} )

${LSP}/ccl/Makefile: ${LSP}/ccl/Makefile.pamphlet
	@echo 15 making ${LSP}/ccl/Makefile from ${LSP}/ccl/Makefile.pamphlet
	@( cd ccl ; ${SPADBIN}/document ${NOISE} Makefile )

document:
	@echo 16 making docs in ${LSP}
	@mkdir -p ${INT}/doc/lsp/ccl
	@( cd ccl ; ${ENV} ${MAKE} document )

clean:
	@echo 17 cleaning ${LSP}/ccl
	@( cd ccl ; ${ENV} ${MAKE} clean )

@
\subsection{The GCL-CVS stanza}
This stanza will be written out when the GCLVERSION variable is
``gcl-cvs''. It will overwrite the default version. See the 
top level Makefile.pamphlet.
<<gcl-cvs>>=
# gcl version CVS
OUT=${OBJ}/${SYS}/bin

all:
	@echo 1 building ${LSP} ${GCLVERSION}

gcldir: 
	@echo 2 building ${GCLVERSION}
	@tar -zxf ${ZIPS}/${GCLVERSION}.tgz
<<gclConfigureMake>>
	@echo 13 finished system build on `date` | tee >gcldir

ccldir: ${LSP}/ccl/Makefile
	@echo 14 building CCL
	@mkdir -p ${INT}/ccl
	@mkdir -p ${OBJ}/${SYS}/ccl
	@( cd ccl ; ${ENV} ${MAKE} )

${LSP}/ccl/Makefile: ${LSP}/ccl/Makefile.pamphlet
	@echo 15 making ${LSP}/ccl/Makefile from ${LSP}/ccl/Makefile.pamphlet
	@( cd ccl ; ${SPADBIN}/document ${NOISE} Makefile )

document:
	@echo 16 making docs in ${LSP}
	@mkdir -p ${INT}/doc/lsp/ccl
	@( cd ccl ; ${ENV} ${MAKE} document )

clean:
	@echo 17 cleaning ${LSP}/ccl
	@( cd ccl ; ${ENV} ${MAKE} clean )

@
\section{Gnu Common Lisp 2.5}
GCL 2.5 requires a different Makefile. In particular, GCL 2.5
has a different method of building the lisp image. And, just to
keep us on our toes, they've renamed the files we need to patch.
The new patches are in the zips directory. Patches now are prefixed
by GCLVERSION. 
\subsubsection{socket patch}
This patch is to {\bf h/386-linux.defs} to include two 
global variables, {\bf EXTRAS} and {\bf EXTRA\_LIB}
\begin{verbatim}
EXTRAS = ${OBJ}/${SYS}/lib/cfuns-c.o ${OBJ}/${SYS}/lib/sockio-c.o
EXTRA_LIB=${OBJ}/${SYS}/lib/libspad.a
\end{verbatim}
The {\bf EXTRAS} variable is used to include two files into the
running image. The {\bf cfuns-c} file contains low-level directory
manipulation routines. The {\bf sockio-c} file contains low level
socket code. Note that versions of GCL beyond gcl-2.4.1 may have
routines already available. If so the Axiom references to these
routines should be rewritten.

We also need to create two .ini files, one for cfuns-c and one
for sockio-c. These are referenced in the gcl-2.4.1 makefiles
but, since no initialization is needed, we simply create empty files.
<<gcl-2.5.socket.patch>>=
	@(cd ${GCLVERSION}/h ; \
	  echo 3 applying EXTRAS patch to h/linux.defs ; \
	  patch <${SPD}/zips/${GCLVERSION}.h.linux.defs.patch )
	@(echo 4 setup ini files for EXTRAS patch ; \
	  touch ${OBJ}/${SYS}/lib/cfuns-c.ini ; \
	  touch ${OBJ}/${SYS}/lib/sockio-c.ini )
@ 
\subsubsection{fortran patch}
Communication over sockets (basically to the NAG fortran library)
requires us to have XDR enabled.
<<gcl-2.5.fortran.patch>>=
	@(cd ${GCLVERSION}/h ; \
	  echo 5 applying HAVE_XDR patch to h/linux.h ; \
	  patch <${SPD}/zips/${GCLVERSION}.h.linux.h.patch )
@
\subsubsection{libspad patch}
The second patch changes the {\bf unixport/makefile} to reference
the {\bf libspad.a} library when building the raw system image.
from {\bf libspad.a}
<<gcl-2.5.libspad.patch>>=
	@(cd ${GCLVERSION}/unixport ; \
	  echo 6 applying libspad.a patch to unixport/makefile ; \
	  patch <${SPD}/zips/${GCLVERSION}.unixport.makefile.patch )
@
\subsubsection{toploop patch}
This patch turns off the banner display every time GCL starts.
We could use the -batch flag but that would be a pervasive change.
It isn't critical to the system builds but we will later be 
capturing stdin and stdout and we do not want extra information
printed.
<<gcl-2.5.toploop.patch>>=
	@(cd ${GCLVERSION}/unixport ; \
	  echo 7 applying toploop patch to unixport/init_gcl.lsp ; \
	  patch <${SPD}/zips/${GCLVERSION}.unixport.init_gcl.lsp.in.patch )
@
\subsubsection{xdrfuns bug patch}
We enabled XDR only to find out that there is a missing argument
in the call to FEerror from xdrstdio\_create. We fix this here and
send a patch to the GCL people. It should be fixed in future releases
and this patch should die.
<<gcl-2.5.xdrfuns.patch>>=
	@(cd ${GCLVERSION}/o ; \
	  echo 8 applying XDR patch to o/xdrfuns.c ; \
	  patch <${SPD}/zips/${GCLVERSION}.o.xdrfuns.c.patch )
@ 
\subsection{The GCL-2.5 stanza}
This stanza will be written out when the GCLVERSION variable is
``gcl-2.5''. It will overwrite the default version. See the 
top level Makefile.pamphlet.
<<gcl-2.5>>=
# gcl version 2.5
OUT=${OBJ}/${SYS}/bin

all:
	@echo 1 building ${LSP} ${GCLVERSION}

gcldir: 
	@echo 2 building ${GCLVERSION}
	@tar -zxf ${ZIPS}/${GCLVERSION}.tgz
	@mv gcl ${GCLVERSION}
<<gcl-2.5.socket.patch>>
<<gcl-2.5.fortran.patch>>
<<gcl-2.5.libspad.patch>>
<<gcl-2.5.toploop.patch>>
<<gcl-2.5.xdrfuns.patch>>
	@(cd ${GCLVERSION} ; \
	./configure --enable-vssize=65536 ; \
	${ENV} ${MAKE} ; \
	cp unixport/saved_gcl ${OUT}/lisp )
	@echo 9 finished system build on `date` | tee >gcldir

ccldir: ${LSP}/ccl/Makefile
	@echo 10 building CCL
	@mkdir -p ${INT}/ccl
	@mkdir -p ${OBJ}/${SYS}/ccl
	@( cd ccl ; ${ENV} ${MAKE} )

${LSP}/ccl/Makefile: ${LSP}/ccl/Makefile.pamphlet
	@echo 11 making ${LSP}/ccl/Makefile from ${LSP}/ccl/Makefile.pamphlet
	@( cd ccl ; ${SPADBIN}/document ${NOISE} Makefile )

document:
	@echo 12 making docs in ${LSP}
	@mkdir -p ${INT}/doc/lsp/ccl
	@( cd ccl ; ${ENV} ${MAKE} document )

clean:
	@echo 13 cleaning ${LSP}/ccl
	@( cd ccl ; ${ENV} ${MAKE} clean )

@
\section{Gnu Common Lisp 2.4.1 (The default build)}
\subsubsection{socket patch}
This patch is to {\bf h/386-linux.defs} to include two 
global variables, {\bf EXTRAS} and {\bf EXTRA\_LIB}
\begin{verbatim}
EXTRAS = ${OBJ}/${SYS}/lib/cfuns-c.o ${OBJ}/${SYS}/lib/sockio-c.o
EXTRA_LIB=${OBJ}/${SYS}/lib/libspad.a
\end{verbatim}
The {\bf EXTRAS} variable is used to include two files into the
running image. The {\bf cfuns-c} file contains low-level directory
manipulation routines. The {\bf sockio-c} file contains low level
socket code. Note that versions of GCL beyond gcl-2.4.1 may have
routines already available. If so the Axiom references to these
routines should be rewritten.

We also need to create two .ini files, one for cfuns-c and one
for sockio-c. These are referenced in the gcl-2.4.1 makefiles
but, since no initialization is needed, we simply create empty files.
<<gcl-2.4.1.socket.patch>>=
	@(cd ${GCLVERSION}/h ; \
	  echo 16 applying EXTRAS patch to h/386-linux.defs ; \
	  patch <${SPD}/zips/${GCLVERSION}.h.386-linux.defs.patch )
	@(echo 17 setup ini files for EXTRAS patch ; \
	  touch ${OBJ}/${SYS}/lib/cfuns-c.ini ; \
	  touch ${OBJ}/${SYS}/lib/sockio-c.ini )
@ 
\subsubsection{fortran patch}
Communication over sockets (basically to the NAG fortran library)
requires us to have XDR enabled.
<<gcl-2.4.1.fortran.patch>>=
	@(cd ${GCLVERSION}/h ; \
	  echo 18 applying HAVE_XDR patch to h/386-linux.h ; \
	  patch <${SPD}/zips/${GCLVERSION}.h.386-linux.h.patch )
@ 
\subsubsection{libspad patch}
The second patch changes the {\bf unixport/makefile} to reference
the {\bf libspad.a} library when building the raw system image.
from {\bf libspad.a}
<<gcl-2.4.1.libspad.patch>>=
	@(cd ${GCLVERSION}/unixport ; \
	  echo 19 applying libspad.a patch to unixport/makefile ; \
	  patch <${SPD}/zips/${GCLVERSION}.unixport.makefile.patch )
@ 
\subsubsection{toploop patch}
This patch turns off the banner display every time GCL starts.
We could use the -batch flag but that would be a pervasive change.
It isn't critical to the system builds but we will later be 
capturing stdin and stdout and we do not want extra information
printed.
<<gcl-2.4.1.toploop.patch>>=
	@(cd ${GCLVERSION}/unixport ; \
	  echo 20 applying toploop patch to unixport/init_gcl.lsp ; \
	  patch <${SPD}/zips/${GCLVERSION}.unixport.init_gcl.lsp.patch )
@ 
<<*>>=
# gcl version 2.4.1
OUT=${OBJ}/${SYS}/bin

all:
	@echo 14 building ${LSP} ${GCLVERSION}

gcldir: 
	@echo 15 building ${GCLVERSION}
	@tar -zxf ${ZIPS}/${GCLVERSION}.tgz
<<gcl-2.4.1.socket.patch>>
<<gcl-2.4.1.fortran.patch>>
<<gcl-2.4.1.libspad.patch>>
<<gcl-2.4.1.toploop.patch>>
	@(cd ${GCLVERSION} ; \
	./configure --enable-vssize=65536 ; \
	${ENV} ${MAKE} ; \
	cp unixport/saved_gcl ${OUT}/lisp )
	@echo 21 finished system build on `date` | tee >gcldir

ccldir: ${LSP}/ccl/Makefile
	@echo 22 building CCL
	@mkdir -p ${INT}/ccl
	@mkdir -p ${OBJ}/${SYS}/ccl
	@( cd ccl ; ${ENV} ${MAKE} )

${LSP}/ccl/Makefile: ${LSP}/ccl/Makefile.pamphlet
	@echo 23 making ${LSP}/ccl/Makefile from ${LSP}/ccl/Makefile.pamphlet
	@( cd ccl ; ${SPADBIN}/document ${NOISE} Makefile )

document:
	@echo 24 making docs in ${LSP}
	@mkdir -p ${INT}/doc/lsp/ccl
	@( cd ccl ; ${ENV} ${MAKE} document )

clean:
	@echo 25 cleaning ${LSP}/ccl
	@( cd ccl ; ${ENV} ${MAKE} clean )
@
\eject
\begin{thebibliography}{99}
\bibitem{1} nothing
\end{thebibliography}
\end{document}

------=_NextPart_000_01C3_01C4DC86.B2284B10
	name="cfuns.lisp.pamphlet"
	filename="cfuns.lisp.pamphlet"

\documentclass{article}
\usepackage{axiom}
\begin{document}
\title{\$SPAD/src/interp cfuns.lisp}
\author{Timothy Daly}
\maketitle
\begin{abstract}
\end{abstract}
\eject
\tableofcontents
\eject
\section{License}
<<license>>=
;; Copyright (c) 1991-2002, The Numerical ALgorithms Group Ltd.
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are
;; met:
;;
;;     - Redistributions of source code must retain the above copyright
;;       notice, this list of conditions and the following disclaimer.
;;
;;     - Redistributions in binary form must reproduce the above =
copyright
;;       notice, this list of conditions and the following disclaimer in
;;       the documentation and/or other materials provided with the
;;       distribution.
;;
;;     - Neither the name of The Numerical ALgorithms Group Ltd. nor the
;;       names of its contributors may be used to endorse or promote =
products
;;       derived from this software without specific prior written =
permission.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS =
"AS
;; IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
;; TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
;; PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT =
OWNER
;; OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, =
SPECIAL,
;; EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
;; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
;; PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
;; LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
;; NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
;; SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

@
<<*>>=
<<license>>

(in-package "BOOT")

#+(and :Lucid (not :ibm/370))
(progn
  (system:define-foreign-function :c '|findString| :fixnum)
  (system:define-foreign-function :c '|addtopath|  :fixnum)
  (system:define-foreign-function :c '|chdir|      :fixnum)
  (system:define-foreign-function :c '|writeablep| :fixnum)
  (system:define-foreign-function :c '|directoryp| :fixnum)
  (system:define-foreign-function :c '|copyEnvValue| :fixnum)
  )

;; Staged directoryp to deal with Windows/Unix stat differences.
#+KCL
(progn
  (defentry |directoryp-c| (string)        (int "directoryp"))
  (defentry |writeablep| (string)      (int "writeablep"))
  (defentry |findString| (string string) (int "findString"))
  )

#+KCL
(defun |directoryp| (fn)
  (cond ((not (probe-file fn)) -1)
        ((|directoryp-c| fn) 1)
        (t 0)))


#+:CCL
(defun |directoryp| (fn)
  (cond ((not (probe-file fn)) -1)
        ((directoryp fn) 1)
        (t 0)))



(defun |findStringInFile| (str p) 
    (|findString| (namestring p) str) )


(defun |getEnv| (var-name)  (system::getenv var-name))

;;stolen from AXIOM-XL src/strops.c
#+(AND KCL (NOT ELF))
(Clines 
"MYHASH(s)"
"char *s;"
"{"
" register unsigned int   h = 0;"
" register int    c;"
""
" while ((c = *s++) != 0) {"
"  h ^= (h << 8);"
"  h += ((c) + 200041);"
"  h &= 0x3FFFFFFF;"
" }"
" return h;"
"}"
)
#+(AND KCL (NOT ELF))
(defentry |hashString| (string) (int "MYHASH"))
#+(AND KCL ELF)
(defun |hashString| (string) (system:|hashString| string))

#+(AND KCL (NOT ELF))
(Clines
"unsigned int MYCOMBINE(i,j)"
"unsigned int i,j;"
"{"
"return ( (((j & 16777215) << 6)+i) % 1073741789);"
"}"
)
#+(AND KCL (NOT ELF))
(defentry |hashCombine| (int int) (int "MYCOMBINE"))
#+(AND KCL  ELF)
(defun |hashCombine| (x y) (system:|hashCombine| x y))


@
\eject
\begin{thebibliography}{99}
\bibitem{1} nothing
\end{thebibliography}
\end{document}

------=_NextPart_000_01C3_01C4DC86.B2284B10
	name="nlib.lisp.pamphlet"
	filename="nlib.lisp.pamphlet"

\documentclass{article}
\usepackage{axiom}
\begin{document}
\title{\$SPAD/src/interp nlib.lisp}
\author{Timothy Daly}
\maketitle
\begin{abstract}
\end{abstract}
\eject
\tableofcontents
\eject
\section{License}
<<license>>=
;; Copyright (c) 1991-2002, The Numerical ALgorithms Group Ltd.
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are
;; met:
;;
;;     - Redistributions of source code must retain the above copyright
;;       notice, this list of conditions and the following disclaimer.
;;
;;     - Redistributions in binary form must reproduce the above =
copyright
;;       notice, this list of conditions and the following disclaimer in
;;       the documentation and/or other materials provided with the
;;       distribution.
;;
;;     - Neither the name of The Numerical ALgorithms Group Ltd. nor the
;;       names of its contributors may be used to endorse or promote =
products
;;       derived from this software without specific prior written =
permission.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS =
"AS
;; IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
;; TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
;; PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT =
OWNER
;; OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, =
SPECIAL,
;; EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
;; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
;; PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
;; LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
;; NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
;; SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

@
<<*>>=
<<license>>

(in-package "VMLISP")

#+:AKCL (defvar *lisp-bin-filetype* "o")

#+:AKCL (defvar *lisp-source-filetype* "lsp")

;; definition of our stream structure
(defstruct libstream  mode dirname (indextable nil)  (indexstream nil))
;indextable is a list of entries (key class <location or filename>)
;filename is of the form filenumber.lsp or filenumber.o

(defvar optionlist nil "alist which controls compiler output")

(defun addoptions (key value) "adds pairs to optionlist"
  (push (cons key value) optionlist)
  (if (equal key 'FILE)
      (push 
       (cons 'COMPILER-OUTPUT-STREAM
                   (open (concat (libstream-dirname value) "/" =
"code.lsp")
                         :direction :output :if-exists :supersede))
             optionlist)))

(defun directory? (filename) (|directoryp| filename))

;; (RDEFIOSTREAM ((MODE . IO) (FILE fn ft dir))) IO is I,O,INPUT,OUTPUT
#+:AKCL
(defun rdefiostream (options &optional (missing-file-error-flag t))
  (let ((mode (cdr (assoc 'mode options)))
	(file (assoc 'file options))
	(stream nil)
	(fullname nil)
	(indextable nil))
        (cond ((equal (elt (string mode) 0) #\I)
	       ;;(setq fullname (make-input-filename (cdr file) 'LISPLIB))
	       (setq fullname (make-input-filename (cdr file) 'NIL))
	       (setq stream (get-input-index-stream fullname))
               (if (null stream)
		   (if missing-file-error-flag
		       (ERROR (format nil "Library ~s doesn't exist"
			      ;;(make-filename (cdr file) 'LISPLIB))
			      (make-filename (cdr file) 'NIL)))
		     NIL)
               (make-libstream :mode 'input  :dirname fullname
                               :indextable (get-index-table-from-stream =
stream)
			       :indexstream stream)))
              ((equal (elt (string mode) 0) #\O)
	       ;;(setq fullname (make-full-namestring (cdr file) 'LISPLIB))
	       (setq fullname (make-full-namestring (cdr file) 'NIL))
	       (case (directory? fullname)
		     (-1 (makedir fullname))
		     (0 (error (format nil "~s is an existing file, not a library" =
fullname)))
		     (otherwise))
	       (multiple-value-setq (stream indextable) (get-io-index-stream =
fullname))
	       (make-libstream :mode 'output  :dirname fullname
			       :indextable indextable
			       :indexstream stream ))
              ('t  (ERROR "Unknown MODE")))))

#+:CCL
(defun rdefiostream (options &optional (missing-file-error-flag t))
  (let ((mode (cdr (assoc 'mode options)))
        (file (assoc 'file options))
        (stream nil)
        (fullname nil)
        (indextable nil))
        (cond ((equal (elt (string mode) 0) #\I)
               (setq fullname (make-input-filename (cdr file) NIL))
               (setq stream (get-input-index-stream fullname))
               (if (null stream)
                   (if missing-file-error-flag
                       (ERROR (format nil "Library ~s doesn't exist"
                              (make-filename (cdr file) NIL)))
                     NIL)
               (make-libstream :mode 'input  :dirname fullname
                               :indextable (get-index-table-from-stream =
stream)
                               :indexstream stream)))
              ((equal (elt (string mode) 0) #\O)
               (setq fullname (make-full-namestring (cdr file) NIL))
               (create-directory fullname)
               (multiple-value-setq (stream indextable)
                        (get-io-index-stream fullname))
               (make-libstream :mode 'output  :dirname fullname
                               :indextable indextable
                               :indexstream stream ))
              ('t  (ERROR "Unknown MODE")))))

#+:AKCL (defvar *index-filename* "index.KAF")
#+:CCL (defvar *index-filename* "index.KAF")

;get the index table of the lisplib in dirname
(defun getindextable (dirname)
  (let ((index-file (concat dirname "/" *index-filename*)))
     (if (probe-file index-file)
         (with-open-file (stream index-file) =
(get-index-table-from-stream stream))
            ;; create empty index file to mark directory as lisplib
         (with-open-file (stream index-file :direction :output) nil))))

;get the index stream of the lisplib in dirname
(defun get-input-index-stream (dirname)
  (let ((index-file (concat dirname "/" *index-filename*)))
    (open index-file :direction :input :if-does-not-exist nil)))

(defun get-index-table-from-stream (stream)
  (let ((pos (read  stream)))
    (cond ((numberp pos)
	   (file-position stream pos)
	   (read stream))
	  (t pos))))

#+:AKCL
(defun get-io-index-stream (dirname)
  (let* ((index-file (concat dirname "/" *index-filename*))
	 (stream (progn
		     (open index-file :direction :io :if-exists :overwrite
		       :if-does-not-exist :create)))
	 (indextable ())
	 (pos (read stream nil nil)))
    (cond ((numberp pos)
	   (file-position stream pos)
	   (setq indextable (read stream))
	   (file-position stream pos))
	  (t (file-position stream 0)
	     (princ "                    " stream)
	     (setq indextable pos)))
    (values stream indextable)))

#+:CCL
(defun get-io-index-stream (dirname)
  (let ((index-file (concat dirname "/" *index-filename*))
        (indextable ())
        (stream) (pos))
    (cond ((probe-file index-file)
           (setq stream (open index-file :direction :io :if-exists =
:overwrite))
           (setq pos (read stream))
           (file-position stream pos)
           (setq indextable (read stream))
           (file-position stream pos))
          (t (setq stream (open index-file :direction :io
                       :if-does-not-exist :create))
             ;(file-position stream 0)
             (princ "                    " stream)))
    (values stream indextable)))


;substitute indextable in dirname

(defun write-indextable (indextable stream)
  (let ((pos (file-position stream)))
    (write indextable :stream stream :level nil :length nil :escape t)
    (finish-output stream)
    (file-position stream 0)
    (princ pos stream)
    (finish-output stream)))

;;#+:ccl
;;(defun putindextable (indextable dirname)
;;  (with-open-file
;;    (stream (concat dirname "/" *index-filename*)
;;             :direction :io :if-does-not-exist :create)
;;    (file-position stream :end)
;;    (write-indextable indextable stream)))
;;#-:ccl
(defun putindextable (indextable dirname)
  (with-open-file
    (stream (concat dirname "/" *index-filename*)
             :direction :io :if-exists :overwrite
             :if-does-not-exist :create)
    (file-position stream :end)
    (write-indextable indextable stream)))

;makedir (fname) fname is a directory name.
#+:AKCL
(defun makedir (fname)
  (system (concat "mkdir " fname)))

;; (RREAD key rstream)
(defun rread (key rstream &optional (error-val nil error-val-p))
  (if (equal (libstream-mode rstream) 'output) (error "not input =
stream"))
  (let* ((entry
	 (and (stringp key)
	      (assoc key (libstream-indextable rstream) :test #'string=)))
	 (file-or-pos (and entry (caddr entry))))
    (cond ((null entry)
	   (if error-val-p error-val (error (format nil "key ~a not found" =
key))))
	  ((null (caddr entry)) (cdddr entry))  ;; for small items
	  ((numberp file-or-pos)
	   (file-position (libstream-indexstream rstream) file-or-pos)
	   (read (libstream-indexstream rstream)))
	  (t
	   (with-open-file
	    (stream (concat (libstream-dirname rstream) "/" file-or-pos))
	    (read  stream))) )))

(defvar *lib-var*)

;; (RKEYIDS filearg) -- interned version of keys
(defun rkeyids (&rest filearg)
  (mapcar #'intern (mapcar #'car (getindextable
				  (make-input-filename filearg 'NIL)))))
;;(defun rkeyids (&rest filearg)
;;  (mapcar #'intern (mapcar #'car (getindextable
;;				  (make-input-filename filearg 'LISPLIB)))))

;; (RWRITE cvec item rstream)
(defun rwrite (key item rstream)
  (if (equal (libstream-mode rstream) 'input) (error "not output =
stream"))
  (let ((stream (libstream-indexstream rstream))
	(pos (if item (cons (file-position (libstream-indexstream rstream)) nil)
	       (cons nil item))))   ;; for small items
    (make-entry (string key) rstream pos)
    (when (numberp (car pos))
	  (write item :stream stream :level nil :length nil
		 :circle t :array t :escape t)
	  (terpri stream))))

(defun make-entry (key rstream value-or-pos)
   (let ((entry (assoc key (libstream-indextable rstream) :test =
#'equal)))
     (if (null entry)
	 (push (setq entry (cons key (cons 0 value-or-pos)))
	       (libstream-indextable rstream))
       (progn
	 (if (stringp (caddr entry)) ($erase (caddr entry)))
	 (setf (cddr entry) value-or-pos)))
     entry))

(defun rsetclass (key int rstream) 0)

;;(defun rshut (rstream)
;;  (when (and (equal rstream (cdr (assoc 'FILE OPTIONLIST)))
;;             (assoc 'compiler-output-stream optionlist))
;;        (close (cdr (assoc 'compiler-output-stream optionlist)))
;;        (setq optionlist nil))
;;  (if (eq (libstream-mode rstream) 'output)
;;      (write-indextable (libstream-indextable rstream) =
(libstream-indexstream rstream)))
;;  (close (libstream-indexstream rstream)))
(defun rshut (rstream)
  (when (and (equal rstream (cdr (assoc 'FILE OPTIONLIST)))
             (assoc 'compiler-output-stream optionlist))
        (close (cdr (assoc 'compiler-output-stream optionlist)))
        (setq optionlist (cddr optionlist)))
  (if (eq (libstream-mode rstream) 'output)
      (write-indextable (libstream-indextable rstream) =
(libstream-indexstream rstream)))
  (close (libstream-indexstream rstream)))

;; filespec is id or list of 1, 2 or 3 ids
;; filearg is filespec or 1, 2 or 3 ids
;; (RPACKFILE filearg)  -- compiles code files and converts to =
compressed format
(defun rpackfile (filespec)
  (setq filespec (make-filename filespec))
  (if (string= (pathname-type filespec) "NRLIB")
      (recompile-lib-file-if-necessary (concat (namestring filespec) =
"/code.lsp"))
  ;; only pack non libraries to avoid lucid file handling problems    
    (let* ((rstream (rdefiostream (list (cons 'file filespec) (cons =
'mode 'input))))
	   (nstream nil)
	   (nindextable nil)
	   (nrstream nil)
	   (index-file-name (concat (truename filespec) "/" *index-filename*))
	   (temp-index-file-name (make-pathname :name "oldindex"
						:defaults index-file-name)))
      (rename-file index-file-name temp-index-file-name ) ;; stays until =
closed
      (multiple-value-setq (nstream nindextable) (get-io-index-stream =
filespec))
      (setq nrstream (make-libstream :mode 'output  :dirname filespec
				     :indextable nindextable
				     :indexstream nstream ))
      (dolist (entry (libstream-indextable rstream))
	      (rwrite (car entry) (rread (car entry) rstream) nrstream)
	      (if (stringp (caddr entry))
		  (delete-file (concat filespec "/" (caddr entry)))))
      (close (libstream-indexstream rstream))
      (delete-file temp-index-file-name)
      (rshut nrstream)))
  filespec)

#+:AKCL
(defun recompile-lib-file-if-necessary (lfile)
   (let* ((bfile (make-pathname :type *lisp-bin-filetype* :defaults =
lfile))
          (bdate (and (probe-file bfile) (file-write-date bfile)))
          (ldate (and (probe-file lfile) (file-write-date lfile))))
     (if ldate
	 (if (and bdate (> bdate ldate)) nil
	   (progn (compile-lib-file lfile) (list bfile))))))

#+:CCL
(defun recompile-lib-file-if-necessary (lfile)
 (let ( (mname (pathname-name (file-namestring (directory-namestring =
lfile))))
        (mdate (modulep mname))
        (ldate (filedate lfile)) )
        (if (or (not mdate) (datelessp mdate ldate)) 
          (seq
            (if (null output-library)
                (boot::|openOutputLibrary|
                  (setq boot::|$outputLibraryName|
                   (if (null boot::|$outputLibraryName|)
                       (make-pathname :directory (get-current-directory)
                                      :name "user.lib")
                        (if (filep boot::|$outputLibraryName|)
                            (truename boot::|$outputLibraryName|)
                            boot::|$outputLibraryName|)))))
            (compile-file lfile 
                          :output-file (intern (pathname-name
                                               (directory-namestring =
lfile))))))))


#+:AKCL
(defun spad-fixed-arg (fname )
   (and (equal (symbol-package fname) (find-package "BOOT"))
        (not (get fname 'compiler::spad-var-arg))
	(search ";" (symbol-name fname))
        (or (get fname 'compiler::fixed-args)
	    (setf (get fname 'compiler::fixed-args) t)))
   nil)

#+:AKCL
(defun compile-lib-file (fn &rest opts)
  (unwind-protect
      (progn
	(trace (compiler::fast-link-proclaimed-type-p
		:exitcond nil
		:entrycond (spad-fixed-arg (car system::arglist))))
	(trace (compiler::t1defun :exitcond nil
		:entrycond (spad-fixed-arg (caar system::arglist))))
	(apply #'compile-file fn opts))
    (untrace compiler::fast-link-proclaimed-type-p compiler::t1defun)))
#+:CCL
(define-function 'compile-lib-file #'compile-file)

;; (RDROPITEMS filearg keys) don't delete, used in files.spad
(defun rdropitems (filearg keys &aux (ctable (getindextable filearg)))
  (mapc #'(lambda(x)
           (setq ctable (delete x ctable :key #'car :test #'equal)) )
           (mapcar #'string keys))
  (putindextable ctable filearg))

;; cms file operations
(defun make-filename (filearg &optional (filetype nil))
  (let ((filetype (if (symbolp filetype) 
		      (symbol-name filetype)
		      filetype)))
    (cond
     ((pathnamep filearg) 
      (cond ((pathname-type filearg) (namestring filearg))
	    (t (namestring (make-pathname :directory (pathname-directory =
filearg)
					  :name (pathname-name filearg)
					  :type filetype)))))
     ;; Previously, given a filename containing "." and
     ;; an extension this function would return filearg. MCD 23-8-95.
     ((and (stringp filearg) (pathname-type filearg) (null filetype)) =
filearg)
     ;;  ((and (stringp filearg)
     ;;    (or (pathname-type filearg) (null filetype)))
     ;;     filearg)
     ((and (stringp filearg) (stringp filetype)
	   (pathname-type filearg) 
	   (string-equal (pathname-type filearg) filetype))
      filearg)
     ((consp filearg)
      (make-filename (car filearg) (or (cadr filearg) filetype)))
     (t (if (stringp filetype) (setq filetype (intern filetype "BOOT")))
	(let ((ft (or (cdr (assoc filetype $filetype-table)) filetype)))
	  (if ft 
	      (concatenate 'string (string filearg) "." (string ft))
	      (string filearg)))))))

(defun make-full-namestring (filearg &optional (filetype nil))
  (namestring (merge-pathnames (make-filename filearg filetype))))

(defun probe-name (file)
  (if (probe-file file) (namestring file) nil))

(defun get-directory-list (ft &aux (cd (namestring $current-directory)))
  (cond ((member ft '("NRLIB" "DAASE" "EXPOSED") :test #'string=)
	   (if (eq BOOT::|$UserLevel| 'BOOT::|development|)
	       (cons cd $library-directory-list)
	       $library-directory-list))
	(t (adjoin cd 
              (adjoin (namestring (user-homedir-pathname)) =
$directory-list 
                      :test #'string=) 
              :test #'string=))))

(defun make-input-filename (filearg &optional (filetype nil))
   (let*
     ((filename  (make-filename filearg filetype))
      (dirname (pathname-directory filename))
      (ft (pathname-type filename))
      (dirs (get-directory-list ft))
      (newfn nil))   
    (if (or (null dirname) (eqcar dirname :relative))
	(dolist (dir dirs (probe-name filename))
		(when 
		 (probe-file 
		  (setq newfn (concatenate 'string dir filename)))
		 (return newfn)))
      (probe-name filename))))

(defun $FILEP (&rest filearg) (make-full-namestring filearg))
(define-function '$OUTFILEP #'$FILEP) ;;temporary bogus def

(defun $findfile (filespec filetypelist)
  (let ((file-name (if (consp filespec) (car filespec) filespec))
	(file-type (if (consp filespec) (cadr filespec) nil)))
    (if file-type (push file-type filetypelist))
    (some #'(lambda (ft) (make-input-filename file-name ft))
	  filetypelist)))

;; ($ERASE filearg) -> 0 if succeeds else 1
(defun $erase (&rest filearg)
  (setq filearg (make-full-namestring filearg))
  (if (probe-file filearg)
#+:CCL (delete-file filearg)
#+:AKCL
      (if (library-file filearg)
          (delete-directory filearg)
          (delete-file filearg))
      1))

(defun library-file (filename)
; (format t "library-file: ~a~%" filename)
 t)


#+:AKCL
(defun delete-directory (dirname)
   (system (concat "rm  -r " dirname)))

(defun $REPLACE (filespec1 filespec2)
    ($erase (setq filespec1 (make-full-namestring filespec1)))
    (rename-file (make-full-namestring filespec2) filespec1))



;;(defun move-file (namestring1 namestring2)
;;  (rename-file namestring1 namestring2))

(defun $FCOPY (filespec1 filespec2 &optional (append-flag nil))
    (let ((name1 (make-full-namestring filespec1))
	  (name2 (make-full-namestring filespec2)))
      (if (library-file name1)
	(copy-lib-directory name1 name2)
	(copy-file name1 name2))))


#+(OR :AKCL (AND :CCL :UNIX))
(defun copy-lib-directory (name1 name2)
   (makedir name2)
   (system (concat "sh -c 'cp " name1 "/* " name2 "'")))

#+(OR :AKCL (AND :CCL :UNIX))
(defun copy-file (namestring1 namestring2)
  (system (concat "cp " namestring1 " " namestring2)))


(defvar vmlisp::$filetype-table
  '((BOOT::LISPLIB . |LILIB|)
    (BOOT::SPADLIB . |slib|)
    (BOOT::HISTORY . |hist|)
    (BOOT::HELPSPAD . |help|)
    (BOOT::INPUT . |input|)
    (BOOT::SPAD . |spad|)
    (BOOT::BOOT . |boot|)
    (BOOT::LISP . |lsp|)
    (BOOT::META . |meta|)
    (BOOT::OUTPUT . |splog|)
    (BOOT::ERRORLIB . |erlib|)
    (BOOT::DATABASE . |DAASE|)
    (BOOT::SPADDATA . |sdata|)
    (BOOT::SPADFORT . |sfort|)
    (BOOT::SPADFORM . |sform|)
    (BOOT::SPADTEX . |stex|)
    (BOOT::SPADOUT . |spout|)))
@
\eject
\begin{thebibliography}{99}
\bibitem{1} nothing
\end{thebibliography}
\end{document}

------=_NextPart_000_01C3_01C4DC86.B2284B10--

\start
Date: Wed, 8 Dec 2004 18:12:25 +1000
From: Mike Thomas
To: Bill Page
Subject: Database fixes.

Hi all.

I haven't built Axiom from scratch with the attached changed and added files
but running the following exerpt from the makefile in int/algebra now runs
to completion and so I expect the daase files should rebuild:

  )lisp (make-databases "" nil)

The GCL patch fixes a GCL 2.6.5 vs CVS HEAD GCL deficiency, the src
directory stuff the "makedir" problem I mentioned yesterday.  It hasn't yet
gone into Tim's new port file but that can be sorted out later by whomever.

I won't be available for at least the next 24 hours for anything at all so
best of luck.

Cheers

------=_NextPart_000_02A6_01C4DD51.78777280
	name="cfuns-c.c.pamphlet"
	filename="cfuns-c.c.pamphlet"

\documentclass{article}
\usepackage{axiom}
\begin{document}
\title{\$SPAD/src/lib cfuns-c.c}
\author{The Axiom Team}
\maketitle
\begin{abstract}
\end{abstract}
\eject
\tableofcontents
\eject
\section{License}
<<license>>=
/*
Copyright (c) 1991-2002, The Numerical ALgorithms Group Ltd.
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are
met:

    - Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.

    - Redistributions in binary form must reproduce the above copyright
     notice, this list of conditions and the following disclaimer in
      the documentation and/or other materials provided with the
      distribution.

    - Neither the name of The Numerical ALgorithms Group Ltd. nor the
      names of its contributors may be used to endorse or promote =
products
      derived from this software without specific prior written =
permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/
@
<<*>>=
<<license>>

#include "useproto.h"
#include <stdio.h>
#include <unistd.h>
#include <stdlib.h>
#include <string.h>
#include <malloc.h>
#include <sys/types.h>
#include <sys/stat.h>

#include "cfuns-c.H1"


int
#ifdef _NO_PROTO
CLgetpid()
#else
CLgetpid(void)
#endif
{
    return getpid();
}

int
#ifdef _NO_PROTO
addtopath(dir)
    char *dir;
#else
addtopath(char *dir)
#endif
{
    char *path, *newpath;

    path = getenv("PATH");
    if (path == NULL)
        return -1;

    newpath = (char *) malloc(1 + strlen(path) + strlen(dir) + =
strlen("PATH=:"));
    if (newpath == NULL)
        return -1;

#ifndef MSYSplatform
    sprintf(newpath, "PATH=%s;%s", path, dir);
#else /* MSYSplatform */
#endif /* MSYSplatform */

    return putenv(newpath);
}

/*
 * Test whether the path is the name of a directory.  Returns 1 if so, 0 =
if
 * not, -1 if it doesn't exist.
 */


int
#ifdef _NO_PROTO
directoryp(path)
    char *path;
#else
directoryp(char *path)
#endif
{
    struct stat buf;
    int code;

    code = stat(path, &buf);
    if (code == -1) {
        return (-1);
    }
    else {
        return ((buf.st_mode & S_IFDIR) != 0);
    }
}

/* Make a directory returning 0 for success and -1 for failure */

int
#ifdef _NO_PROTO
makedir(path)
    char *path;
#else
makedir(char *path)
#endif
{
   return ( mkdir (path) );
}

int 
#ifdef _NO_PROTO
make_path_from_file(s, t)
    char *s, *t;
#else
make_path_from_file(char *s, char *t)
#endif
{
    char *pos=NULL;
    char *c;

    /** simply copies the path name from t into s **/
    for (c = t + strlen(t); c != s; c--)
        if ( ( *c == '/' ) || ( *c == '\\' ) ) {
            pos = c;
            break;
        }
    /** Check to see if the path was actually present **/
    if (c == t) {               /** No Path, so return the pwd **/
        return (-1);
    }
    /** now just do the copying **/
    strncpy(s, t, pos - t);
    return 1;
}

int
#ifdef _NO_PROTO
writeablep(path)
    char *path;
#else
writeablep(char *path)
#endif
{
    struct stat buf;
    char newpath[100];
    int code;

#ifndef MSYSplatform
    code = stat(path, &buf);
    if (code == -1) {
        /** The file does not exist, so check to see
                 if the directory is writable                  *****/
        if (make_path_from_file(newpath, path) == -1 ||
            stat(newpath, &buf) == -1) {
            return (-1);
        }
        else {
            if (geteuid() == buf.st_uid) {
                return (2 * ((buf.st_mode & S_IWUSR) != 0));
            }
            else if (getegid() == buf.st_gid) {
                return (2 * ((buf.st_mode & S_IWGRP) != 0));
            }
            else {
                return (2 * ((buf.st_mode & S_IWOTH) != 0));
            }
        }
    }
    else if (geteuid() == buf.st_uid) {
        return ((buf.st_mode & S_IWUSR) != 0);
    }
    else if (getegid() == buf.st_gid) {
        return ((buf.st_mode & S_IWGRP) != 0);
    }
    else {
        return ((buf.st_mode & S_IWOTH) != 0);
    }
#else /* MSYSplatform */
    return ( 1 );
#endif /* MSYSplatform */
}


int
#ifdef _NO_PROTO
readablep(path)
    char *path;
#else
readablep(char *path)
#endif
{
#ifndef MSYSplatform
    struct stat buf;
    int code;

    code = stat(path, &buf);
    if (code == -1) {
        return (-1);
    }
    else if (geteuid() == buf.st_uid) {
        return ((buf.st_mode & S_IREAD) != 0);
    }
    else if (getegid() == buf.st_gid) {
        return ((buf.st_mode & S_IRGRP) != 0);
    }
    else {
        return ((buf.st_mode & S_IROTH) != 0);
    }
#else /* MSYSplatform */
    return ( 1 );
#endif /* MSYSplatform */
}



long
#ifdef _NO_PROTO
findString(file, string)
    char *file, *string;
#else
findString(char *file, char *string)
#endif
{
    int nstring, charpos;
    FILE *fn;
    char buffer[1024];

    if ((fn = fopen(file, "r")) == NULL)
        return -1;

    for (charpos = 0, nstring = strlen(string);
         fgets(buffer, sizeof buffer, fn) != NULL;
         charpos += strlen(buffer)
        )
        if (!strncmp(buffer, string, nstring))
            return charpos;
    return -1;

}

int
#ifdef _NO_PROTO
copyEnvValue(varName, buffer)
    char *varName, *buffer;
#else
copyEnvValue(char *varName, char *buffer)
#endif
{
    char *s;

    s = getenv(varName);
    if (s == NULL)
        return 0;
    strcpy(buffer, s);
    return strlen(s);
}

@
\eject
\begin{thebibliography}{99}
\bibitem{1} nothing
\end{thebibliography}
\end{document}

------=_NextPart_000_02A6_01C4DD51.78777280
	name="Makefile.pamphlet"
	filename="Makefile.pamphlet"

\documentclass{article}
\usepackage{../src/scripts/tex/axiom}
\begin{document}
\title{\$SPAD/lsp Makefile}
\author{The Axiom Team}
\maketitle
\begin{abstract}
\end{abstract}
\eject
\tableofcontents
\eject
\section{The Makefile}
We create a dummy file {\bf gcldir} after gcl has been built so
it is not rebuilt. We need to do this because we have no control
over the gcl Makefiles.

Patches are applied to the distribution before we do the configure.
\section{Gnu Common Lisp 2.6.5}
\subsection{gmp wrappers patch}
The file [[gmp_wrappers.h]] has the declaration of the integer [[j]]
out of order. This causes the compiler to complain. This patch puts
the declaration at the beginning of the function.
<<gcl-2.6.5.h.gmp_wrappers.h.patch>>=
	@(cd ${GCLVERSION}/h ; \
	  echo 28 applying gmp_wrappers patch ; \
	  patch <${SPD}/zips/${GCLVERSION}.h.gmp_wrappers.h.patch )
@
\section{Gnu Common Lisp 2.5.2}
\subsubsection{socket patch}
This patch is to {\bf h/386-linux.defs} to include two 
global variables, {\bf EXTRAS} and {\bf EXTRA\_LIB}
\begin{verbatim}
EXTRAS = ${OBJ}/${SYS}/lib/cfuns-c.o ${OBJ}/${SYS}/lib/sockio-c.o
EXTRA_LIB=${OBJ}/${SYS}/lib/libspad.a
\end{verbatim}
The {\bf EXTRAS} variable is used to include two files into the
running image. The {\bf cfuns-c} file contains low-level directory
manipulation routines. The {\bf sockio-c} file contains low level
socket code. Note that versions of GCL beyond gcl-2.4.1 may have
routines already available. If so the Axiom references to these
routines should be rewritten.

We also need to create two .ini files, one for cfuns-c and one
for sockio-c. These are referenced in the gcl-2.4.1 makefiles
but, since no initialization is needed, we simply create empty files.
<<gcl-2.5.2.socket.patch>>=
	@(cd ${GCLVERSION}/h ; \
	  echo 3 applying EXTRAS patch to h/linux.defs ; \
	  patch <${SPD}/zips/${GCLVERSION}.h.linux.defs.patch )
	@(echo 4 setup ini files for EXTRAS patch ; \
	  touch ${OBJ}/${SYS}/lib/cfuns-c.ini ; \
	  touch ${OBJ}/${SYS}/lib/sockio-c.ini )
@
<<gcl-2.6.1.socket.patch>>=
	@(cd ${GCLVERSION}/h ; \
	  echo 3 applying EXTRAS patch to h/linux.defs ; \
	  patch <${SPD}/zips/${GCLVERSION}.h.linux.defs.patch )
	@(echo 4 setup ini files for EXTRAS patch ; \
	  touch ${OBJ}/${SYS}/lib/cfuns-c.ini ; \
	  touch ${OBJ}/${SYS}/lib/sockio-c.ini )
@
<<gcl-2.6.2.socket.patch>>=
	@(cd ${GCLVERSION}/h ; \
	  echo 3 applying EXTRAS patch to h/linux.defs ; \
	  patch <${SPD}/zips/${GCLVERSION}.h.linux.defs.patch )
	@(echo 4 setup ini files for EXTRAS patch ; \
	  touch ${OBJ}/${SYS}/lib/cfuns-c.ini ; \
	  touch ${OBJ}/${SYS}/lib/sockio-c.ini )
@
<<gcl-2.6.2a.socket.patch>>=
	@(cd ${GCLVERSION}/h ; \
	  echo 3 applying EXTRAS patch to h/linux.defs ; \
	  patch <${SPD}/zips/${GCLVERSION}.h.linux.defs.patch )
	@(echo 4 setup ini files for EXTRAS patch ; \
	  touch ${OBJ}/${SYS}/lib/cfuns-c.ini ; \
	  touch ${OBJ}/${SYS}/lib/sockio-c.ini )
@
<<gcl-2.6.3.socket.patch>>=
	@(cd ${GCLVERSION}/h ; \
	  echo 3 applying EXTRAS patch to h/linux.defs ; \
	  patch <${SPD}/zips/${GCLVERSION}.h.linux.defs.patch )
	@(echo 4 setup ini files for EXTRAS patch ; \
	  touch ${OBJ}/${SYS}/lib/cfuns-c.ini ; \
	  touch ${OBJ}/${SYS}/lib/sockio-c.ini )
@
<<gcl-2.6.5.socket.patch>>=
	@(cd ${GCLVERSION}/h ; \
	  echo 3 applying EXTRAS patch to h/linux.defs ; \
	  patch <${SPD}/zips/${GCLVERSION}.h.linux.defs.patch ; \
	  patch <${SPD}/zips/${GCLVERSION}.h.mingw.defs.patch )
	@(echo 4 setup ini files for EXTRAS patch ; \
	  touch ${OBJ}/${SYS}/lib/cfuns-c.ini ; \
	  touch ${OBJ}/${SYS}/lib/sockio-c.ini )
@
\subsubsection{fortran patch}
Communication over sockets (basically to the NAG fortran library)
requires us to have XDR enabled.
<<gcl-2.5.2.fortran.patch>>=
	@(cd ${GCLVERSION}/h ; \
	  echo 5 applying HAVE_XDR patch to h/linux.h ; \
	  patch <${SPD}/zips/${GCLVERSION}.h.linux.h.patch )
@
This patch is no longer necessary as of GCL-2.6.1 because the 
C preparser symbol HAVE_XDR is now the default in GCL.
\subsubsection{libspad patch}
The second patch changes the {\bf unixport/makefile} to reference
the {\bf libspad.a} library when building the raw system image.
from {\bf libspad.a}
<<gcl-2.5.2.libspad.patch>>=
	@(cd ${GCLVERSION}/unixport ; \
	  echo 6 applying libspad.a patch to unixport/makefile ; \
	  patch <${SPD}/zips/${GCLVERSION}.unixport.makefile.patch )
@
<<gcl-2.6.1.libspad.patch>>=
	@(cd ${GCLVERSION}/unixport ; \
	  echo 6 applying libspad.a patch to unixport/makefile ; \
	  patch <${SPD}/zips/${GCLVERSION}.unixport.makefile.patch )
@
<<gcl-2.6.2.libspad.patch>>=
	@(cd ${GCLVERSION}/unixport ; \
	  echo 6 applying libspad.a patch to unixport/makefile ; \
	  patch <${SPD}/zips/${GCLVERSION}.unixport.makefile.patch )
@
<<gcl-2.6.2a.libspad.patch>>=
	@(cd ${GCLVERSION}/unixport ; \
	  echo 6 applying libspad.a patch to unixport/makefile ; \
	  patch <${SPD}/zips/${GCLVERSION}.unixport.makefile.patch )
@
<<gcl-2.6.3.libspad.patch>>=
	@(cd ${GCLVERSION}/unixport ; \
	  echo 6 applying libspad.a patch to unixport/makefile ; \
	  patch <${SPD}/zips/${GCLVERSION}.unixport.makefile.patch )
@
<<gcl-2.6.5.libspad.patch>>=
	@(cd ${GCLVERSION}/unixport ; \
	  echo 6 applying libspad.a patch to unixport/makefile ; \
	  patch <${SPD}/zips/${GCLVERSION}.unixport.makefile.patch )
@
\subsubsection{toploop patch}
This patch turns off the banner display every time GCL starts.
We could use the -batch flag but that would be a pervasive change.
It isn't critical to the system builds but we will later be 
capturing stdin and stdout and we do not want extra information
printed.
<<gcl-2.5.2.toploop.patch>>=
	@(cd ${GCLVERSION}/unixport ; \
	  echo 7 applying toploop patch to unixport/init_gcl.lsp ; \
	  patch <${SPD}/zips/${GCLVERSION}.unixport.init_gcl.lsp.in.patch )
@
<<gcl-2.6.1.toploop.patch>>=
	@(cd ${GCLVERSION}/unixport ; \
	  echo 7 applying toploop patch to unixport/init_gcl.lsp ; \
	  patch <${SPD}/zips/${GCLVERSION}.unixport.init_gcl.lsp.in.patch )
@
<<gcl-2.6.2.toploop.patch>>=
	@(cd ${GCLVERSION}/unixport ; \
	  echo 7 applying toploop patch to unixport/init_gcl.lsp ; \
	  patch <${SPD}/zips/${GCLVERSION}.unixport.init_gcl.lsp.in.patch )
@
<<gcl-2.6.2a.toploop.patch>>=
	@(cd ${GCLVERSION}/unixport ; \
	  echo 7 applying toploop patch to unixport/init_gcl.lsp ; \
	  patch <${SPD}/zips/${GCLVERSION}.unixport.init_gcl.lsp.in.patch )
@
<<gcl-2.6.3.toploop.patch>>=
	@(cd ${GCLVERSION}/unixport ; \
	  echo 7 applying toploop patch to unixport/init_gcl.lsp ; \
	  patch <${SPD}/zips/${GCLVERSION}.unixport.init_gcl.lsp.in.patch )
@
<<gcl-2.6.5.toploop.patch>>=
	@(cd ${GCLVERSION}/unixport ; \
	  echo 7 applying toploop patch to unixport/init_gcl.lsp ; \
	  patch <${SPD}/zips/${GCLVERSION}.unixport.init_gcl.lsp.in.patch )
@
\subsubsection{object to float patch}
GCL 2.5.2 contains no reference to this function and it was removed.
Axiom uses this function so we re-implement it here.
<<gcl-2.5.2.objecttofloat.patch>>=
	@(cd ${GCLVERSION}/o ; \
	  echo 8 applying object_to_float patch ; \
	  patch <${SPD}/zips/${GCLVERSION}.o.cmpaux.c.patch )
@
This patch is no longer necessary as of GCL-2.6.1 because object_to_float
is now defined by default.
\subsubsection{in-package patch}
This changes the common lisp 2.0 defined behavior of in-package
(throw an error if the package does not exist) so that it mirrors
the 1.0 defined behavior (create the package if it does not exist).
This patch is intended to be temporary. Axiom's common lisp code
should be fixed and this patch removed before shipment.
<<gcl-2.5.2.in-package.patch>>=
	@(cd ${GCLVERSION}/o ; \
	  echo 9 applying in-package patch ; \
	  patch <${SPD}/zips/${GCLVERSION}.o.package.d.patch )
@
I believe that all instances of in-package have been fixed and 
that this patch is no longer necessary.
\subsubsection{EXIT and MAX\_STACK\_SIZE patchs}
Axiom uses EXIT as a function. GCL 2.5.2 decided to make it a 
synonym to the BYE function. We fix this for Axiom.
We also patch the MAX_STACK_SIZE to be 16Mb.
<<gcl-2.5.2.exit.patch>>=
	@(cd ${GCLVERSION}/o ; \
	  echo 10 applying EXIT patch ; \
	  echo 18 applying MAX_STACK_SIZE patch ; \
	  patch <${SPD}/zips/${GCLVERSION}.o.main.c.patch )
@
As of GCL-2.6.1 EXIT is no longer defined.
<<gcl-2.6.1.exit.patch>>=
	@(cd ${GCLVERSION}/o ; \
	  echo 18 applying MAX_STACK_SIZE patch ; \
	  patch <${SPD}/zips/${GCLVERSION}.o.main.c.patch )
@
As of GCL-2.6.1 EXIT is no longer defined.
<<gcl-2.6.2.exit.patch>>=
	@(cd ${GCLVERSION}/o ; \
	  echo 18 applying MAX_STACK_SIZE patch ; \
	  patch <${SPD}/zips/${GCLVERSION}.o.main.c.patch )
@
\subsubsection{tail-recursive patch}
Bill Schelter added tail recursion for Axiom. In order to test it
he left code in the system to print a message when the code was
executed. We no longer care but it is still in GCL. We patch the
call rather than the cmpnote function as cmpnote might have later
usage.
<<gcl-2.5.2.tail-recursive.patch>>=
	@(cd ${GCLVERSION}/cmpnew ; \
	  echo 11 applying tail-recursive noise patch ; \
	  patch <${SPD}/zips/${GCLVERSION}.cmpnew.cmpflet.lsp.patch )
	@(cd ${GCLVERSION}/cmpnew ; \
	  echo 12 applying tail-recursive noise patch ; \
	  patch <${SPD}/zips/${GCLVERSION}.cmpnew.cmpcall.lsp.patch )
@
GCL 2.6.1 renamed the files.
<<gcl-2.6.1.tail-recursive.patch>>=
	@(cd ${GCLVERSION}/cmpnew ; \
	  echo 11 applying tail-recursive noise patch ; \
	  patch <${SPD}/zips/${GCLVERSION}.cmpnew.gcl_cmpflet.lsp.patch )
	@(cd ${GCLVERSION}/cmpnew ; \
	  echo 12 applying tail-recursive noise patch ; \
	  patch <${SPD}/zips/${GCLVERSION}.cmpnew.gcl_cmpcall.lsp.patch )
@
<<gcl-2.6.2.tail-recursive.patch>>=
	@(cd ${GCLVERSION}/cmpnew ; \
	  echo 11 applying tail-recursive noise patch ; \
	  patch <${SPD}/zips/${GCLVERSION}.cmpnew.gcl_cmpflet.lsp.patch )
	@(cd ${GCLVERSION}/cmpnew ; \
	  echo 12 applying tail-recursive noise patch ; \
	  patch <${SPD}/zips/${GCLVERSION}.cmpnew.gcl_cmpcall.lsp.patch )
@
<<gcl-2.6.2a.tail-recursive.patch>>=
	@(cd ${GCLVERSION}/cmpnew ; \
	  echo 11 applying tail-recursive noise patch ; \
	  patch <${SPD}/zips/${GCLVERSION}.cmpnew.gcl_cmpflet.lsp.patch )
	@(cd ${GCLVERSION}/cmpnew ; \
	  echo 12 applying tail-recursive noise patch ; \
	  patch <${SPD}/zips/${GCLVERSION}.cmpnew.gcl_cmpcall.lsp.patch )
@
<<gcl-2.6.3.tail-recursive.patch>>=
	@(cd ${GCLVERSION}/cmpnew ; \
	  echo 11 applying tail-recursive noise patch ; \
	  patch <${SPD}/zips/${GCLVERSION}.cmpnew.gcl_cmpflet.lsp.patch )
	@(cd ${GCLVERSION}/cmpnew ; \
	  echo 12 applying tail-recursive noise patch ; \
	  patch <${SPD}/zips/${GCLVERSION}.cmpnew.gcl_cmpcall.lsp.patch )
@
<<gcl-2.6.5.tail-recursive.patch>>=
	@(cd ${GCLVERSION}/cmpnew ; \
	  echo 11 applying tail-recursive noise patch ; \
	  patch <${SPD}/zips/${GCLVERSION}.cmpnew.gcl_cmpflet.lsp.patch )
	@(cd ${GCLVERSION}/cmpnew ; \
	  echo 12 applying tail-recursive noise patch ; \
	  patch <${SPD}/zips/${GCLVERSION}.cmpnew.gcl_cmpcall.lsp.patch )
@
\subsubsection{MSYS shell makefile variable patch}
This patch works around a bug in the MSYS make when executing
shell commands.
<<gcl-2.6.5.windows.variable.patch>>=
	@(cd ${GCLVERSION}/unixport ; \
	  echo 13 applying Windows shell variable patch to unixport/makefile ; \
	  patch <${SPD}/zips/${GCLVERSION}.unixport.makefile.1.patch )
@
\subsubsection{MinGW32 gcc 3.4.2 and MinGW32 runtime 3.5 malloc patch}
This patch works around a bug in the MinGW32 runtime which calls malloc
before main - which intrun calls GCL's malloc which has not been =
initialised.
<<gcl-2.6.5.alloc.c.patch>>=
	@(cd ${GCLVERSION}/o ; \
	  echo 14 applying MinGW32 malloc before main workaround to o/alloc.c ; =
\
	  patch <${SPD}/zips/${GCLVERSION}.alloc.c.patch )
@
\subsubsection{MinGW32 directory wildcard patch}
Wildcards were not being passed through - truename not required here.
<<gcl-2.6.5.mingfile.c.patch>>=
	@(cd ${GCLVERSION}/o ; \
	  echo 15 applying MinGW32 directory wildcard patch to o/mingfile.c ; \
	  patch <${SPD}/zips/${GCLVERSION}.mingfile.c.patch )
@
\subsubsection{MinGW32 probe-file patch}
Names ending with / were not handled corectly.
<<gcl-2.6.5.unixfsys.c.patch>>=
	@(cd ${GCLVERSION}/o ; \
	  echo 15 applying MinGW32 probe-file patch to o/unixfsys.c ; \
	  patch <${SPD}/zips/${GCLVERSION}.unixfsys.c.patch )
@
\subsubsection{collectfn fix}
GCL-2.6.1 renamed collectfn.lsp to gcl_collectfn.lsp.
We rename it back into place because we have later Makefiles
that depend on it. The alternative is to propagate the name changes thru
all of those Makefile and they would now need to know about the =
GCLVERSION
variable. 
<<gcl-2.6.1.collectfn.fix>>=
	@(cd ${GCLVERSION}/cmpnew ; \
	  echo 26 copy gcl_collectfn.lsp to collectfn.lsp ; \
	  cp gcl_collectfn.lsp ${OBJ}/${SYS}/collectfn.lsp )
@
<<gcl-2.6.2.collectfn.fix>>=
	@(cd ${GCLVERSION}/cmpnew ; \
	  echo 26 copy gcl_collectfn.lsp to collectfn.lsp ; \
	  cp gcl_collectfn.lsp ${OBJ}/${SYS}/collectfn.lsp )
@
In this version we have created a new subdirectory for use by GCL
during compile time at [[obj/sys/lsp]]. We copy two files from 
GCL, the [[collectfn.lsp]] file and the [[sys-proclaim.lisp]] file. 
The collectfn.lsp contains code which extends the GCL compiler and
collects type information. The compile-file function writes this
type information to a [[.fn]] file as structs. These structs can
be loaded and written out as a file of lisp proclaims. The =
sys-proclaim.lisp
file contains the proclaims for GCL's function definitions.
<<gcl-2.6.2a.collectfn.fix>>=
	@(cd ${GCLVERSION}/cmpnew ; \
	  echo 26 copy gcl_collectfn.lsp to ${OBJ}/${SYS}/lsp/collectfn.lsp ; \
	  cp gcl_collectfn.lsp ${OBJ}/${SYS}/lsp/collectfn.lsp )
	@(cd ${GCLVERSION}/lsp ; \
	  echo 27 copy sys-proclaim.lisp to ${OBJ}/${SYS}/lsp/sys-proclaim.lisp =
; \
	  cp sys-proclaim.lisp ${OBJ}/${SYS}/lsp/sys-proclaim.lisp )
@
<<gcl-2.6.3.collectfn.fix>>=
	@(cd ${GCLVERSION}/cmpnew ; \
	  echo 26 copy gcl_collectfn.lsp to ${OBJ}/${SYS}/lsp/collectfn.lsp ; \
	  cp gcl_collectfn.lsp ${OBJ}/${SYS}/lsp/collectfn.lsp )
	@(cd ${GCLVERSION}/lsp ; \
	  echo 27 copy sys-proclaim.lisp to ${OBJ}/${SYS}/lsp/sys-proclaim.lisp =
; \
	  cp sys-proclaim.lisp ${OBJ}/${SYS}/lsp/sys-proclaim.lisp )
@
<<gcl-2.6.5.collectfn.fix>>=
	@(cd ${GCLVERSION}/cmpnew ; \
	  echo 26 copy gcl_collectfn.lsp to ${OBJ}/${SYS}/lsp/collectfn.lsp ; \
	  cp gcl_collectfn.lsp ${OBJ}/${SYS}/lsp/collectfn.lsp )
	@(cd ${GCLVERSION}/lsp ; \
	  echo 27 copy sys-proclaim.lisp to ${OBJ}/${SYS}/lsp/sys-proclaim.lisp =
; \
	  cp sys-proclaim.lisp ${OBJ}/${SYS}/lsp/sys-proclaim.lisp )
@
\subsection{The GCL-2.5.2 stanza}
\subsubsection{Configure and Make GCL}
We enable several features of GCL. 
The [[--enable-readline]] uses GNU readline for the prompts. It has been
removed and replaced with clef which is Axiom's version of readline.
The [[--enable-maxpage]] is set to allow the image to grow 4 times what =
it would by default. 
The [[--enable-vssize]] allows virtual stack to grow by twice the normal =
size. 
The [[--enable-statsysbfd]] uses a static system bfd library for loading =
and
relocating object files.
 
Finally we load some routines for performance reasons. =
[[lsp/sys-proclaim]]
contains common lisp proclaim statements for the various GCL lisp =
routines.
[[cmpnew/gcl_collectfn]] contains modifications to the common lisp =
compiler
to collect compile-time type information which will be written to [[.fn]]
files as common lisp structs. These [[.fn]] files can be loaded and =
turned
into common lisp proclaim statements which the compiler can use to =
generate
faster code, mostly fast-path function calls. The call to =
[[compiler::emit-fn]]
enables the [[.fn]] file generation whenever compile-file is called. We
default this code into the image so it is always avaiable.
<<gclConfigureMake>>=
	@(cd ${GCLVERSION} ; \
	./configure ${LISPCFG} ; \
	${ENV} ${MAKE} ; \
	echo '(progn (load "cmpnew/gcl_collectfn.lsp") (load =
"lsp/sys-proclaim.lisp") (compiler::emit-fn t) (system::save-system =
"${OUT}/lisp"))' | unixport/saved_gcl )
@
GCL 2.5.2 changes are due to David Mentre (david.mentre@wanadoo.fr).
The key problem to solve is that 2.5.2 uses the common lisp 2.0 standard.
In Common Lisp 1.0 if you do (in-package 'foo) and the foo package does
not exist it is created. In Common Lisp 2.0 if you do (in-package 'foo) 
and the foo package does not exist it is an error. The file 
``gcl-2.5.2/o/package.d'' has been changed to keep the old behavior.
This is an incorrect fix in the long term. Axiom should be changed
everywhere to conform to the common lisp 2.0 standard. 

GCL 2.5.2 requires a different Makefile. In particular, GCL 2.5.2
has a different method of building the lisp image. And, just to
keep us on our toes, they've renamed the files we need to patch.
The new patches are in the zips directory. Patches now are prefixed
by GCLVERSION. 

This stanza will be written out when the GCLVERSION variable is
``gcl-2.5.2''. It will overwrite the default version. See the 
top level Makefile.pamphlet.
<<gcl-2.5.2>>=
# gcl version 2.5.2
OUT=${OBJ}/${SYS}/bin

all:
	@echo 1 building ${LSP} ${GCLVERSION}

gcldir: 
	@echo 2 building ${GCLVERSION}
	@tar -zxf ${ZIPS}/${GCLVERSION}.tgz
<<gcl-2.5.2.socket.patch>>
<<gcl-2.5.2.fortran.patch>>
<<gcl-2.5.2.libspad.patch>>
<<gcl-2.5.2.toploop.patch>>
<<gcl-2.5.2.objecttofloat.patch>>
<<gcl-2.5.2.in-package.patch>>
<<gcl-2.5.2.exit.patch>>
<<gcl-2.5.2.tail-recursive.patch>>
<<gclConfigureMake>>
	@echo 13 finished system build on `date` | tee >gcldir

ccldir: ${LSP}/ccl/Makefile
	@echo 14 building CCL
	@mkdir -p ${INT}/ccl
	@mkdir -p ${OBJ}/${SYS}/ccl
	@( cd ccl ; ${ENV} ${MAKE} )

${LSP}/ccl/Makefile: ${LSP}/ccl/Makefile.pamphlet
	@echo 15 making ${LSP}/ccl/Makefile from ${LSP}/ccl/Makefile.pamphlet
	@( cd ccl ; ${SPADBIN}/document ${NOISE} Makefile )

document:
	@echo 16 making docs in ${LSP}
	@mkdir -p ${INT}/doc/lsp/ccl
	@( cd ccl ; ${ENV} ${MAKE} document )

clean:
	@echo 17 cleaning ${LSP}/ccl
	@( cd ccl ; ${ENV} ${MAKE} clean )

@
\subsection{The GCL-2.6.1 stanza}
GCL 2.6.1 has support for --enable-static for static linking.
Axiom will eventually support static images.

GCL 2.6.1 is supposed to build and run on Windows under mingw.
Axiom will eventually support a windows version.

GCL 2.6.1 continues its tradition of renaming files we need to patch.
The new patches are in the zips directory. 

This stanza will be written out when the GCLVERSION variable is
``gcl-2.6.1''. It will overwrite the default version. See the 
top level Makefile.pamphlet.
<<gcl-2.6.1>>=
# gcl version 2.6.1
OUT=${OBJ}/${SYS}/bin

all:
	@echo 1 building ${LSP} ${GCLVERSION}

gcldir: 
	@echo 2 building ${GCLVERSION}
	@tar -zxf ${ZIPS}/${GCLVERSION}.tgz
<<gcl-2.6.1.socket.patch>>
<<gcl-2.6.1.libspad.patch>>
<<gcl-2.6.1.toploop.patch>>
<<gcl-2.6.1.exit.patch>>
<<gcl-2.6.1.tail-recursive.patch>>
<<gcl-2.6.1.collectfn.fix>>
<<gclConfigureMake>>
	@echo 13 finished system build on `date` | tee >gcldir

ccldir: ${LSP}/ccl/Makefile
	@echo 14 building CCL
	@mkdir -p ${INT}/ccl
	@mkdir -p ${OBJ}/${SYS}/ccl
	@( cd ccl ; ${ENV} ${MAKE} )

${LSP}/ccl/Makefile: ${LSP}/ccl/Makefile.pamphlet
	@echo 15 making ${LSP}/ccl/Makefile from ${LSP}/ccl/Makefile.pamphlet
	@( cd ccl ; ${SPADBIN}/document ${NOISE} Makefile )

document:
	@echo 16 making docs in ${LSP}
	@mkdir -p ${INT}/doc/lsp/ccl
	@( cd ccl ; ${ENV} ${MAKE} document )

clean:
	@echo 17 cleaning ${LSP}/ccl
	@( cd ccl ; ${ENV} ${MAKE} clean )

@
\subsection{The GCL-2.6.2 stanza}
GCL 2.6.2 has support for --enable-static for static linking.
Axiom will eventually support static images.

GCL 2.6.2 is supposed to build and run on Windows under mingw.
Axiom will eventually support a windows version.

GCL 2.6.2 continues its tradition of renaming files we need to patch.
The new patches are in the zips directory. 

This stanza will be written out when the GCLVERSION variable is
``gcl-2.6.2''. It will overwrite the default version. See the 
top level Makefile.pamphlet.
<<gcl-2.6.2>>=
# gcl version 2.6.2
OUT=${OBJ}/${SYS}/bin

all:
	@echo 1 building ${LSP} ${GCLVERSION}

gcldir: 
	@echo 2 building ${GCLVERSION}
	@tar -zxf ${ZIPS}/${GCLVERSION}.tgz
<<gcl-2.6.2.socket.patch>>
<<gcl-2.6.2.libspad.patch>>
<<gcl-2.6.2.toploop.patch>>
<<gcl-2.6.2.exit.patch>>
<<gcl-2.6.2.tail-recursive.patch>>
<<gcl-2.6.2.collectfn.fix>>
<<gclConfigureMake>>
	@echo 13 finished system build on `date` | tee >gcldir

ccldir: ${LSP}/ccl/Makefile
	@echo 14 building CCL
	@mkdir -p ${INT}/ccl
	@mkdir -p ${OBJ}/${SYS}/ccl
	@( cd ccl ; ${ENV} ${MAKE} )

${LSP}/ccl/Makefile: ${LSP}/ccl/Makefile.pamphlet
	@echo 15 making ${LSP}/ccl/Makefile from ${LSP}/ccl/Makefile.pamphlet
	@( cd ccl ; ${SPADBIN}/document ${NOISE} Makefile )

document:
	@echo 16 making docs in ${LSP}
	@mkdir -p ${INT}/doc/lsp/ccl
	@( cd ccl ; ${ENV} ${MAKE} document )

clean:
	@echo 17 cleaning ${LSP}/ccl
	@( cd ccl ; ${ENV} ${MAKE} clean )

@
\subsection{Directory move}
The latest version of GCL no longer uses the version number in the
directory name. We fix that here.
<<gcl-2.6.2a-mvdir>>=
	@echo 27 renaming gcl to ${GCLVERSION}
	@mv gcl gcl-2.6.2a
@

\subsection{The GCL-2.6.2a stanza}

GCL-2.6.2a has a variable si::*optimize-maximum-pages* which defaults
to t which eliminates an old problem of spinning the gc for temporary
allocations of eg. strings in a 32 page space on a heap growing to
quite large size.  You might want to investigate (time ..) and (room)
on computationally intensive jobs with and without this variable set.

This stanza will be written out when the GCLVERSION variable is
``gcl-2.6.2a''. It will overwrite the default version. See the 
top level Makefile.pamphlet.
<<gcl-2.6.2a>>=
# gcl version 2.6.2a
OUT=${OBJ}/${SYS}/bin

all:
	@echo 1 building ${LSP} ${GCLVERSION}

gcldir: 
	@echo 2 building ${GCLVERSION}
	@tar -zxf ${ZIPS}/${GCLVERSION}.tgz
<<gcl-2.6.2a-mvdir>>
<<gcl-2.6.2a.socket.patch>>
<<gcl-2.6.2a.libspad.patch>>
<<gcl-2.6.2a.toploop.patch>>
<<gcl-2.6.2a.tail-recursive.patch>>
<<gcl-2.6.2a.collectfn.fix>>
<<gclConfigureMake>>
	@echo 13 finished system build on `date` | tee >gcldir

ccldir: ${LSP}/ccl/Makefile
	@echo 14 building CCL
	@mkdir -p ${INT}/ccl
	@mkdir -p ${OBJ}/${SYS}/ccl
	@( cd ccl ; ${ENV} ${MAKE} )

${LSP}/ccl/Makefile: ${LSP}/ccl/Makefile.pamphlet
	@echo 15 making ${LSP}/ccl/Makefile from ${LSP}/ccl/Makefile.pamphlet
	@( cd ccl ; ${SPADBIN}/document ${NOISE} Makefile )

document:
	@echo 16 making docs in ${LSP}
	@mkdir -p ${INT}/doc/lsp/ccl
	@( cd ccl ; ${ENV} ${MAKE} document )

clean:
	@echo 17 cleaning ${LSP}/ccl
	@( cd ccl ; ${ENV} ${MAKE} clean )

@
\subsection{Directory move}
The latest version of GCL no longer uses the version number in the
directory name. We fix that here.
<<gcl-2.6.3-mvdir>>=
	@echo 27 renaming gcl to ${GCLVERSION}
	@mv gcl gcl-2.6.3
@
\subsection{The GCL-2.6.3 stanza}
This stanza will be written out when the GCLVERSION variable is
``gcl-2.6.3''. It will overwrite the default version. See the 
top level Makefile.pamphlet.
<<gcl-2.6.3>>=
# gcl version 2.6.3
OUT=${OBJ}/${SYS}/bin

all:
	@echo 1 building ${LSP} ${GCLVERSION}

gcldir: 
	@echo 2 building ${GCLVERSION}
	@tar -zxf ${ZIPS}/${GCLVERSION}.tgz
<<gcl-2.6.3-mvdir>>
<<gcl-2.6.3.socket.patch>>
<<gcl-2.6.3.libspad.patch>>
<<gcl-2.6.3.toploop.patch>>
<<gcl-2.6.3.tail-recursive.patch>>
<<gcl-2.6.3.collectfn.fix>>
<<gclConfigureMake>>
	@echo 13 finished system build on `date` | tee >gcldir

ccldir: ${LSP}/ccl/Makefile
	@echo 14 building CCL
	@mkdir -p ${INT}/ccl
	@mkdir -p ${OBJ}/${SYS}/ccl
	@( cd ccl ; ${ENV} ${MAKE} )

${LSP}/ccl/Makefile: ${LSP}/ccl/Makefile.pamphlet
	@echo 15 making ${LSP}/ccl/Makefile from ${LSP}/ccl/Makefile.pamphlet
	@( cd ccl ; ${SPADBIN}/document ${NOISE} Makefile )

document:
	@echo 16 making docs in ${LSP}
	@mkdir -p ${INT}/doc/lsp/ccl
	@( cd ccl ; ${ENV} ${MAKE} document )

clean:
	@echo 17 cleaning ${LSP}/ccl
	@( cd ccl ; ${ENV} ${MAKE} clean )

@
\subsection{The GCL-2.6.5 stanza}
This stanza will be written out when the GCLVERSION variable is
``gcl-2.6.5''. It will overwrite the default version. See the 
top level Makefile.pamphlet.
<<gcl-2.6.5>>=
# gcl version 2.6.5
OUT=${OBJ}/${SYS}/bin

all:
	@echo 1 building ${LSP} ${GCLVERSION}

gcldir: 
	@echo 2 building ${GCLVERSION}
	@tar -zxf ${ZIPS}/${GCLVERSION}.tgz
<<gcl-2.6.5.socket.patch>>
<<gcl-2.6.5.libspad.patch>>
<<gcl-2.6.5.toploop.patch>>
<<gcl-2.6.5.tail-recursive.patch>>
<<gcl-2.6.5.windows.variable.patch>>
<<gcl-2.6.5.alloc.c.patch>>
<<gcl-2.6.5.mingfile.c.patch>>
<<gcl-2.6.5.unixfsys.c.patch>>
<<gclConfigureMake>>
	@echo 13 finished system build on `date` | tee >gcldir

ccldir: ${LSP}/ccl/Makefile
	@echo 14 building CCL
	@mkdir -p ${INT}/ccl
	@mkdir -p ${OBJ}/${SYS}/ccl
	@( cd ccl ; ${ENV} ${MAKE} )

${LSP}/ccl/Makefile: ${LSP}/ccl/Makefile.pamphlet
	@echo 15 making ${LSP}/ccl/Makefile from ${LSP}/ccl/Makefile.pamphlet
	@( cd ccl ; ${SPADBIN}/document ${NOISE} Makefile )

document:
	@echo 16 making docs in ${LSP}
	@mkdir -p ${INT}/doc/lsp/ccl
	@( cd ccl ; ${ENV} ${MAKE} document )

clean:
	@echo 17 cleaning ${LSP}/ccl
	@( cd ccl ; ${ENV} ${MAKE} clean )

@
\subsection{The GCL-CVS stanza}
This stanza will be written out when the GCLVERSION variable is
``gcl-cvs''. It will overwrite the default version. See the 
top level Makefile.pamphlet.
<<gcl-cvs>>=
# gcl version CVS
OUT=${OBJ}/${SYS}/bin

all:
	@echo 1 building ${LSP} ${GCLVERSION}

gcldir: 
	@echo 2 building ${GCLVERSION}
	@tar -zxf ${ZIPS}/${GCLVERSION}.tgz
<<gclConfigureMake>>
	@echo 13 finished system build on `date` | tee >gcldir

ccldir: ${LSP}/ccl/Makefile
	@echo 14 building CCL
	@mkdir -p ${INT}/ccl
	@mkdir -p ${OBJ}/${SYS}/ccl
	@( cd ccl ; ${ENV} ${MAKE} )

${LSP}/ccl/Makefile: ${LSP}/ccl/Makefile.pamphlet
	@echo 15 making ${LSP}/ccl/Makefile from ${LSP}/ccl/Makefile.pamphlet
	@( cd ccl ; ${SPADBIN}/document ${NOISE} Makefile )

document:
	@echo 16 making docs in ${LSP}
	@mkdir -p ${INT}/doc/lsp/ccl
	@( cd ccl ; ${ENV} ${MAKE} document )

clean:
	@echo 17 cleaning ${LSP}/ccl
	@( cd ccl ; ${ENV} ${MAKE} clean )

@
\section{Gnu Common Lisp 2.5}
GCL 2.5 requires a different Makefile. In particular, GCL 2.5
has a different method of building the lisp image. And, just to
keep us on our toes, they've renamed the files we need to patch.
The new patches are in the zips directory. Patches now are prefixed
by GCLVERSION. 
\subsubsection{socket patch}
This patch is to {\bf h/386-linux.defs} to include two 
global variables, {\bf EXTRAS} and {\bf EXTRA\_LIB}
\begin{verbatim}
EXTRAS = ${OBJ}/${SYS}/lib/cfuns-c.o ${OBJ}/${SYS}/lib/sockio-c.o
EXTRA_LIB=${OBJ}/${SYS}/lib/libspad.a
\end{verbatim}
The {\bf EXTRAS} variable is used to include two files into the
running image. The {\bf cfuns-c} file contains low-level directory
manipulation routines. The {\bf sockio-c} file contains low level
socket code. Note that versions of GCL beyond gcl-2.4.1 may have
routines already available. If so the Axiom references to these
routines should be rewritten.

We also need to create two .ini files, one for cfuns-c and one
for sockio-c. These are referenced in the gcl-2.4.1 makefiles
but, since no initialization is needed, we simply create empty files.
<<gcl-2.5.socket.patch>>=
	@(cd ${GCLVERSION}/h ; \
	  echo 3 applying EXTRAS patch to h/linux.defs ; \
	  patch <${SPD}/zips/${GCLVERSION}.h.linux.defs.patch )
	@(echo 4 setup ini files for EXTRAS patch ; \
	  touch ${OBJ}/${SYS}/lib/cfuns-c.ini ; \
	  touch ${OBJ}/${SYS}/lib/sockio-c.ini )
@ 
\subsubsection{fortran patch}
Communication over sockets (basically to the NAG fortran library)
requires us to have XDR enabled.
<<gcl-2.5.fortran.patch>>=
	@(cd ${GCLVERSION}/h ; \
	  echo 5 applying HAVE_XDR patch to h/linux.h ; \
	  patch <${SPD}/zips/${GCLVERSION}.h.linux.h.patch )
@
\subsubsection{libspad patch}
The second patch changes the {\bf unixport/makefile} to reference
the {\bf libspad.a} library when building the raw system image.
from {\bf libspad.a}
<<gcl-2.5.libspad.patch>>=
	@(cd ${GCLVERSION}/unixport ; \
	  echo 6 applying libspad.a patch to unixport/makefile ; \
	  patch <${SPD}/zips/${GCLVERSION}.unixport.makefile.patch )
@
\subsubsection{toploop patch}
This patch turns off the banner display every time GCL starts.
We could use the -batch flag but that would be a pervasive change.
It isn't critical to the system builds but we will later be 
capturing stdin and stdout and we do not want extra information
printed.
<<gcl-2.5.toploop.patch>>=
	@(cd ${GCLVERSION}/unixport ; \
	  echo 7 applying toploop patch to unixport/init_gcl.lsp ; \
	  patch <${SPD}/zips/${GCLVERSION}.unixport.init_gcl.lsp.in.patch )
@
\subsubsection{xdrfuns bug patch}
We enabled XDR only to find out that there is a missing argument
in the call to FEerror from xdrstdio\_create. We fix this here and
send a patch to the GCL people. It should be fixed in future releases
and this patch should die.
<<gcl-2.5.xdrfuns.patch>>=
	@(cd ${GCLVERSION}/o ; \
	  echo 8 applying XDR patch to o/xdrfuns.c ; \
	  patch <${SPD}/zips/${GCLVERSION}.o.xdrfuns.c.patch )
@ 
\subsection{The GCL-2.5 stanza}
This stanza will be written out when the GCLVERSION variable is
``gcl-2.5''. It will overwrite the default version. See the 
top level Makefile.pamphlet.
<<gcl-2.5>>=
# gcl version 2.5
OUT=${OBJ}/${SYS}/bin

all:
	@echo 1 building ${LSP} ${GCLVERSION}

gcldir: 
	@echo 2 building ${GCLVERSION}
	@tar -zxf ${ZIPS}/${GCLVERSION}.tgz
	@mv gcl ${GCLVERSION}
<<gcl-2.5.socket.patch>>
<<gcl-2.5.fortran.patch>>
<<gcl-2.5.libspad.patch>>
<<gcl-2.5.toploop.patch>>
<<gcl-2.5.xdrfuns.patch>>
	@(cd ${GCLVERSION} ; \
	./configure --enable-vssize=65536 ; \
	${ENV} ${MAKE} ; \
	cp unixport/saved_gcl ${OUT}/lisp )
	@echo 9 finished system build on `date` | tee >gcldir

ccldir: ${LSP}/ccl/Makefile
	@echo 10 building CCL
	@mkdir -p ${INT}/ccl
	@mkdir -p ${OBJ}/${SYS}/ccl
	@( cd ccl ; ${ENV} ${MAKE} )

${LSP}/ccl/Makefile: ${LSP}/ccl/Makefile.pamphlet
	@echo 11 making ${LSP}/ccl/Makefile from ${LSP}/ccl/Makefile.pamphlet
	@( cd ccl ; ${SPADBIN}/document ${NOISE} Makefile )

document:
	@echo 12 making docs in ${LSP}
	@mkdir -p ${INT}/doc/lsp/ccl
	@( cd ccl ; ${ENV} ${MAKE} document )

clean:
	@echo 13 cleaning ${LSP}/ccl
	@( cd ccl ; ${ENV} ${MAKE} clean )

@
\section{Gnu Common Lisp 2.4.1 (The default build)}
\subsubsection{socket patch}
This patch is to {\bf h/386-linux.defs} to include two 
global variables, {\bf EXTRAS} and {\bf EXTRA\_LIB}
\begin{verbatim}
EXTRAS = ${OBJ}/${SYS}/lib/cfuns-c.o ${OBJ}/${SYS}/lib/sockio-c.o
EXTRA_LIB=${OBJ}/${SYS}/lib/libspad.a
\end{verbatim}
The {\bf EXTRAS} variable is used to include two files into the
running image. The {\bf cfuns-c} file contains low-level directory
manipulation routines. The {\bf sockio-c} file contains low level
socket code. Note that versions of GCL beyond gcl-2.4.1 may have
routines already available. If so the Axiom references to these
routines should be rewritten.

We also need to create two .ini files, one for cfuns-c and one
for sockio-c. These are referenced in the gcl-2.4.1 makefiles
but, since no initialization is needed, we simply create empty files.
<<gcl-2.4.1.socket.patch>>=
	@(cd ${GCLVERSION}/h ; \
	  echo 16 applying EXTRAS patch to h/386-linux.defs ; \
	  patch <${SPD}/zips/${GCLVERSION}.h.386-linux.defs.patch )
	@(echo 17 setup ini files for EXTRAS patch ; \
	  touch ${OBJ}/${SYS}/lib/cfuns-c.ini ; \
	  touch ${OBJ}/${SYS}/lib/sockio-c.ini )
@ 
\subsubsection{fortran patch}
Communication over sockets (basically to the NAG fortran library)
requires us to have XDR enabled.
<<gcl-2.4.1.fortran.patch>>=
	@(cd ${GCLVERSION}/h ; \
	  echo 18 applying HAVE_XDR patch to h/386-linux.h ; \
	  patch <${SPD}/zips/${GCLVERSION}.h.386-linux.h.patch )
@ 
\subsubsection{libspad patch}
The second patch changes the {\bf unixport/makefile} to reference
the {\bf libspad.a} library when building the raw system image.
from {\bf libspad.a}
<<gcl-2.4.1.libspad.patch>>=
	@(cd ${GCLVERSION}/unixport ; \
	  echo 19 applying libspad.a patch to unixport/makefile ; \
	  patch <${SPD}/zips/${GCLVERSION}.unixport.makefile.patch )
@ 
\subsubsection{toploop patch}
This patch turns off the banner display every time GCL starts.
We could use the -batch flag but that would be a pervasive change.
It isn't critical to the system builds but we will later be 
capturing stdin and stdout and we do not want extra information
printed.
<<gcl-2.4.1.toploop.patch>>=
	@(cd ${GCLVERSION}/unixport ; \
	  echo 20 applying toploop patch to unixport/init_gcl.lsp ; \
	  patch <${SPD}/zips/${GCLVERSION}.unixport.init_gcl.lsp.patch )
@ 
<<*>>=
# gcl version 2.4.1
OUT=${OBJ}/${SYS}/bin

all:
	@echo 14 building ${LSP} ${GCLVERSION}

gcldir: 
	@echo 15 building ${GCLVERSION}
	@tar -zxf ${ZIPS}/${GCLVERSION}.tgz
<<gcl-2.4.1.socket.patch>>
<<gcl-2.4.1.fortran.patch>>
<<gcl-2.4.1.libspad.patch>>
<<gcl-2.4.1.toploop.patch>>
	@(cd ${GCLVERSION} ; \
	./configure --enable-vssize=65536 ; \
	${ENV} ${MAKE} ; \
	cp unixport/saved_gcl ${OUT}/lisp )
	@echo 21 finished system build on `date` | tee >gcldir

ccldir: ${LSP}/ccl/Makefile
	@echo 22 building CCL
	@mkdir -p ${INT}/ccl
	@mkdir -p ${OBJ}/${SYS}/ccl
	@( cd ccl ; ${ENV} ${MAKE} )

${LSP}/ccl/Makefile: ${LSP}/ccl/Makefile.pamphlet
	@echo 23 making ${LSP}/ccl/Makefile from ${LSP}/ccl/Makefile.pamphlet
	@( cd ccl ; ${SPADBIN}/document ${NOISE} Makefile )

document:
	@echo 24 making docs in ${LSP}
	@mkdir -p ${INT}/doc/lsp/ccl
	@( cd ccl ; ${ENV} ${MAKE} document )

clean:
	@echo 25 cleaning ${LSP}/ccl
	@( cd ccl ; ${ENV} ${MAKE} clean )
@
\eject
\begin{thebibliography}{99}
\bibitem{1} nothing
\end{thebibliography}
\end{document}

------=_NextPart_000_02A6_01C4DD51.78777280
	name="gcl-2.6.5.unixfsys.c.patch"
	filename="gcl-2.6.5.unixfsys.c.patch"

--- lsp/gcl-2.6.5/o/unixfsys.c.orig	Wed Dec  8 13:10:14 2004
+++ lsp/gcl-2.6.5/o/unixfsys.c	Wed Dec  8 14:16:49 2004
@@ -31,6 +31,10 @@
 #include <pwd.h>
 #endif
 
+#ifdef __MINGW32__ 
+#  include <windows.h> 
+#endif 
+
 #ifdef BSD
 #define HAVE_RENAME
 #endif
@@ -211,6 +215,10 @@
 {
   object namestring;
   namestring = coerce_to_namestring(pathname);
+  if ( pathname == Cnil ) { 
+     FEerror ( "NIL argument.", 1, pathname ); 
+  } 
+    
 #ifndef NO_PWD_H  
   if(namestring->st.st_self[0]=='~')
     {char name[20];
@@ -259,40 +267,67 @@
 	char current_directory[MAXPATHLEN];
 	char directory[MAXPATHLEN];
 	static char *getwd(char *buffer);
+#ifdef __MINGW32__ 
+        DWORD current_directory_length =
+            GetCurrentDirectory ( MAXPATHLEN, current_directory ); 
+        if ( MAXPATHLEN < current_directory_length ) { 
+           FEerror ( "truename got a current directory name larger than =
MAXPATHLEN", 1, "" ); 
+        } 
+        if ( 0 == current_directory_length ) { 
+           FEerror ( "truename could not determine the current =
directory.", 1, "" ); 
+        } 
+#else 
+        getwd(current_directory); 
+#endif 
+    
 	coerce_to_filename(pathname, filename);
-
-
 	
 	for (p = filename, q = 0;  *p != '\0';  p++)
 		if (*p == '/')
 			q = p;
 	if (q == filename) {
 		q++;
-		getwd(current_directory);
 		p = "/";
 	} else if (q == 0) {
 		q = filename;
-		p = getwd(current_directory);
+		p = current_directory;
 	} else
 #ifdef __MINGW32__
-	  if (q[-1]==':') {
-	    int current = (q++, q[0]);
-	    q[0]=0;
-	    getwd(current_directory);
-	    if (chdir(filename) < 0)
-	      FEerror("Cannot get the truename of ~S.", 1, pathname);
-	    p = getwd(directory);
-	    if (p[1]==':' && p[2]=='\\' && p[3]==0) p[2]=0;
-	    q[0]=current;
+	   if ( ( q > filename ) && ( q[-1] == ':' ) ) {
+	     int current = (q++, q[0]);
+	     q[0]=0;
+	     if (chdir(filename) < 0)
+	       FEerror("Cannot get the truename of ~S.", 1, pathname);
+             current_directory_length =
+               GetCurrentDirectory ( MAXPATHLEN, directory );
+             if ( MAXPATHLEN < current_directory_length ) { 
+               FEerror ( "truename got a current directory name larger =
than MAXPATHLEN", 1, "" ); 
+             } 
+             if ( 0 == current_directory_length ) { 
+               FEerror ( "truename could not determine the current =
directory.", 1, "" ); 
+             } 
+             p = directory; 
+             if ( p[1]==':' && ( p[2]=='\\' || p[2]=='/' ) =
&& p[3]==0 ) p[2]=0; 
+	     q[0]=current;
           }
 	  else
 #endif	
 	  {
 		*q++ = '\0';
-		getwd(current_directory);
 		if (chdir(filename) < 0)
 		    FEerror("Cannot get the truename of ~S.", 1, pathname);
+#ifdef __MINGW32__ 
+                current_directory_length = GetCurrentDirectory ( =
MAXPATHLEN, directory ); 
+                if ( MAXPATHLEN < current_directory_length ) { 
+                    FEerror ( "truename got a current directory name =
larger than MAXPATHLEN", 1, "" ); 
+                } 
+                if ( 0 == current_directory_length ) { 
+                    FEerror ( "truename could not determine the current =
directory.", 1, "" ); 
+                } 
+                p = directory; 
+#else 
 		p = getwd(directory);
+#endif                
 	}
 	if (p[0] == '/' && p[1] == '\0') {
 		if (strcmp(q, "..") == 0)
@@ -327,6 +362,18 @@
 	struct stat filestatus;
 
 	coerce_to_filename(file, filename);
+
+#ifdef __MINGW32__
+        {
+            char *p;
+            for (p = filename;  *p != '\0';  p++);
+            if ( (p > filename) &&
+                 ( ( *(p-1) == '/' ) || ( *(p-1) == '\\' ) ) ) {
+               *(p-1) = '\0'; 
+            }
+        }
+#endif        
+
 	if (stat(filename, &filestatus) >= 0)
 	  {
 #ifdef AIX

------=_NextPart_000_02A6_01C4DD51.78777280
	name="cfuns.lisp.pamphlet"
	filename="cfuns.lisp.pamphlet"

\documentclass{article}
\usepackage{axiom}
\begin{document}
\title{\$SPAD/src/interp cfuns.lisp}
\author{Timothy Daly}
\maketitle
\begin{abstract}
\end{abstract}
\eject
\tableofcontents
\eject
\section{License}
<<license>>=
;; Copyright (c) 1991-2002, The Numerical ALgorithms Group Ltd.
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are
;; met:
;;
;;     - Redistributions of source code must retain the above copyright
;;       notice, this list of conditions and the following disclaimer.
;;
;;     - Redistributions in binary form must reproduce the above =
copyright
;;       notice, this list of conditions and the following disclaimer in
;;       the documentation and/or other materials provided with the
;;       distribution.
;;
;;     - Neither the name of The Numerical ALgorithms Group Ltd. nor the
;;       names of its contributors may be used to endorse or promote =
products
;;       derived from this software without specific prior written =
permission.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS =
"AS
;; IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
;; TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
;; PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT =
OWNER
;; OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, =
SPECIAL,
;; EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
;; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
;; PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
;; LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
;; NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
;; SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

@
<<*>>=
<<license>>

(in-package "BOOT")

#+(and :Lucid (not :ibm/370))
(progn
  (system:define-foreign-function :c '|findString| :fixnum)
  (system:define-foreign-function :c '|addtopath|  :fixnum)
  (system:define-foreign-function :c '|chdir|      :fixnum)
  (system:define-foreign-function :c '|writeablep| :fixnum)
  (system:define-foreign-function :c '|directoryp| :fixnum)
  (system:define-foreign-function :c '|copyEnvValue| :fixnum)
  )

;; Staged directoryp to deal with Windows/Unix stat differences.
#+KCL
(progn
  (defentry |directoryp-c| (string)      (int "directoryp"))
  (defentry |makedir-c| (string)           (int "makedir"))
  (defentry |writeablep| (string)        (int "writeablep"))
  (defentry |findString| (string string) (int "findString"))
  )

#+KCL
(defun |directoryp| (fn)
  (cond ((not (probe-file fn)) -1)
        ((|directoryp-c| fn) 1)
        (t 0)))
#+KCL
(defun |makedir| (directory-name)
  (|makedir-c| directory-name))

#+:CCL
(defun |directoryp| (fn)
  (cond ((not (probe-file fn)) -1)
        ((directoryp fn) 1)
        (t 0)))



(defun |findStringInFile| (str p) 
    (|findString| (namestring p) str) )


(defun |getEnv| (var-name)  (system::getenv var-name))

;;stolen from AXIOM-XL src/strops.c
#+(AND KCL (NOT ELF))
(Clines 
"MYHASH(s)"
"char *s;"
"{"
" register unsigned int   h = 0;"
" register int    c;"
""
" while ((c = *s++) != 0) {"
"  h ^= (h << 8);"
"  h += ((c) + 200041);"
"  h &= 0x3FFFFFFF;"
" }"
" return h;"
"}"
)
#+(AND KCL (NOT ELF))
(defentry |hashString| (string) (int "MYHASH"))
#+(AND KCL ELF)
(defun |hashString| (string) (system:|hashString| string))

#+(AND KCL (NOT ELF))
(Clines
"unsigned int MYCOMBINE(i,j)"
"unsigned int i,j;"
"{"
"return ( (((j & 16777215) << 6)+i) % 1073741789);"
"}"
)
#+(AND KCL (NOT ELF))
(defentry |hashCombine| (int int) (int "MYCOMBINE"))
#+(AND KCL  ELF)
(defun |hashCombine| (x y) (system:|hashCombine| x y))


@
\eject
\begin{thebibliography}{99}
\bibitem{1} nothing
\end{thebibliography}
\end{document}

------=_NextPart_000_02A6_01C4DD51.78777280
	name="nlib.lisp.pamphlet"
	filename="nlib.lisp.pamphlet"

\documentclass{article}
\usepackage{axiom}
\begin{document}
\title{\$SPAD/src/interp nlib.lisp}
\author{Timothy Daly}
\maketitle
\begin{abstract}
\end{abstract}
\eject
\tableofcontents
\eject
\section{License}
<<license>>=
;; Copyright (c) 1991-2002, The Numerical ALgorithms Group Ltd.
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are
;; met:
;;
;;     - Redistributions of source code must retain the above copyright
;;       notice, this list of conditions and the following disclaimer.
;;
;;     - Redistributions in binary form must reproduce the above =
copyright
;;       notice, this list of conditions and the following disclaimer in
;;       the documentation and/or other materials provided with the
;;       distribution.
;;
;;     - Neither the name of The Numerical ALgorithms Group Ltd. nor the
;;       names of its contributors may be used to endorse or promote =
products
;;       derived from this software without specific prior written =
permission.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS =
"AS
;; IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
;; TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
;; PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT =
OWNER
;; OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, =
SPECIAL,
;; EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
;; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
;; PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
;; LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
;; NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
;; SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

@
<<*>>=
<<license>>

(in-package "VMLISP")

#+:AKCL (defvar *lisp-bin-filetype* "o")

#+:AKCL (defvar *lisp-source-filetype* "lsp")

;; definition of our stream structure
(defstruct libstream  mode dirname (indextable nil)  (indexstream nil))
;indextable is a list of entries (key class <location or filename>)
;filename is of the form filenumber.lsp or filenumber.o

(defvar optionlist nil "alist which controls compiler output")

(defun addoptions (key value) "adds pairs to optionlist"
  (push (cons key value) optionlist)
  (if (equal key 'FILE)
      (push 
       (cons 'COMPILER-OUTPUT-STREAM
                   (open (concat (libstream-dirname value) "/" =
"code.lsp")
                         :direction :output :if-exists :supersede))
             optionlist)))

(defun directory? (filename) (|directoryp| filename))
;makedir (fname) fname is a directory name.
#+:AKCL(defun makedir (fname) (|makedir| fname))


;; (RDEFIOSTREAM ((MODE . IO) (FILE fn ft dir))) IO is I,O,INPUT,OUTPUT
#+:AKCL
(defun rdefiostream (options &optional (missing-file-error-flag t))
  (let ((mode (cdr (assoc 'mode options)))
	(file (assoc 'file options))
	(stream nil)
	(fullname nil)
	(indextable nil))
        (cond ((equal (elt (string mode) 0) #\I)
	       ;;(setq fullname (make-input-filename (cdr file) 'LISPLIB))
	       (setq fullname (make-input-filename (cdr file) 'NIL))
	       (setq stream (get-input-index-stream fullname))
               (if (null stream)
		   (if missing-file-error-flag
		       (ERROR (format nil "Library ~s doesn't exist"
			      ;;(make-filename (cdr file) 'LISPLIB))
			      (make-filename (cdr file) 'NIL)))
		     NIL)
               (make-libstream :mode 'input  :dirname fullname
                               :indextable (get-index-table-from-stream =
stream)
			       :indexstream stream)))
              ((equal (elt (string mode) 0) #\O)
	       ;;(setq fullname (make-full-namestring (cdr file) 'LISPLIB))
	       (setq fullname (make-full-namestring (cdr file) 'NIL))
	       (case (directory? fullname)
		     (-1 (makedir fullname))
		     (0 (error (format nil "~s is an existing file, not a library" =
fullname)))
		     (otherwise))
	       (multiple-value-setq (stream indextable) (get-io-index-stream =
fullname))
	       (make-libstream :mode 'output  :dirname fullname
			       :indextable indextable
			       :indexstream stream ))
              ('t  (ERROR "Unknown MODE")))))

#+:CCL
(defun rdefiostream (options &optional (missing-file-error-flag t))
  (let ((mode (cdr (assoc 'mode options)))
        (file (assoc 'file options))
        (stream nil)
        (fullname nil)
        (indextable nil))
        (cond ((equal (elt (string mode) 0) #\I)
               (setq fullname (make-input-filename (cdr file) NIL))
               (setq stream (get-input-index-stream fullname))
               (if (null stream)
                   (if missing-file-error-flag
                       (ERROR (format nil "Library ~s doesn't exist"
                              (make-filename (cdr file) NIL)))
                     NIL)
               (make-libstream :mode 'input  :dirname fullname
                               :indextable (get-index-table-from-stream =
stream)
                               :indexstream stream)))
              ((equal (elt (string mode) 0) #\O)
               (setq fullname (make-full-namestring (cdr file) NIL))
               (create-directory fullname)
               (multiple-value-setq (stream indextable)
                        (get-io-index-stream fullname))
               (make-libstream :mode 'output  :dirname fullname
                               :indextable indextable
                               :indexstream stream ))
              ('t  (ERROR "Unknown MODE")))))

#+:AKCL (defvar *index-filename* "index.KAF")
#+:CCL (defvar *index-filename* "index.KAF")

;get the index table of the lisplib in dirname
(defun getindextable (dirname)
  (let ((index-file (concat dirname "/" *index-filename*)))
     (if (probe-file index-file)
         (with-open-file (stream index-file) =
(get-index-table-from-stream stream))
            ;; create empty index file to mark directory as lisplib
         (with-open-file (stream index-file :direction :output) nil))))

;get the index stream of the lisplib in dirname
(defun get-input-index-stream (dirname)
  (let ((index-file (concat dirname "/" *index-filename*)))
    (open index-file :direction :input :if-does-not-exist nil)))

(defun get-index-table-from-stream (stream)
  (let ((pos (read  stream)))
    (cond ((numberp pos)
	   (file-position stream pos)
	   (read stream))
	  (t pos))))

#+:AKCL
(defun get-io-index-stream (dirname)
  (let* ((index-file (concat dirname "/" *index-filename*))
	 (stream (progn
		     (open index-file :direction :io :if-exists :overwrite
		       :if-does-not-exist :create)))
	 (indextable ())
	 (pos (read stream nil nil)))
    (cond ((numberp pos)
	   (file-position stream pos)
	   (setq indextable (read stream))
	   (file-position stream pos))
	  (t (file-position stream 0)
	     (princ "                    " stream)
	     (setq indextable pos)))
    (values stream indextable)))

#+:CCL
(defun get-io-index-stream (dirname)
  (let ((index-file (concat dirname "/" *index-filename*))
        (indextable ())
        (stream) (pos))
    (cond ((probe-file index-file)
           (setq stream (open index-file :direction :io :if-exists =
:overwrite))
           (setq pos (read stream))
           (file-position stream pos)
           (setq indextable (read stream))
           (file-position stream pos))
          (t (setq stream (open index-file :direction :io
                       :if-does-not-exist :create))
             ;(file-position stream 0)
             (princ "                    " stream)))
    (values stream indextable)))


;substitute indextable in dirname

(defun write-indextable (indextable stream)
  (let ((pos (file-position stream)))
    (write indextable :stream stream :level nil :length nil :escape t)
    (finish-output stream)
    (file-position stream 0)
    (princ pos stream)
    (finish-output stream)))

;;#+:ccl
;;(defun putindextable (indextable dirname)
;;  (with-open-file
;;    (stream (concat dirname "/" *index-filename*)
;;             :direction :io :if-does-not-exist :create)
;;    (file-position stream :end)
;;    (write-indextable indextable stream)))
;;#-:ccl
(defun putindextable (indextable dirname)
  (with-open-file
    (stream (concat dirname "/" *index-filename*)
             :direction :io :if-exists :overwrite
             :if-does-not-exist :create)
    (file-position stream :end)
    (write-indextable indextable stream)))

;; (RREAD key rstream)
(defun rread (key rstream &optional (error-val nil error-val-p))
  (if (equal (libstream-mode rstream) 'output) (error "not input =
stream"))
  (let* ((entry
	 (and (stringp key)
	      (assoc key (libstream-indextable rstream) :test #'string=)))
	 (file-or-pos (and entry (caddr entry))))
    (cond ((null entry)
	   (if error-val-p error-val (error (format nil "key ~a not found" =
key))))
	  ((null (caddr entry)) (cdddr entry))  ;; for small items
	  ((numberp file-or-pos)
	   (file-position (libstream-indexstream rstream) file-or-pos)
	   (read (libstream-indexstream rstream)))
	  (t
	   (with-open-file
	    (stream (concat (libstream-dirname rstream) "/" file-or-pos))
	    (read  stream))) )))

(defvar *lib-var*)

;; (RKEYIDS filearg) -- interned version of keys
(defun rkeyids (&rest filearg)
  (mapcar #'intern (mapcar #'car (getindextable
				  (make-input-filename filearg 'NIL)))))
;;(defun rkeyids (&rest filearg)
;;  (mapcar #'intern (mapcar #'car (getindextable
;;				  (make-input-filename filearg 'LISPLIB)))))

;; (RWRITE cvec item rstream)
(defun rwrite (key item rstream)
  (if (equal (libstream-mode rstream) 'input) (error "not output =
stream"))
  (let ((stream (libstream-indexstream rstream))
	(pos (if item (cons (file-position (libstream-indexstream rstream)) nil)
	       (cons nil item))))   ;; for small items
    (make-entry (string key) rstream pos)
    (when (numberp (car pos))
	  (write item :stream stream :level nil :length nil
		 :circle t :array t :escape t)
	  (terpri stream))))

(defun make-entry (key rstream value-or-pos)
   (let ((entry (assoc key (libstream-indextable rstream) :test =
#'equal)))
     (if (null entry)
	 (push (setq entry (cons key (cons 0 value-or-pos)))
	       (libstream-indextable rstream))
       (progn
	 (if (stringp (caddr entry)) ($erase (caddr entry)))
	 (setf (cddr entry) value-or-pos)))
     entry))

(defun rsetclass (key int rstream) 0)

;;(defun rshut (rstream)
;;  (when (and (equal rstream (cdr (assoc 'FILE OPTIONLIST)))
;;             (assoc 'compiler-output-stream optionlist))
;;        (close (cdr (assoc 'compiler-output-stream optionlist)))
;;        (setq optionlist nil))
;;  (if (eq (libstream-mode rstream) 'output)
;;      (write-indextable (libstream-indextable rstream) =
(libstream-indexstream rstream)))
;;  (close (libstream-indexstream rstream)))
(defun rshut (rstream)
  (when (and (equal rstream (cdr (assoc 'FILE OPTIONLIST)))
             (assoc 'compiler-output-stream optionlist))
        (close (cdr (assoc 'compiler-output-stream optionlist)))
        (setq optionlist (cddr optionlist)))
  (if (eq (libstream-mode rstream) 'output)
      (write-indextable (libstream-indextable rstream) =
(libstream-indexstream rstream)))
  (close (libstream-indexstream rstream)))

;; filespec is id or list of 1, 2 or 3 ids
;; filearg is filespec or 1, 2 or 3 ids
;; (RPACKFILE filearg)  -- compiles code files and converts to =
compressed format
(defun rpackfile (filespec)
  (setq filespec (make-filename filespec))
  (if (string= (pathname-type filespec) "NRLIB")
      (recompile-lib-file-if-necessary (concat (namestring filespec) =
"/code.lsp"))
  ;; only pack non libraries to avoid lucid file handling problems    
    (let* ((rstream (rdefiostream (list (cons 'file filespec) (cons =
'mode 'input))))
	   (nstream nil)
	   (nindextable nil)
	   (nrstream nil)
	   (index-file-name (concat (truename filespec) "/" *index-filename*))
	   (temp-index-file-name (make-pathname :name "oldindex"
						:defaults index-file-name)))
      (rename-file index-file-name temp-index-file-name ) ;; stays until =
closed
      (multiple-value-setq (nstream nindextable) (get-io-index-stream =
filespec))
      (setq nrstream (make-libstream :mode 'output  :dirname filespec
				     :indextable nindextable
				     :indexstream nstream ))
      (dolist (entry (libstream-indextable rstream))
	      (rwrite (car entry) (rread (car entry) rstream) nrstream)
	      (if (stringp (caddr entry))
		  (delete-file (concat filespec "/" (caddr entry)))))
      (close (libstream-indexstream rstream))
      (delete-file temp-index-file-name)
      (rshut nrstream)))
  filespec)

#+:AKCL
(defun recompile-lib-file-if-necessary (lfile)
   (let* ((bfile (make-pathname :type *lisp-bin-filetype* :defaults =
lfile))
          (bdate (and (probe-file bfile) (file-write-date bfile)))
          (ldate (and (probe-file lfile) (file-write-date lfile))))
     (if ldate
	 (if (and bdate (> bdate ldate)) nil
	   (progn (compile-lib-file lfile) (list bfile))))))

#+:CCL
(defun recompile-lib-file-if-necessary (lfile)
 (let ( (mname (pathname-name (file-namestring (directory-namestring =
lfile))))
        (mdate (modulep mname))
        (ldate (filedate lfile)) )
        (if (or (not mdate) (datelessp mdate ldate)) 
          (seq
            (if (null output-library)
                (boot::|openOutputLibrary|
                  (setq boot::|$outputLibraryName|
                   (if (null boot::|$outputLibraryName|)
                       (make-pathname :directory (get-current-directory)
                                      :name "user.lib")
                        (if (filep boot::|$outputLibraryName|)
                            (truename boot::|$outputLibraryName|)
                            boot::|$outputLibraryName|)))))
            (compile-file lfile 
                          :output-file (intern (pathname-name
                                               (directory-namestring =
lfile))))))))


#+:AKCL
(defun spad-fixed-arg (fname )
   (and (equal (symbol-package fname) (find-package "BOOT"))
        (not (get fname 'compiler::spad-var-arg))
	(search ";" (symbol-name fname))
        (or (get fname 'compiler::fixed-args)
	    (setf (get fname 'compiler::fixed-args) t)))
   nil)

#+:AKCL
(defun compile-lib-file (fn &rest opts)
  (unwind-protect
      (progn
	(trace (compiler::fast-link-proclaimed-type-p
		:exitcond nil
		:entrycond (spad-fixed-arg (car system::arglist))))
	(trace (compiler::t1defun :exitcond nil
		:entrycond (spad-fixed-arg (caar system::arglist))))
	(apply #'compile-file fn opts))
    (untrace compiler::fast-link-proclaimed-type-p compiler::t1defun)))
#+:CCL
(define-function 'compile-lib-file #'compile-file)

;; (RDROPITEMS filearg keys) don't delete, used in files.spad
(defun rdropitems (filearg keys &aux (ctable (getindextable filearg)))
  (mapc #'(lambda(x)
           (setq ctable (delete x ctable :key #'car :test #'equal)) )
           (mapcar #'string keys))
  (putindextable ctable filearg))

;; cms file operations
(defun make-filename (filearg &optional (filetype nil))
  (let ((filetype (if (symbolp filetype) 
		      (symbol-name filetype)
		      filetype)))
    (cond
     ((pathnamep filearg) 
      (cond ((pathname-type filearg) (namestring filearg))
	    (t (namestring (make-pathname :directory (pathname-directory =
filearg)
					  :name (pathname-name filearg)
					  :type filetype)))))
     ;; Previously, given a filename containing "." and
     ;; an extension this function would return filearg. MCD 23-8-95.
     ((and (stringp filearg) (pathname-type filearg) (null filetype)) =
filearg)
     ;;  ((and (stringp filearg)
     ;;    (or (pathname-type filearg) (null filetype)))
     ;;     filearg)
     ((and (stringp filearg) (stringp filetype)
	   (pathname-type filearg) 
	   (string-equal (pathname-type filearg) filetype))
      filearg)
     ((consp filearg)
      (make-filename (car filearg) (or (cadr filearg) filetype)))
     (t (if (stringp filetype) (setq filetype (intern filetype "BOOT")))
	(let ((ft (or (cdr (assoc filetype $filetype-table)) filetype)))
	  (if ft 
	      (concatenate 'string (string filearg) "." (string ft))
	      (string filearg)))))))

(defun make-full-namestring (filearg &optional (filetype nil))
  (namestring (merge-pathnames (make-filename filearg filetype))))

(defun probe-name (file)
  (if (probe-file file) (namestring file) nil))

(defun get-directory-list (ft &aux (cd (namestring $current-directory)))
  (cond ((member ft '("NRLIB" "DAASE" "EXPOSED") :test #'string=)
	   (if (eq BOOT::|$UserLevel| 'BOOT::|development|)
	       (cons cd $library-directory-list)
	       $library-directory-list))
	(t (adjoin cd 
              (adjoin (namestring (user-homedir-pathname)) =
$directory-list 
                      :test #'string=) 
              :test #'string=))))

(defun make-input-filename (filearg &optional (filetype nil))
   (let*
     ((filename  (make-filename filearg filetype))
      (dirname (pathname-directory filename))
      (ft (pathname-type filename))
      (dirs (get-directory-list ft))
      (newfn nil))   
    (if (or (null dirname) (eqcar dirname :relative))
	(dolist (dir dirs (probe-name filename))
		(when 
		 (probe-file 
		  (setq newfn (concatenate 'string dir filename)))
		 (return newfn)))
      (probe-name filename))))

(defun $FILEP (&rest filearg) (make-full-namestring filearg))
(define-function '$OUTFILEP #'$FILEP) ;;temporary bogus def

(defun $findfile (filespec filetypelist)
  (let ((file-name (if (consp filespec) (car filespec) filespec))
	(file-type (if (consp filespec) (cadr filespec) nil)))
    (if file-type (push file-type filetypelist))
    (some #'(lambda (ft) (make-input-filename file-name ft))
	  filetypelist)))

;; ($ERASE filearg) -> 0 if succeeds else 1
(defun $erase (&rest filearg)
  (setq filearg (make-full-namestring filearg))
  (if (probe-file filearg)
#+:CCL (delete-file filearg)
#+:AKCL
      (if (library-file filearg)
          (delete-directory filearg)
          (delete-file filearg))
      1))

(defun library-file (filename)
; (format t "library-file: ~a~%" filename)
 t)


#+:AKCL
(defun delete-directory (dirname)
   (system (concat "rm  -r " dirname)))

(defun $REPLACE (filespec1 filespec2)
    ($erase (setq filespec1 (make-full-namestring filespec1)))
    (rename-file (make-full-namestring filespec2) filespec1))



;;(defun move-file (namestring1 namestring2)
;;  (rename-file namestring1 namestring2))

(defun $FCOPY (filespec1 filespec2 &optional (append-flag nil))
    (let ((name1 (make-full-namestring filespec1))
	  (name2 (make-full-namestring filespec2)))
      (if (library-file name1)
	(copy-lib-directory name1 name2)
	(copy-file name1 name2))))


#+(OR :AKCL (AND :CCL :UNIX))
(defun copy-lib-directory (name1 name2)
   (makedir name2)
   (system (concat "sh -c 'cp " name1 "/* " name2 "'")))

#+(OR :AKCL (AND :CCL :UNIX))
(defun copy-file (namestring1 namestring2)
  (system (concat "cp " namestring1 " " namestring2)))


(defvar vmlisp::$filetype-table
  '((BOOT::LISPLIB . |LILIB|)
    (BOOT::SPADLIB . |slib|)
    (BOOT::HISTORY . |hist|)
    (BOOT::HELPSPAD . |help|)
    (BOOT::INPUT . |input|)
    (BOOT::SPAD . |spad|)
    (BOOT::BOOT . |boot|)
    (BOOT::LISP . |lsp|)
    (BOOT::META . |meta|)
    (BOOT::OUTPUT . |splog|)
    (BOOT::ERRORLIB . |erlib|)
    (BOOT::DATABASE . |DAASE|)
    (BOOT::SPADDATA . |sdata|)
    (BOOT::SPADFORT . |sfort|)
    (BOOT::SPADFORM . |sform|)
    (BOOT::SPADTEX . |stex|)
    (BOOT::SPADOUT . |spout|)))
@
\eject
\begin{thebibliography}{99}
\bibitem{1} nothing
\end{thebibliography}
\end{document}

------=_NextPart_000_02A6_01C4DD51.78777280
	name="sys-pkg.lisp.pamphlet"
	filename="sys-pkg.lisp.pamphlet"

\documentclass{article}
\usepackage{axiom}
\begin{document}
\title{\$SPAD/src/interp sys-pkg.lisp}
\author{Timothy Daly}
\maketitle
\begin{abstract}
\end{abstract}
\eject
\tableofcontents
\eject
\section{Non-portable code}
\subsection{GCL only code}
This section contains code that will only work in Gnu Common Lisp
(GCL). These tagged symbols are split out so we can find suitable
replacements in other common lisps.
\subsubsection{GETENV}
GETENV is a GCL function to return the value of shell variables
from the environment.
<<GCL.GETENV>>=
#+:GCL   SYSTEM:GETENV
@ 
\subsubsection{DEFINE-MACRO}
<<GCL.DEFINE-MACRO>>=
#+:GCL    SYSTEM:DEFINE-MACRO 
@ 
\subsubsection{MEMQ}
<<GCL.MEMQ>>=
#+:GCL    SYSTEM:MEMQ 
@ 
\subsubsection{PNAME}
<<GCL.PNAME>>=
#+:GCL    SYSTEM:PNAME
@ 
\section{New Common Lisp Changes}
\subsection{in-package change}
Common lisp has changed in-package to require a string-designator which
is a character, string, or symbol. Further, if the package does not exist
then in-package will throw an error. We fix this by using defpackage.
We create all of the known packages here.
\section{License}
<<license>>=
;; Copyright (c) 1991-2002, The Numerical ALgorithms Group Ltd.
;; All rights reserved.
;;
;; Redistribution and use in source and binary forms, with or without
;; modification, are permitted provided that the following conditions are
;; met:
;;
;;     - Redistributions of source code must retain the above copyright
;;       notice, this list of conditions and the following disclaimer.
;;
;;     - Redistributions in binary form must reproduce the above =
copyright
;;       notice, this list of conditions and the following disclaimer in
;;       the documentation and/or other materials provided with the
;;       distribution.
;;
;;     - Neither the name of The Numerical ALgorithms Group Ltd. nor the
;;       names of its contributors may be used to endorse or promote =
products
;;       derived from this software without specific prior written =
permission.
;;
;; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS =
"AS
;; IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
;; TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
;; PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT =
OWNER
;; OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, =
SPECIAL,
;; EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
;; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
;; PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
;; LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
;; NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
;; SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

@
<<*>>=
<<license>>

(make-package "SCRATCHPAD_COMPILER")
(make-package "SPECFNSF")

(make-package "VMLISP")
(in-package "VMLISP")
(lisp::use-package '("USER" "SYSTEM" "LISP"))

(make-package "BOOTTRAN")
(in-package "BOOTTRAN")
(lisp::use-package '("LISP"))

(make-package "BOOT")
(in-package "BOOT")
(lisp::use-package '("VMLISP" "LISP"))

(make-package "FOAM")
(in-package "FOAM")
(lisp::use-package '("LISP"))

(make-package "FOAM-USER")
(in-package "FOAM-USER")
(lisp::use-package '("LISP" "FOAM"))

(lisp:in-package "BOOT")

(lisp:import
    '(VMLISP::ERROROUTSTREAM LISP::COUNT VMLISP::NE VMLISP::FLUID
	 LISP:SEQUENCE VMLISP::OBEY LISP:NUMBER VMLISP::|union|
	 LISP:STEP VMLISP::OPTIONLIST VMLISP::EXIT VMLISP::throw-protect
<<GCL.GETENV>>
         VMLISP::*INDEX-FILENAME*))
(lisp:export
    '(BOOT::|$FormalMapVariableList| BOOT::|$userModemaps|
	 boot::restart boot::$IEEE
	 BOOT::|directoryp| BOOT::|makedir| boot::help boot::|version| =
boot::|pp|
	 BOOT::POP-STACK-4 BOOT::|$BasicDomains| BOOT::|$DomainFrame|
	 BOOT::|$SideEffectFreeFunctionList|
	 BOOT::ATOM2STRING BOOT::|$DoubleQuote| BOOT::|$genSDVar|
	 BOOT::GETCHARN BOOT::DROP VMLISP::ERROROUTSTREAM
	 BOOT::MATCH-STRING BOOT::|$fromSpadTrace|
	 BOOT::|$UserSynonyms| BOOT::%L BOOT::FLUIDVARS
	 BOOT::/EMBEDREPLY BOOT::|$LocalFrame| BOOT::|$streamIndexing|
	 BOOT::APPLYR BOOT::NEXTINPUTLINE BOOT::$NORMALSTRING
	 BOOT::|$InteractiveTimingStatsIfTrue| BOOT::|$leaveLevelStack|
	 BOOT::|$xyMin| BOOT::|lcm| BOOT::STRINGSUFFIX
	 BOOT::|Category| BOOT::ESCAPE-CHARACTER
	 LISP:COUNT BOOT::|break| BOOT::$DIRECTORY
	 BOOT::CONVERSATION BOOT::|fillerSpaces|
	 BOOT::$REVERSEVIDEOSTRING BOOT::|$DomainsInScope|
	 BOOT::|$gauss01| BOOT::|$mostRecentOpAlist| BOOT::SUBLISLIS
	 BOOT::QUITFILE BOOT::|PrintBox| BOOT::POP-REDUCTION
	 BOOT::META-SYNTAX-ERROR BOOT::|$constructorInfoTable|
	 BOOT::|$currentLine| BOOT::|$Float| BOOT::|$slamFlag|
	 BOOT::|$SmallIntegerOpt| BOOT::$SPAD BOOT::|$timerOn|
	 BOOT::$TRACELETFLAG VMLISP::NE BOOT::ADJCURMAXINDEX
	 BOOT::STREAM-BUFFER BOOT::SPADSLAM BOOT::$EM
	 BOOT::|$PositiveIntegerOpt| BOOT::THETA BOOT::READ-QUIETLY
	 BOOT::RS BOOT::|$compUniquelyIfTrue|
	 BOOT::|$insideExpressionIfTrue| BOOT::LE BOOT::KAR BOOT::ELEM
	 BOOT::LASTATOM BOOT::IN-STREAM BOOT::$DELAY
	 BOOT::QSEXPT BOOT::|$quadSymbol| BOOT::|$streamAlist|
	 BOOT::|$SymbolOpt| BOOT::TAKE BOOT::CONSOLEINPUTP
	 BOOT::|$hasYield| BOOT::DEBUGMODE BOOT::|$DummyFunctorNames|
	 BOOT::|$PositiveInteger| BOOT::%D VMLISP::FLUID BOOT::TLINE
	 BOOT::|$abbreviationTable| BOOT::|$FontTable|
	 BOOT::|$PatternVariableList| BOOT::|$returnMode| BOOT::NEQUAL
	 BOOT::GE BOOT::|MakeSymbol| BOOT::|$insideWhereIfTrue|
	 BOOT::|$mapSubNameAlist| BOOT::GETCHAR BOOT::|Gaussian|
	 BOOT::IDENTIFIER BOOT::|$LastCxArg| BOOT::|$systemCommands|
	 BOOT::|$true| BOOT::SETANDFILE BOOT::PUSH-REDUCTION
	 BOOT::|$BigFloat| BOOT::|$brightenCommentsFlag|
	 BOOT::|$cacheCount| BOOT::|$exitModeStack| BOOT::|$noEnv|
	 BOOT::|$NonPositiveIntegerOpt| BOOT::PUTGCEXIT
	 BOOT::|$readingFile|
	 BOOT::IS BOOT::KDR BOOT::|$quadSym| BOOT::|$BreakMode|
	 BOOT::$TOKSTACK BOOT::DEFSTREAM BOOT::LOCVARS BOOT::NTH-STACK
	 BOOT::$UNDERLINESTRING BOOT::|$compCount|
	 BOOT::|$lisplibModemapAlist| BOOT::COMP BOOT::LINE
	 BOOT::GETGENSYM BOOT::$FUNNAME BOOT::|$SystemSynonyms|
	 BOOT::|$spadOpList| BOOT::GENERAL BOOT::|$fortranOutputStream|
	 BOOT::META_PREFIX BOOT::|$InteractiveMode| BOOT::|strconc|
	 BOOT::TAILFN BOOT::RPLACW BOOT::|PositiveInteger|
	 BOOT::|$inactiveLisplibs| BOOT::|$NonPositiveInteger|
	 BOOT::|$reportCoerceIfTrue|
	 BOOT::|sayBrightlyNT| BOOT::NEXT-CHAR boot::|sayString|
	 BOOT::META_ERRORS_OCCURRED BOOT::|$resolveFlag|
	 BOOT::|$StringOpt| BOOT::|UnivariatePoly| BOOT::MATCH-TOKEN
	 BOOT::|$createUpdateFiles| BOOT::|$noParseCommands|
	 BOOT::FLAGP BOOT::ECHO-META BOOT::|initializeSetVariables|
	 BOOT::|$CategoryNames| BOOT::?ORDER
	 BOOT::$FILELINENUMBER BOOT::|$timerTicksPerSecond|
	 BOOT::|bootUnionPrint| BOOT::|$consistencyCheck|
	 BOOT::|$oldTime| BOOT::$NEWSPAD BOOT::NUMOFNODES
	 BOOT::|$ResMode| BOOT::S* BOOT::TRANSPGVAR BOOT::$BOXSTRING
	 BOOT::|$BasicPredicates| BOOT::|$eltIfNil| BOOT::$FUNNAME_TAIL
	 BOOT::|$QuickCode| BOOT::GENVAR BOOT::|$TypeEqui|
	 BOOT::TOKEN-TYPE BOOT::|updateSourceFiles| BOOT::|$BFtag|
	 BOOT::|$reportBottomUpFlag| BOOT::|$SmallInteger|
	 BOOT::|$TypeEQ| BOOT::|Boolean| BOOT::|RationalNumber|
	 BOOT::MAKENEWOP BOOT::|$EmptyList| BOOT::|$leaveMode|
	 BOOT::MKQ BOOT::ON BOOT::CONTAINED BOOT::|conOutStream|
	 BOOT::POINTW BOOT::REDUCTION-POP-ELT BOOT::TOKEN-SYMBOL
	 BOOT::ERRCOL BOOT::|$domainTraceNameAssoc| BOOT::SUBSTEQ
	 BOOT::DELASSOS BOOT::|Size| BOOT::|$form|
	 BOOT::|$insideCategoryIfTrue| BOOT::SUCHTHAT BOOT::|One|
	 BOOT::ACTION BOOT::MDEFTRACE BOOT::|$BooleanOpt|
	 BOOT::|$xyStack| BOOT::ASSOCLEFT BOOT::|sayALGEBRA|
	 BOOT::|Coord| BOOT::IDENTIFIER-TOKEN BOOT::ADVANCE-CHAR
	 BOOT::|$InitialDomainsInScope| BOOT::|$StringCategory|
	 BOOT::S- BOOT::NEWLINE BOOT::|$optimizableDomainNames|
	 BOOT::IN BOOT::COLLECTV BOOT::|$Lisp|
	 BOOT::|$lisplibOperationAlist| BOOT::|$reportExitModeStack|
	 BOOT::|$updateCatTableIfTrue| BOOT::NREVERSE0 BOOT::%M
	 BOOT::|sayFORTRAN| BOOT::NEWLINECHR BOOT::|$EmptyMode|
	 BOOT::|$Zero| BOOT::CARCDREXPAND BOOT::|IS_#GENVAR|
	 BOOT::LISTOFATOMS BOOT::|$algebraOutputStream|
	 BOOT::|$highlightAllowed| BOOT::|NonNegativeInteger|
	 BOOT::/EMBED-1
	 BOOT::|$constructorsNotInDatabase| BOOT::|$ConstructorNames|
	 BOOT::|$Integer| BOOT::|$systemModemapsInCore| BOOT::KADDR
	 BOOT::STAR BOOT::|$reportCompilation|
	 BOOT::|$traceNoisely| BOOT::SPADDIFFERENCE BOOT::%B
	 BOOT::COMMENT-CHARACTER BOOT::|$PrettyPrint| BOOT::SPADLET
	 BOOT::|$ModemapFrame| BOOT::|$QuickLet| BOOT::SPADDO
	 BOOT::PREDECESSOR BOOT::*EOF* BOOT::POP-STACK-1 BOOT::BANG
	 BOOT::|$ConstructorCache| BOOT::|$printConStats|
	 BOOT::|$RationalNumberOpt| BOOT::RESET
	 BOOT::NLIST BOOT::NSTRCONC BOOT::TAIL BOOT::GETRULEFUNLISTS
	 BOOT::|$IntegerOpt| BOOT::$NEWLINSTACK BOOT::|$QuietIfNil|
	 BOOT::$SPAD_ERRORS BOOT::|$useDCQnotLET| BOOT::|$xCount|
	 BOOT::$BOOT BOOT::POINT BOOT::OPTIONAL BOOT::PARSE-IDENTIFIER
	 BOOT::BSTRING-TOKEN BOOT::LASTELEM BOOT::STREAM-EOF
	 BOOT::|sayBrightly| BOOT::|$formulaOutputStream|
	 BOOT::|BigFloat| BOOT::SLAM BOOT::$DISPLAY
	 BOOT::|$NonMentionableDomainNames| BOOT::$OLDLINE BOOT::$TYPE
	 BOOT::STATUS BOOT::KEYFN BOOT::|$NonNegativeIntegerOpt|
	 BOOT::|$userConstructors| BOOT::BOOT-NEQUAL BOOT::RPLAC
	 BOOT::GETTAIL BOOT::|QuotientField| BOOT::CURRENT-TOKEN
	 BOOT::|$suffix| BOOT::|$VariableCount| BOOT::COMPARE
	 LISP:SEQUENCE BOOT::|$Exit| BOOT::BOOT-EQUAL BOOT::LT
	 VMLISP::OBEY BOOT::|UnSizedBox| BOOT::|Integer| BOOT::|Nud|
	 BOOT::IOCLEAR BOOT::|$BigFloatOpt| BOOT::|$EmptyEnvironment|
	 BOOT::|$forceDatabaseUpdate| BOOT::$LINESTACK BOOT::ULCASEFG
	 BOOT::|$Boolean| BOOT::|$clamList| BOOT::COLLECT
	 BOOT::IOSTREAMS-SET BOOT::MUST BOOT::|$FloatOpt|
	 BOOT::|$NonNegativeInteger|
	 BOOT::FLAG BOOT::TL BOOT::BLANKS BOOT::|$report3|
	 BOOT::|$reportFlag| BOOT::|$xeditIsConsole| BOOT::PAIR
	 BOOT::|$evalDomain| BOOT::|$traceletFunctions| BOOT::|$Void|
	 BOOT::GT BOOT::MATCH-ADVANCE-STRING
	 BOOT::|$scanModeFlag| BOOT::SUBLISNQ BOOT::LASSQ BOOT::NOTE
	 BOOT::ILAM BOOT::CURRENT-SYMBOL
	 BOOT::|$SetFunctions| BOOT::|$sourceFileTypes| BOOT::|String|
	 BOOT::NUMBER-TOKEN BOOT::$LINENUMBER BOOT::$NUM_OF_META_ERRORS
	 BOOT::|$Polvar| BOOT::|$domainsWithUnderDomains|
	 BOOT::SPADCALL BOOT::DELASC BOOT::FAIL BOOT::$COMPILE
	 BOOT::|$lastUntraced| BOOT::|$lisplibKind|
	 BOOT::|$tracedModemap| BOOT::|$inputPromptType| BOOT::LASSOC
	 LISP:NUMBER BOOT::|$prefix| BOOT::|$TranslateOnly| BOOT::SAY
	 BOOT::|$CategoryFrame| BOOT::|$croakIfTrue| BOOT::|$exitMode|
	 BOOT::|$lisplibDependentCategories| BOOT::|$NoValue|
	 BOOT::MOAN BOOT::POP-STACK-2 BOOT::BAC
	 BOOT::|$InitialModemapFrame| BOOT::$MAXLINENUMBER
	 BOOT::$ESCAPESTRING BOOT::|$bootStrapMode|
	 BOOT::|$compileMapFlag| BOOT::|$currentFunction|
	 BOOT::|$DomainNames| BOOT::|$PolyMode| BOOT::|$tripleCache|
	 BOOT::SUCHTHATCLAUSE BOOT::WHILE BOOT::S+ BOOT::|Expression|
	 BOOT::PARSE-NUMBER BOOT::|$Index| BOOT::$NBOOT
	 BOOT::|$PrintCompilerMessagesIfTrue| BOOT::$PROMPT
	 BOOT::MAKE-PARSE-FUNCTION BOOT::/METAOPTION BOOT::|$topOp|
	 BOOT::|$xyInitial| BOOT::MKPF BOOT::STRM
	 BOOT::MATCH-NEXT-TOKEN BOOT::|pathname| BOOT::|$cacheAlist|
	 BOOT::$FUNCTION BOOT::|$reportSpadTrace|
	 BOOT::|$tempCategoryTable| BOOT::|$underDomainAlist|
	 BOOT::|$whereList| BOOT::|append| BOOT::|function|
	 BOOT::CURINPUTLINE BOOT::|sayFORMULA|
	 BOOT::/GENVARLST BOOT::|$Category| BOOT::|$SpecialDomainNames|
	 VMLISP::|union| BOOT::ASSOCRIGHT BOOT::CURSTRMLINE
	 BOOT::REDUCTION BOOT::|$lisplibDomainDependents|
	 BOOT::|OptionList| BOOT::|$postStack| BOOT::|$traceDomains|
	 BOOT::BRIGHTPRINT BOOT::|$instantRecord|
	 BOOT::|$NETail| BOOT::UNTIL BOOT::GET-TOKEN
	 BOOT::|$Expression| BOOT::$LASTPREFIX BOOT::|$mathTraceList|
	 BOOT::|$PrintOnly| BOOT::ELEMN BOOT::NILADIC
	 BOOT::PARSE-BSTRING BOOT::/DEPTH BOOT::|$spadLibFT|
	 BOOT::|$xyMax| BOOT::|$IOindex| BOOT::SPADCONST
	 BOOT::|sayBrightlyI| BOOT::|SquareMatrix|
	 BOOT::LASTTAIL
	 BOOT::|UnboundBox| BOOT::NEXT-TOKEN
	 BOOT::|$OutsideStringIfTrue| BOOT::|$String| BOOT::TRIMLZ
	 BOOT::KADR BOOT::STRMBLANKLINE BOOT::STRMSKIPTOBLANK
	 BOOT::IOSTAT BOOT::|$insideCoerceInteractiveHardIfTrue|
	 BOOT::|$lisplibSignatureAlist| BOOT::REMFLAG BOOT::SPADREDUCE
	 BOOT::QLASSQ BOOT::NEXTSTRMLINE BOOT::|FontTable| BOOT::|Led|
	 BOOT::UNGET-TOKENS BOOT::|$operationNameList|
	 BOOT::|$tokenCommands| BOOT::IS_GENVAR BOOT::INIT-RULES
	 BOOT::|PrintItem| BOOT::$LISPLIB BOOT::|$optionAlist|
	 BOOT::|$previousTime| BOOT::|$StreamIndex|
	 BOOT::|$systemLisplibsWithModemapsInCore|
	 BOOT::|$tracedSpadModemap| BOOT::ISTEP BOOT::|$warningStack|
	 BOOT::|and| BOOT::OUT-STREAM BOOT::TOKEN
	 BOOT::|$ConstructorDependencyAlist|
	 BOOT::|$lisplibVariableAlist| BOOT::INTERNL BOOT::IEQUAL
	 BOOT::|$algebraList| BOOT::|$brightenCommentsIfTrue|
	 BOOT::|$failure| BOOT::|$Mode| BOOT::|$opFilter|
	 BOOT::|$TraceFlag| BOOT::|Float| BOOT::POP-STACK-3
	 BOOT::|$EmptyString| BOOT::$TOP_STACK BOOT::|$mpolyTTrules|
	 BOOT::|$mpolyTMrules| BOOT::|$InteractiveFrame|
	 BOOT::|$InteractiveModemapFrame| BOOT::|$letAssoc|
	 BOOT::|$lisp2lispRenameAssoc| BOOT::|$RationalNumber|
	 BOOT::|$ThrowAwayMode| BOOT::*PROMPT* BOOT::NUMOFARGS
	 BOOT::|$semanticErrorStack| BOOT::|$spadSystemDisks|
	 BOOT::$TOP_LEVEL BOOT::BUMPCOMPERRORCOUNT
	 BOOT::|delete| BOOT::STREQ BOOT::STRING-TOKEN BOOT::XNAME
	 BOOT::|$ExpressionOpt| BOOT::|$systemCreation| BOOT::$GENNO
	 BOOT::CROAK BOOT::PARSE-STRING BOOT::|$genFVar|
	 BOOT::|$lisplibModemap| BOOT::|$NoValueMode| BOOT::|$PrintBox|
	 BOOT::ADVANCE-TOKEN BOOT::|$NegativeIntegerOpt|
	 BOOT::|$polyDefaultAssoc| BOOT::|$PrimitiveDomainNames|
	 LISP:STEP BOOT::|rassoc| BOOT::|$Res|
	 BOOT::MATCH-CURRENT-TOKEN BOOT::/GENSYMLIST BOOT::|$false|
	 BOOT::|$ignoreCommentsIfTrue| BOOT::|$ModeVariableList|
	 BOOT::|$useBFasDefault| BOOT::|$CommonDomains|
	 BOOT::|$printLoadMsgs| BOOT::|dataCoerce| BOOT::|$inLispVM|
	 BOOT::|$streamCount|
	 BOOT::|$Symbol| BOOT::|$updateIfTrue| BOOT::REMDUP
	 BOOT::ADDASSOC BOOT::|PrintList|
	 BOOT::SPECIAL-CHAR BOOT::XCAPE BOOT::|$EmptyVector|
	 BOOT::REPEAT BOOT::|$NegativeInteger|
	 BOOT::LENGTHENVEC BOOT::CURMAXINDEX BOOT::|$hasCategoryTable|
	 BOOT::|$leftPren| BOOT::|$lisplibForm| BOOT::|$OneCoef|
	 BOOT::|$reportCoerce| VMLISP::OPTIONLIST BOOT::META
	 BOOT::|$insideCapsuleFunctionIfTrue|
	 BOOT::|$insideConstructIfTrue| BOOT::$BOLDSTRING
	 BOOT::|breaklet| BOOT::|$insideCompTypeOf|
	 BOOT::|$rightPren|
	 BOOT::|$systemLastChanged| BOOT::|$xyCurrent| BOOT::|Zero|
	 BOOT::YIELD BOOT::|Polynomial| BOOT::|$Domain| BOOT::STRINGPAD
	 BOOT::TRUNCLIST BOOT::|SmallInteger| BOOT::|$libFile|
	 BOOT::|$mathTrace| BOOT::|$PolyDomains| BOOT::|or|
	 BOOT::|$DomainVariableList| BOOT::|$insideFunctorIfTrue|
	 BOOT::|$One| VMLISP::EXIT BOOT::CURRENT-CHAR BOOT::NBLNK
	 BOOT::$DALYMODE))

;;; Definitions for package VMLISP of type EXPORT
(lisp:in-package "VMLISP")
(lisp:import '(
<<GCL.DEFINE-MACRO>>
<<GCL.MEMQ>>
<<GCL.PNAME>>
	  BOOT:|directoryp| BOOT:|makedir|))
(lisp:export
    '(VMLISP::SINTP VMLISP::$FCOPY 
<<GCL.DEFINE-MACRO>>
<<GCL.MEMQ>>
<<GCL.PNAME>>
         VMLISP::PUT
	 VMLISP::QVELT-1 VMLISP::QSETVELT-1 vmlisp::throw-protect
	 VMLISP::|directoryp| VMLISP::|makedir| VMLISP::EQCAR
	 VMLISP::DEFIOSTREAM VMLISP::RDEFIOSTREAM VMLISP::MLAMBDA
	 VMLISP::QSLESSP VMLISP::QSDIFFERENCE VMLISP::QSQUOTIENT
	 VMLISP::ERROROUTSTREAM VMLISP::CREATE-SBC VMLISP::LASTPAIR
	 VMLISP::EQSUBSTLIST VMLISP::QCAAAR VMLISP::$TOTAL-ELAPSED-TIME
	 VMLISP::QUOTIENT VMLISP::SORTGREATERP
	 VMLISP::QSETREFV VMLISP::QSTRINGLENGTH VMLISP::EVALFUN
	 VMLISP::QCDAR VMLISP::TEMPUS-FUGIT VMLISP::QSPLUS VMLISP::QSABSVAL
	 VMLISP::QSZEROP VMLISP::QSMIN VMLISP::QSLEFTSHIFT
	 VMLISP::SETDIFFERENCE VMLISP::RPLQ VMLISP::CATCHALL
	 VMLISP::RECOMPILE-DIRECTORY VMLISP::MDEF VMLISP::LINTP
	 VMLISP::NILFN VMLISP::TAB VMLISP::QCDDR VMLISP::IOSTATE
	 VMLISP::SFP VMLISP::NE VMLISP::STRGREATERP
	 VMLISP::USE-VMLISP-SYNTAX VMLISP::RCLASS VMLISP::RSETCLASS
	 VMLISP::SEQ VMLISP::FIXP VMLISP::MAKE-CVEC
	 VMLISP::|F,PRINT-ONE| VMLISP::HASHUEQUAL VMLISP::$OUTFILEP
	 VMLISP::TIMES VMLISP::DIFFERENCE VMLISP::MSUBST VMLISP::DIVIDE
	 VMLISP::|remove| VMLISP::GETL VMLISP::QCADAR VMLISP::QCAAAAR
	 VMLISP::RECLAIM VMLISP::ORADDTEMPDEFS VMLISP::NAMEDERRSET
	 VMLISP::TRIMSTRING VMLISP::CURRINDEX VMLISP::EVALANDFILEACTQ
	 VMLISP::LISPLIB VMLISP::FLUID VMLISP::MDEFX VMLISP::COMP370
	 VMLISP::NEQ VMLISP::GETREFV VMLISP::|log| VMLISP::QVSIZE
	 VMLISP::MBPIP VMLISP::RPLNODE VMLISP::QSORT
	 VMLISP::PLACEP VMLISP::RREAD VMLISP::BINTP VMLISP::QSODDP
	 VMLISP::O VMLISP::RVECP VMLISP::CHAR2NUM VMLISP::POPP
	 VMLISP::QCDAADR VMLISP::HKEYS VMLISP::HASHCVEC VMLISP::HASHID
	 VMLISP::REMOVEQ VMLISP::LISTOFFUNCTIONS
	 VMLISP::QCADAAR VMLISP::ABSVAL VMLISP::VMPRINT
	 VMLISP::MAKE-APPENDSTREAM
	 VMLISP::MAKE-INSTREAM VMLISP::HASHTABLEP VMLISP::UPCASE
	 VMLISP::LOADCOND VMLISP::STRPOSL VMLISP::STATEP VMLISP::QCDADR
	 VMLISP::HREMPROP VMLISP::LAM VMLISP::FBPIP VMLISP::NCONC2
	 VMLISP::GETFULLSTR VMLISP::I VMLISP::HREM
	 VMLISP::*LISP-BIN-FILETYPE* VMLISP::INT2RNUM VMLISP::EBCDIC
	 VMLISP::$INFILEP VMLISP::BFP VMLISP::NUMP VMLISP::UNEMBED
	 VMLISP::PAIRP VMLISP::BOOLEANP VMLISP::FIX VMLISP::REMAINDER
	 VMLISP::RE-ENABLE-INT VMLISP::QCAADDR VMLISP::QCDDADR
	 VMLISP::$LISTFILE VMLISP::IVECP VMLISP::LIST2VEC
	 VMLISP::|LAM,FILEACTQ| VMLISP::LISTOFQUOTES
	 VMLISP::$ERASE VMLISP::QSDEC1
	 VMLISP::QSSUB1 VMLISP::QCAR VMLISP::EVA1FUN VMLISP::IS-CONSOLE
	 VMLISP::MAKESTRING VMLISP::CUROUTSTREAM VMLISP::QCDDDR
	 VMLISP::QCDADAR VMLISP::MAKE-ABSOLUTE-FILENAME VMLISP::SUFFIX
	 VMLISP::FUNARGP VMLISP::VM/ VMLISP::QRPLACA VMLISP::GGREATERP
	 VMLISP::CGREATERP VMLISP::RNUMP VMLISP::RESETQ VMLISP::QRPLACD
	 VMLISP::SORTBY VMLISP::CVECP VMLISP::SETELT VMLISP::HGET
	 VMLISP::$DIRECTORY-LIST VMLISP::LN VMLISP::|member|
	 VMLISP::$LIBRARY-DIRECTORY-LIST
	 VMLISP::QCSIZE VMLISP::QCADDDR VMLISP::RWRITE VMLISP::SUBLOAD
	 VMLISP::STRINGIMAGE VMLISP::$CLEAR VMLISP::|read-line|
	 VMLISP::PROPLIST VMLISP::INTP VMLISP::OUTPUT VMLISP::CONSOLE
	 VMLISP::QCDDDAR VMLISP::ADDOPTIONS VMLISP::$FILETYPE-TABLE
	 VMLISP::QSMINUSP VMLISP::|assoc| VMLISP::SETSIZE VMLISP::QCDR
	 VMLISP::EFFACE VMLISP::COPY VMLISP::DOWNCASE VMLISP::LC2UC
	 VMLISP::EMBED VMLISP::SETANDFILEQ VMLISP::QSMAX
	 VMLISP::LIST2REFVEC VMLISP::MACRO-INVALIDARGS VMLISP::EMBEDDED
	 VMLISP::REFVECP VMLISP::CLOSEDFN VMLISP::MAKE-HASHTABLE
	 VMLISP::MAKE-FILENAME VMLISP::|$defaultMsgDatabaseName|
	 VMLISP::LEXGREATERP
	 VMLISP::IDENTP VMLISP::QSINC1 VMLISP::QESET VMLISP::MRP
	 VMLISP::LESSP VMLISP::RPLPAIR VMLISP::QVELT VMLISP::QRPLQ
	 VMLISP::MACERR VMLISP::*FILEACTQ-APPLY* VMLISP::HPUT*
	 VMLISP::$FILEP VMLISP::MAKE-FULL-CVEC VMLISP::HCLEAR
	 VMLISP::ERRORINSTREAM VMLISP::HPUTPROP 
	 VMLISP::STRING2ID-N VMLISP::CALLBELOW VMLISP::BPINAME
	 VMLISP::CHANGELENGTH VMLISP::ECQ VMLISP::OBEY VMLISP::QASSQ
	 VMLISP::DCQ VMLISP::SHUT VMLISP::FILE VMLISP::HPUT
	 VMLISP::MAKEPROP VMLISP::GREATERP
	 VMLISP::REROOT VMLISP::DIG2FIX VMLISP::L-CASE
	 VMLISP::TEREAD VMLISP::QSREMAINDER VMLISP::$FINDFILE
	 VMLISP::EQQ VMLISP::PRETTYPRINT VMLISP::HASHEQ VMLISP::LOG2
	 VMLISP::U-CASE VMLISP::NREMOVE VMLISP::QREFELT VMLISP::SIZE
	 VMLISP::EOFP VMLISP::QCDAAR VMLISP::RSHUT VMLISP::ADD1
	 VMLISP::QMEMQ VMLISP::SUBSTRING VMLISP::LOADVOL
	 VMLISP::QSTIMES VMLISP::STRINGLENGTH VMLISP::NEXT
	 VMLISP::DEVICE VMLISP::MAPELT VMLISP::LENGTHOFBPI
	 VMLISP::DIGITP VMLISP::QLENGTH VMLISP::QCAAADR VMLISP::CVEC
	 VMLISP::VEC2LIST VMLISP::MODE VMLISP::MAKE-VEC VMLISP::GCMSG
	 VMLISP::CONCAT VMLISP::$SHOWLINE VMLISP::QCAADR VMLISP::QCDDAR
	 VMLISP::QCDAAAR VMLISP::RDROPITEMS VMLISP::VECP
	 VMLISP::|union| VMLISP::ONE-OF VMLISP::NULLOUTSTREAM
	 VMLISP::QSGREATERP VMLISP::MINUS VMLISP::MAXINDEX
	 VMLISP::GETSTR VMLISP::QCADADR VMLISP::PRIN2CVEC
	 VMLISP::CURRENTTIME VMLISP::$REPLACE VMLISP::UNIONQ
	 VMLISP::NREMOVEQ VMLISP::CURINSTREAM VMLISP::MAKE-OUTSTREAM
	 VMLISP::APPLX VMLISP::LASTNODE VMLISP::SUBSTQ VMLISP::TRUEFN
	 VMLISP::|last| VMLISP::RPLACSTR VMLISP::SETQP VMLISP::QCADDR
	 VMLISP::QCAADAR VMLISP::QCDDAAR VMLISP::|intersection|
	 VMLISP::HASHTABLE-CLASS VMLISP::$CURRENT-DIRECTORY
	 VMLISP::*COMP370-APPLY* VMLISP::QSETVELT VMLISP::MOVEVEC
	 VMLISP::ID VMLISP::DEFINE-FUNCTION VMLISP::MSUBSTQ VMLISP::|nsubst|
	 VMLISP::LISTOFFLUIDS VMLISP::SUB1 VMLISP::NUMBEROFARGS
	 VMLISP::VMREAD VMLISP::SMINTP VMLISP::$SCREENSIZE
	 VMLISP::LISTOFFREES VMLISP::QCDADDR VMLISP::COMPRREAD
	 VMLISP::GENSYMP VMLISP::IFCAR VMLISP::QSETQ
	 VMLISP::QCADDAR VMLISP::*LISP-SOURCE-FILETYPE* VMLISP::KOMPILE
	 VMLISP::INPUT VMLISP::PAPPP VMLISP::UEQUAL VMLISP::COMPRWRITE
	 VMLISP::SUBRP VMLISP::ASSEMBLE VMLISP::|LAM,EVALANDFILEACTQ|
	 VMLISP::|$msgDatabaseName| VMLISP::IFCDR VMLISP::QVMAXINDEX
	 VMLISP::$SPADROOT VMLISP::PRIN0 VMLISP::PRETTYPRIN0
	 VMLISP::STACKLIFO VMLISP::ASSQ VMLISP::PRINTEXP
	 VMLISP::QCDDDDR VMLISP::QSADD1
	 VMLISP::SETDIFFERENCEQ VMLISP::STRPOS VMLISP::CONSTANT
	 VMLISP::QCAAR VMLISP::HCOUNT VMLISP::RCOPYITEMS
	 VMLISP::QSMINUS VMLISP::EVA1 VMLISP::OPTIONLIST
	 VMLISP::NUM2CHAR VMLISP::QENUM VMLISP::QEQQ
	 VMLISP::$TOTAL-GC-TIME VMLISP::CHARP VMLISP::QCADR
	 VMLISP::INTERSECTIONQ VMLISP::DSETQ VMLISP::FETCHCHAR
	 VMLISP::STRCONC VMLISP::MACRO-MISSINGARGS VMLISP::RPACKFILE
	 VMLISP::EXIT VMLISP::PLUS VMLISP::RKEYIDS
	 VMLISP::COMPILE-LIB-FILE VMLISP::RECOMPILE-LIB-FILE-IF-NECESSARY))

;;; Definitions for package BOOT of type SHADOW
(lisp:in-package "BOOT")
(lisp:shadow '(BOOT::MAP))
(lisp:import
    '(VMLISP::ERROROUTSTREAM LISP:COUNT VMLISP::NE VMLISP::FLUID
	 LISP:SEQUENCE VMLISP::OBEY LISP::NUMBER VMLISP::|union|
	 LISP:STEP VMLISP::OPTIONLIST VMLISP::EXIT VMLISP::LEXGREATERP))
(lisp:import '(vmlisp::make-input-filename))
(lisp:import '(vmlisp::libstream-dirname))
(lisp:import '(user::spad-save))
(lisp:import '(vmlisp::eqcar))
(lisp:export '(boot::eqcar))

;;; Definitions for package VMLISP of type SHADOW
(lisp:in-package "VMLISP")
(lisp:import '(SYSTEM::DEFINE-MACRO SYSTEM::MEMQ SYSTEM::PNAME))


(in-package "BOOT") ;; Used to be "UNCOMMON"

(export '(
	;; !! ;;; Passed on from the Lisp package
	;; !! + * -

	;;;; Operating system interface
	|OsRunProgram| |OsRunProgramToStream| |OsProcessNumber|
	|OsEnvGet|     |OsEnvVarCharacter|    |OsExpandString|

	;;;; Time
	|TimeStampString|

	;;;; Lisp Interface
	|LispKeyword|
	|LispReadFromString| |LispEval|
	|LispCompile| |LispCompileFile| |LispCompileFileQuietlyToObject|
	|LispLoadFile| |LispLoadFileQuietly|

	;;; Control
	|funcall| |Catch| |Throw| |UnwindProtect| |CatchAsCan|

	;;; General
	|Eq| |Nil| |DeepCopy| |Sort| |SortInPlace|

	|genRemoveDuplicates| |genMember|
	|gobSharedExcluding| |gobSharedParts| |gobAlwaysShared?|
	|gobPretty| |gobSexpr|

	;;; Streams
	|Prompt| |PlainError| |PrettyPrint| |PlainPrint| |PlainPrintOn|
	|WithOpenStream|
	|WriteLispExpr| |WriteByte| |WriteChar| |WriteLine| |WriteString|
	|ReadLispExpr| |ReadByte| |ReadChar| |ReadLine|
	|ByteFileWriteLine| |ByteFileReadLine|
	|ReadLineIntoString| |ByteFileReadLineIntoString| |ReadBytesIntoVector|
	|StreamCopyChars| |StreamCopyBytes|
	|InputStream?| |OutputStream?|
	|StreamSize| |StreamGetPosition| |StreamSetPosition|
	|StreamEnd?| |StreamFlush| |StreamClose|

	|FileLine| |StreamLine|

	;;; Pathnames
	|TempFileDirectory| |LispFileType| |FaslFileType|
	|ToPathname| |Pathname| |NewPathname| |SessionPathname|
	|PathnameDirectory| |PathnameName| |PathnameType|
	|PathnameString| |PathnameAbsolute?|
	|PathnameWithType| |PathnameWithDirectory|
	|PathnameWithoutType| |PathnameWithoutDirectory|

	|PathnameToUsualCase| |PathnameWithinDirectory|
	|PathnameDirectoryOfDirectoryPathname| |PathnameWithinOsEnvVar|

	;;; Symbols
	|MakeSymbol| |Symbol?| |SymbolString|

	;;; Bits
	|Bit| |Bit?| |TrueBit| |FalseBit| |BitOn?| |BitOr|

	;;; General Sequences
	;; !! ;;; Passed on from the Lisp package
	;; !! ELT SETELT
	;; SIZE

	;;; Vectors
	|FullVector| |Vector?|

	;;; Bit Vectors
	|FullBvec|

	;;; Characters
	|char| |Char| |Char?|
	|CharCode| |CharGreater?| |CharDigit?|
	|SpaceChar| |NewlineChar|

	;;; Character Sets
	|Cset| |CsetMember?|
	|CsetUnion| |CsetComplement| |CsetString|
	|NumericCset| |LowerCaseCset| |UpperCaseCset| |WhiteSpaceCset|
	|AlphaCset| |AlphaNumericCset|

	;;; Character Strings
	|FullString| |ToString| |StringImage| |String?|
	|StringGetCode| |StringConcat|
	|StringLength| |StringFromTo| |StringFromToEnd| |StringFromLong|
	|StringGreater?| |StringPrefix?| |StringUpperCase| |StringLowerCase|
	|StringToInteger|  |StringToFloat|
	|StringWords|	   |StringTrim|
	|StringPositionOf| |StringPositionOfNot|
	|UnescapeString|   |ExpandVariablesInString|

	;;; Numbers
	|Number?| |Integer?| |SmallInteger?| |Float?| |DoublePrecision|
	|Odd?| |Remainder|
	|Abs| |Min| |Max|
	|Exp| |Ln| |Log10|
	|Sin| |Cos| |Tan| |Cotan| |Arctan|

	;;; Pairs
	|Pair?|

	|car|	    |cdr|
	|caar|	    |cadr|	|cdar|	    |cddr|
	|caaar|	    |caadr|	|cadar|	    |caddr|
	|cdaar|	    |cdadr|	|cddar|	    |cdddr|
	|FastCar|   |FastCdr|
	|FastCaar|  |FastCadr|	|FastCdar|  |FastCddr|
	|FastCaaar| |FastCaadr| |FastCadar| |FastCaddr|
	|FastCdaar| |FastCdadr| |FastCddar| |FastCdddr|
	|IfCar|	    |IfCdr|
	|EqCar|	    |EqCdr|

	;;; Lists
	|length1?| |second|

	|ListIsLength?| |ListMemberQ?| |ListMember?|
	|ListRemoveQ| |ListNRemoveQ| |ListRemoveDuplicatesQ| |ListNReverse|
	|ListUnion| |ListUnionQ| |ListIntersection| |ListIntersectionQ|
	|ListAdjoin| |ListAdjoinQ|

	;;; Association lists
	|AlistAssoc| |AlistRemove|
	|AlistAssocQ| |AlistRemoveQ| |AlistAdjoinQ| |AlistUnionQ|

	;;; Tables
	|Table?|
	|TableCount| |TableGet| |TableSet| |TableUnset| |TableKeys|
))

(in-package "BOOT")
(lisp:export '(boot::ncloop boot::ncrecover))
(lisp:import '(vmlisp::make-input-filename vmlisp::is-console))
;; (lisp:import '(boot::|openServer|))
;; (lisp:import '(boot::|sockGetInt|))
;; (lisp:import '(boot::|sockSendInt|))
;; (lisp:import '(boot::|sockGetInts|))
;; (lisp:import '(boot::|sockSendInts|))
;; (lisp:import '(boot::|sockGetString|))
;; (lisp:import '(boot::|sockSendString|))
;; (lisp:import '(boot::|sockGetFloat|))
;; (lisp:import '(boot::|sockSendFloat|))
;; (lisp:import '(boot::|sockGetFloats|))
;; (lisp:import '(boot::|sockSendFloats|))
;; (lisp:import '(boot::|sockSendWakeup|))
;; (lisp:import '(boot::|sockSendSignal|))
(lisp:import '(vmlisp::qsdifference))
(lisp:import '(vmlisp::qsminusp))
(lisp:import '(vmlisp::qsplus))
(lisp:import '(vmlisp::absval))
(lisp:import '(vmlisp::cgreaterp))
(lisp:import '(vmlisp::char2num))
(lisp:import '(vmlisp::charp))
(lisp:import '(vmlisp::concat))
(lisp:import '(vmlisp::copy))
(lisp:import '(vmlisp::difference))
(lisp:import '(vmlisp::digitp))
(lisp:import '(vmlisp::divide))
(lisp:import '(vmlisp::eqcar))
(lisp:import '(vmlisp::fixp))
(lisp:import '(vmlisp::greaterp))
(lisp:import '(vmlisp::hasheq))
(lisp:import '(vmlisp::hput))
(lisp:import '(vmlisp::hrem))
(lisp:import '(vmlisp::identp))
(lisp:import '(vmlisp::lessp))
(lisp:import '(vmlisp::ln))
(lisp:import '(vmlisp::make-cvec))
(lisp:import '(vmlisp::make-full-cvec))
(lisp:import '(vmlisp::make-vec))
#-(or :lispm :lucid) (lisp:import '(vmlisp::memq))
#+(and :lucid (not :ibm/370)) (lisp:import '(system:memq))
(lisp:import '(vmlisp::movevec))
(lisp:import '(vmlisp::pname))
(lisp:import '(vmlisp::prettyprin0))
(lisp:import '(vmlisp::prettyprint))
(lisp:import '(vmlisp::printexp))
(lisp:import '(vmlisp::qassq))
(lisp:import '(vmlisp::qcar))
(lisp:import '(vmlisp::qcdr))
(lisp:import '(vmlisp::qcaar))
(lisp:import '(vmlisp::qcadr))
(lisp:import '(vmlisp::qcdar))
(lisp:import '(vmlisp::qcddr))
(lisp:import '(vmlisp::qcaaar))
(lisp:import '(vmlisp::qcaadr))
(lisp:import '(vmlisp::qcadar))
(lisp:import '(vmlisp::qcaddr))
(lisp:import '(vmlisp::qcdaar))
(lisp:import '(vmlisp::qcdadr))
(lisp:import '(vmlisp::qcddar))
(lisp:import '(vmlisp::qcdddr))
(lisp:import '(vmlisp::qcaaaar))
(lisp:import '(vmlisp::qcaaadr))
(lisp:import '(vmlisp::qcaadar))
(lisp:import '(vmlisp::qcaaddr))
(lisp:import '(vmlisp::qcadaar))
(lisp:import '(vmlisp::qcadadr))
(lisp:import '(vmlisp::qcaddar))
(lisp:import '(vmlisp::qcadddr))
(lisp:import '(vmlisp::qcdaaar))
(lisp:import '(vmlisp::qcdaadr))
(lisp:import '(vmlisp::qcdadar))
(lisp:import '(vmlisp::qcdaddr))
(lisp:import '(vmlisp::qcddaar))
(lisp:import '(vmlisp::qcddadr))
(lisp:import '(vmlisp::qcdddar))
(lisp:import '(vmlisp::qcddddr))
(lisp:import '(vmlisp::qcsize))
(lisp:import '(vmlisp::qenum))
(lisp:import '(vmlisp::qeset))
(lisp:import '(vmlisp::qlength))
(lisp:import '(vmlisp::qmemq))
(lisp:import '(vmlisp::qsadd1))
(lisp:import '(vmlisp::qslessp))
(lisp:import '(vmlisp::qsdec1))
(lisp:import '(vmlisp::qsetvelt))
(lisp:import '(vmlisp::qsgreaterp))
(lisp:import '(vmlisp::qsinc1))
(lisp:import '(vmlisp::qsmax))
(lisp:import '(vmlisp::qsmin))
(lisp:import '(vmlisp::qsoddp))
(lisp:import '(vmlisp::qsquotient))
(lisp:import '(vmlisp::qsremainder))
(lisp:import '(vmlisp::qssub1))
(lisp:import '(vmlisp::qstimes))
(lisp:import '(vmlisp::qszerop))
(lisp:import '(vmlisp::qszerop))
(lisp:import '(vmlisp::qvelt))
(lisp:import '(vmlisp::qvsize))
(lisp:import '(vmlisp::setandfileq))
(lisp:import '(vmlisp::sintp))
(lisp:import '(vmlisp::size))
(lisp:import '(vmlisp::stringimage))
(lisp:import '(vmlisp::strpos))
(lisp:import '(vmlisp::strposl))
(lisp:import '(vmlisp::substring))
;; (lisp:import '(boot::|error|))
(lisp:import '(vmlisp::ivecp))
(lisp:import '(vmlisp::rvecp))
(lisp:import '(vmlisp::dig2fix))
(lisp:import '(vmlisp::rnump))
(lisp:import '(vmlisp::fix))
(lisp:import '(vmlisp::sortgreaterp))
(lisp:import '(vmlisp::qsort))
(lisp:import '(vmlisp::sortby))
(lisp:import '(vmlisp::make-instream))
(lisp:import '(vmlisp::list2vec))
(lisp:import '(vmlisp::vec2list))
(lisp:import '(vmlisp::sub1))
(lisp:import '(vmlisp::add1))
(lisp:import '(vmlisp::neq))
(lisp:import '(vmlisp::hashtable-class))
(lisp:import '(vmlisp::maxindex))
;; (lisp:import '(boot::remdup))
(lisp:import '(vmlisp::upcase))
(lisp:import '(vmlisp::downcase))
(lisp:import '(vmlisp::vecp))
(lisp:import '(vmlisp::strconc))
(lisp:import '(vmlisp::defiostream))
(lisp:import '(vmlisp::shut))
(lisp:import '(vmlisp::prin2cvec))
;; (lisp:import '(boot::lasttail))
;; (lisp:import '(boot::lastpair))
;; (lisp:import '(boot::lastatom))
;; (lisp:import '(boot::|last|))
(lisp:import '(vmlisp::ncons))
(lisp:import '(vmlisp::rplpair))
(lisp:import '(vmlisp::nump))
(lisp:import '(vmlisp::intp))
(lisp:import '(vmlisp::makeprop))
(lisp:import '(vmlisp::ifcar))
(lisp:import '(vmlisp::ifcdr))
(lisp:import '(vmlisp::quotient))
(lisp:import '(vmlisp::remainder))
(lisp:import '(vmlisp::make-hashtable))
(lisp:import '(vmlisp::hget))
(lisp:import '(vmlisp::hkeys))
(lisp:import '(vmlisp::$infilep))
(lisp:import '(vmlisp::$findfile))
(lisp:import '(vmlisp::pairp))
(lisp:import '(vmlisp::cvec))
(lisp:import '(vmlisp::uequal))
(lisp:import '(vmlisp::id))
(lisp:import '(vmlisp::vec-setelt))
(lisp:import '(vmlisp::make-bvec))
;; (lisp:import '(boot::bvec-make-full))
;; (lisp:import '(boot::bvec-setelt))
(lisp:import '(vmlisp::|shoeread-line|))
(lisp:import '(vmlisp::|shoeInputFile|))
(lisp:import '(vmlisp::|shoeConsole|))
(lisp:import '(vmlisp::|startsId?|))
(lisp:import '(vmlisp::|idChar?|))
(lisp:import '(vmlisp::|npPC|))
(lisp:import '(vmlisp::|npPP|))
;; (lisp:import '(boot::mkprompt))
;; (lisp:import '(boot::|fillerSpaces|))
;; (lisp:import '(boot::|sayString|))
;; (lisp:import '(boot::help))
;; (lisp:import '(boot::|version|))
;; (lisp:import '(boot::|pp|))
;; (lisp:import '(boot::$dalymode))

(lisp:import 'boot::$IEEE)

(in-package "FOAM")

(lisp:export '(
FOAM::|printDFloat|
FOAM::|printSFloat|
FOAM::|printBInt|
FOAM::|printSInt|
FOAM::|printString|
FOAM::|printChar|
FOAM::|printNewLine|
FOAM::|MakeLit|
FOAM::|EnvNext|
FOAM::|EnvLevel|
FOAM::|MakeEnv|
FOAM::|RElt|
FOAM::|RNew|
FOAM::|DDecl|
FOAM::|ClosFun|
FOAM::|ClosEnv|
FOAM::|CCall|
FOAM::|ArrToBInt|
FOAM::|ArrToSInt|
FOAM::|ArrToDFlo|
FOAM::|ArrToSFlo|
FOAM::|BIntToDFlo|
FOAM::|BIntToSFlo|
FOAM::|SIntToDFlo|
FOAM::|SIntToSFlo|
FOAM::|BIntToSInt|
FOAM::|SIntToBInt|
FOAM::|BitToSInt|
FOAM::|ScanBInt|
FOAM::|ScanSInt|
FOAM::|ScanDFlo|
FOAM::|ScanSFlo|
FOAM::|FormatBInt|
FOAM::|FormatSInt|
FOAM::|FormatDFlo|
FOAM::|FormatSFlo|
FOAM::|PtrEQ|
FOAM::|PtrIsNil|
FOAM::|PtrNil|
FOAM::|BIntBit|
FOAM::|BIntShift|
FOAM::|BIntLength|
FOAM::|BIntPower|
FOAM::|BIntGcd|
FOAM::|BIntDivide|
FOAM::|BIntRem|
FOAM::|BIntQuo|
FOAM::|BIntMod|
FOAM::|BIntTimes|
FOAM::|BIntMinus|
FOAM::|BIntPlus|
FOAM::|BIntInc|
FOAM::|BIntDec|
FOAM::|BIntAbs|
FOAM::|BIntNegate|
FOAM::|BIntNE|
FOAM::|BIntGT|
FOAM::|BIntEQ|
FOAM::|BIntLE|
FOAM::|BIntIsSmall|
FOAM::|BIntIsOdd|
FOAM::|BIntIsEven|
FOAM::|BIntIsPos|
FOAM::|BIntIsNeg|
FOAM::|BIntIsZero|
FOAM::|BInt1|
FOAM::|BInt0|
FOAM::|SIntOr|
FOAM::|SIntAnd|
FOAM::|SIntNot|
FOAM::|SIntBit|
FOAM::|SIntShift|
FOAM::|SIntLength|
FOAM::|SIntTimesMod|
FOAM::|SIntMinusMod|
FOAM::|SIntPlusMod|
FOAM::|SIntPower|
FOAM::|SIntGcd|
FOAM::|SIntDivide|
FOAM::|SIntRem|
FOAM::|SIntQuo|
FOAM::|SIntMod|
FOAM::|SIntTimes|
FOAM::|SIntMinus|
FOAM::|SIntPlus|
FOAM::|SIntInc|
FOAM::|SIntDec|
FOAM::|SIntNegate|
FOAM::|SIntNE|
FOAM::|SIntGT|
FOAM::|SIntEQ|
FOAM::|SIntLE|
FOAM::|SIntIsOdd|
FOAM::|SIntIsEven|
FOAM::|SIntIsPos|
FOAM::|SIntIsNeg|
FOAM::|SIntIsZero|
FOAM::|SIntMax|
FOAM::|SIntMin|
FOAM::|SInt1|
FOAM::|SInt0|
FOAM::|HIntMax|
FOAM::|HIntMin|
FOAM::|HInt1|
FOAM::|HInt0|
FOAM::|ByteMax|
FOAM::|ByteMin|
FOAM::|Byte1|
FOAM::|Byte0|
FOAM::|DFloCeiling|
FOAM::|DFloFloor|
FOAM::|DFloTruncate|
FOAM::|DFloRound|
FOAM::|DFloIPower|
FOAM::|DFloPower|
FOAM::|DFloDivide|
FOAM::|DFloTimes|
FOAM::|DFloMinus|
FOAM::|DFloPlus|
FOAM::|DFloNegate|
FOAM::OTHER-FORM
FOAM::|DFloNE|
FOAM::|DFloGT|
FOAM::|DFloEQ|
FOAM::|DFloLE|
FOAM::|DFloIsPos|
FOAM::|DFloIsNeg|
FOAM::|DFloIsZero|
FOAM::|DFloEpsilon|
FOAM::|DFloMax|
FOAM::|DFloMin|
FOAM::|DFlo1|
FOAM::|DFlo0|
FOAM::|SFloCeiling|
FOAM::|SFloFloor|
FOAM::|SFloTruncate|
FOAM::|SFloRound|
FOAM::|SFloIPower|
FOAM::|SFloPower|
FOAM::|SFloDivide|
FOAM::|SFloTimes|
FOAM::|SFloMinus|
FOAM::|SFloPlus|
FOAM::|SFloNegate|
FOAM::|SFloNE|
FOAM::|SFloGT|
FOAM::|SFloEQ|
FOAM::|SFloLE|
FOAM::|SFloIsPos|
FOAM::|SFloIsNeg|
FOAM::|SFloIsZero|
FOAM::|SFloEpsilon|
FOAM::|SFloMax|
FOAM::|SFloMin|
FOAM::|SFlo1|
FOAM::|SFlo0|
FOAM::|CharNum|
FOAM::|CharOrd|
FOAM::|CharUpper|
FOAM::|CharLower|
FOAM::|CharNE|
FOAM::|CharGT|
FOAM::|CharEQ|
FOAM::|CharLE|
FOAM::|CharIsLetter|
FOAM::|CharIsDigit|
FOAM::|CharMax|
FOAM::|CharMin|
FOAM::|CharNewline|
FOAM::|CharSpace|
FOAM::|BitNE|
FOAM::|BitEQ|
FOAM::|BitOr|
FOAM::|BitAnd|
FOAM::|BitNot|
FOAM::|BitTrue|
FOAM::|BitFalse|
FOAM::|Clos|
FOAM::COMPILE-AS-FILE
FOAM::|FormatNumber|
FOAM::AXIOMXL-GLOBAL-NAME
FOAM::AXIOMXL-FILE-INIT-NAME
FOAM::|BIntPrev|
FOAM::|BIntLT|
FOAM::|BIntIsSingle|
FOAM::|SIntShiftDn|
FOAM::|SIntShiftUp|
FOAM::|SIntTimesPlus|
FOAM::|SIntNext|
FOAM::|SIntPrev|
FOAM::|SIntLT|
FOAM::|DFloAssemble|
FOAM::|DFloDissemble|
FOAM::|DFloRDivide|
FOAM::|DFloRTimesPlus|
FOAM::|DFloRTimes|
FOAM::|DFloRMinus|
FOAM::|DFloRPlus|
FOAM::|DFloTimesPlus|
FOAM::|DFloNext|
FOAM::|DFloPrev|
FOAM::|DFloLT|
FOAM::|SFloAssemble|
FOAM::|fiStrHash|
FOAM::|SFloDissemble|
FOAM::|SFloRDivide|
FOAM::|SFloRTimesPlus|
FOAM::|SFloRTimes|
FOAM::|fiGetDebugger|
FOAM::|SFloRMinus|
FOAM::|fiSetDebugger|
FOAM::|SFloRPlus|
FOAM::|SFloTimesPlus|
FOAM::|fiGetDebugVar|
FOAM::|SFloNext|
FOAM::|fiSetDebugVar|
FOAM::|SFloPrev|
FOAM::|atan2|
FOAM::|SFloLT|
FOAM::|atan|
FOAM::|acos|
FOAM::|CharLT|
FOAM::|asin|
FOAM::|BoolNE|
FOAM::|tanh|
FOAM::|BoolEQ|
FOAM::|cosh|
FOAM::|BoolOr|
FOAM::|sinh|
FOAM::|BoolAnd|
FOAM::|tan|
FOAM::|BoolNot|
FOAM::|cos|
FOAM::|sin|
FOAM::|BoolTrue|
FOAM::|exp|
FOAM::|BoolFalse|
FOAM::|log|
FOAM::|pow|
FOAM::|sqrt|
FOAM::|fputs|
FOAM::|fputc|
FOAM::|stderrFile|
FOAM::|stdoutFile|
FOAM::|stdinFile|
FOAM::|SetProgHashCode|
FOAM::|ProgHashCode|
FOAM::|formatDFloat|
FOAM::|formatSFloat|
FOAM::|formatBInt|
FOAM::|formatSInt|
FOAM::|strLength|
FOAM::|MakeLevel|
FOAM::|FoamEnvEnsure|
FOAM::|SetEnvInfo|
FOAM::|EnvInfo|
FOAM::|SInt|
FOAM::TYPED-LET
FOAM::FILE-IMPORTS
FOAM::FILE-EXPORTS
FOAM::DEFSPECIALS
FOAM::BLOCK-RETURN
FOAM::CASES
FOAM::IGNORE-VAR
FOAM::DEFPROG
FOAM::DECLARE-TYPE
FOAM::DECLARE-PROG
FOAM::|FoamFree|
FOAM::|SetEElt|
FOAM::|SetAElt|
FOAM::|SetRElt|
FOAM::|SetLex|
FOAM::|Lex|
FOAM::|AElt|
FOAM::|EElt|
FOAM::|ANew|
FOAM::|SetClosFun|
FOAM::|SetClosEnv|
FOAM::|Halt|
FOAM::|BoolToSInt|
FOAM::|SIntToHInt|
FOAM::|SIntToByte|
FOAM::|ByteToSInt|
FOAM::|fputss|
FOAM::|fgetss|
FOAM::|PtrNE|
FOAM::|PtrMagicEQ|
FOAM::|BIntShiftDn|
FOAM::|BIntShiftUp|
FOAM::|BIntBIPower|
FOAM::|BIntSIPower|
FOAM::|BIntTimesPlus|
FOAM::|BIntNext|
))
@
\eject
\begin{thebibliography}{99}
\bibitem{1} nothing
\end{thebibliography}
\end{document}

------=_NextPart_000_02A6_01C4DD51.78777280--

\start
Date: Wed, 8 Dec 2004 15:30:53 +0100 (CET)
From: Joris van der Hoeven
To: Bill Page
Subject: RE: [Texmacs-dev] \left( and \right) conversions from LaTeX
Cc: Dan Martins


On Wed, 8 Dec 2004, Page, Bill wrote:
> Attached are two files. One is LaTeX generated by Axiom and
> the line-breaker filter interface (TeXmacs communication
> protocol mark-up removed and wrapped in standard LaTeX
> document preamble. It compiles nicely in LaTeX to a pdf file
> (I can it too if you like).
>
> The other is a TeXmacs document containing the imported LaTeX
> (also looks real nice!) and then exactly the same thing as
> an Axiom session with the same interface with line-breaker
> filter, showing the tags displayed instead of actual parenthesis.

When using Axiom from within TeXmacs, you clearly forgot to put
the formula inside a pair of dollars in your interface code.
The current output is in text mode.

By the way, you will have another big disadvange when using your
line-breaking code: it will become impossible to copy and paste
part of the output back into TeXmacs.

I am not convinced either that your way of representing fractions
is really more readable. I would rather opt for the / notation
for large fractions. In that case, the standard TeXmacs line-breaking
code will do the job for you.

\start
Date: Wed, 8 Dec 2004 10:00:59 -0500 
From: Bill Page
To: Joris van der Hoeven
Subject: RE: [Texmacs-dev] \left( and \right) conversions from LaTeX
Cc: Dan Martins

Joris

On Wednesday, December 08, 2004 9:31 AM
> 
> When using Axiom from within TeXmacs, you clearly forgot
> to put the formula inside a pair of dollars in your
> interface code. The current output is in text mode.

No. The interface definitely sends $$ before and after
the formula just as they occur in the .tex file that was
captured to a file and which I later imported.

I agree that TeXmacs appears to be in text mode. But the
$$ .... $$ markers are there, so I do not know why.

Do you have any other suggestions on how to debug this?
Are there any other plug-ins working in native Windows
TeXmacs that do successfully produce math mode output?

Perhaps I will have to revert my development of this new
Axiom interface to Linux first and see if the problem
also exists there.

> 
> By the way, you will have another big disadvange when
> using your line-breaking code: it will become impossible
> to copy and paste part of the output back into TeXmacs.

Is that a limitation of the way in which parts of formula
can be selected in TeXmacs? What causes this limitation?
Is it specific to the \over construction. Will it also
happen if I convert to the \frac{}{} construction?

> 
> I am not convinced either that your way of representing
> fractions is really more readable. I would rather opt for
> the / notation for large fractions. In that case, the
> standard TeXmacs line-breaking code will do the job for
> you.
>

Do you mean simply replacing \over (which Axiom generates
now) wiht just / ? If it is that simple, then perhaps
it would be nice to let the user decide through an option
switch specific during Axiom command input.

Thanks for your continuing help.

\start
Date: 08 Dec 2004 10:16:07 -0500
From: Camm Maguire
To: Bill Page
Subject: Re: system::getenv does not return MSYS environment variables
Cc: Mike Thomas

Greetings!

Bill Page writes:

...

> I also looked at the GCL code for getenv in main.c and I
> noticed a scary section involving a call to free on the
> pointer returned by the system getenv call. I imagine that
> would really mess up Windows memory - but as far as I can
> tell that option is not used during the Windows build.
> Right?
> 

Some thoughts on memory management in this context:

1) The free of the getenv pointer is not ifdef'ed in on any current
   platform.  On some older systems the string was allocated via
   malloc in libc.

2) malloc/free are redirected in gcl to natively supplied heap
   allocation functions.  All pointers are between DBEGIN and
   core_end. 

3) If memory serves, Windows, like macosx, emulates sbrk.  Perhaps
   Mike can fill in the details as to the mechanics whereby the heap
   is expanded here.

4) If one suspects overwriting the environment, it would be useful for
   one to compile a debugging gcl, break at siLgetenv, make a test
   call to (si::getenv...) and look at the address of the pointer
   returned by getenv.  Or in Bill's C program.

5) Bill is doing a terrific job!  As is Mike!

\start
Date: 08 Dec 2004 10:17:59 -0500
From: Camm Maguire
To: Tim Daly
Subject: Re: system::getenv does not return MSYS environ ment variables
Cc: Mike Thomas, Bill Page

Greetings!

Tim Daly writes:

> Bill,
> 
> First, you're doing a great job on the debugging front.
> Somebody has to collect the clues.
> 
> Second, we do need to collect and document all of the system
> dependent code into a new src/interp/lisp file because these
> will come up again at every port effort. In particular we
> should have several sections of the pamphlet file:
> 
> file commands
>   rm vs erase functionality
>   mv vs move 
> 
> path naming issues
>   / vs \
>   / vs c:
> 
> system services
>   getenv
>   sockets
>   X
> 
> lisp system commands
>   system
>   save-system
>   

Just a thought here -- ideally all this messy portability stuff
belongs in lisp.  If there aren't already lisp functions which can be
used for some of these system related services, I'd be happy to add
same, and in a manner that would mimic any other system we might want
to port to in the future.

\start
Date: Wed, 8 Dec 2004 16:42:35 +0100 (CET)
From: Joris van der Hoeven
To: Bill Page
Subject: RE: [Texmacs-dev] \left( and \right) conversions from LaTeX
Cc: Dan Martins


On Wed, 8 Dec 2004, Page, Bill wrote:
> No. The interface definitely sends $$ before and after
> the formula just as they occur in the .tex file that was
> captured to a file and which I later imported.
>
> I agree that TeXmacs appears to be in text mode. But the
> $$ .... $$ markers are there, so I do not know why.

Are you sure? Try the --debug-io option under Linux
in order to check that you really send the right thing.

> > By the way, you will have another big disadvange when
> > using your line-breaking code: it will become impossible
> > to copy and paste part of the output back into TeXmacs.
>
> Is that a limitation of the way in which parts of formula
> can be selected in TeXmacs? What causes this limitation?
> Is it specific to the \over construction. Will it also
> happen if I convert to the \frac{}{} construction?

No, it is due to the fact that you output long formulas as a matrix.

> > I am not convinced either that your way of representing
> > fractions is really more readable. I would rather opt for
> > the / notation for large fractions. In that case, the
> > standard TeXmacs line-breaking code will do the job for
> > you.
> >
>
> Do you mean simply replacing \over (which Axiom generates
> now) wiht just / ?

Yes, in case of a "long" numerator or denominator.

> If it is that simple, then perhaps it would be nice to let the user
> decide through an option switch specific during Axiom command input.

Whatever you want; you may hack the scheme code in order to
provide such an option.

\start
Date: Wed, 8 Dec 2004 17:32:09 +0100 (CET)
From: Joris van der Hoeven
To: Bill Page
Subject: RE: [Texmacs-dev] \left( and \right) conversions from LaTeX
Cc: Dan Martins


> As you can see, the $$ markers are present but
> TeXmacs still displays the output in text mode.

Hmm.

> Do you agree that this is a bug - at least in the Windows
> version?

It seems so. Please check whether you get the same bug under Linux.

\start
Date: Wed, 8 Dec 2004 11:48:50 -0500 
From: Bill Page
To: Dan Martins
Subject: RE: Axiom Windows Installer Build
Cc: Mike Thomas

Dan,

Can the Windows installer for Axiom also install an icon on
the desktop? If so, here is an icon that I designed based on
the cover of the original Axiom book.

------_=_NextPart_000_01C4DD45.CB1B9180
	name="axiom.ico"
	filename="axiom.ico"

AAABAAEAQEAAAAAAAAAoFgAAFgAAACgAAABAAAAAgAAAAAEACAAAAAAAABIAAAAAAAAAAAAAAAAA
AAAAAAAAAAAA////AP8uUAAjxuMA+5enAJfJ3AD+ytMA/mR8AMSxwgD+BS4AZsvhANTL2AD+SWYA
+eXoAPuxvQD+fZIAR8rjAP4ZPwDjrbsArNHfAO29yQDLvs4A+fPzAP+jswD9VnIA+tjcAP47WwD8
ipwA/HGIAP++yQDUqroAVMniAM+wwAA+yOIA+rnDAP4MNAD/J0oA9szWAPXAywD7nq0A/0JgAPrs
7gD9UGsA+t7jAP1ddwD9aoMArMraAP+quAD/NVUA/4OYAPn5+QD8kKIA+sbOAPx4jQD70dcA/+Hm
AP7o6wD/8/UAKcbjAP+3wwD7p7UA+sDJAP+ZqgD/+/wA/8LMAP+7xQD7tcAA+666AP9SbwD8Pl4A
/0VkAPr19wD+WnQA/2B6APna4AD6zdQA+7zHAP+VpgD/n68A/ytMAP83WQD9aH8A/jFTAPnv8QD5
6esA+uLlAPrU2gD+ztYA/W6FAP10iwD8hpkA/Y2fAPuTpQD+TGkA+srRAP7H0AD/gJUA/7PAAPuk
sgD7m6oAUszkAP/l6QD7w8wA/IKWAPyhsAD8gJMA/626AP+ntgD+eo8A/z9dAPzm6QD8ZX8A/4+i
AP9vhwD8e5EA/Ku4AP4HMAD+Fz0A/TlZAP2wvQD+KEwA/vX2AP7j6AD9U24A+tzhAP1hegD7yNEA
/cHLAPy6xAD6r7wA/htAAP40VQD+N1gA/0RiAPzp6wD+XXgA/mZ/AP7GzwD8bIMA/bO/AP9/kwD8
r7sA/6a0APuRpAD7makA/GV9AP+rugD+Kk0A/i5PAP8yUgD59vYA/vL0APry9AD+Pl4A+evtAP5G
YwD66OoA+uTpAPnh5gD+T2wA+d7iAP5UbwD6298A/ldxAP1ZdQD7ydIA/mmCAPrCywD7v8oA/XKJ
APxzigD7uMQA/XmOAP18kAD9f5QA/YOXAPyotgD9iZsA/KWzAPyMngD8nawA/JSkAPyWqAD//v4A
/zRWAP41VgD/NlYA/zhYAP44WQD/O1oA+u/wAPru8QD/PFsA+e7wAP5DYQD86OoA/kNgAP/g5QD/
U24A+tfdAPrT2QD60dgA+9DYAPrQ1wD+XncA/s3VAPvN1QD9YHoA/mF6AP7I0QD9ZH0A/MfQAPrH
zwD7x84A/meAAPvGzwD9a4IA/muDAP5thQD6vMYA/brFAP11igD8dYsA+7bBAPy1wQD6tcEA+7K+
APyxvgD+gJQA+6+6APuuuwD/gZYA/qu5APusuAD7q7kA/4SZAP+ptwD9hZkA/qSzAP6jsgD/jqEA
+6GvAPygrwD7kqMA/JqqAP4LNABUyuIA/hk+AP8qTAD+KkwA/ypNAP8rTQD+K00A/y1PAP8tUAD+
LVAAMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIy
MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIy
MjIyMjIyMjIyMjIyMjIyMjKWlpaWlpaWR5aWlkeWlpaWlpaWlkeWlkeWlpaWlpaWlpaWlpaWlpaW
lpaWR5aWlpaWlpaWlpaWlkeWlpaWlpaWFpiYFhYWFpiYFhaYFhYWmBaYmBaYFpgWFhYWmJgWmJgW
FhYWFhYWmJgWFpgWFpiYmBaYFpiYFhaYmJiYFhYWmFNTU1NTU1NTU1NTwVNTU1NTU8FTU1O/U75T
U1NTU1NTU1NTU1O+U1NTU1PBwVNTvlNTU1NTU1NTv1NTvlO+U1OaKSmaKZopKZopKZopKSkpKZqa
mimaKZopmpqamimaKSkpmpqampopKZqamimaKSmamimampqamimampqampqanJxUVJxUnJxUVJxU
VJxUVJycnFRUnJycVFScnJycnFRUnJycVJxUVFRUVJycnFRUnJycnJycVJycVFRUVJycVA0NDQ0N
nQ2dDZ0NDQ0NDQ18QxxFgiN0dCMRdi3oOD+3tz85Nwbc050NDQ0NDZ0NDZ0NnQ2dDQ2dDZ0NnZ2d
DQ1VnlWeVZ6enlVVnp5VfG8JCQkJCQkJCQkJCQkJCQkJ2nkBAQEBAQEBV35VVVVVnlWeVVVVVZ5V
nlVVnlVVVZ6eoCsrKysrKysrKysrqgkJCQkJCYxltwEBAQEBt2WMCQkJDwEBAQEBAQEB0aArKysr
KysrKysroCugKysrKyugK6KiokqiokqioqKi3gkJCQkJ7wEBAQFqeAkJeGoBAQHvCQlgAQEBAQEB
AQGJokpKSqJKoqJKoqJKSqKiSqJKSkrHGccZx8cZx8cZGQkJCQkJCQEBAQEBCQkJCQkJAQEBAQkJ
CQEBAQEBAQEBARkZxxkZx8fHx8fHGRnHGRnHGcfHVlZWVlZWVlZWVlYcCQkJCQnvAQEBAWp4CQl4
agEBAe8JCYwBAQEBAQEBAYlWVlbIVlZWVlbIVlZWVlZWVlZWVsvLy8nLy8vLyzY2y4oJCQkJCQmM
ZbcBAQEBAbdljAkJCWwBAQEBAQEBAV/Ky8vLyzbLyzY2yjY2yTY2ycs2yzZLS0tLS0tLS0tLS0tL
fiwJCQkJCQkJCQkJCQkJCQkJppcBAQEBAQEBzYBLS0tLS0tLzktLS0tLS0tLS0tLS0tLXqVepaWl
paVeXqWlpV5eXqeQkYT39XR09XWD0u56P7e3PznF0YvgpV6lXl5epV5epV6lXl5eXqVeXl5epaVe
XjQ0NNQ0NDQ0NDQ0NNc0NDQ01DQ01zTVNDTVNDQ0NDTXNDQ0NDQ0NNc0NDQ01zTXNDQ0NDQ0NNfX
1zQ0NNc01zRmZmanZqdmZmZmZmanZmZmZqdmZmZmZqdmZmZmZmZmZmZmZmZmp2Zmp2ZmZmZmZmZm
ZqdmZmZmZmZmZmZmZmZmPT2oPT2oPag9qD09qKg9qKg9qD09PT09PT2od0QkRHeoqD09qD2oqD2o
PT09qD09qKg9PT09Pag9PT2oPag9PUxMTNtMTNtMTExMTExMTExMTExMTNtMTExMQrowMDAwQkxM
TEzbTExMTExM20xMTExMTExMTExMTNvbTExMTEyrq6urqyIiq6urqyIiqyIiq6urIiKrqyKrIoiF
hYWFhYirqyIiIiKrIqurq6urq6urIiKrIiKrq6siq6urIiIi30JCQkJCQkJCQt9CQkJCQkJCQkJC
QuFCQoFERERExkTGgUJCQkJCQkLfQkJCQuFC30LhQkJCQkJCQt/fQkJCQuIO4uLi4uIO4g7i4uLi
DuIO4uIODuIO4uLzSUlJSUlJSY/iDuIODuIO4uLi4uIO4g4ODg7i4uLi4g7i4uPiDg7l5o3m5ubm
jebmjY2NjY2NjY3m5uaN5o3mYHFxcXFxcXHk5eaN5o2N5ubm5uaNQ+ZD5ubmjY3mjebm5uaNjY2N
6ulzc3Nzc3Nzc+lzc3Nzc3Pq6nNzc3Nzc2CMYDHrMeeMYHNzc+pzc3Nzc3Nzc3Nzc3Nzc3Nzc3Nz
c3Nzc3Pqc7A8PDywPLA8sDw8PDywPLCwsLA8PDw8PLDwTU5rkuwXPnA8sDywsLA8PDw8sDw8PDw8
sLCwPLCwsLA8sDywsDyysrKysrKysmJismJiYmJiYmKysmKysmJijmE7Ozs7OzsvsmJiYmJiYmKy
YrJiYmJisrJiYrKyYrJismKysrJiaGjxaGhoaGjyaGho8WjxaGhoaGjx8WjxaEFAQEBAQEBAHWho
8WjxaGho8WhoaPFoaPFo8WhoaGjxaGhoaGho8ScnJ7QnJycntCcnJycnJye0J7QntLQntCcmCy4F
BS4LJX8ntLS0tCcnJ7QntCe0JycnJye0tLQnJycnJ7QnJ7T0Y/Rj9GNj9PRj9PT0Y2P09GP09GNj
9PRjFQohOjohChMUY2Nj9GP0Y2P09GNjY/T09GP0Y/T09PRjY/T0Y2P0BAS2BAS2BAS2tgS2BLYE
tgQEtgS2BAS2BCADAwMDAwMQEgQEBAQEBAS2trYEBLYEBAQEBAS2BLYEtrYEtrYEBFxctbW1tbW1
tbW1tbW1tbVcXLVctbVctbW1HwMDAwMD9rW1tbVctbW1tbW1tbW1XFy1tbVctbVctbW1tbW1tbUz
MzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMx4DAwMDAx4zMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMz
MzMzMzMzs1tbs7Ozs1tbW1tbs7Nbs7OzW7Ozs7Ozs1tbCGQDZAhbs1tbs1uzs1tbs1uzW7NbW7Nb
W7NbW1tbs7NbW7NbWxsbGxsbsRsbGxsbG7EbGxuxGxuxGxsbsbEbGxuxGxsbG7GxsbEbGxuxGxsb
GxsbsbEbGxuxGxsbGxsbG7EbsRtaWlpaWlpaWlpaWlpaWlpaWlpaWu1aWlpaWlpaWlpaWlpaWlpa
WlpaWu1aWlpaWlpaWlpaWlpaWlpaWlpaWlpaZ6+vZ2dnZ2dnZ2dnZ69nr2dnZ6+vZ2dnZ69nZ2dn
Z2evZ2dnr2dnZ69nZ2dnZ69nZ69nZ2dnr69nZ2dnr2dnZ2muaWlpaWmuaWmurmlpaa6urq6urq6u
rmmurmkBrq5prq6uaa6urmlpaa6urq5prmlprq6urq5paa5prmmurq6tcq1yra1yrXKtra2tcnJy
ra2tcq1ycq2trQEBAQGtcq2tcq2tra1yra2tcq2tra2tcq1yrXJyrXKtra2trXKtNaysNaw1Naw1
Naw1rDWsrDWsrDU1rKysrDUBAQEBAaysrDWsrDWsrKw1NTWsrKysNaysrKw1rDWsNaw1rKysNVlZ
3t5ZWVlZ3llZWVne3llZWd7e3llZWVlZWVkB3llZ3lneWd5ZWVlZ3llZ3lneWd5ZWd1ZWd1ZWVlZ
Wd5ZWVkcqakcHKmpHAGpHKmpHBwcqampqakcqakcHBypHBypHBwcAQEcHBwcHKkcqampHKmpHBwc
HBypHBwcqYYcHKkcWFhYWFgBAQEBAVhYAQEBAQEBAVhYAQEBAQEBAQEBAQEBAQEBAQFYWFgBAQEB
AQFYAQEBAQEBWAEBAQEBWFhYWC0tLdgBAQEBAQEBAQEBAQEBAdkt2NgBAQEBLQEBAdgBAQEBAQEB
AQHYLQEBAS3Y2C0BAQEtLdgBAQEB2C0tLS1RUVHWAQEBAVFRAQEBAdbWAQFR1lEBAQEBUdYBAQEB
AQEB1tbWUQEBAdYBAQHWUdbWAQEB1tZRAQEB1lFR1lFR0gfS0gEBAcPS0gcBAQHS0tIBAdIBAQEB
0tIHAQEBAQEBAdIH0tLSAQHSAQEB0gfS0gEBAdLSBwEBAdIH0gcHB33PfX19AQEBfX3PAQEBSX3P
0AEBAQEBfX3QfQEBAQEBAUl90H3QSQEBAQEBAc9Jz88BAQF9fX0BAQHQz8990EnMh4eHLAEBAQHM
hwEBAYeHLMwBAQEBh4fMhywBAQEBAQEsh8wsh4cBAQEBAQGHh4csAQEBzIeHAQEBLMyHLIeHpEhI
SEhIwwEBAQEBAQFISKRIAQEBAUhISKRIAQEBAQEBSEhISEikAQEBAQEBSEhIpAEBAaRISAEBAQFI
SKSkSBgYo6MYGBijo6OjAQEBo6MYAQEBAQEYoxgYGAEBAQEBAaMYGKOjowEBAQEBAaMYGBgBAQGj
GKMBAQEBoxgYo6Ohe6GhoQGhoaGhewEBAXuhAQEBAXsBAaGhoXsBAQGhAQF7e6GhoQEBAQEBAQGh
oaGhAQEBoXt7AQEBAXt7oXt7n5+fnyoBAZ+fn58BAQGfnwEBAZ+fAQEBn5+fAQEBnwEBASqfKgEB
AQGfAQEBAZ+fAQEBAQGfnwEBAQEqn5+fn11dXV1dAQEBAV0BAQEBXQEBAQFdXV0BAQEBAQEBAV1d
AQEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQFdXV1dXV0MDAwMDG4BAQEBAQEBAQEBAQEBbgwBAQEB
AQEBAQEMDAwMAQEBAQEBDAEBAQEMAQEBAQEMDAEBAQEBDAEBDAwMm5ubRpubm5ubRpubRkabRkab
RpubRpubm0abm5ubm0abm5ubm5ubm5tGm5ubRkabm5ubm5ubm5ubmwEBAUabmygoKCjCwsQowijC
KCjCKCgowsLCwigowsLCwgEBwijCxMLCwigoKMIoKMIowijCKMIowigowsLCKCjCwijCKMJtbW1t
mZmZmZltbZmZmZltmW2ZbZltmZmZmQEBAQEBbZmZmZmZbZltbW1tmZmZmZmZmZltmW2ZmZltmZmZ
mZmZGhoaGhoaGhoaGhoawBoaGhoaGsAaGhrAGr0BAQEBGhoaGhoawBq9GhoavRoaGsAawBoaGhoa
GhoaGhoaGr0aGru7u7u7u7u7u7uEULu7vFC7u7u8u1C7u7u7u7sBu7u7u7u7u7u7u1C7u7tQvLu7
u1C7u4S7u7tQu7u7u4S7u7swMDCDMDAwuDAwMDCDMDC4uTAwuDCDMDAwuDAwMDAwMLi4MLgwMDC5
MDC5MDAwMIMwg7kwMDAwMDC4MDAwMDAwUlJSlVKVlVKVUpWVlVKVUpWVlZWVlVKVlZVSUlKVUlJS
lZVSlVJSlZWVUlKVUlJSUpVSUlJSlZWVlZVSUpVSlQICAgKUAgICAgL9AgICAgIClAICAgKUAgL+
/gIClP0CAgICAv7+lP7+/gL+AgKUAgICApT//gICAgICAgICAv77/Pr7T/r6+0/6+/r6+vr6+/r6
+vr6+k/6+vr4k/r7+vr6+/iT+vr7/Pj6+vz7+Pr6+vv6+k/6+vj5k/r7+vv6JCQkJCQkJCQkJCQk
JCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJCQkJAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA

------_=_NextPart_000_01C4DD45.CB1B9180--

\start
Date: Wed, 8 Dec 2004 18:41:42 +0100 (CET)
From: Joris van der Hoeven
To: Bill Page
Subject: RE: [Texmacs-dev] \left( and \right) conversions from LaTeX
Cc: Dan Martins

On Wed, 8 Dec 2004, Page, Bill wrote:
> For the record, I get exactly the same results (text mode)
> for the same test done with Cygwin version TeXmac 1.0.4.4,
> using the same interface as with native Windows WinTeXmacs.
> Is there a newer version for Cygwin?
>
> The output from --debug-io looks identical to that output
> from WinTeXmacs.

Hmm, strange. If I copy and paste one of the outputs with dollars
to TeXmacs (as LaTeX), then I obtain a correct result...

> The new tm_axiom plug-in seems to work fine (except for
> text mode output) but the old tm_axiom interface that was
> installed with Cygwin from the Cygwin setup.exe program
> aborted then I tried to start and Axiom session. Have there
> been any other reports of failures of the Axiom interface
> under Cygwin?

Not that I know of.

> I wont be able to test the new interface program under
> linux until I get time to figure out how to do that
> particular kind of threaded execution under Linux.

It would be good to have a version under Linux, so that I can test.

\start
Date: Wed, 8 Dec 2004 12:27:51 -0500 
From: Bill Page
To: Joris van der Hoeven
Subject: RE: [Texmacs-dev] \left( and \right) conversions from LaTeX
Cc: Dan Martins

Joris,

For the record, I get exactly the same results (text mode)
for the same test done with Cygwin version TeXmac 1.0.4.4,
using the same interface as with native Windows WinTeXmacs.
Is there a newer version for Cygwin?

The output from --debug-io looks identical to that output
from WinTeXmacs.

The new tm_axiom plug-in seems to work fine (except for
text mode output) but the old tm_axiom interface that was
installed with Cygwin from the Cygwin setup.exe program
aborted then I tried to start and Axiom session. Have there
been any other reports of failures of the Axiom interface
under Cygwin?

I wont be able to test the new interface program under
linux until I get time to figure out how to do that
particular kind of threaded execution under Linux.

Anyone know how?

> -----Original Message-----
> 
> > As you can see, the $$ markers are present but
> > TeXmacs still displays the output in text mode.
> 
> Hmm.
> 
> > Do you agree that this is a bug - at least in the Windows
> > version?
> 
> It seems so. Please check whether you get the same bug under Linux.

\start
Date: Wed, 8 Dec 2004 11:00:16 -0500 
From: Bill Page
To: Joris van der Hoeven
Subject: RE: [Texmacs-dev] \left( and \right) conversions from LaTeX
Cc: Dan Martins

Joris,

On Wednesday, December 08, 2004 10:43 AM you wrote:
> >
> > I agree that TeXmacs appears to be in text mode. But the
> > $$ .... $$ markers are there, so I do not know why.
> 
> Are you sure? Try the --debug-io option under Linux
> in order to check that you really send the right thing.
> 

I modified the WinTeXmacs shortcut to include the following
two options:

"C:\Program Files\WinTeXmacs\TeXmacs\bin\tmwin.exe"
   --X-show-console --debug-io

Dan Martin previously explained to me that I can use this
method for debugging under Windows. Attached below is the
complete console output for a simple Axiom session in
WinTeXmax. As you can see, the $$ markers are present but
TeXmacs still displays the output in text mode.

Do you agree that this is a bug - at least in the Windows
version?

Since it is easy and it can use the same tm_axiom interface
I think I will see what happens with the Cygwin version
of TeXmacs.

--------------- console output ---------------

'maxima_detect' is not recognized as an internal or external command,
operable program or batch file.
TeXmacs] With linked TrueType support
TeXmacs] Launching 'tm_axiom'
[BEGIN]verbatim:[BEGIN]channel:prompt[END][BEGIN]latex:\red$\rightarrow$\
[END][
END]
----------------------------------------------------------------------------
--
[INPUT]x
[BEGIN]verbatim:
[BEGIN]latex:
$$
\displaystyle
x\leqno(1)
$$
[END][BEGIN]latex:\axiomtype{Variable
x}[END][BEGIN]channel:prompt[END][BEGIN]la
tex:\red$\rightarrow$\ [END][END]
----------------------------------------------------------------------------
--
[INPUT](1/x+y+z)^5
[BEGIN]verbatim:
[BEGIN]latex:
$$
\displaystyle

{\left(
\begin{array}{@{}l}
\displaystyle
{{x^5}\,{z^5}}+{{\left({5 \,{x^5}\, y}+{5 \,{x^4}}\right)}\,{z^4}}+
\\
\\
\displaystyle
{{\left({{10}\,{x^5}\,{y^2}}+{{20}\,{x^4}\,
y}+{{10}\,{x^3}}\right)}\,{z^3}}+
\\
\\
\displaystyle
{{\left({{10}\,{x^5}\,{y^3}}+{{30}\,{x^4}\,{y^2}}+{{30}\,{x^3}\,
y}+{{10}\,{x^2}
}\right)}\,{z^2}}+
\\
\\
\displaystyle
{{\left({5
\,{x^5}\,{y^4}}+{{20}\,{x^4}\,{y^3}}+{{30}\,{x^3}\,{y^2}}+{{20}\,{x^2
}\, y}+{5 \, x}\right)}\, z}+{{x^5}\,{y^5}}+
\\
\\
\displaystyle
{5 \,{x^4}\,{y^4}}+{{10}\,{x^3}\,{y^3}}+{{10}\,{x^2}\,{y^2}}+{5 \, x \, y}+
1
\end{array}
\right)}\over{x^5}\leqno(2)
$$
[END][BEGIN]latex:\axiomtype{Fraction Polynomial
Integer}[END][BEGIN]channel:pro
mpt[END][BEGIN]latex:\red$\rightarrow$\ [END][END]
-------------------------------------------------------------------------

\start
Date: Wed, 8 Dec 2004 19:19:00 +0100 (CET)
From: Andreas Seidl
To: Bill Page
Subject: RE: [Texmacs-dev] \left( and \right) conversions from LaTeX

On Wed, 8 Dec 2004, Page, Bill wrote:

> For the record, I get exactly the same results (text mode)
> for the same test done with Cygwin version TeXmac 1.0.4.4,
> using the same interface as with native Windows WinTeXmacs.
> Is there a newer version for Cygwin?

Version 1.0.4.5 is available from

   http://alice.fmi.uni-passau.de/~seidl/cygwin

via setup.exe since 6 Dec.

\start
Date: Wed, 8 Dec 2004 20:53:54 +0100 (CET)
From: Waldek Hebisch
To: list
Subject: Re: axiom on AMD64

Camm Maguire wrote:

> Greetings!
> 
> Just a note here that axiom is (apparently) fully functional on Debian
> amd64.  You should be able to find the build logs at
> debian-amd64.alioth.debian.org if this helps.

Thanks for the info. Debian build is labeled `axiom_0.20040831'
so it looks old. September version on `r21bugsbig' prints:


Daly Bug
   >> Error detected within library code:
   (1 . failed) cannot be coerced to mode (SparseUnivariatePolynomial (Integer))
protected-symbol-warn called with (NIL)

Current build (well from December 5) goes further, but then runs
for long time (I waited 7 hours) without any visible progress.

\start
Date: Wed, 8 Dec 2004 15:43:37 -0500
From: Stephen Wilson
To: Tim Daly
Subject: re: Test summary
Cc: Mike Thomas, Bill Page

On Wed, Dec 08, 2004 at 12:00:10AM -0500, root wrote: 

> (The "Daly Bug" message was so named because I needed a unique
> string and since I was the only one who would ever see the test
> results I used my name.  Apparently once IBM sold it NAG never
> changed it).

I enjoy hearing about these historical anecdotes. Like most large,
long-lived pieces of software, there is an interesting `culture'
associated with it. I remember Stephen Watt mentioning that when he
reads the Axiom source, he can see the changes in programming
methodology/practice which were common at the time the code was
written.


> If you look at the src/input/bugs.input.pamphlet file you'll see
> that I used to keep track of reported bugs, with failing examples,
> as well as fixes. These were kept around to ensure that they continued
> to work and that reported bug test cases were not lost.

Thank you for bringing this file to my attention. I had yet to read
it. There are a good number of examples which I can now keep in mind
as I continue my trek trough the compiler/interpreter code.


> So, the answer to your question is that, yes, we can do that and it
> should happen in the near future but in a more generally useful way.
> I will add both failure lists (unix and windows) to the README file
> on savannah at the next push.

I recall the regression tests, and their future reintegration, being
brought up in past postings. At least having the `Daly bug' list in a
canonical place until that time will give us some sort of baseline.

> In the long term I want axiom to run all the standardized tests in
> CATS. The CATS branch was on the previous arch server but I have yet
> to recreate that branch here. If there is any interest in developing
> better testing I'll do it now.
> 
> The challenge, of course, is to write the mathematics behind the
> tests into pamphlet files so the tests are properly documented
> and can be used with some confidence that the answer is correct.


Again, I recall earlier postings on this issue, and a comparison with
the NIST baseline for numerical code. I also recall mention of a grant
proposal w.r.t CATS. I would be dismayed if such a proposal could not
find sponsorship, considering its general usefulness and `essential'
nature.

I wish I had the mathematical sophistication to contribute to such an
effort. The only domain I have even modest experience in is with
respect to generic polynomial factorization, gcds, etc. However,
others have much more insight into `choosing the right polynomials'
which trigger exponential (say) branches in algorithms, or defeat some
common heuristic techniques. However, I do have some Aldor code which
implements functionality, and some recent algorithms, not present in
Axiom. When I get the chance to port it over perhaps I could
contribute to CATS in this area.


\start
Date: Wed, 8 Dec 2004 19:34:43 -0500
From: Stephen Wilson
To: Mike Thomas
Subject: Re: Database fixes.
Cc: Bill Page

Hello,

I was reading your code and am confused over an edit in `addtopath'
in cfuns-c.c.pamphlet:

====================================================================

    newpath = (char *) malloc(1 + strlen(path) + strlen(dir) +
    strlen("PATH=:"));
      if (newpath == NULL)   
          return -1;

#ifndef MSYSplatform
    sprintf(newpath, "PATH=%s;%s", path, dir);
#else /* MSYSplatform */ 
#endif /* MSYSplatform */

    return putenv(newpath);
}
====================================================================

I have never programed on windows. Is malloc guaranteed to return
initialized data (i.e., zeroed) on windows? I would be concernced in
passing a fresh pointer from malloc to putenv.

\start
Date: Fri, 10 Dec 2004 14:48:51 +1000
From: Mike Thomas
To: Bill Page, Stephen Wilson, Camm Maguire
Subject: Various Windows related items

Hi all.

A series of brief notes to square a few loose ends away before the weekend:


1. Bill's getenv bug report:

Bill, I'm sorry about the unintentionally patronising tone of my email the
other day; I was in a hurry and trying to eliminate possibilities without
due regard for what I was writing - I am, of course, pleased to be working
with you on knocking Windows GCL into a state where it reliably builds
Axiom!


2. Stephen's potential fix to Bill's problem:

Stephen, thanks for pointing out that rather nasty bug in
cfuns-c.c.pamphlet - hopefully the answer to the problem Bill is seeing.
The relevant passage should read (warning untested code):

#ifdef MSYSplatform
    sprintf(newpath, "PATH=%s;%s", path, dir);
#else /* MSYSplatform */
    sprintf(newpath, "PATH=%s:%s", path, dir);
#endif /* MSYSplatform */

Bill, could you please try this out and see if it helps?  I've changed the
ndef to a def and the Windows branch uses a semi-colon.


3. Database rebuild:

On Wednesday I had not done a clean and rebuild with the mods I reported in
place - I have now done so and the daase files were constructed and
installed correctly.


4. Bill's observation re the Windows section in the Makefile:

Bill, this is probably the result of my being slightly out of sync with the
Arch archive.  If there is a merge required please feel free because, as you
know, I have been unable to convince tla to help me out on this project.


5.  The coming weekend.

I will again be out of touch for at least 24 hours starting this evening.
We are, however, approaching a satisfactory ending to this series of
problems which will be worth all the trouble in the long run.

\start
Date: Fri, 10 Dec 2004 15:00:14 +1000
From: Mike Thomas
To: Camm Maguire, Tim Daly
Subject: RE: system::getenv does not return MSYS environment variables
Cc: Bill Page

Hi Camm.

| Just a thought here -- ideally all this messy portability stuff
| belongs in lisp.  If there aren't already lisp functions which can be
| used for some of these system related services, I'd be happy to add
| same, and in a manner that would mimic any other system we might want
| to port to in the future.

Sounds good to me.  May I suggest that we could add extra Axiom lib object
files (if we continue to need them after the various additions we are
contemplating - socket I/O included) through a configure argument.  I
imagine it would also be relatively easy to close off the warnings from the
compiler with a new option variable in the GCL compiler package - thus
eliminating several of the patches currently applied by the Axiom build.

With these changes and those bug fixes already applied as patches we should
be failry close to what would be required for a proposed GCL 2.6.6 release.

I've lost track of which GCL CVS branch I should check in the Windows
alterations, by the way?

\start
Date: Fri, 10 Dec 2004 11:28:50 -0500
From: Tim Daly
To: Mike Thomas
Subject: Re: system::getenv does not return MSYS environment variables
Cc: Camm Maguire, Bill Page

Mike, Camm,

>| Just a thought here -- ideally all this messy portability stuff
>| belongs in lisp.  If there aren't already lisp functions which can be
>| used for some of these system related services, I'd be happy to add
>| same, and in a manner that would mimic any other system we might want
>| to port to in the future.
>
>Sounds good to me.  May I suggest that we could add extra Axiom lib object
>files (if we continue to need them after the various additions we are
>contemplating - socket I/O included) through a configure argument.  I
>imagine it would also be relatively easy to close off the warnings from the
>compiler with a new option variable in the GCL compiler package - thus
>eliminating several of the patches currently applied by the Axiom build.
>

There is a branch effort for common lisp portability issues on called
axiom--sbcl--1 (the volunteers want axiom on sbcl). The idea is instead 
of modifying each lisp for axiom we figure out how to do the C lib 
routine (such as sockets) from the lisp level in each lisp. Then we
could #+ and #- the code. sbcl apparently has both sockets and CLX
for the X functions. It's likely that GCL does also but I just haven't
had the time to look at the API that the axiom C lib needs.

\start
Date: Fri, 10 Dec 2004 15:37:45 -0500
From: Bill Page
To: Mike Thomas
Subject: RE: Various Windows related items
Cc: Camm Maguire

Mike,

On Thursday, December 09, 2004 11:49 PM you wrote:

> 
> 1. Bill's getenv bug report:
> 
> Bill, I'm sorry about the unintentionally patronising tone of 
> my email the other day; I was in a hurry and trying to eliminate 
> possibilities without due regard for what I was writing - I am,
> of course, pleased to be working with you on knocking Windows
> GCL into a state where it reliably builds Axiom!

Not at all. I did not interpret your email that way. I think
we are making great progress.

> 
> 2. Stephen's potential fix to Bill's problem:
> 
> Stephen, thanks for pointing out that rather nasty bug in
> cfuns-c.c.pamphlet - hopefully the answer to the problem Bill 
> is seeing.

I am very optimistic.

> 
> 3. Database rebuild:
> 
> On Wednesday I had not done a clean and rebuild with the mods 
> I reported in place - I have now done so and the daase files
> were constructed and installed correctly.

Wonderful. I would like to get a full update of the build.
It tried piecing it together from the files that you sent
earlier, but I seem to be missing something. Perhaps you
could do a repeat of the original upload to axiom-developer.org
and Tim could re-build the axiom--windows--1 branch. If you
do this, let me know and I will grab the tarball directly
from axiom-developer.

I suggest that before doing the next upload of that kind, that
you first prune all of the unnecessary cruft from the zips
directory. Only the gcl-2.6.5.tgz and gcl-2.6.5 patch files
are relevant to the windows build.

BTW, when you access axiom-developer from windows do you use
putty and psftp?

http://www.chiark.greenend.org.uk/~sgtatham/putty/

I have found these programs to be especially reliable - much
better than just the ports of ssh and sftp and scp that I have
also used under cygwin and MSYS. In particular psftp has the
ability to re-start a download or upload (reget, reput) and that
has saved me a lot of time - especially upload where I still have
to live by the limitations of slow modem connections.

\start
Date: Sat, 11 Dec 2004 14:59:55 +0100
From: Martin Rubey
To: list
Subject: Release?

Dear Tim and all axiom-developers,

since there is such great progress on the MS Windows side -- as far as I
understand there is a working binary distribution, wouldn't it make sense to
announce a 1.0 release of axiom, just before Christmas?

I would ask you to apply the patches provided on savannah, those that I
submitted I am very confident of and they are somewhat tested, since I used the
concerned operations quite a bit. Some of them fix serious mathematical
problems, so I'd be concerned to release without them being applied.

If you and everybody else agrees, I'd favor a release in order to do a little
advertising -- also with respect to the bounties. 

Just before Christmas would be great, since I suspect that quite a lot of
people who have holidays might find a little time to try it out.

I listed some communities that I would inform on the MathAction Todolist. Of
course, this list is a result of "brainstorming", so it is not to be taken too
seriously. However, I would include the following points in an announcement:

* Axiom 1.0 is out. It is available for many major plattforms, including Linux
  and MS Windows. See
  http://page.axiom-developer.org/zope/mathaction/AxiomDownload

* It is very mature blablabla, work is in progress to implement features which
  are still missing. See
  http://page.axiom-developer.org/zope/mathaction/WishList. 

* Bounties are offered to implement important new features.

(I argue for pamphlet support on MathAction -- this might attract some LaTeX
 gurus -- numerical integration and Aldor support. If there is agreement, maybe
 somebody could help with the pricing and the precise formulation)

\start
Date: Sat, 11 Dec 2004 13:57:54 -0500
From: Tim Daly
To: Martin Rubey
Subject: Re: Release?

Martin,

I haven't tried the new axiom exe files yet (I have to secure access
to a windows box and I just found out about it at midnight last night).
Assuming it works (and even if it fails we fix it) there is no possible
objection to announcing it. It appears that the .exe file does not do
a system build so it doesn't require any development tools.

It is clear there is a widespread interest in the windows version just
from the number of downloads so far. So it is a good idea to try and
meet this demand as soon as possible. 

I'm not sure what "announcing" it really means. Clearly I've made no
effort to build up a "marketing and sales" channel for axiom so there
is no obvious place to "announce". You're welcome to take the lead in
this (aka "director of marketing" :-) ) and figure out a way to market
axiom. I'll provide what help I can but I'm a complete novice at this.

Perhaps the easiest way would be to put up wiki pages. I'm willing to
be the test case for these pages as I'm going to play with the .exe
file shortly.

IBM, RedHat, and Red Flag Linux (China) have all announced "ISV
certification programs" that are intended to certify that programs
work on their respective platforms. Perhaps an effort to contact
these people would get us much more exposure much faster as well as
resources to build, test, and support axiom. The Red Flag Linux 
program includes "propaganda" as part of the package.

Merging the code base into the main branch is significantly more work.
Several questions come to mind...

Will the axiom--windows--1 branch build cleanly on windows?

  by this I mean that I can download the tla file to a freshly
  installed windows box and build it.

  what is the procedure? it should work by typing 'make'

  is there a tla for windows?

  what software must the user install on the box? 
  clearly some form of gcc and latex plus awk, grep, rm, etc.
  
  what is MSYS and where can I get it? should we package it in zips?

  what does Windows use to read dvi files? should we cross-compile
  and package advi (which is already in zips?) or should the windows
  build automatically create pdf files?

  is the version of gcl on the axiom--windows--1 branch the one that
  should be used with windows? does it also build with linux?

  is there a <<Makefile-windows>> stanza in the top level Makefile.pamphlet?

  I haven't been involved in any of this so I'm unclear about what
  exact steps are required.

  I don't yet have the ability to support questions about this branch
  as I don't yet have access to a windows machine.

  there appears to have been an issue about file names and path names
  have these issues been resolved?

beyond the algebra portion comes the question of sockets

  will it compile cleanly under the windows MSYS environment?
  does the axiom socket code work on windows?
  does sman compile?

and the question of X compatibility

  does the graphics code compile?
  does it run?

on linux the graphics exists, sman exists, and hypertex is nearing
completion (it segfaults but I'll find it eventually). have we looked
at getting these branches to compile?

I did spend two hours in the bookstore yesterday reading thru a book
on windows sockets. They look very similar but I'm certain there are
compiling issues. gcc won't know about windows sockets.

I'll diff the two branches (main and windows) and merge as much as
I can test. And if you'll set up an instructions page on Page's site
or send me instructions I'll set up a test environment on the windows
box.

I'm rather reluctant to merge the code bases until I can assure 
myself that I can build the system on both platforms and test it 
from the sources. It's not apparent to anyone but I'm nearly 
always running a system build and tests on some machine or other.
Merging the code and pushing it out to savannah isn't an issue
for people who want to just use it. The savannah code needs to 
be as clean as we can make it so new developers aren't struggling
with poor code. It's a quality issue.

\start
Date: Sat, 11 Dec 2004 16:58:24 -0500
From: Tim Daly
To: Martin Rubey
Subject: Re: Release?

Martin,

re: Announcing....

Red Flag Linux has a process
http://www.redflag-linux.com/hezuo/eisv.html

This is probably much more heavyweight than what you intend
but is an example of the IBM, RedHat, etc processes.

\start
Date: Sat, 11 Dec 2004 17:59:15 -0500
From: Tim Daly
To: list
Subject: Axiom Conference

*,

We are beginning to plan an Axiom conference for April 22, 2004.
The conference is a one-day, four speaker affair with a target
audience of the general scientific user. The idea is to highlight
the uses and usefulness of Axiom in various scientific areas.

At the momment this is still in the discussion stage and virtually
nothing has been finalized, including the potential speaker list.
The only known features are that it will occur on the given date
and be hosted at City College of New York (my home campus).

I'm giving everyone a chance for early input, including suggestions
for speakers you'd like to hear, topics you'd like covered, and work
you might like to present. We want to show engage the general 
scientific community.

Please send comments directly to Tim Daly rather than these lists.

\start
Date: Sat, 11 Dec 2004 19:51:03 -0500
From: Bill Page
To: Tim Daly
Subject: RE: Release?

Tim,

On Saturday, December 11, 2004 1:58 PM you wrote:
> 
> I haven't tried the new axiom exe files yet ... It appears that
> the .exe file does not do a system build so it doesn't require
> any development tools.

That is correct. The file at

http://page.axiom-developer.org/axiom-0.1.exe

is a binary "installer" file. It is a self-decompressing program
that just unfolds into the directories and files required to run
Axiom. Plus it does a few things to the Windows environment like
defining the AXIOM environment variable and adding the bin
directory to the PATH. This is the way most software is installed
on Windows computers.

> 
> It is clear there is a widespread interest in the windows version
> just from the number of downloads so far. So it is a good idea to
> try and meet this demand as soon as possible.

Over 200 already - that is for the version that requires a little
manual setup work. The only difference with the new one is that
setup is automatic and convenient for people who are less familiar
with Windows development.

> ... 
> Perhaps the easiest way would be to put up wiki pages. I'm
> willing to be the test case for these pages as I'm going to
> play with the .exe file shortly.

I have already put some work into

http://page.axiom-developer.org/zope/mathaction/AxiomDownload

and

http://page.axiom-developer.org/zope/mathaction/TeXmacs

Tim, are you thinking of something more specific just for Windows
users?

> ... 
> Merging the code base into the main branch is significantly more
> work. Several questions come to mind...
> 
> Will the axiom--windows--1 branch build cleanly on windows?
>

Not as it exists right now. axiom--windows--1 is still missing
the changes made by Mike Thomas this last week.
 
>   by this I mean that I can download the tla file to a freshly
>   installed windows box and build it.
>

Not until someone (you, me or Mike) manages to merge Mike's
changes.
 
>   what is the procedure? it should work by typing 'make'
> 

The procedure is the same as under linux.

>   is there a tla for windows?
> 

Yes. I have used it without problems but Mike has experienced
ome trouble especially when used over a slow modem connection.

>   what software must the user install on the box? 
>   clearly some form of gcc and latex plus awk, grep, rm, etc.
>   

Installed a new MinGW/MSYS configuration from the 'current'
file list at:

http://www.mingw.org/download.shtml#hdr2

In the following order:

1)  MinGW-3.1.0-1.exe
    http://prdownloads.sf.net/mingw/MinGW-3.1.0-1.exe?download
2)  MSYS-1.0.10.exe
    http://prdownloads.sf.net/mingw/MSYS-1.0.10.exe?download
3)  msysDTK-1.0.1.exe
    http://prdownloads.sf.net/mingw/msysDTK-1.0.1.exe?download

Then untarred the following:
 (cd /mingw; tar xzvf /home/bpage/... )

4)  gcc-core-3.4.2-20040916-1.tar.gz
http://prdownloads.sf.net/mingw/gcc-core-3.4.2-20040916-1.tar.gz?download
5)  binutils-2.15.91-20040904-1.tar.gz
http://prdownloads.sf.net/mingw/binutils-2.15.91-20040904-1.tar.gz?download
6)  w32api-3.1.tar.gz
    http://prdownloads.sf.net/mingw/w32api-3.1.tar.gz?download
7)  mingw-runtime-3.5.tar.gz
    http://prdownloads.sf.net/mingw/mingw-runtime-3.5.tar.gz?download

>   what is MSYS and where can I get it? should we package it in zips?

No. Definitely not. It would be like including bash in zips because
it is used on linux.

> 
>   what does Windows use to read dvi files? should we cross-compile
>   and package advi (which is already in zips?) or should the windows
>   build automatically create pdf files?
> 

No to advi. Almost everything in the zips directory is irrelevant
to Windows except GCL-2.6.5. There are standard tools on Windows
for tex such as Miktex.

>   is the version of gcl on the axiom--windows--1 branch the one
> that should be used with windows? does it also build with linux?
> 

Yes.

>   is there a <<Makefile-windows>> stanza in the top level 
> Makefile.pamphlet?
>

Yes.
 
>   I haven't been involved in any of this so I'm unclear about
> what exact steps are required.
> 
>   I don't yet have the ability to support questions about this
> branch as I don't yet have access to a windows machine.
> 
>   there appears to have been an issue about file names and path
> names have these issues been resolved?

Yes.

> 
> beyond the algebra portion comes the question of sockets
> 
>   will it compile cleanly under the windows MSYS environment?
>   does the axiom socket code work on windows?

Perhaps. There is compatible code but it has not been tested.

>   does sman compile?
> 

Not tried yet.

> and the question of X compatibility
> 
>   does the graphics code compile?
>   does it run?
> 

Unlikely.


Mike Thomas may well have more to add.

\start
Date: Sat, 11 Dec 2004 17:05:48 -0800 (PST)
From: Cliff Yapp
To: Tim Daly, Martin Rubey
Subject: Re: Release?

--- Tim Daly wrote:

> I'm not sure what "announcing" it really means. Clearly I've made no
> effort to build up a "marketing and sales" channel for axiom so there
> is no obvious place to "announce". You're welcome to take the lead in
> this (aka "director of marketing" :-) ) and figure out a way to
> market axiom. I'll provide what help I can but I'm a complete novice
> at this.

Well, in the case of Maxima at least we announce on Freshmeat and
sci.math.symbolic.  I think perhaps also on comp.lang.lisp.  

I know these questions aren't directed at me, but in case any of this
is useful...

> Will the axiom--windows--1 branch build cleanly on windows?
> 
>   by this I mean that I can download the tla file to a freshly
>   installed windows box and build it.

Uh - at best I think you will need a fresh windows install + free
compile tools.  To the best of my knowledge default windows doesn't
include any tools for development of software, although perhaps that
has changed.
 
>   is there a tla for windows?

http://wiki.gnuarch.org/moin.cgi/Native_20WIN32_20Support
 
>   what software must the user install on the box? 
>   clearly some form of gcc and latex plus awk, grep, rm, etc.

Which gets back to my earlier point - ideally we should at least give
the user the option of one massive, self contained install.exe file
that will install everything needed on a clean windows box.  Maybe the
"default" way will be to have people install some supporting software
themselves, but I still think a TOTALLY self contained install.exe will
give the best impression.
   
>   what is MSYS and where can I get it? should we package it in zips?

http://www.mingw.org/

Typically I think msys is installable, and people download tar.gz of
other components they want and decompress them in the msys shell.  I
would say a big axiom_development_environment.exe file with all the
right versions of everything already set up would be an act of mercy,
based on my earlier experiences trying to build Maxima on windows, but
perhaps it is appropriate that the barrior of entry be at least that
high on the developer side.

>   what does Windows use to read dvi files? should we cross-compile
>   and package advi (which is already in zips?) or should the windows
>   build automatically create pdf files?

My recommendation would be to create pdf files - dvi is fairly foreign
to a normal windows environment.  Is there an advantage to using dvi?
 
> and the question of X compatibility
> 
>   does the graphics code compile?
>   does it run?
> 
> on linux the graphics exists, sman exists, and hypertex is nearing
> completion (it segfaults but I'll find it eventually). have we looked
> at getting these branches to compile?

The default answer is that graphics programs written for X will not
work on windows unless an X server is present.  Normally the way I run
X graphical software on windows is to use the cygwin environment - I
would NOT recommend that as a general solution for normal windows
users.  cygwin is an amazing piece of work, but X programs under
windows will feel and act differently than normal programs, and in my
experience this doesn't go over well.

If I recall, the moral equilavent to X on windows is GDI.  Really, the
only options I can think of off the top of my head is to either provide
a GDI/Windows version of the graphics, or port them to some common
graphics toolkit.

FWIW, the long term solution I envision for Maxima in this respect is
to port McCLIM to windows, build off of scigraph to create whatever
graphical abilities were needed, impliment 3D graphing in McCLIM, and
live happily ever after with native interfaces and graphics everywhere.
 

Advantages:  Write once in lisp, run anywhere McCLIM has been
implimented.  Usual benefits of lisp programming.  Front end could
probably be used to interface with different CASs, if anyone wanted to
impliment the protocals.

Disadvantages:  A truly staggering amount of work, with n+1 learning
curves I don't even know about yet to climb.

> The savannah code needs to be as clean as we can make it so new 
> developers aren't struggling with poor code. It's a quality issue.

Amen.

Thanks again for all your hard work everybody, and especially Tim.

\start
Date: Sun, 12 Dec 2004 04:08:26 +0000
From: Kenny Chamber
To: list
Subject: RE: mathaction

It appears from their site that they are selling the source under some
circumstances however (cannot see where though).  It would be helpful
if someone could report on whether their conditions would allow
inspection of the source for use in spotting bugs in axiom.  Am also
wondering if standard lisp, as a 'subset', will run on gcl much as the
'applicative common lisp' subset does in acl2.

\start
Date: Sat, 11 Dec 2004 23:50:35 -0500
From: Tim Daly
To: Kenny Chamber
Subject: re: mathaction

Kenny,

>It appears from their site that they are selling the source under some
>circumstances however (cannot see where though).  It would be helpful
>if someone could report on whether their conditions would allow
>inspection of the source for use in spotting bugs in axiom.  Am also
>wondering if standard lisp, as a 'subset', will run on gcl much as the
>'applicative common lisp' subset does in acl2.

Which site are you referencing?

\start
Date: Sun, 12 Dec 2004 11:32:56 +0100
From: Martin Rubey
To: Cliff Yapp
Subject: Re: Release?

C Y writes:
 > 
 > --- Tim Daly wrote:
 > 
 > > I'm not sure what "announcing" it really means. Clearly I've made no
 > > effort to build up a "marketing and sales" channel for axiom so there
 > > is no obvious place to "announce". You're welcome to take the lead in
 > > this (aka "director of marketing" :-) ) and figure out a way to
 > > market axiom. I'll provide what help I can but I'm a complete novice
 > > at this.
 > 
 > Well, in the case of Maxima at least we announce on Freshmeat and
 > sci.math.symbolic.  I think perhaps also on comp.lang.lisp.  

Well, that's what I meant, too: I collected the communities - mailing lists,
where I'd announce it on MathAction.

Tim, how much effort is it to integrate the patches on Savannah?

If this can be done, I'd be willing to "announce". Regarding Universities, I'd
need some help, though: I'll be able to do: University of Vienna, Technical
University of Vienna, LaBRI/Bordeaux, Lyon and I'll ask Ralf to do Linz.

To do means: ask somebody to distribute the announce mail on the "scientific
staff mailing list" (at least that's what we call it here in Austria)

\start
Date: Sun, 12 Dec 2004 12:57:27 -0500
From: Tim Daly
To: Martin Rubey, Bill Page
Subject: Re: Release?

Martin, Bill, 

I ran the install script on a windows box and at completion (when I click
'finish') it starts axiom but immediately fails with the message:

Error: Cannot open the file c:/cvs/head/axiom/mnt/windows/algebra/compress.daase


However, an axiom icon appears on the desktop and clicking on that works.
I'm really quite impressed. It worked on a normally installed windows
system with no problems that I can see. Amazing. Simply amazing.

If we're going to announce this to a broader audience (and we should)
perhaps we should consider a few things...

First I think we need a bug-reporting script somewhere so people who
are not developers can contact us with problems.

Second I think we need to firm up some documentation, perhaps the
tutorial (book volume 1) and make it also appear on the desktop.
And we need to get it into a publishable form quickly.

Third I think we need to modify the graphic on the icon as I'm not
sure of the status of the book front cover. Perhaps we can use the
blue bayou graphic with an overlaid 'axiom' word instead. That icon
is nice piece of work on somebody's part.

I'm now in the process of installing the msys environment. Once I
do that I'm going to 
1) download the axiom--windows--1 branch to see if I can get it to build. 
2) If that succeeds I'll proceed with merging the axiom--windows--1 branch 
   into axiom--main--1
3) test axiom--main--1 on both linux and windows
4) get axiom--main--1 repackaged for linux (rpm, deb) and windows
5) move axiom--main--1 to savannah

As to the issue of announcing, feel free to make any announcements you
feel are appropriate. The sci.math.symbolic mailing lists, etc are a
good idea. Perhaps once it appears there we could convince franz and
other lisp companies to give us a work environment (e.g. zero cost
software) to recover the version of axiom that used to work on their
software.

Excellent work all around. 

You did remember to put your names in the README file and the
src/interp/setq.lisp.pamphlet files, right?

\start
Date: Sun, 12 Dec 2004 13:17:59 -0500
From: Tim Daly
To: Bill Page
Subject: Re: Axiom Conference

Bill,

I'm copying the developer mailing list because I think you
have a good idea although I'm not sure how many might be interested.

>My first reaction is that one day is too short unless you
>intend this to be primarily a "local promotional affair".
>I think many people would find the cost and inconvenience of
>a trip for a one day meeting prohibitive except perhaps if
>this is connected with some other related conference at the
>same venue.

Actually, the axiom conference will follow on the heels of a
group theory conference which I'm also helping to organize.
However these are currently disjoint audiences (until I get
the group theory algebra moved into axiom).

>I think that at least two days is a minimum. And I have some
>suggestions about what to do on the 2nd day. I expect that
>there may be a number of specific topics of interest to only
>a sub-group of participants. So one thing that might be very
>useful would be to schedule (perhaps in parallel) several
>special interest sessions.

I ran this by the CAISS Director (Gilbert Baumslag, my boss)
and he thinks it is a good idea if there is sufficient interest.

>Another thing that I would really like to try is called a
>"sprint" by the developers of Plone. The idea of a sprint is
>to get as many active developers together in one place and
>with enough tools to solve as many known problems with the
>software in as short a time as possible. This often means
>working intensively sometimes late into the night - a mode
>in which open source developers are well known to enjoy :)
>This seems to have been very effective for Plone. The Plone
>developers currently schedule at least two of these sprint
>meetings per year, often just prior to a planned new release.
>See
>
>http://plone.org/events/sprints/whatis/view

The "sprint" is a very appealing idea. We have a lab with about 20
machines over which I have complete control. It would be very
productive (and from my point of view a huge amount of fun) to get a
group of developers together. I know we manage to make progress now
but it would be so much more productive to have many eyes on problems
at the same location. Plus we could have a good discussion of future
directions, additional algebra, etc.

So is there any interest in either or both of these ideas
(a two-day vs one-day conference, a 'sprint' meeting)?

\start
Date: Sun, 12 Dec 2004 13:20:57 -0500
From: Tim Daly
To: Martin Rubey
Subject: Re: Release?

Martin,

I think we can announce the availability of the axiom.exe for
windows without pushing the patches to savannah. I have a lot
of little details that need to be checked before merging with
main and then more testing before merging with savannah. The
developers will be using tla/arch anyway so the it is not vital
that savannah have these changes immediately rather than just
"real soon now".

\start
Date: Sun, 12 Dec 2004 15:27:08 -0500
From: William Sit
To: Tim Daly
Subject: Re: Release?
Cc: Bill Page

root wrote:
> 
> Martin, Bill,
> 
> I ran the install script on a windows box and at completion (when I click
> 'finish') it starts axiom but immediately fails with the message:
> 
> Error: Cannot open the file c:/cvs/head/axiom/mnt/windows/algebra/compress.daase
> 
> However, an axiom icon appears on the desktop and clicking on that works.
> I'm really quite impressed. It worked on a normally installed windows
> system with no problems that I can see. Amazing. Simply amazing.

I tested installation on A Dell machine (P4) running Windows 98SE using the
executable
http://page.axiom-developer.org/axiom-0.1.exe

The installation proceeds smoothly and I had chosen custom install which
includes the checkbox: Add to path, Documentation, Source Code (all checked).
(Custom is selected automatically as a consequence). The path was the default
path c:\Program Files\axiom.

I rebooted the system, as requested. An axiom folder appears in the
Start->Program menu and clicking on Axiom->Axiom starts a MSDOS Windows, with
Axiom started, but giving the same error message as Tim gets (and the system
stay in BOOT>>). I then click on the Desktop icon Axiom, same thing (unlike
Tim's response).

Two comments:
(1) If the system fails after starting, I suggest that in addition to the error
message, then a message on how to get out of BOOT and Axiom be given, returning
to DOS. (The :H does not help in the Windows 98SE DOS because it is limited to
24 lines). Of course, one can always kill the DOS window, but that does not give
a good impression.
(2) Better still, since most Windows users will not be familiar or even know
what BOOT is, and the :H listing will look like gibberish, it should perhaps not
be the default setting (that is do not go into BOOT at error).

Now I repeat testing installation on another Windows machine (running XP
Professional (SP2), and the path is J:\Program Files\Axiom, and I have exactly
what Tim got (error in DOS when click finish after installation; but no problem
with Desktop icon start, and no problem with Start->Program->Axiom->axiom start
-- this is contrary to the Windows 98SE version).

Thanks a million to all who worked hard to make Axiom running for Windows.

\start
Date: Sun, 12 Dec 2004 16:06:40 -0500
From: Bill Page
To: Tim Daly
Subject: RE: Release?

Tim,

On Sunday, December 12, 2004 12:57 PM you wrote:
> 
> I ran the install script on a windows box and at completion 
> (when I click 'finish') it starts axiom but immediately fails
> with the message:
> 
> Error: Cannot open the file 
> c:/cvs/head/axiom/mnt/windows/algebra/compress.daase
> 

I will look into this problem. I can also reproduce it here
provided that no previous install of Axiom exists. I think that
it must have something to do with the timing of the setting
of the AXIOM variable since that is the message one would
expect if it was not set (Axiom is looking in the wrong place
of the database files).

> 
> However, an axiom icon appears on the desktop and clicking on 
> that works.

Yes. By that time the AXIOM variable is obviously set correctly.

> ... 
> First I think we need a bug-reporting script somewhere so people
> who are not developers can contact us with problems.

Perhaps we can include a link to the "issues" section of MathAction

http://page.axiom-developer.org/zope/mathaction/FrontPage/issuetracker

This is an "easy to use" bug tracking system.

> 
> Second I think we need to firm up some documentation, perhaps
> the tutorial (book volume 1) and make it also appear on the
> desktop. And we need to get it into a publishable form quickly.

If the user chooses "documentation" during the install, the
axiom-book.pdf (the whole 1000+ page book) and tutorial.pdf
files are also copied. There is a link to them under

  Start/Programs/Axiom

tutorial.pdf is a version of the tutorial that was distributed
with NAG's windows version of Axiom but it has been adapted to
refer to the TeXmacs interface instead of techexplorer.

Perhaps it would be nice to have the planned volume 1 of the book
instead of the whole book.

> 
> Third I think we need to modify the graphic on the icon as I'm
> not sure of the status of the book front cover.

I doubt that it is a copyrightable issue. But I agree that it is
only a "first effort". I was just playing around when I designed
it. I thought about using the icon that was provided with NAG's
windows version, but then I thought that it looks just as "ugly"
as my primative effort. It would be nice if we could get a real
graphic artist to do something nice for us.

> Perhaps we can use the blue bayou graphic with an overlaid 'axiom'
> word instead. That icon is nice piece of work on somebody's part.

If someone can send me a new .ico file, I would be glad to
substitute it.

> 
> I'm now in the process of installing the msys environment.

> Once I do that I'm going to 
> 1) download the axiom--windows--1 branch to see if I can get 
> it to build. 

You will also need tla for windows from

  http://download.sipsolutions.de/tla-setup.exe

and the windows LaTeX packaged called MikTex

  http://www.miktex.org/setup.html

The "Small MiKTeX" package is sufficient if your windows box is
connected to the Internet. Or if you want you can install the
complete system.

> 2) If that succeeds I'll proceed with merging the 
> axiom--windows--1 branch 
>    into axiom--main--1

It will fail unless you first merge the files sent to you by
Mike Thomas last week. I have not yet suceeded in merging these
properly into axiom--windows--1 myself. Let me know if you get
this to work. Otherwise we will need Mike's assistance.

> 3) test axiom--main--1 on both linux and windows
> 4) get axiom--main--1 repackaged for linux (rpm, deb) and windows
> 5) move axiom--main--1 to savannah
> 

Good plan.

But I also agree with Martin Rubey that some priority should be
give to the patches currently waiting in Savannah. Some of these
are necessary even to reproduce the simple numerical results in
Martin Dunstan's tutorial.

\start
Date: Sun, 12 Dec 2004 16:25:49 -0500
From: William Sit
To: Tim Daly
Subject: Re: Release?

root wrote:
> 
> Martin,
> 
> I think we can announce the availability of the axiom.exe for
> windows without pushing the patches to savannah. I have a lot
> of little details that need to be checked before merging with
> main and then more testing before merging with savannah. The
> developers will be using tla/arch anyway so the it is not vital
> that savannah have these changes immediately rather than just
> "real soon now".
> 
> t

Tim:

I did some simple test on Windows version. Here are some (expected and perhaps
easy to "get around") "bugs":

(1) -> )summary
'cat' is not recognized as an internal or external command,
operable program or batch file.
(1) -> )copyright
'cat' is not recognized as an internal or external command,
operable program or batch file.
(1) -> )cd g:\axiom
   The current AXIOM default directory is
      j:/Program Files/axiom/mnt/windows/lib/
(1) -> )cd "g:/axiom"
   The current AXIOM default directory is
      j:/Program Files/axiom/mnt/windows/lib/
(1) -> )cd g:/axiom
   The current AXIOM default directory is
      j:/Program Files/axiom/mnt/windows/lib/
(1) -> )cd g://axiom
   The current AXIOM default directory is
      j:/Program Files/axiom/mnt/windows/lib/
(1) -> )cd g:\\axiom
   The current AXIOM default directory is
      j:/Program Files/axiom/mnt/windows/lib/
(1) -> )cd

   >> System error:
   Cannot get the truename of #P"~/".

protected-symbol-warn called with (NIL)
(1) ->


Given the average Windows user nowadays are unfamiliar with DOS commands (let
alone Unix 'cat'), I think it would not be advisable to announce or release to
the general scientific public at this time.

If we can get Texmacs window packaged with Axiom Windows release, that is a
different story. The snapshot sometime ago posted (by Mike Thomas:on Mon Dec 6,
texmacs_axiom_windows.jpg) is the kind of experience Windows users expect. I
think we need to give them a very good user experience (in addition to the
math-computation experience) so users can become productive right away "off the
box".

Incidentally, I double-clicked on tm_axiom.exe in the j:/Program
Files/axiom/mnt/windows/bin directory and a window appeared and disappeared
immediately. How should I start texmacs correctly?

\start
Date: Sun, 12 Dec 2004 16:43:00 -0500
From: William Sit
To: Bill Page
Subject: Re: Release?

Bill Page wrote:
> 
> Tim,
> 
> On Sunday, December 12, 2004 12:57 PM you wrote:
> >
> > I ran the install script on a windows box and at completion
> > (when I click 'finish') it starts axiom but immediately fails
> > with the message:
> >
> > Error: Cannot open the file
> > c:/cvs/head/axiom/mnt/windows/algebra/compress.daase
> >
> 
> I will look into this problem. I can also reproduce it here
> provided that no previous install of Axiom exists. I think that
> it must have something to do with the timing of the setting
> of the AXIOM variable since that is the message one would
> expect if it was not set (Axiom is looking in the wrong place
> of the database files).
> 
> >
> > However, an axiom icon appears on the desktop and clicking on
> > that works.
> 
> Yes. By that time the AXIOM variable is obviously set correctly.

         
Yes, opening a DOS windows on Windows 98SE, and 

set AXIOM=c:\Progra~1\Axiom\mnt\windows

and then start

axiomsys

then Axiom runs without the error message.

But )summary and )copyright still give an error message:

Bad command or file name
which presumably refers to 'cat'.

Continue with

)sys tm_axiom

or start a new DOS windows and 

tm_axiom

produces Xverbatim:Xchannel:promptXXlatex:\red$\rightarrow$\ XXXverbatim:

where X stands for some graphic character (not all the same).

Under XP SP2 DOS window, 

tm_axiom

simply returns to command prompt.

\start
Date: Sun, 12 Dec 2004 18:29:10 -0500
From: Bill Page
To: William Sit, Tim Daly
Subject: RE: Release?

William,

Thank you for trying the installation on an older Windows
system. I had not tested this. The install script needs
to be changed to accommodate older systems which set
environment variables differently than Windows 2000, and
Windows NT and later versions. I will correct that install
script and upload a new version.

On Sunday, December 12, 2004 3:27 PM you wrote:
> > 
> > Error: Cannot open the file 
> > c:/cvs/head/axiom/mnt/windows/algebra/compress.daase
> > 
> 
> I tested installation on A Dell machine (P4) running Windows 
> 98SE using the executable
> http://page.axiom-developer.org/axiom-0.1.exe
> ... 
> I rebooted the system, as requested. An axiom folder appears
> in the Start->Program menu and clicking on Axiom->Axiom starts
> a MSDOS Windows, with Axiom started, but giving the same error
> message as Tim gets (and the system stays in BOOT>>). I then
> click on the Desktop icon Axiom, same thing (unlike Tim's
> response).
> 
> Two comments:
> (1) If the system fails after starting, I suggest that in 
> addition to the error message, then a message on how to get
> out of BOOT and Axiom be given, returning to DOS.

This would have to be done in the Axiom coding.

> (2) Better still, since most Windows users will not be 
> familiar or even know what BOOT is, and the :H listing will
> look like gibberish, it should perhaps not be the default
> setting (that is do not go into BOOT at error).

Of course these comments also apply to most Linux users.
I agree that exiting to BOOT should not be the default
behaviour. It would be better to simply exit. An option
to exit to BOOT could be provided for developers and
advanced debugging.

\start
Date: Sun, 12 Dec 2004 19:19:46 -0500
From: Tim Daly
To: Bill Page
Subject: Re: Release?

Bill, Willaim,

In general there is an option )set break break which will 
cause axiom to break to lisp when an error occurs. The usual
case is that it just returns to the top level loop. In this
case, however, the break is fatal as it cannot find the databases.

I'll fix the break error messages.

\start
Date: Sun, 12 Dec 2004 19:04:15 -0500
From: Bill Page
To: William Sit, Tim Daly
Subject: RE: Release?

William,

On Sunday, December 12, 2004 4:26 PM you wrote:
> 
> I did some simple test on Windows version. Here are some 
> (expected and perhaps easy to "get around") "bugs":
> 
> (1) -> )summary
> 'cat' is not recognized as an internal or external command,
> operable program or batch file.
> (1) -> )copyright
> 'cat' is not recognized as an internal or external command,
> operable program or batch file.

Under windows the equivalent command to send the contents of a
file to stdout is 'type' rather than 'cat'. This is one of the
examples of the way in which Axiom currently depends on the
operating system. The general solution is to write these simple
operations in lisp and not to depend on the shell.

In the mean time, until these functions are re-written in lisp,
we can provide a temporary equivalent in the Axiom bin directory
via a simple C program.

> (1) -> )cd g:\axiom
>    The current AXIOM default directory is
>       j:/Program Files/axiom/mnt/windows/lib/
> (1) -> )cd "g:/axiom"
>    The current AXIOM default directory is
>       j:/Program Files/axiom/mnt/windows/lib/
> (1) -> )cd g:/axiom
>    The current AXIOM default directory is
>       j:/Program Files/axiom/mnt/windows/lib/
> (1) -> )cd g://axiom
>    The current AXIOM default directory is
>       j:/Program Files/axiom/mnt/windows/lib/
> (1) -> )cd g:\\axiom
>    The current AXIOM default directory is
>       j:/Program Files/axiom/mnt/windows/lib/
> (1) -> )cd
> 
>    >> System error:
>    Cannot get the truename of #P"~/".
> 
> protected-symbol-warn called with (NIL)
> (1) ->
> 

I think the ')cd' command depends on some other linux specific
code for which Mike Thomas has already submitted a windows
patch but it is not in the version of Axiom that is included
in the current install file. I will check on this. This
command should work as you expect.

> 
> Given the average Windows user nowadays are unfamiliar with 
> DOS commands (let alone Unix 'cat'), I think it would not
> be advisable to announce or release to the general scientific
> public at this time.

That seems like an exaggeration to me. It would be hard to
get rid of these basic command language idioms from Axiom
when run in this mode. Users who use this mode should be
made aware of the basic set of commands. But see below.

> 
> If we can get Texmacs window packaged with Axiom Windows release,
> that is a different story. The snapshot sometime ago posted (by
> Mike Thomas:on Mon Dec 6, texmacs_axiom_windows.jpg) is the kind
> of experience Windows users expect. I think we need to give them
> a very good user experience (in addition to the math-computation
> experience) so users can become productive right away "off the
> box".

TeXmacs for a graphical interface is definitely possible. But
it needs to be installed separately. Go to

http://www.texmacs.org/tmweb/download/windows.en.html

and download the file wintexmacs-1.0.4.4.exe

This program installs the same way as Axiom (in fact is was
ported to Windows by the same person - Dan Martens - who did
the initial version of the Windows installer that I have only
modified a little.

Packaging TeXmacs with Axiom is possible and has been discussed
briefly with Dan Martens but he pointed out that the resulting
file would be a rather large download (22 Mb + 15 Mb.) I think
installing two programs is not too complicated.

> 
> Incidentally, I double-clicked on tm_axiom.exe in the j:/Program
> Files/axiom/mnt/windows/bin directory and a window appeared 
> and disappeared immediately. How should I start texmacs
> correctly?
> 

tm_axiom.exe is the "interface" program that is not intended
to be run directly by the user. If TeXmacs is installed, then
tm_axiom.exe is called by TeXmacs internally in order to "talk"
with Axiom.

But TeXmacs must be separately installed. See above.

If TeXmacs is installed, then the menu item

  Insert/Session/Axiom

will start an Axiom session inside TeXmacs and you will be
able to type type Axiom commands and see nicely formatted
output.

The tutorial that you can reach from the Start menu

   Start/Programs/Axiom Tutorial

has a section that describes the use of TeXmacs.

\start
Date: Mon, 13 Dec 2004 03:11:22 -0500
From: William Sit
To: Bill Page
Subject: Re: Release?

Bill:

Thanks for the instructions below.

> TeXmacs for a graphical interface is definitely possible. But
> it needs to be installed separately.

I followed your instructions and installed TeXmacs. At first it hangs when run
the first time. Rerunning it eventually opens up the windows and I can pull down
the menu Insert->Session->Axiom. Then it displays a cyan long an thin rectangle
across the width of the white area (which disappears if the focus is not TeXmacs
window), with the "axiom]" (no quotes) where a red vertical line crosses the
letter o (which also disappears if window is out of focus). The status bar says
"generic axiom program roman 10 blue [dead]". I type 1 + 1 and press enter, the
program hanged with entire window going blank with (Not Responding) and had to
be killed. This can be reproduced several times. Both startup and shutdown took
relatively long time (6 secs, I am using a P4 2.4GHz 1GB ram machine, running
XP).

I realize that the red vertical line is the cursor but it was not placed in the
right place. 

Both TeXmacs and Axiom are installed as subfolders of J:\Program Files.

Any help would be much appreciated.

\start
Date: Mon, 13 Dec 2004 09:48:13 +0100
From: Martin Rubey
To: Tim Daly, Camm Maguire
Subject: Re: Release?

Dear all,

given that it's not even two weeks to Christmas, I suggest the following:

I'll send a "teaser" to sci.math.symbolic and comp.lang.lisp, saying that Axiom
1.0 is coming "real soon", a beta version being available, coming Thursday,
December 16.

I will not announce Axiom 1.0 without those bugs fixed, that result in a
mathematical mistake and where a fix is available. These bugs are *not*
details! I rather have axiom go to boot and a cryptic error message that I can
notice than return an innocent looking but embarrassingly wrong answer! (I
know, there are mistakes we will probably not be able to fix in a long time,
but at least we should fix those which are easy to fix!)

BTW: Camm, could you submit your patch for "new" to savannah? I agree with
Manuel.

It would be great if we could have a "real" release just before February, since
February is again a month where many people do not have to teach and might find
some time to try it out.

Martin

root writes:
 > Martin,
 > 
 > I think we can announce the availability of the axiom.exe for windows
 > without pushing the patches to savannah. I have a lot of little details that
 > need to be checked before merging with main and then more testing before
 > merging with savannah.

What sort of details? 

 > The developers will be using tla/arch anyway so the it is not vital that
 > savannah have these changes immediately rather than just "real soon now".

Are the patches from savannah in the tly/arch version of axiom?

\start
Date: Mon, 13 Dec 2004 09:59:49 +0100
From: Martin Rubey
To: list
Subject: Re: Release?

Sorry, I forgot:

I'd also mention the availability of bounties. Hence, two questions:

Is it sensible to offer bounties for

* MathAction pamphlet support,

* numerical integration: bindings to some super trooper integration engine

* Aldor support

If yes, what are the prices? And, especially for the second item, is there a
plan or is this too early. I could, alternatively, just mention it and leave it
to discussion if somebody wants to do it.

\start
Date: Mon, 13 Dec 2004 11:05:04 -0500
From: Bill Page
To: William Sit
Subject: RE: Release?

William,

The symptoms that you describe sound like AXIOMsys.exe and
tm_axiom.exe are not in the PATH. If you open a MSDOS command
windows and type

 C:\... > path

You should see

  C:\Program files\axiom\mnt\windows\bin;

in the list of directories.

And you should also be able to simply type

 C:\... > axiomsys

to start Axiom. 

If not then the Axiom install did not complete properly.
But if axiom is in the default path, then TeXmacs should
find it.

On Monday, December 13, 2004 3:11 AM William Sit wrote:
> 
> Thanks for the instructions below.
> 
> > TeXmacs for a graphical interface is definitely possible. But
> > it needs to be installed separately.
> 
> I followed your instructions and installed TeXmacs. At first 
> it hangs when run the first time.

TeXmacs takes a long time to startup when first installed
because it is building some tables of font information, but
I have not had it truly hang when I have tried it.

> Rerunning it eventually opens up the windows and I can pull
> down the menu Insert->Session->Axiom.

That's good because it means that it found AXIOMsys.exe

> Then it displays a cyan long an thin rectangle across the width
> of the white area (which disappears if the focus is not TeXmacs
> window),

That's good.

> with the "axiom]" (no quotes) where a red vertical line crosses
> the letter o 

That's bad. When you see "axiom]" it means that for some reason
it can not run tm_axiom.exe (the interface program). What you
should see is a red arrow.

> (which also disappears if window is out of focus).

That's normal.

> The status bar says "generic axiom program roman 10 blue [dead]".

That's obviously bad...

> I type 1 + 1 and press enter, the program hanged with entire window
> going blank with (Not Responding) and had to be killed. This can
> be reproduced several times. Both startup and shutdown took
> relatively long time (6 secs, I am using a P4 2.4GHz 1GB ram 
> machine, running XP).

That is similar to the configuration of my Windows PC. 6 secs is
about right for TeXmacs startup.

> 
> I realize that the red vertical line is the cursor but it was 
> not placed in the right place. 
> 
> Both TeXmacs and Axiom are installed as subfolders of 
> J:\Program Files.
> 
> Any help would be much appreciated.
> 

Make sure that you can run 'axiomsys' and 'tm_axiom' from the
command line (normally you do *not* try to run 'tm_axiom' this
way, but this is just a test to see if it is accessible). Let
me know the results.

If it turns out that for some reason

  C:\Program files\axiom\mnt\windows\bin;

is not in the Path, on Windows 2000 and XP you can add it manually
by clicking

  Start / Control Panel (classic view) / system / Advanced / Environment
Variables

On older windows systems this would be set in AUTOEXEC.BAT

But all of this should be done automatically by the Axiom
installer program. I have a new version of the installer that
I think should work better. I will upload it later today.

\start
Date: Mon, 13 Dec 2004 12:08:00 -0500
From: Bill Page
To: William Sit
Subject: RE: Release?

William,

It might also be a good idea if you re-install TeXmacs and
when you first start it, let it run to completion - maybe
a two or three minutes.

Bill Page.

> -----Original Message-----
> > 
> > I followed your instructions and installed TeXmacs. At first 
> > it hangs when run the first time.
> 

\start
Date: Tue, 14 Dec 2004 10:10:32 +1000
From: Mike Thomas
To: Bill Page, Tim Daly
Subject: RE: Release?

Hi Bill/Tim.

| It will fail unless you first merge the files sent to you by
| Mike Thomas last week. I have not yet suceeded in merging these
| properly into axiom--windows--1 myself. Let me know if you get
| this to work. Otherwise we will need Mike's assistance.

Just a quick note to say that I'm badly bound up time wise for the coming
week and have little hope of sorting out arch or anything else over that
period.  Perhaps it would be better if I just zipped up my local stable
build and uploaded it so that you can merge the code changes into the
Windows arch branch as and when you are able.  Let me know if you would like
that.

Regarding cat, cd etc; even if you use the respective DOS commands, those
commands will still choke on the forward slash canonical path format used by
Windows GCL.  Sure, you can knock the paths into shape before calling
system() but that still (apart from being a hassle) leaves you open to the
other problems I have previously mentioned.  For this reason I recommend
either doing those commands in Lisp as suggested by Camm last week or as a
second best/temporary fix - cfuns-c.  I believe that si::chdir is the GCL
directory setting Lisp equivalent.  I have so far only addressed mkdir via
cfuns-c if my memory serves, but I believe that the best solution would be
to add ensure-directory-exists to the stable build of GCL.

I would personally urge you to seriously consider solving those system()
related issues before doing an advertised public release.  They aren't major
problems to solve and could have a fairly large negative impact on user
expectations if left untended.

Finally, thanks for the enormous effort you have put into the new installer.

More next week,

\start
Date: Mon, 13 Dec 2004 16:33:33 -0800
From: Bob McElrath
To: list
Subject: Ask Slashdot

--oyUTqETQ0mS9luUI

"Ask Slashdot" has a very relevant question to Axiom, and  a great
opportunity to inform people about it:

    http://ask.slashdot.org/article.pl?sid=04/12/13/2355258&tid=185&tid=4

\start
Date: Mon, 13 Dec 2004 20:50:45 -0500
From: Bill Page
To: Mike Thomas
Subject: RE: Release?

Mike,

On Monday, December 13, 2004 7:11 PM you wrote:
> ...
> Perhaps it would be better if I just zipped up my local
> stable build and uploaded it so that you can merge the
> code changes into the Windows arch branch as and when you
> are able.  Let me know if you would like that.

Yes, I would be very pleased if you could do that. I will
look after merging it into the arch branch.

I suggest that before zipping up your local stable build
that you *first* prune all the irrelevant stuff out of the
axiom zips directory. Only gcl-2.6.5 and related patches
are needed for the windows build. The rest of the files
can not be used with windows but took up more than half
of the space, last time you did this kind of upload.

> 
> Regarding cat, cd etc; even if you use the respective DOS 
> commands, those commands will still choke on the forward
> slash canonical path format used by Windows GCL.

I wrote a simple cat program that does this for Windows and
it is included in the most recent version of the Windows
installer. As far as I know, it is only needed for trivial
things like )summary.

> Sure, you can knock the paths into shape before calling
> system() but that still (apart from being a hassle) leaves 
> you open to the other problems I have previously mentioned.
> For this reason I recommend either doing those commands in
> Lisp as suggested by Camm last week or as a second best/
> temporary fix - cfuns-c.

Once I have a working windows build, I can debug the cfuns-c
if necessary. But I agree that the best approach is the use
the GCL native commands were possible (everywhere I think).
I think very soon cfuns-c should be made to disappear.

> I believe that si::chdir is the GCL directory setting Lisp
> equivalent.

Yes, that works. In Axiom the following command changes the
default directory:

  )lisp (si:chdir "new/directory")

but the native Axiom command

  )cd new/directory

does not work. Odd.

> I have so far only addressed mkdir via cfuns-c if my memory
> serves, but I believe that the best solution would be
> to add ensure-directory-exists to the stable build of GCL.
>

I agree.
 
> I would personally urge you to seriously consider solving 
> those system() related issues before doing an advertised
> public release.  They aren't major problems to solve and
> could have a fairly large negative impact on user expectations
> if left untended.

Well, there is still the open source philosophy "release often
..." So far we are way behind in that process. I am really not
so sure exactly what user expectations really are, but I do know
that nearly 250 people have already downloaded the current
windows binary. I am sure that if we have more (many more?)
interested users, then most of these issues will be resolved
sooner. After all, we are not "bringing a product to market"
here! It is more like we are trying to build a developer and
user community.

> 
> Finally, thanks for the enormous effort you have put into the 
> new installer.

Actual Dan Martens did most of the work. I am just tweaking if
by applying some off-the-shelf recipes from the NSIS web site.

> 
> More next week,
> 

Till then ... I hope you have time for the upload.

\start
Date: Mon, 13 Dec 2004 21:18:46 -0500
From: Bill Page
To: Bob McElrath
Subject: RE: Ask Slashdot

Bob,

Thanks for the tip.

Wow, this is pretty funny and scary stuff! Certainly a "hot
topic" if the number of replies to the original article is
any indication (> 250 replies in just 2 hours, is that normal
on slashdot?) . It appears Maxima wins hands down, followed
closely by "why not pencil and paper?". I see Axiom mentioned
once with our current url http://axiom.axiom-developer.org
(thank you someone ...)

But personally I am inclined to leave this kind of query to the
nerds who still think "that there is nothing out there that even
comes close to Wolfram's excellent Mathematica". Obviously they
are really looking... <grin>

Regards,
Bill Page.

> -----Original Message-----
> 
> "Ask Slashdot" has a very relevant question to Axiom, and a great
> opportunity to inform people about it:
> 
  http://ask.slashdot.org/article.pl?sid=04/12/13/2355258&tid=185&tid=4

\start
Date: Tue, 14 Dec 2004 17:04:06 +1000
From: Mike Thomas
To: Bill Page
Subject: RE: Release?

Hi Bill.

| Yes, I would be very pleased if you could do that. I will
| look after merging it into the arch branch.

Thanks and...

| 
| I suggest that before zipping up your local stable build
| that you *first* prune all the irrelevant stuff out of the
| axiom zips directory. Only gcl-2.6.5 and related patches
| are needed for the windows build. The rest of the files
| can not be used with windows but took up more than half
| of the space, last time you did this kind of upload.

done;  axiom-stable.tgz.

\start
Date: Tue, 14 Dec 2004 08:45:24 -0500
From: Tim Daly
To: Bill Page
Subject: Re: Release?
Cc: Mike Thomas

Bill,

>Yes, that works. In Axiom the following command changes the
>default directory:
>
>  )lisp (si:chdir "new/directory")
>
>but the native Axiom command
>
>  )cd new/directory
>
>does not work. Odd.

I tracked down the lisp code (function |cd| in src/interp/patches.lisp)
and it appears to do the same call. I'll load up an interpreted version
and trace the call to see what it is trying to do on windows.

\start
Date: Tue, 14 Dec 2004 09:00:22 -0500
From: Tim Daly
To: Bill Page
Subject: Re: Release?
Cc: Mike Thomas

Bill,

fyi, if you're going to do a lot of lisp debugging from the top
level loop of axiom you'll find it useful to do:

)lisp (setq boot::$dalymode t)

this has the effect of making any expression that begins with
an open paren into a call to lisp. Thus,

--> )lisp (+ 1 1)

can now be written directly as

--> (+ 1 1)

This is documented in src/interp/int-top.boot but you might have
missed it.

\start
Date: Tue, 14 Dec 2004 09:06:01 -0500
From: Tim Daly
To: Bill Page, Mike Thomas, Camm Maguire
Subject: GCL on Windows

Bill, Mike, Camm,

The |cd| function has a function call:

(user-homedir-pathname) ==> #P"~/"
(truename (user-homedir-pathname)) ==>
  Cannot get the truename of #P"~/"

Axiom uses this to set the current directory before calling the 
si::chdir function. We can work around this.

\start
Date: Tue, 14 Dec 2004 08:42:57 -0500
From: Tim Daly
To: Mike Thomas
Subject: Re: Release?
Cc: Bill Page

Bill, Mike,

I thought I applied all of the patches you sent but my overnight build
failed to start lisp. I'm downloading the axiom-stable.tgz now and I'll
diff them to see if I missed anything.

\start
Date: Tue, 14 Dec 2004 11:49:21 -0500
From: Eugene Surowitz
To: Bill Page
Subject: Re: Ask Slashdot

Actually the real problem here is the advertising leverage that query
and the uncritical nature of the response give to Mathematica.
How could such queries be spotted and more appropriate pointer responses
to math sites be generated?

Cheers, Eugene Surowitz

Bill Page wrote:

>Bob,
>
>Thanks for the tip.
>
>Wow, this is pretty funny and scary stuff! Certainly a "hot
>topic" if the number of replies to the original article is
>any indication (> 250 replies in just 2 hours, is that normal
>on slashdot?) . It appears Maxima wins hands down, followed
>closely by "why not pencil and paper?". I see Axiom mentioned
>once with our current url http://axiom.axiom-developer.org
>(thank you someone ...)
>
>But personally I am inclined to leave this kind of query to the
>nerds who still think "that there is nothing out there that even
>comes close to Wolfram's excellent Mathematica". Obviously they
>are really looking... <grin>
>
>>-----Original Message-----
>>
>>"Ask Slashdot" has a very relevant question to Axiom, and a great
>>opportunity to inform people about it:
>>
>>    
>>
>  http://ask.slashdot.org/article.pl?sid=04/12/13/2355258&tid=185&tid=4

\start
Date: Tue, 14 Dec 2004 09:33:15 -0800 (PST)
From: Cliff Yapp
To: Eugene Surowitz, Bill Page
Subject: Re: Ask Slashdot

As someone who is on slashdot waaay to much...

a)  This question has been asked before (I wish I had been online for
this one) and the responses are usually similar.  
b)  Mathematica has a very high reputation and is seldom challenged for
two reasons - power and interface.  Most people will not push
Mathematica into regions where it has trouble, and the ability to do 2D
input in Mathematica is a big, big, big usability boost.  That alone
puts it forward in people's minds as a polished tool.

--- Eugene Surowitz wrote:

> Actually the real problem here is the advertising leverage that query
> and the uncritical nature of the response give to Mathematica.
> How could such queries be spotted and more appropriate pointer
> responses to math sites be generated?

Best case, spot the article and be ready with some concrete examples
where Mathematica should work and doesn't. Realistically, make a
product that the casual user can't distinguish from Mathematica as far
as usability goes.  That's probably what it will take.
 
> >Wow, this is pretty funny and scary stuff! 

Heh - Slashdot in a nutshell.

> >Certainly a "hot topic" if the number of replies to the original 
> >article is any indication (> 250 replies in just 2 hours, is that
> >normal on slashdot?) 

Yep, quite normal.  Really "hot" stories can have over a thousand,
although 250 is pretty good for a specialized topic like math software.
 It helps that Mathematica and Maple are so expensive - open source
advocates always keep an eye out for good replacements to expensive
commercial tools.

> >It appears Maxima wins hands down, followed
> >closely by "why not pencil and paper?". I see Axiom mentioned
> >once with our current url http://axiom.axiom-developer.org
> >(thank you someone ...)

Maxima wins primarily because a) It's been in the "public eye" longer,
and b) it's fairly well integrated into the Windows and Linux operating
environments.  (Well, maybe that's stretching it on Windows, but it
does work pretty well.)  Also, I think there is a sense that Maxima is
more "practical, make the logical assumptions, get the calculation
done" while Axiom is "do it right, period."  Which is fine - there are
situations where you want both.  Maxima might even evolve a little
towards Axiom's style over time.  I think Axiom has the design moral
high ground, but Maxima is currently the program in the trenches.  I
guess I envision Maxima as starting on the road to being a better
Mathematica, and Axiom as being on the road to being something purer
than either, but a tad harder for mortals to get started on.

A 1.0 release will really boot Axiom into the "public eye", and will
get it a lot more eyeballs.  Plus, the presence of the Axiom book is a
big help.  Regardless, personally I'm still grooving out over having
TWO free, high quality CASs to use - talk about the end users being the
winners.

> >But personally I am inclined to leave this kind of query to the
> >nerds who still think "that there is nothing out there that even
> >comes close to Wolfram's excellent Mathematica". Obviously they
> >are really looking... <grin>

I agree, but they are right in two ways currently - as of yet no
TeXmacs or Emacs environment for any of the free CASs comes even close
to Mathematica's front end for smoothness and friendlyness.  I still
think that interface can be equaled or even exceeded, but to give
credit where it's due it won't be a simple task.

The second way Mathematica wins is third party extras.  The biggest one
I know of for Mathematica in academia is probably Feyncalc (I suspect
engineering has their own I don't know about.)  Feyncalc would, by
itself, keep whole physics departments on Mathematica.  By the same
token, that functionality in one or more free CASs might enable them to
switch.  Again, not trivial.  (I always wondered, though, if Axiom's
strong typing might ultimately lend itself to the kind of things
Feyncalc does...)

Of course, neither of those concerns will stop new, broke users from
seeking us out, but unfortunately there ARE still a few benefits to a
massive staff and development budget :-(.  We'll get 'em eventually
though.  :-)

\start
Date: Tue, 14 Dec 2004 15:54:50 -0500
From: Tim Daly
To: Bill Page
Subject: Re: Release?
Cc: Mike Thomas

Bill, Mike,

I retrieved the axiom tgz you uploaded, diffed it, modified the
windows branch with the diffs, and committed the changes. I'm
downloading a fresh version now to try another build on windows.
I can't yet guarantee that the patch-5 version is stable. I'll
let you know if and when it completes.

\start
Date: Tue, 14 Dec 2004 15:52:26 -0500
From: Bill Page
To: Cliff Yapp
Subject: RE: Ask Slashdot

On Tuesday, December 14, 2004 12:33 PM C Y wrote:
> ...
> b)  Mathematica has a very high reputation and is seldom 
> challenged for two reasons - power and interface.  Most
> people will not push Mathematica into regions where it
> has trouble, and the ability to do 2D input in Mathematica
> is a big, big, big usability boost.  That alone puts it
> forward in people's minds as a polished tool.

I have used both Maple and Mathematica extensively and all
I can say is that Mathematica has a better marketing strategy.
My experience with both is the main reason I am motivated to
help make Axiom available again. I think Axiom got a raw deal
when the commercial territory was staked out a few years ago.

> --- Eugene Surowitz wrote:
> 
> > Actually the real problem here is the advertising leverage 
> > that query and the uncritical nature of the response give
> > to Mathematica. How could such queries be spotted and more
> > appropriate pointer responses to math sites be generated?
>

Basically I think it is a lost cause. These people aren't
listening - they are talking.
 
> Best case, spot the article and be ready with some concrete
> examples where Mathematica should work and doesn't.

A waste of time - mostly. If you spend any time on the
Mathematica and/or Maple mailing lists you can find a lot of
examples where they don't work but should. That is normal.
People write research papers about this. I am more interested
however to know what the developers do when such problems
are identified. I think that it is here that open source
development could have a major advantage.

> Realistically, make a product that the casual user can't
> distinguish from Mathematica as far as usability goes.
> That's probably what it will take.

Again I think it isn't worth the effort. If people think they
want Mathematica (and have the money), great. The more people
learn about computer algebra systems the better. Later they
might learn what else they really want in such a system.
I think one has to take a long term view.

> ...
> I guess I envision Maxima as starting on the road to being
> a better Mathematica, and Axiom as being on the road to
> being something purer than either, but a tad harder for
> mortals to get started on.

I agree completely. I hope that we can do more to make
Axiom easier for the first time user. But I expect that
Axiom will continue to have the most appeal for "advanced"
users and developers.

> 
> [About exaggerated extolling of the virtues of Mathematica]
> I agree, but they are right in two ways currently - as of
> yet no TeXmacs or Emacs environment for any of the free CASs
> comes even close to Mathematica's front end for smoothness and
> friendliness.  I still think that interface can be equalled or
> even exceeded, but to give credit where it's due it won't be
> a simple task.

I have frequently argued against the amount of time and effort
that Maple's developers have devoted to user interface over the
last 5 years. (I think it is currently better than Mathematica
in some ways - worse in others) And in the most recent shift to
Java as the user interface platform it very nearly broke their
product until hardware advances and the subsequent .5 software
release caught up. Anyone can do user interface. But as far as
I am concerned it is the mathematics inside that counts.

Neither Maple nor Mathematica have anywhere near as complete
a mathematical document capability as TeXmacs and I don't
think they should even try to get to that stage. It would be
much better if they were to continue to move to a more open
development environment and encourage others (like TeXmacs)
and Scientific Workplace etc. to provide the interface.

All that I expect of a user interface for research purposes
is that it not be too distracting from the usual mathematical
notations used. From this point of view both Maple and
Mathematica have been adequate since earlier releases (aside
from some obvious typographical deficiencies which still exist
in both).

> 
> The second way Mathematica wins is third party extras.  The 
> biggest one I know of for Mathematica in academia is probably
> Feyncalc (I suspect engineering has their own I don't know
> about.)

There are many many well developed engineering and physics
applications for both Mathematica and Maple. E.g.

http://www.maplesoft.com/applications/index.aspx

Most of these have been developed by users. Most of these
users could have just as easily developed software for Axiom
or Maxima (some already have).

> ... unfortunately there ARE still a few benefits to a
> massive staff and development budget :-(.

I don't think that either Mathematica or Maple could be
described as having a "massive staff and development budget".
Both depend primarily on user developed applications and
research done by third parties. In the early days both of
them benefited greatly by the pioneering efforts of the
Axiom developers.

If you forget about user interface and look at how the
Maple development environment is changing over the last
few releases, it is obvious that it is evolving towards
the places where Axiom has already been. I don't think that
this is by accident.

\start
Date: Tue, 14 Dec 2004 16:59:25 -0500
From: Tim Daly
To: Bill Page
Subject: Re: GCL on Windows
Cc: Mike Thomas, Camm Maguire

So if we set the $HOME variable it would work? --t

\start
Date: Tue, 14 Dec 2004 16:26:11 -0500
From: Bill Page
To: William Sit
Subject: RE: Release?

William,

There is a new version of the Windows installer program for
Axiom accessible from

  http://page.axiom-developer.org/zope/mathaction/AxiomDownload

This version should install properly under Windows 98 and
should also start up immediately after installation. I also
solved the problem of missing 'cat' program on Windows so
the commands )summary etc. should now work.

The )cd command will need more work but in the mean time you
can use the equivalent lisp command as a work-around

  )lisp (si:chdir "your/directory")

Did you manage to get Axiom working from inside TeXmacs?

\start
Date: Tue, 14 Dec 2004 16:34:20 -0500
From: Bill Page
To: Tim Daly
Subject: RE: GCL on Windows
Cc: Camm Maguire, Mike Thomas

> 
> So if we set the $HOME variable it would work? --t
>

Yes.

When starting AXIOMsys under MSYS I get

bpage@CANDISSYSADMIN3 ~
$ axiomsys
                        AXIOM Computer Algebra System 
              Version of Tuesday November 30, 2004 at 21:11:14 
----------------------------------------------------------------------------
-
   Issue )copyright to view copyright notices.
   Issue )summary for a summary of useful system commands.
   Issue )quit to leave AXIOM and return to shell.
----------------------------------------------------------------------------
-
 
(1) -> )lisp (truename (si::getenv "HOME"))

Value = #P"c:/msys/1.0/home/bpage"
(1) -> 

-----------

But what should HOME be set to if we are not inside MSYS?

\start
Date: Tue, 14 Dec 2004 16:10:37 -0500
From: Bill Page
To: Camm Maguire
Subject: RE: GCL on Windows
Cc: Mike Thomas

On Tuesday, December 14, 2004 8:48 AM Camm Maguire wrote:
> 
> Greetigns!  Does Windows not recognize the ~ expansion in
> MSYS?  If it does, and gcl is not picking it up for some
> reason, I'd like to get the truename to work.  What about
> (truename (si::getenv "HOME"))?
> 

In MSYS ~ is expanded as $HOME = /home/username as you would
expect in a unix shell environment. But being a single user
system by design native Windows does not have any exact
equivalent of /home/username. Axiom for Windows does not
assume that it is run from within the MSYS environment.

The closest thing to /home/username is perhaps

  c:\Documents and Settings\username

on Windows 2000/XP systems but the analogy is not exact and
it is not used the same way by most windows applications.

Under Axiom for Windows we get

(1) -> )lisp (truename (si::getenv "HOME"))

   >> System error:
   Cannot coerce NIL to a PATHNAME.

------

because the environment variable HOME is not defined.

\start
Date: Tue, 14 Dec 2004 17:53:26 -0500
From: Tim Daly
To: Bill Page
Subject: re: GCL on Windows
Cc: Mike Thomas, Camm Maguire

Is there a way to set it during the install process?
Could we ask the user at that time?

\start
Date: Tue, 14 Dec 2004 17:54:15 -0500
From: Bill Page
To: Tim Daly
Subject: re: GCL on Windows
Cc: Camm Maguire, Mike Thomas

Tim wrote:

> 
> Is there a way to set it [HOME] during the install
> process? Could we ask the user at that time?
> 

Yes, I suppose we could ask the user what they want the
default directory for AXIOM to be and default it to, say

  c:\Documents and Settings\username\My Documents

(overridable by the user)

We could set the environment variable HOME to point there -
provided that HOME is not already pointing somewhere else
for some other purpose (possible but not likely).

It might be better if there was an AXIOM specific home,
like AXIOMHOME. Or we could default it to something off
the AXIOM variable that is pointing into the mnt/windows
tree. But since the default for installation is

  C:\Program Files

and it is not normal to store user editable files there,
this might not be such a good idea.

Unfortunately, even if we do set HOME, the GCL truename
function still does not currently work with "~/" in
GCL-2.6.5 on Windows. This is probably just an oversight
in the GCL coding.

------

I should clarify also that under newer versions of Windows,
since Windows 2000 at least, it is possible to setup Windows
for multiple users. It is possible to install programs that
are accessible to all users or to just to a specific user.
These versions of Windows map shortcuts like "My Documents"
(when referenced inside windows but not if used inside a
MSDOS shell) to username specific directories such as

  c:\Documents and Settings\username\My Documents

Other user's specific directories are normally protected
from access, depending on access rights etc. Some directories
can be shared by different users of the same system. On
these windows platforms it would be nice if GCL (and therefore
AXIOM) was aware of the shortcuts. It would not be unreasonable
then to interpret "~/" as the current user's Windows
"My Documents" shortcut.

Also, in an office network environment it is common for
some of the user specific directories to reside on network
drives for backup purposes etc. This could also complicate
matters for some people.

------

So in the end, I am not sure what the most general choice
of "HOME" should be for Windows users. Perhaps your suggestion
is best - to let the user decide at installation time - but
then this might be a difficult question for some less
experienced Windows users to answer, so we still need a
reasonable default. And this does not handle very well the
case when Axiom is installed for shared use by multiple
users of the same machine.

This requires some careful thought when trying to maximize
the portability between Linux and Windows.

\start
Date: Tue, 14 Dec 2004 19:15:59 -0500
From: Tim Daly
To: Bill Page
Subject: re: GCL on Windows
Cc: Camm Maguire, Mike Thomas

Bill,

Well I've gotten further with the Mike's merged patches.
The lisp image runs and is compiling files.

What tool is used to package axiom?
Can we make this part of the build for windows?

\start
Date: Tue, 14 Dec 2004 19:31:30 -0500
From: Tim Daly
To: Bill Page
Subject: re: GCL on Windows
Cc: Camm Maguire, Mike Thomas

Bill,

Oh, yeah, and just to complicate the axiom build (since we're
shipping a packaged binary for windows) you should know that
axiom will run faster if you remove all of the .o files in
the obj subdirectory and redo the make.

What happens is that the first make will not only create the
compiled files but will also output the .fn files. These files
contain exact information about types used in function calling.
If the type information for foo.lisp (or foo.lsp) is available
at compile time and the foo.fn file is available from a previous
compile then the lisp compiler can lay down much more efficient
code for function calling. Since axiom is all about function 
calling this will make a significant difference in speed.

\start
Date: Tue, 14 Dec 2004 19:32:28 -0500
From: Tim Daly
To: Bill Page
Subject: re: GCL on Windows
Cc: Camm Maguire, Mike Thomas

Bill, Mike,

The windows make just blew out as it started to compile the 
algebra code so there is still an as-yet unknown problem with
the windows--patch-5 branch.

\start
Date: Tue, 14 Dec 2004 19:00:17 -0500
From: Bill Page
To: Tim Daly
Subject: re: GCL on Windows
Cc: Camm Maguire, Mike Thomas

Tim,

On Tuesday, December 14, 2004 7:16 PM you wrote:
> 
> Well I've gotten further with the Mike's merged patches.
> The lisp image runs and is compiling files.

Great. I did a tla update for axiom--windows--1 on my windows
machine and also started an Axiom build just a few minutes ago.
On this machine the build usually takes about 2 hours. I will
let you know if/when it completes.

> 
> What tool is used to package axiom?

It is called NSIS (Nullsoft Scriptable Install System). See

  http://nsis.sourceforge.net

I downloaded and installed the 2.03 release.

> Can we make this part of the build for windows?

Yes, this should be quite easy. Of course you need NSIS
installed, then all you need is a script file that describes
the contents of the release. Using this script file the
NSIS "compiler" collects everything and outputs the installable
.exe file.

I can send you the current NSIS script file that I am using
if you like or you can get it by actually doing an install
from

  http://page.axiom-developer.org/axiom-windows-0.1.0.exe

You will find the script is called

  axiom.nsi

and is in the root of the axiom directory after the install.

\start
Date: Tue, 14 Dec 2004 20:48:05 -0500
From: Bill Page
To: William Sit
Subject: missing cat

On Tuesday, December 14, 2004 4:26 PM I wrote;

>...
> I also solved the problem of missing 'cat' program on Windows
> so the commands )summary etc. should now work.
> 

Oops. I just re-installed Axiom on another system and I get

(1) -> )summary
Can't open: C:/Program
Can't open: Files/axiom/mnt/windows/lib/summary

----------

I had earlier tested after installing Axiom in a directory
that did not contain a space in the name. Since the directory
name 'Program Files' contained a space and this string is
not delimited by Axiom when calling cat, the file name is
interpreted as two names. This would probably fail in Linux
also if Axiom was installed in a directory containing a space
in the name (possible but unusual in Linux, common in Windows).

I will see what I can do to get around this and post a new
version.

\start
Date: Tue, 14 Dec 2004 21:39:07 -0500
From: Tim Daly
To: Bill Page
Subject: Re: missing cat

Bill,

Did you build this version from axiom--windows--1--patch-5?
I'm curious because I can't get this version to compile.

\start
Date: Tue, 14 Dec 2004 21:02:28 -0500
From: Bill Page
To: Tim Daly
Subject: RE: missing cat

> 
> Did you build this version from axiom--windows--1--patch-5?
> I'm curious because I can't get this version to compile.
> 
> Tim

No, my build also failed like yours did. I saw this type
of failure before in my attempts to build Axiom for Windows
last week and I recall a specific patch that Mike sent which
fixed this problem. I will check back through my emails and
notes to see if I can find it. In the mean time I am now
attempting a build directly from the source uploaded by Mike
Thomas.

The 'cat' program is not part of this build. It is just a
simple replacement for the 'cat' command found in the
unix shell but not found in Windows.

\start
Date: Tue, 14 Dec 2004 18:32:19 -0800 (PST)
From: Cliff Yapp
To: Bill Page
Subject: re: GCL on Windows
Cc: Camm Maguire, Mike Thomas

> We could set the environment variable HOME to point there -
> provided that HOME is not already pointing somewhere else
> for some other purpose (possible but not likely).

Does the Windows version of Emacs require the HOME variable to be set? 
I can't recall for certain but I seem to remember it looks for .emacs
in HOME.

\start
Date: Tue, 14 Dec 2004 22:19:56 -0500
From: Tim Daly
To: Bill Page
Subject: Re: missing cat

Bill,

I found the problem. The 

)co AHYP.spad 

call will try to create a directory called "AHYP.erlib". If the
compile succeeds this will be moved to "AHYP.nrlib".

The compile is failing in the call:

 (makedir '("AHYP.erlib"))

Mike has added a makedir function as part of his changes so I'm
going to look at that in more detail.

\start
Date: Tue, 14 Dec 2004 19:44:35 -0800
From: Bob McElrath
To: list
Subject: Re: Ask Slashdot

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

Page, Bill wrote:

| On Tuesday, December 14, 2004 12:33 PM C Y wrote:
|
|> --- Eugene Surowitz wrote:
|>
|>> Actually the real problem here is the advertising leverage that
|>>  query and the uncritical nature of the response give to
|>> Mathematica. How could such queries be spotted and more
|>> appropriate pointer responses to math sites be generated?
|
| Basically I think it is a lost cause. These people aren't listening
|  - they are talking.

One should not underestimate the importance of advertising.  For every
person who posts on a site like slashdot, there are at least 50 people
just reading the comments, and at least some of those don't want to
hear "maple or mathematica" because they've already tried them (e.g.
me, a year ago).  While I don't think we should coordinate an
organized effort to find "ask slashdot" type websites, we should make
sure Axiom is available to those who go looking for it.  Attracting
users and potential developers is critically important to the survival
of an open source application.

The attitude that "let's make it great first, then tell people" is
guaranteed to prevent the project from attracting developers.

Someone should update the freshmeat page too:
http://freshmeat.net/projects/axiom/

\start
Date: Tue, 14 Dec 2004 22:44:42 -0500
From: Bill Page
To: Cliff Yapp
Subject: re: GCL on Windows
Cc: Mike Thomas, Camm Maguire

On Tuesday, December 14, 2004 9:32 PM C Y wrote:
> 
> Does the Windows version of Emacs require the HOME variable 
> to be set? I can't recall for certain but I seem to remember
> it looks for .emacs in HOME.
> 

I don't know about Emacs on Windows (never used it), but
other Linux programs ported to Windows that I have used
such as TeXmacs, GIMP, and arch do not define a HOME variable
however they do seem to all put their .files in the directory

  C:\Documents and Settings\username

This is a fairly reasonable choice for initialization files
which are not usually hidden and not edited directly by the
user but which are specific to a username. But unlike Linux,
this is not a particularly good choice as a place to store
user files since the Windows user has to perform some (usually
unfamiliar) navigation in the directory tree in order to find
this directory. On the other hand most users are immediately
familiar with the directory

  C:\Documents and Settings\username\My Documents

which appears as the 'My Documents' shortcut icon on their
desktop. This is the default location for the creation of
new user files. Novice windows users however may not be aware
that the above is it's full path name and that the 
My Documents directory of other users of the same machine
will be in a different path.

\start
Date: Tue, 14 Dec 2004 23:50:59 -0500
From: Tim Daly
To: Bob McElrath
Subject: Re: Ask Slashdot

If you search the archives on slashdot you can find my original 
announcement of axiom years ago. Perhaps we should "re-announce"
it as it is a current hot-topic. 

\start
Date: Tue, 14 Dec 2004 23:54:32 -0500
From: Tim Daly
To: Bob McElrath
Subject: Re: Ask Slashdot

freshmeat.net?
I didn't know axiom was there! 
Who is Cyril? It's cool that he took an interest.
It's always a pleasant surprise to find people doing things with axiom.

\start
Date: Tue, 14 Dec 2004 23:32:24 -0500
From: Bill Page
To: Tim Daly
Subject: lsp/Makefile.pamphlet

Tim,

In lsp/Makefile.pamphlet aren't you using the wrong patch?

<<gcl-2.6.5w.socket.patch>>=
       @(cd ${GCLVERSION}/h ; \
         echo 3 applying EXTRAS patch to h/linux.defs ; \
         patch <${SPD}/zips/${GCLVERSION}.h.linux.defs.patch )

----------

Shouldn't that be

         patch <${SPD}/zips/${GCLVERSION}.h.mingw.defs.patch )

??

Perhaps this might have something to do with the mkdir
problem?

Gee, I had a hard time doing the diff between your new
axiom--windows--1 tree and Mike's source considering all
the little changes you have been making ... Thank goodness
for all those extra little toggles on the diff command :)
I have compared almost everything else I could find and
aside from your port.lisp, everything seems pretty much
the same mod white space and some echo numbering.

I guess we will get this together sooner or later.

Meanwhile my build using Mike's source has progressed well
beyond where the other failed and I fully expect it will
finish as Mike advertised.

\start
Date: Wed, 15 Dec 2004 00:47:05 -0500
From: Tim Daly
To: Bill Page
Subject: Re: lsp/Makefile.pamphlet

actually, no. that isn't the problem. 
I made a mistake in the GCLVERSION variable. 
There is a GCLVERSION=gcl-2.6.5w to handle the windows patches.

\start
Date: Wed, 15 Dec 2004 00:40:58 -0500
From: Tim Daly
To: Bill Page
Subject: Re: lsp/Makefile.pamphlet

Yes, I just found that also. My mistake. Thanks.

You may find this useful. I'm going to add it to the sources:

\documentclass{article}
\usepackage{axiom}
\begin{document}
\title{\$SPAD/src/interp debugfile.lisp}
\author{Timothy Daly}
\maketitle
\begin{abstract}
\end{abstract}
\eject
\tableofcontents
\eject
\section{Axiom debugging}
In order to debug Axiom it is sometimes necessary to trace lisp functions.
This is tedious in the extreme. There are thousands of functions and the
stack gets very deep so finding function names (which are case-sensitive)
is time consuming.

In order to speed up this process there are a couple useful things to know.

First, the top level loop of Axiom will allow you to execute any lisp
function by typing:
\begin{verbatim}
)lisp (function arg arg...)
\end{verbatim}
This also quickly gets tedious. A slightly faster method is to do the
following:
\begin{verbatim}
)lisp (setq $dalymode t)
\end{verbatim}
This will change the top level read loop semantics so that any 
expression that starts with an open-paren is interpreted as lisp code.
Thus:
\begin{verbatim}
(1) -> (1 + 1)
   2
                         Type: PositiveInteger
(2) -> )lisp (setq $dalymode t)
Value = T

(2) -> (+ 1 1)
Value = 2

(2) ->
\end{verbatim}
Notice that the lisp expressions are not seen by the Axiom interpreter
and thus the expression numbers do not change.

It is also useful to know that when a lisp error occurs Axiom gives
you the choice of entering a lisp break loop or returning back to
the Axiom top level. The default is to return to the top level.
This can be changed by:
\begin{verbatim}
(1) -> 1/0
  >> Error detected within library code:
  division by zero
 
(1) -> )set break break
(1) -> 1/0
  >> Error detected within library code:
  division by zero
 
protected-symbol-warn called with (NIL)

Break.
Broken at FUNCALL. Type :H for Help.
BOOT>>:q
(1) ->
\end{verbatim}


The code in this file is useful for debugging the interpreter. If you
have a problem with a function, say [[|compColon|]], we find out what
file contains the code. In this case it is 
[[src/interp/compiler.boot.pamphlet]]. All of the pamphlet files for
the interpreter from the [[src/interp]] subdirectory will be extracted
as lisp source code in the [[int/interp]] subdirectory. Thus we want
the file [[int/interp/compiler.clisp]]. (Generally speaking [[.boot]]
files become [[.clisp]] files, for historical reasons).

The code in this file will allow you to trace every function in this
file with one command. There are two considerations. 

The first consideration is whether you want to trace compiled or
interpreted code.

If you want to trace the compiled code then just call the 
[[trace-file*]] functions. These functions expect a filename,
read the file looking for [[defuns]] and construct a proper call
to the [[trace]] macro.

If you want to load the interpreted code and then trace it call the
[[load-trace-file*]] functions.

The second consideration is whether you want regular trace output
or "noisy" trace output. 

The regular trace output uses the standard [[trace]] macro.

The "noisy" trace output uses [[:entry]] and [[:exit]] keywords
to attach output format functions.

So to trace interpreted [[compiler.boot]] functions you would:
\begin{verbatim}
)lisp (load-trace-file "int/interp/compiler.clisp")
\end{verbatim}
or the noisy version:
\begin{verbatim}
)lisp (load-trace-file-noisy "int/interp/compiler.clisp")
\end{verbatim}

To trace compiled [[compiler.boot]] functions you would:
\begin{verbatim}
)lisp (trace-file "int/interp/compiler.clisp")
\end{verbatim}
or the noisy version:
\begin{verbatim}
)lisp (trace-file-noisy "int/interp/compiler.clisp")
\end{verbatim}

\section{The trace function in GCL}
Example of tracing a function "fact" so that only the outermost call is traced.
\begin{verbatim}
(defun fact (n) (if (= n 0) 1 (* n (fact (1- n)))))

(defvar in-fact nil)

(trace (fact :declarations ((in-fact nil))
	     :cond
	     (null in-fact)
	     :entry
	     (progn
	       (setq in-fact t)
	       (princ "Here comes input ")
	       (cons 'fact arglist))
             :exit
             (progn (setq in-fact nil)
		    (princ "Here comes output ")
                    (cons 'fact values))))
\end{verbatim}
Example of tracing fact so that only three levels are traced
\begin{verbatim}
(trace (fact :declarations
	     ((fact-depth 0))
	     :cond
	     (and (< fact-depth 3)
		  (setq fact-depth (1+ fact-depth)))
	     :exit
	     (progn (setq fact-depth (1- fact-depth)) (cons 'fact values))))
\end{verbatim}
\section{load-trace-file}
The trace-file function expects a source file as its argument.
It reads the lisp forms in the file looking for and remembering
the package name. It looks for every [[defun]] form in the file
and wraps a call to [[trace]] around the form. The [[trace-file]]
function assumes that the file has already been loaded.

The load-trace-file function will load the file first. This is 
useful because you will get interpreted forms which gives more
debugging information.
<<load-trace-file>>=
(defun load-trace-file (file)
 (load file)
 (trace-file file))

(defun trace-file (file)
 "hang a trace call on all of the defuns in a file"
 (let (expr (package "BOOT"))
  (format t "monitoring ~s~%" file)
  (with-open-file (in file)
   (catch 'done
    (loop
     (setq expr (read in nil 'done))
     (when (eq expr 'done) (throw 'done nil))
     (if (and (consp expr) (eq (car expr) 'in-package))
      (if (and (consp (second expr)) (eq (first (second expr)) 'quote))
       (setq package (string (second (second expr))))
       (setq package (second expr)))
      (when (and (consp expr) (eq (car expr) 'defun))
       (print (list 'trace (intern (string (second expr)) package)))
       (eval (list 'trace (intern (string (second expr)) package) )))))))))

@
\section{load-trace-file-noisy}
The [[trace-file-noisy]] function expects a source file as its argument.
It reads the lisp forms in the file looking for and remembering
the package name. It looks for every [[defun]] form in the file
and wraps a call to [[trace]] around the form. The [[trace-file-noisy]]
function assumes that the file has already been loaded.

The GCL [[trace]] macro accepts keyword arguments. We exploit that
fact to give a readable execution trace. The trace will look something
like:
\begin{verbatim}
1> (:ENTER firstFunction (arg arg arg...))
  2> (:ENTER secondFunction (arg arg arg...))
    3> (:ENTER thirdFunction (arg arg arg...))
    3> (:EXIT thirdFunction (result result ...))
  2> (:EXIT secondFunction (result result ...))
1> (:EXIT firstFunction (result result ...))
\end{verbatim}
It may be useful to define your own entry and exit forms.
On entry the GCL [[trace]] macro wraps a [[let]] form that 
binds the variable [[si::arglist]] to the list of arguments. 
On exit the [[trace]] macro binds [[si::values]].

The load-trace-file-noisy function will load the file first. This is 
useful because you will get interpreted forms which gives more
debugging information.
<<load-trace-file-noisy>>=
(defun load-trace-file-noisy (file)
 (load file)
 (trace-file-noisy file))

(defun trace-file-noisy (file)
 "hang a trace call on all of the defuns in a file"
 (let (expr (package "BOOT"))
  (format t "monitoring ~s~%" file)
  (with-open-file (in file)
   (catch 'done
    (loop
     (setq expr (read in nil 'done))
     (when (eq expr 'done) (throw 'done nil))
     (if (and (consp expr) (eq (car expr) 'in-package))
      (if (and (consp (second expr)) (eq (first (second expr)) 'quote))
       (setq package (string (second (second expr))))
       (setq package (second expr)))
      (when (and (consp expr) (eq (car expr) 'defun))
       (print 
         (list 
          'trace (list (intern (string (second expr)) package) 
            :entry 
             (list 'list ':enter (list 'quote (second expr)) 'si::arglist)
            :exit  
             (list 'list ':exit (list 'quote (second expr)) 'si::values))))
       (eval 
        (list 
         'trace (list (intern (string (second expr)) package) 
           :entry 
            (list 'list ':enter (list 'quote (second expr)) 'si::arglist)
           :exit  
            (list 'list ':exit (list 'quote (second expr)) 'si::values))))
      )))))))

@
\section{fast-links}
GCL optimizes function calling in a reversible way. The first call to
a function will set up a fast calling link. This feature is on by default.
It considerably speeds up function calling. If the function is recompiled,
traced, or redefined this link is undone. In order to get better debugging
information we turn this feature off.
<<fast-links>>=
(si::use-fast-links nil)

@
<<*>>=
<<fast-links>>
<<load-trace-file>>
<<load-trace-file-noisy>>
@
\eject
\begin{thebibliography}{99}
\bibitem{1} nothing
\end{thebibliography}
\end{document}

\start
Date: Wed, 15 Dec 2004 01:23:15 -0500
From: Tim Daly
To: Bill Page
Subject: Re: lsp/Makefile.pamphlet

Bill,

I had a few typos in that Makefile.pamphlet for the windows patches
which I've now fixed. They should be on arch shortly.

In GCL if you have exact type information the function calling
can be reduced by quite a few instructions (possibly by 100
instructions or more if memory serves me). Normal function 
calling has to do type-casing. The exact type information allows
a good lisp implementation to elide this.

The best way to see this is to run disassemble on the function
before and after. I did a lot of this with the AKCL and CMUCL
implementations. In fact, CMUCL was so good that I could get

(+ a b)

to reduce to one instruction on the IBM RT with proper declarations.
Of course you have to declare it something like:

(the fixnum (+ (the fixnum a) (the fixnum b))) 

or some such. I believe some of the macros I wrote do a lot of
this kind of expansion. I also load proclaims.lisp into the image
so GCL function type information is available. 

Schelter and I worked quite a bit on speeding up function calling
as much as possible. If I remember correctly the fast-links code
will trade space (a link) for speedup.

If you look in src/boot you'll see a newly created file called
boot-proclaims.lisp which is part of my recent efforts to optimize
the system. I plan to push it as far as I can. Eventually the 
makefiles will automatically re-compile the lisp code to get the
optimization information and type optimization will be pushed
into the algebra code. I'm just not there yet.

\start
Date: Wed, 15 Dec 2004 00:20:04 -0500
From: Bill Page
To: Tim Daly
Subject: RE: lsp/Makefile.pamphlet

Tim

You wrote:

> 
> actually, no. that isn't the problem. 
> I made a mistake in the GCLVERSION variable. 
> There is a GCLVERSION=gcl-2.6.5w to handle the windows patches.
>

I presume that

<<gcl-2.6.5w.socket.patch>>=
       @(cd ${GCLVERSION}/h ; \
         echo 3 applying EXTRAS patch to h/linux.defs ; \
         patch <${SPD}/zips/${GCLVERSION}.h.linux.defs.patch )

is invoked by GCLVERSION=gcl-2.6.5w but it should specify the
mingw patch, right?

----------

My build using Mike's sources just completed normally. It
built the databases and ran all of the tests. It finally
aborted trying to compile clef, but that is expected and
not needed for the Windows build.

In this version the )cd command works properly. So it
seems that Mike has already included a patch for that.
I will now delete the .o in the obj directory and rebuild
as you suggested before I put this new windows binary on
axiom-developer. I will be very impressed if this makes
Axiom eveb faster since it already seems fast to me under
windows.

\start
Date: Wed, 15 Dec 2004 00:39:48 -0500
From: Bill Page
To: Tim Daly
Subject: RE: lsp/Makefile.pamphlet

> I will now delete the .o in the obj directory and rebuild
> as you suggested before I put this new windows binary on
> axiom-developer. I will be very impressed if this makes
> Axiom eveb faster since it already seems fast to me under
> windows.

I delete the *.o files from

  obj/windows/interp/*.o

and

  obj/windows/boot/*.o

Is that all? Then run make again. Correct?

The second build completed VERY quickly (about 5 minutes)
and the result was an AXIOMsys file that was about 1.4 Mb
larger and does seem to run faster. But I need a more
serious test. Is there a way to just run the test sequence?

\start
Date: Wed, 15 Dec 2004 01:29:11 -0500
From: Tim Daly
To: Bill Page
Subject: Re: lsp/Makefile.pamphlet

Bill,

In order to rerun the test cases you can just

rm int/input/*.output
make

\start
Date: Wed, 15 Dec 2004 02:26:55 -0500
From: Tim Daly
To: Bill Page
Subject: Re: lsp/Makefile.pamphlet

Bill,

patch-7 is committed. this builds on gcl-2.6.5w which is the standard
version with mike's patches (reversed) and a bunch of typo fixes.
i'm building it now. it should fix the makedir bug.

\start
Date: Wed, 15 Dec 2004 02:49:48 -0500
From: William Sit
To: Bill Page
Subject: Re: Release?

Dear Bill:

Thanks again for all the suggestions you sent. However, I am fully occupied for
the rest of this week (end of term rush) and next, if not all the way to end of
the year! (This is due to an article I "should have" finished end of November).

I'll try to continue testing the Windows version when I get a moment to spare
(trouble is, I have not developed Tim's multi-tasking ability -- still a single
processor CPU :-(  )

Some of the Axiom related work involves the April conference Tim mentioned,
where the plan is to explore whether we can quickly write some Axiom package to
simulate Matlab functions that are used in our calculus sequence. I also have
some mathematica notebooks for a differential equations course (a kind of
package not done to Wolfram standard, but very usable by students as tutorials),
but I am afraid at least for the foreseeable future, transporting it to Axiom is
not possible. If you are interested, you may download this from my course web
site:

http://scisun.sci.ccny.cuny.edu/~wyscc/Math391/DiffEqn.html

At CAISS, we believe that if we can get Axiom into the courses, we can get a
huge user base. But a prerequisite for that is a Windows version with easy user
interface. I think the user interface of Mathematica is way ahead, not just
because of the fancy fonts or layout or palettes, but also the style sheets and
PROGRAMMABLE Frontend. I used a lot of these features in my DiffEqn package.
There are of course many weaknesses (and strengths) in the design of
Mathematica.

\start
Date: Wed, 15 Dec 2004 03:39:51 -0500
From: William Sit
To: Bill Page
Subject: re: GCL on Windows
Cc: Camm Maguire, Mike Thomas

Hi Bill:

"Page, Bill" wrote:
> 
> Tim wrote:
> 
> >
> > Is there a way to set it [HOME] during the install
> > process? Could we ask the user at that time?
> >
> 
> Yes, I suppose we could ask the user what they want the
> default directory for AXIOM to be and default it to, say
> 
>   c:\Documents and Settings\username\My Documents
> 
> (overridable by the user)

Simply asking this location at install time is not good, as was already pointed
out that this default may not be known to a naive Windows user,  may not be
desirable by other users, and in network environment, may be mapped to various
drive letters.

Two possible solutions may work across all Windows platforms. The first is to
use an axiom.ini file in the c:\windows directory to store all user information
(one section per user on the machine) that includes any Linux environmental
variable, user directories, etc, and a global section to store function call
translations (like cat to type). This file is easily editable by a user, or be
protected in W2k or XP.  The second is to put the info in the Registry.

 
> We could set the environment variable HOME to point there -
> provided that HOME is not already pointing somewhere else
> for some other purpose (possible but not likely).

Either of the above suggestions will not have conflicts since the axiom.ini or
registry entries are local information only.
 
> It might be better if there was an AXIOM specific home,
> like AXIOMHOME. Or we could default it to something off
> the AXIOM variable that is pointing into the mnt/windows
> tree. But since the default for installation is
> 
>   C:\Program Files
> 
> and it is not normal to store user editable files there,
> this might not be such a good idea.

The axiom.ini file can reside anywhere, in particular in the installed axiom
directory. The registry is editable and while most naive users (like students)
will not venture to do so, it is not a difficult thing to do so when guided by
the guru.
Alternatively, a simple menu type program can be written to allow
"configuration" with actual changes to axiom.ini or the registry hidden from the
user.

As to the problem about path syntax, in order to be as portable as possible, we
may follow the method used by Mathematica. It breaks up a path into its
component as strings without the separators and then provides functions to piece
them back together according to the operating system. I have no trouble at all
transporting my Mathematica notebooks that involves paths across linux, windows,
and Macs or networks. Frequently used and more or less fixed paths can be
assigned to global variables that would be initialized at the start of the
program session. (For example, Mathematica has $InstallDirectory,
$PreferencesDirectory).  Axiom already has a FileNameCategory and FileName
domain with common facilities.

\start
Date: Wed, 15 Dec 2004 06:05:24 -0500
From: Bill Page
To: Tim Daly
Subject: axiom--windows--1 build

Tim,

> 
> patch-7 is committed. this builds on gcl-2.6.5w which is the
> standard version with mike's patches (reversed) and a bunch
> of typo fixes. i'm building it now. it should fix the makedir
> bug.
> 

Looks good! I did a tla update of axiom--windows--1 and ran
the build last night. Now the build completes the same way
as Mike's original.

Great.

So what bugs should we kill first? These are the ones
I know of so far:

1) )cd with no parameter still returns path error, but
   should be user's HOME directory. Should GCL expand ~
   as USERPROFILE on windows?.

   Note that )cd pathname now works and so does )cd .

2) Use of cat, rm, ls in BOOT must be replaced with lisp

3) Add NSIS installer script and build commands to Windows
   section of Makefile.pamphlet

4) Test sockets in GCL for Windows

5) Compile sman and graphics. What graphics API for Windows?
   We do not have X but is there a Windows compatible
   library? Can we support at least postscript file
   generation?

Anything else to start?

\start
Date: Wed, 15 Dec 2004 05:47:39 -0800 (PST)
From: Cliff Yapp
To: Tim Daly, Bob McElrath
Subject: Re: Ask Slashdot

--- Tim Daly wrote:

> If you search the archives on slashdot you can find my original 
> announcement of axiom years ago. Perhaps we should "re-announce"
> it as it is a current hot-topic. 

Hmm - as usual, slashdot's wonderful archive search fails to turn up
anything.  Yes, I think a 1.0 re-announce would be a good thing - after
all, now Axiom is a "real" product and not just coming RSN.

\start
Date: Wed, 15 Dec 2004 15:43:54 +0100
From: Martin Rubey
To: Cliff Yapp
Subject: Re: Beta Announcement
Cc: Bob McElrath

I suggest that I send out the following anouncement tommorow on:

Slashdot
Freshmeat
sci.math.symbolic 
comp.lang.lisp

I've put it on 

http://page.axiom-developer.org/zope/mathaction/AxiomRelease10Beta

please feel free to improve it.

-------------------------------------------------------------------------------

Announcing Axiom 1.0 BETA

This is to inform you that the free computer algebra system Axiom has now
reached a very useable state.

Axiom is a general purpose Computer Algebra system. It is useful for research
and development of mathematical algorithms. It defines a strongly typed,
mathematically correct type hierarchy. It has a programming language and a
built-in compiler.

Axioms homepage is at

http://axiom.axiom-developer.org/

Instructions to download Axiom for the various platforms, including linux and
MS Windows can be found at

http://page.axiom-developer.org/zope/mathaction/AxiomDownload

The licenses under which the various parts of Axiom are released can be found
at

http://page.axiom-developer.org/zope/mathaction/Copyright

Since the wishlist 

http://page.axiom-developer.org/zope/mathaction/WishList

is long, we decided to provide bounties, i.e. small amounts of money, for
people willing to implement some features. Among others, we need people who
would like to 

* integrate a LaTeX-rendering engine into our Wiki
  http://page.axiom-developer.org/zope/mathaction

* know how to resurrect the connection to the alternative compiler Aldor

* know enough Lisp to make graphics work on MS Windows


If you would like to implement one of the above features, please contact us at

list

\start
Date: Wed, 15 Dec 2004 11:22:25 -0500
From: Tim Daly
To: William Sit
Subject: re: GCL on Windows
Cc: Bill Page, Mike Thomas, Camm Maguire

William,

>As to the problem about path syntax, in order to be as portable as
>possible, we may follow the method used by Mathematica. It breaks up a
>path into its component as strings without the separators and then
>provides functions to piece them back together according to the
>operating system. I have no trouble at all

Internally Axiom maintains filenames as a list of strings.

\start
Date: Wed, 15 Dec 2004 10:51:19 -0500
From: Bill Page
To: Camm Maguire
Subject: RE: missing cat

Camm Maguire [mailto:Camm Maguire] wrote:

> What about a lisp cat, like:
> 
> (with-open-file (st "/etc/printcap") (si::copy-stream st 
> *standard-output*))
> 

Exactly! Thanks for the tidy code. That goes somewhere in
axiom boot and/or interp, of course replacing /etc/printcap
by truename of what comes after )summary ...

\start
Date: Wed, 15 Dec 2004 12:33:30 -0500
From: Tim Daly
To: Martin Rubey
Subject: Re: Beta Announcement
Cc: Bob McElrath

Martin,

That seems ok to me.

\start
Date: Wed, 15 Dec 2004 12:29:53 -0500
From: Tim Daly
To: Bill Page
Subject: Re: axiom--windows--1 build
Cc: Camm Maguire

Bill,

>Looks good! I did a tla update of axiom--windows--1 and ran
>the build last night. Now the build completes the same way
>as Mike's original.

humpf. I started my build at 2:30am and it's only at layer 9
(of 23) of the algebra build. Windows development is going to
be painful for me.

>
>Great.
>
>So what bugs should we kill first? These are the ones
>I know of so far:
>
>1) )cd with no parameter still returns path error, but
>   should be user's HOME directory. Should GCL expand ~
>   as USERPROFILE on windows?.

I believe this will also impact the underlying lisp since
there are issues such as truename does not handle ~ properly.
Perhaps we can wait until this one is solved by GCL? 

>   Note that )cd pathname now works and so does )cd .

In your version or the --patch-5 version? I can't test
it until the compile completes which won't be until
later this afternoon (auuggghhh.. 12 hour builds!)

>2) Use of cat, rm, ls in BOOT must be replaced with lisp

This might be a good place to start. There is a new file
src/interp/port.lisp.pamphlet which would be a good place
to put this code as I'm sure every lisp will do it differently.

>3) Add NSIS installer script and build commands to Windows
>   section of Makefile.pamphlet

I'd do this first. We could probably do a 'make package' where
the 'package:' stanza was target specific. Thus on windows
it would build using the installer and on linux it would build
using tgz. 

The reason to do this first is that there is expertise about
how to build the package which no one needs to learn. Makefiles
are a very good way to encode this expertise so "it just works".

>4) Test sockets in GCL for Windows
>
>5) Compile sman and graphics. What graphics API for Windows?
>   We do not have X but is there a Windows compatible
>   library? Can we support at least postscript file
>   generation?

I looked at this for a short while. This is going to be a long,
hard problem for every system. There is the possibililty that
we could use TK, which is an interpreted X-windows like front end.
Perhaps there is a windows version of TK. 

We do need to figure out the socket stuff. Ideally we could
leverage the effort by figuring out how to do sockets from 
GCL. Once we figure that out it should be possible to move
the socket code out of C and into lisp. This would make Axiom
more portable in general. Since we're going to struggle with
this anyway we might as well do it right.

>
>Anything else to start?

On Windows the lisp compiles are getting complains that '-mcpu='
is deprecated. Use '-mtune=' or '-march='. Are you seeing the same 
message?

\start
Date: Wed, 15 Dec 2004 18:20:36 +0100
From: Martin Rubey
To: Tim Daly
Subject: re: axiom--windows--1 build
Cc: Camm Maguire, Bill Page

root writes:

 > >5) Compile sman and graphics. What graphics API for Windows?
 > >   We do not have X but is there a Windows compatible
 > >   library? Can we support at least postscript file
 > >   generation?
 > 
 > I looked at this for a short while. This is going to be a long, hard problem
 > for every system. There is the possibililty that we could use TK, which is
 > an interpreted X-windows like front end.  Perhaps there is a windows version
 > of TK.

I think maxima uses TK and yes, TCL/TK does exist for MS Windows. If you want
to follow this root, maxima people will very probably be of great help.

\start
Date: Wed, 15 Dec 2004 18:36:11 +0100
From: Martin Rubey
To: list
Subject: linux: sman not built

I just fetched axiom--main--1--patch-13 via tla/arch and built it, but it
doesn't seem to produce an "sman" binary.

The make stops with

967a making /home/rubey/axiom--main--1--patch-13/int/input/wiggle.output from /home/rubey/axiom--main--1--patch-13/int/input/wiggle.input
/bin/sh: line 1: sman: command not found


???
(I'm using Mandrake 9.2)

\start
Date: Wed, 15 Dec 2004 09:38:57 -0800 (PST)
From: Kathy Gerber
To: list
Subject: Minor bugs

Hi everyone -

I have been subscribed to this list for quite some time.  Usually, I am 
too busy or overloaded with other activities and pass on by.

However, I thought that the least I could do was to try to do some basic 
testing ahead of your news announcement.

So already I see  problems in the Windows release.  Here are the results:

                        AXIOM Computer Algebra System
             Version of Wednesday December 15, 2004 at 00:50:38
-----------------------------------------------------------------------------
   Issue )copyright to view copyright notices.
   Issue )summary for a summary of useful system commands.
   Issue )quit to leave AXIOM and return to shell.
-----------------------------------------------------------------------------

   Re-reading compress.daase   Re-reading interp.daase
   Re-reading operation.daase
   Re-reading category.daase
   Re-reading browse.daase
(1) -> round(-3.72)
   Loading C:/Program Files/axiom/mnt/windows/algebra/FLOAT.o for
      domain Float

   (1)  - 5.0
                                                                  Type: 
Float
(2) -> truncate(9.2)

   (2)  9.0
                                                                  Type: 
Float
(3) -> truncate(-9.6)

   (3)  - 10.0
                                                                  Type: 
Float
(4) -> fractionPart(-3.7)
   Loading C:/Program Files/axiom/mnt/windows/algebra/FPS-.o for domain
      FloatingPointSystem&
   Loading C:/Program Files/axiom/mnt/windows/algebra/RNS-.o for domain
      RealNumberSystem&

   Loading C:/Program Files/axiom/mnt/windows/algebra/UNISEG.o for
      domain UniversalSegment
   (4)  0.3
                                                                  Type: 
Float
(5) ->



I am running 32 bit XPSP2 on AMD 64 bit.

Please let me know if this is the incorrect list.

Thanks for all your hard work.

\start
Date: Wed, 15 Dec 2004 19:10:23 +0100
From: Martin Rubey
To: Kathy Gerber
Subject: Re: Minor bugs
Cc: list

Hi Kathy,

these are known bugs:

bug #4733 overview: Floating point error round(-3.77623) etc.

However, since there is a proposed fix (look at Patches at savannah), it does
not appear to be open.

I'll add a remark to the release notes -- although I do not understand why we
don't apply these patches...

\start
Date: Wed, 15 Dec 2004 13:57:34 -0500
From: Tim Daly
To: Kathy Gerber
Subject: Re: Minor bugs

Kathy,

Yes, this is the right list.
Thanks for the bug report. 

If I recall correctly this was a problem a long time ago
and resolved into an issue in lisp. Perhaps something got
broken in the GCL build?

================================================================

Hi everyone -

I have been subscribed to this list for quite some time.  Usually, I am 
too busy or overloaded with other activities and pass on by.

However, I thought that the least I could do was to try to do some basic 
testing ahead of your news announcement.

So already I see  problems in the Windows release.  Here are the results:

                        AXIOM Computer Algebra System
             Version of Wednesday December 15, 2004 at 00:50:38
-----------------------------------------------------------------------------
   Issue )copyright to view copyright notices.
   Issue )summary for a summary of useful system commands.
   Issue )quit to leave AXIOM and return to shell.
-----------------------------------------------------------------------------

   Re-reading compress.daase   Re-reading interp.daase
   Re-reading operation.daase
   Re-reading category.daase
   Re-reading browse.daase
(1) -> round(-3.72)
   Loading C:/Program Files/axiom/mnt/windows/algebra/FLOAT.o for
      domain Float

   (1)  - 5.0
                                                                  Type: 
Float
(2) -> truncate(9.2)

   (2)  9.0
                                                                  Type: 
Float
(3) -> truncate(-9.6)

   (3)  - 10.0
                                                                  Type: 
Float
(4) -> fractionPart(-3.7)
   Loading C:/Program Files/axiom/mnt/windows/algebra/FPS-.o for domain
      FloatingPointSystem&
   Loading C:/Program Files/axiom/mnt/windows/algebra/RNS-.o for domain
      RealNumberSystem&

   Loading C:/Program Files/axiom/mnt/windows/algebra/UNISEG.o for
      domain UniversalSegment
   (4)  0.3
                                                                  Type: 
Float
(5) ->



I am running 32 bit XPSP2 on AMD 64 bit.

Please let me know if this is the incorrect list.

Thanks for all your hard work.

\start
Date: Wed, 15 Dec 2004 13:26:36 -0500
From: Bill Page
To: Martin Rubey
Subject: RE: Minor bugs

On Wednesday, December 15, 2004 1:10 PM Martin Rubey wrote: 
> 
> Hi Kathy,
> 
> these are known bugs:
> 
> bug #4733 overview: Floating point error round(-3.77623) etc.
> 
> However, since there is a proposed fix (look at Patches at 
> savannah), it does not appear to be open.
> 
> I'll add a remark to the release notes -- although I do not 
> understand why we don't apply these patches...
> 

I submitted a patch to correct this problem almost two years
ago .... arghh I can't believe we've been at this for that
long already! Yes, Tim please let's apply the patches that
have been waiting in Savannah! Would you like me to put
these patches into the axiom--windows--1 and axiom--main-1
branches on arch?

\start
Date: Wed, 15 Dec 2004 19:34:11 +0100
From: Martin Rubey
To: Tim Daly
Subject: Re: Minor bugs

Dear Tim,

I just checked with my brand-new build and found that also bug #5977 overview:
x^2+1::DMP([x],INT) still exists, even though it is marked as fixed. Worse,
there is no patch-file on savannah!

Furthermore, I can't find an executeable sman...

\start
Date: Wed, 15 Dec 2004 14:31:14 -0500
From: Tim Daly
To: Bill Page
Subject: Re: Minor bugs

Bill,

First make a .input file that contains these test cases
and add it to the src/input subdir and Makefile.pamhlet.

Yes, please apply them to axiom--main and axiom--windows.
After applying the patches we need to do a complete rebuild
from the tla sources (be sure you download them fresh from
the archive as I've been burned in the past by assuming that
my copy was clean).

Let me know 
 (a) when the patches are applied (i'll also test them here)
 (b) when the rebuilds are cleanly compiled and the .input passes

at which point we can tag the axiom--main build and push it to
savannah.

\start
Date: Wed, 15 Dec 2004 19:50:31 +0100
From: Martin Rubey
To: Martin Rubey
Subject: Re: linux: sman not built

OK, this is easy to fix. Clearly, inputdir should be build *after* sman was
built...

Tim, do you want me to submit this to savannah or can you fix this immediately?

Martin

[rubey axiom--main--1--patch-13]$ diff -Naur src/Makefile src/Makefile~
--- src/Makefile        2004-12-15 19:42:27.000000000 +0100
+++ src/Makefile~       2004-12-15 13:47:06.000000000 +0100
@@ -1,7 +1,7 @@

 SETUP=scriptsdir libdir
-DIRS=bootdir interpdir sharedir algebradir  etcdir clefdir docdir \
-     graphdir smandir inputdir
+DIRS=bootdir interpdir sharedir algebradir inputdir etcdir clefdir docdir \
+     graphdir smandir
 DOCS=scriptsdocument libdocument ${DIRS:dir=document}
 CLNS=scriptsclean libclean ${DIRS:dir=clean}


Martin Rubey writes:
 > I just fetched axiom--main--1--patch-13 via tla/arch and built it, but it
 > doesn't seem to produce an "sman" binary.
 > 
 > The make stops with
 > 
 > 967a making /home/rubey/axiom--main--1--patch-13/int/input/wiggle.output from /home/rubey/axiom--main--1--patch-13/int/input/wiggle.input
 > /bin/sh: line 1: sman: command not found
 > 
 > 
 > ???
 > (I'm using Mandrake 9.2)
 > 
 > Martin

\start
Date: Wed, 15 Dec 2004 14:42:11 -0500
From: Tim Daly
To: Martin Rubey
Subject: re: linux: sman not built

Martin,

>OK, this is easy to fix. Clearly, inputdir should be build *after* sman was
>built...
>
>Tim, do you want me to submit this to savannah or can you fix this immediately?

I've already fixed this locally. I'll do a commit.

\start
Date: Wed, 15 Dec 2004 11:00:19 -0800 (PST)
From: Cliff Yapp
To: Martin Rubey, Tim Daly
Subject: re: axiom--windows--1 build
Cc: Camm Maguire, Bill Page

--- Martin Rubey wrote:

> I think maxima uses TK and yes, TCL/TK does exist for MS Windows. If
> you want to follow this root, maxima people will very probably be of 
> great help.

The xmaxima frontend and openmath plotting are written in TCL/TK.  I
personally don't care for them, and most of our folk dislike messing
with the code IIRC, but they do get the job done. 

A couple questions to help bring the problem into focus:

a)  Do you want to impliment the exact plotting abilities of the
current axiom code in Windows?

b)  If so, are there any native windows plotting programs from which
the effort could start?  (Essentially, use the code as a guide on how
to do various things in Windows, and reimpliment axiom's graphics
exactly.)

c)  If not, what about using a library like VTK (which is cross
platform) to impliment the functionality but maybe not the exact look?
VTK has maintainers of its own and by all accounts I have seen is
extremely powerful and polished.  http://public.kitware.com/VTK/ 
Unfortunately no lisp bindings though - it would have to be FFI or
socket communications.

d)  A third course is to use some third party program for plotting on
Windows, which might not be as nice as Axiom's plotting for X systems
but will provide at least some functionality.  Maxima's current default
choice on all platforms is gnuplot - we want to make something better
somday, but will most likely need to do it ourselves.  

\start
Date: Wed, 15 Dec 2004 14:44:46 -0500
From: Tim Daly
To: Martin Rubey
Subject: re: linux: sman not built

Martin, Bill,

>OK, this is easy to fix. Clearly, inputdir should be build *after* sman was
>built...
>
>Tim, do you want me to submit this to savannah or can you fix this immediately?

commit complete. --patch-14

\start
Date: Wed, 15 Dec 2004 20:06:06 +0100
From: Martin Rubey
To: Tim Daly
Subject: Re: Minor bugs
Cc: Bill Page

Please make sure that

bug #5977 overview: x^2+1::DMP([x],INT)

also gets fixed! (Or, if this is not possible, the status of the bug is
reversed to "open")

root writes:
 > Bill,
 > 
 > First make a .input file that contains these test cases and add it to the
 > src/input subdir and Makefile.pamhlet.
 > 
 > Yes, please apply them to axiom--main and axiom--windows.  After applying
 > the patches we need to do a complete rebuild from the tla sources (be sure
 > you download them fresh from the archive as I've been burned in the past by
 > assuming that my copy was clean).

This would be just great! 
 
 > Let me know 
 >  (a) when the patches are applied (i'll also test them here)
 >  (b) when the rebuilds are cleanly compiled and the .input passes
 > 
 > at which point we can tag the axiom--main build and push it to savannah.

And this would be just super-great!

\start
Date: Wed, 15 Dec 2004 11:22:34 -0800
From: Bob McElrath
To: William Sit
Subject: Re: Release?
Cc: Bill Page


William Sit [William Sit] wrote:
> At CAISS, we believe that if we can get Axiom into the courses, we can get a
> huge user base. But a prerequisite for that is a Windows version with easy user
> interface. I think the user interface of Mathematica is way ahead, not just
> because of the fancy fonts or layout or palettes, but also the style sheets and
> PROGRAMMABLE Frontend. I used a lot of these features in my DiffEqn package.
> There are of course many weaknesses (and strengths) in the design of
> Mathematica.

I strongly, strongly disagree.  The programmability of the front-end is
one of the biggest drawbacks of Mathematica.  They have a programming
language with: list-based, object oriented, functional programming, and
user-interface programming, not to mention thousands of mathematical
objects and operations.  Thus they have the most complicated programming
language in existance, and with it the inherent complexity, bugs, and
learning curve.  This also forces them into a backwards-compatability
nightmare forced by early design decisions.

If a programmable user interface is desired (e.g. writing worksheets for
students) it should be decoupled from axiom itself so that bugs can be
isolated, complexity controlled, and interaction of various parts
understood.  I think texmacs + command-line math plugins, emacs +
command-line plug-ins, and the latexwiki/web interface we're developing
are all good examples of this.  Programmability of the user interface
should be targetted to these separate, external applications.

Eventually I would also like to see a Mozilla/Gecko interface, with
Axiom emitting MathML that is rendered by Mozilla.  Scripting of the
interface can be acheived by DHTML, CSS, and javascript, in ways that
are quickly becoming familiar to a wide array of web-developers and
others.

\start
Date: Wed, 15 Dec 2004 20:25:59 +0100
From: Martin Rubey
To: Bob McElrath
Subject: Re: Release?
Cc: Bill Page

I'd just like to second Bob:

Bob McElrath writes:
 > 
 > If a programmable user interface is desired (e.g. writing worksheets for
 > students) it should be decoupled from axiom itself so that bugs can be
 > isolated, complexity controlled, and interaction of various parts
 > understood.  I think texmacs + command-line math plugins, emacs +
 > command-line plug-ins, and the latexwiki/web interface we're developing are
 > all good examples of this.  Programmability of the user interface should be
 > targetted to these separate, external applications.

\start
Date: Wed, 15 Dec 2004 11:34:39 -0800
From: Bob McElrath
To: list
Subject: Math Chat

I discovered today the feature of zwiki which creates a "chat" basically
involving a web page that is refreshed every 10s::

    http://zwiki.org/ChatRoom

I have long wanted an interface that would enable me to communicate with
remote collaborators and send/receive math.   It should be trivial to
plug latexwiki into this chat (I'll try it later).  It would also be
cool to have a shared axiom session...

Up to now I was thinking of a standalone plugin for an existing chat app
like gaim.  But the above is an interesting demonstration of the idea,
nonetheless.

\start
Date: Wed, 15 Dec 2004 12:43:11 -0800
From: Bob McElrath
To: Tim Daly
Subject: re: proposal to create the Axiom Foundation
Cc: Camm Maguire, Bill Page

I have just sent out my $100 via paypal.  Sorry I have been out for
surgery for a while, still catching up on email...  I ask that it be
used for a new mathematical domain, extension, or algorithm.  (As
opposed to an interface, compiling, or integration issue, of which there
seem to be many...)  I will look over the wishlist and see if anything
catches my eye.  But feel free to allocate these funds without specific
instruction from me.

Can someone summarize the funds collected so far and the bounties out?
We have proposals on::

    http://page.axiom-developer.org/zope/mathaction/AxiomFoundation

but no concrete promise of bounties for anything specific.

Also let me add my voice that I think the bounties so far are too small,
or the goals not big enough.  It has been noted that $100 is a nice
award in poorer countries.  In US monetary terms I think our goal should
be $500 minimum, which is roughly one to two weeks of a grad student's
time.  I think efforts smaller than this will not benefit from bounties.
But then...I'd like to be proven wrong on that...  And of course we are
funds limited for now.

Also, has it been decided who are the foundation members?  Am I one?

\start
Date: Wed, 15 Dec 2004 22:25:39 +0100
From: Martin Rubey
To: Bob McElrath
Subject: re: proposal to create the Axiom Foundation
Cc: Bill Page, Camm Maguire

Dear Bob,

Bob McElrath writes:
 > I have just sent out my $100 via paypal.  

Thank you!

 > Sorry I have been out for surgery for a while, still catching up on email...

I hope that everything went well! All the best!

 > I ask that it be used for a new mathematical domain, extension, or
 > algorithm.  (As opposed to an interface, compiling, or integration issue, of
 > which there seem to be many...)  

Since you are one of the decision-makers, you can ensure this yourself :-)

 > I will look over the wishlist and see if > anything catches my eye.

Do so!

 > Can someone summarize the funds collected so far and the bounties out?
 > We have proposals on::
 > 
 >     http://page.axiom-developer.org/zope/mathaction/AxiomFoundation
 > 
 > but no concrete promise of bounties for anything specific.

No, since there has not been any agreement, neither on the bounties themselves,
nor on the pricing.

 > Also let me add my voice that I think the bounties so far are too small, or
 > the goals not big enough.  It has been noted that $100 is a nice award in
 > poorer countries.  In US monetary terms I think our goal should be $500
 > minimum, which is roughly one to two weeks of a grad student's time.  I
 > think efforts smaller than this will not benefit from bounties.  But
 > then...I'd like to be proven wrong on that...  And of course we are funds
 > limited for now.

There are several issues:

* we don't have too much money to spend, thus I regard the bounties rather as
  a way to say thank you. If you happen to live in a country where 100$ are a
  fortune, even better. (In fact, I think we should specifically target such
  countries. Mathematica and Maple cost a fortune, I don't know about Mupad.)

* I dare say that it will be very difficult to make conditions precise, under
  which some submitted work is "good enough". Therefore I argue that "good
  enough" means, that the "heavy lifting" is done, i.e., the code works. This
  is another reason to set the prices at a not too high value. I think we
  should allow ourselves to negotiate here: if some submitter says: "Here's the
  code, it works. If you want some really good documentation, I'll ask for
  another 100 bucks.", I think this will work better than insisting on
  documentation right away. Furthermore, I think that maths will be even more
  difficult to judge than some integration work.

 > Also, has it been decided who are the foundation members?  Am I one?

I think so, yes.

\start
Date: Thu, 16 Dec 2004 00:43:00 +0100
From: Frederic Lehobey
To: list
Subject: Re: Beta Announcement

Hi,

On Wed, Dec 15, 2004 at 03:43:54PM +0100, Martin Rubey wrote:

> Announcing Axiom 1.0 BETA

Sorry if it has already been discussed, but should not the version
number of Axiom be larger than the last commercial one (2.3 if I
remember correctly).  I would suggest something between 2.4 and 2.9
(Maxima has chosen 5.9 on the road to 6.0).

Congratulations to Windows porters and Axiom developpers in general.

\start
Date: Wed, 15 Dec 2004 16:51:49 -0800
From: Bob McElrath
To: list
Subject: Re: Math Chat

Well I sat down to try to find something to allocate my bounty for, and
I keep running into walls.  This time it was Bill's observation that
%pi::Float works but %e::Float doesn't...so I dug into the code...

I keep wanting to ask dumb questions so I created an IRC channel for
axiom: #axiom-developer on irc.freenode.net.  This is for rapid
communication, and is a good way to give support.  I hope others will
join me.

Unfortunately #axiom is already taken by another project (some kind of
3d game engine).

\start
Date: Wed, 15 Dec 2004 20:45:56 -0500
From: Tim Daly
To: Bob McElrath
Subject: Re: Math Chat

bob,

any irc name will do, i suppose.
the irc is a good idea. 
name a channel and i'm there.

\start
Date: Wed, 15 Dec 2004 21:39:26 -0500
From: Bill Page
To: Bob McElrath
Subject: RE: Math Chat

On Wednesday, December 15, 2004 7:52 PM Bob McElrath
> 
> Well I sat down to try to find something to allocate my
> bounty for, andI  keep running into walls.  This time
> it was Bill's observation that %pi::Float works but
> %e::Float doesn't...so I dug into the code...

I think it was Martin. But no matter...

> I keep wanting to ask dumb questions so I created an
> IRC channel for axiom: #axiom-developer on irc.freenode.net.
> This is for rapid communication, and is a good way to give
> support.  I hope others will join me.

Sorry, I would but I can't IRC from were I'am at right now.

Briefly %pi is a macro for pi()
        %e is a macro for exp(1)

See

)display op pi

)display op exp

Examining the differences between %pi and %e in Axiom
takes you quite quickly down into the details of types
and conversions... worth the trip, I think!

It is important to remember these distinctions:

:: is a conversion from one type to another

@ specifies a desired target type

$ specifies exactly what package to call

In Axiom the type of pi() is Pi. This might seem strange
at first until you think of the importance of %pi in many
areas of mathematics. It is convenient to have it's special
properties encoded in a special type. Try

  )show Pi

to see all of the operations defined in this domain.
Notice that expressions like

  %pi+1

are also of type Pi.

%e on the other hand is of type Expression Integer.

We can convert %pi to the same type as %e

  pI:Expression Integer:=%pi

But then objects of type Expression Integer cannot
be converted to Float (in general)

  pI::Float

You would think that we could still do

  pI@Float

to request the target type Float by Axiom says
no.

In fact I think that it is strange that Axiom
allows

  pi()::Float

but it turns out that Float does have a function called
by pi()$Float since

  Float has TRANFUN

etc. etc.

Exercise: what is this?

  pi$Float

Have fun!

\start
Date: Thu, 16 Dec 2004 08:57:22 +0100
From: Martin Rubey
To: Bill Page
Subject: RE: pi, e, EXPR INT
Cc: Manuel Bronstein, Bob McElrath

Dear Bill, Bob, Manuel,

as you probably know, I think that the EXPR domain could do with a
redo. However, it seems to me that this is rather a research topic than
anything within reach right now. So for the moment, I'd rather fix the more
apparent problems.

Concerning pi and e, I realised this moment, that it is not really a problem:

%e::EXPR FLOAT::FLOAT

works just fine...

Page, Bill writes:

 > In Axiom the type of pi() is Pi. This might seem strange at first until you
 > think of the importance of %pi in many areas of mathematics. It is
 > convenient to have it's special properties encoded in a special type. Try
 > 
 >   )show Pi
 > 
 > to see all of the operations defined in this domain.  Notice that
 > expressions like
 > 
 >   %pi+1
 > 
 > are also of type Pi.

I don't really understand why this should make sense. After all, neither

asin(1)::FLOAT

asin(1)::HACKPI

work, although %pi/2 is of type HACKPI...

\start
Date: Thu, 16 Dec 2004 02:58:20 -0500
From: William Sit
To: Bob McElrath
Subject: Re: Release?
Cc: Bill Page

Hi Bob:

Bob McElrath wrote:
> 
> William Sit [William Sit] wrote:
>> At CAISS, we believe that if we can get Axiom into the courses, we can
>> get a huge user base. But a prerequisite for that is a Windows version 
>> with easy user interface. I think the user interface of Mathematica is
>> way ahead, not just because of the fancy fonts or layout or palettes,
>> but also the style sheets and PROGRAMMABLE Frontend. I used a lot of 
>> these features in my DiffEqn package. There are of course many 
>> weaknesses (and strengths) in the design of Mathematica.
> 
> I strongly, strongly disagree.  

I suppose you are disagreeing with the "way ahead" claim.  I am talking mainly
about what CAN be done, not how easy it is done nor how elegantly it is done,
with the Frontend programming. To do what I did (mainly in 1998-2000) in the
DiffEqn package is very difficult, if not impossible, say with existing Maple
worksheet. 

> The programmability of the front-end is
> one of the biggest drawbacks of Mathematica.  

Why? The Frontend is a separate program from the Kernel of Mathematica. Most
users may not even be aware of its programmability. By programmability of the
Frontend, I mean one can dynamically update a notebook using Mathematica
commands (like inserting, deleting, editing, copying results or groups of cells
into a notebook when the command is started from another notebook, with its
source in yet some other notebook).

> They have a programming
> language with: list-based, object oriented, functional programming, and
> user-interface programming, not to mention thousands of mathematical
> objects and operations.  Thus they have the most complicated programming
> language in existance, and with it the inherent complexity, bugs, and
> learning curve.  This also forces them into a backwards-compatability
> nightmare forced by early design decisions.

I don't disagree with the above. Mathematica derives its "power" from such
complexity, just as Axiom derives its "power" (in different ways) from other
complexities. The problems you described are not unique to Mathematica.

> If a programmable user interface is desired (e.g. writing worksheets for
> students) it should be decoupled from axiom itself so that bugs can be
> isolated, complexity controlled, and interaction of various parts
> understood.  I think texmacs + command-line math plugins, emacs +
> command-line plug-ins, and the latexwiki/web interface we're developing
> are all good examples of this.  Programmability of the user interface
> should be targetted to these separate, external applications.

This (separation), I agree, is desirable; but as I said, Mathematica's Frontend
is separate from the Kernel even if their language syntaxes are similar. The
user interface has to, by necessity, interact with computation through input and
output. From a 2D "scratchpad" point of view, Mathematica's Frontend allows one
to go back and edit a command, wrap a previous command to perform more
computation, etc. You cannot do that as easily in Axiom, Maple, or Matlab.

> Eventually I would also like to see a Mozilla/Gecko interface, with
> Axiom emitting MathML that is rendered by Mozilla.  Scripting of the
> interface can be acheived by DHTML, CSS, and javascript, in ways that
> are quickly becoming familiar to a wide array of web-developers and
> others.

Sure, that's coming RSN. Of course, new languages keep coming to solve old
problems. In hindsight, you may say Mathematica is behind the times (but they do
have Webmathematica), and remember, MathML and javascript weren't there.
Backward compatibility is important (destroying that is a sure way to stimulate
the economy). And would you say that mixing MathML, DHTML, CSS, javascript,
web-browsers, texmacs, emacs, latexwiki, with Axiom's lisp-based,
type-hierarchies, procedural programming, BOOT, interpreter language, compiler
language, maybe Aldor, thousands of domains and operations, not to mention all
the coercions, is easy?

I am neither a fan nor a critic of any of the systems. I use whatever is most
suitable and available for the tasks at hand.

\start
Date: Thu, 16 Dec 2004 12:53:39 +0100
From: Martin Rubey
To: Bob McElrath, Bill Page, Tim Daly, Frederic Lehobey
Subject: Re: Beta Announcement / Final Questions

Please excuse the intolerable amount of spam.

Since I have the OK of root, I'm going to announce Axiom Beta today
evening. Two questions remain:

1) Frederic suggested, that we should continue with the version numbers of
   commercial Axiom. He stated that the last version was 2.3, so I see three
   possibilities:

   - we stick with 1.0 Beta, since axiom is free now and that's a major change

   - we continue with 3.0 Beta, since axiom is free now and that's a major
     change, but there are only tiny changes to functionality.

   - we continue with 2.4 Beta, since axiom is free now and there are only tiny
     changes to functionality.

2) Are there any chances

   - that the patches from savannah plus the mysterious patch to bug #5977
     x^2+1::DMP([x],INT) are applied to axiom--main--1

   - that axiom--main--1 will be copied into cvs 

   - that binaries with the patches applied exist in the Download section

   today evening or tommorow morning?

3) Bob, if you can make up your mind about your wish regarding the bounty, I'll
   include this in the release-notes, or you can do it yourself, if you prefer.

-------------------------------------------------------------------------------

If there are no reponses regarding 1), I'll take 3.0 Beta as versioning number.

If one of the points in 2) would be possible, I'll wait with the release until
tomorrow and adapt it accordingly.

Thanks for all the great work,

\start
Date: 15 Dec 2004 10:43:55 -0500
From: Camm Maguire
To: Bill Page
Subject: Re: missing cat

Greetings!

What about a lisp cat, like:

(with-open-file (st "/etc/printcap") (si::copy-stream st *standard-output*))

> On Tuesday, December 14, 2004 4:26 PM I wrote;
> 
> >...
> > I also solved the problem of missing 'cat' program on Windows
> > so the commands )summary etc. should now work.
> > 
> 
> Oops. I just re-installed Axiom on another system and I get
> 
> (1) -> )summary
> Can't open: C:/Program
> Can't open: Files/axiom/mnt/windows/lib/summary
> 
> ----------
> 
> I had earlier tested after installing Axiom in a directory
> that did not contain a space in the name. Since the directory
> name 'Program Files' contained a space and this string is
> not delimited by Axiom when calling cat, the file name is
> interpreted as two names. This would probably fail in Linux
> also if Axiom was installed in a directory containing a space
> in the name (possible but unusual in Linux, common in Windows).
> 
> I will see what I can do to get around this and post a new
> version.
> 

\start
Date: 15 Dec 2004 10:36:38 -0500
From: Camm Maguire
To: Tim Daly
Subject: re: lsp/Makefile.pamphlet
Cc: Bill Page

Greetings!

When this is all wrapped up, would someone kindly point me to a
minimal set of gcl windows patches?  We can then role out a 2.6.6. 

Take care,

Tim Daly writes:

> Bill,
> 
> patch-7 is committed. this builds on gcl-2.6.5w which is the standard
> version with mike's patches (reversed) and a bunch of typo fixes.
> i'm building it now. it should fix the makedir bug.

\start
Date: 14 Dec 2004 08:48:14 -0500
From: Camm Maguire
To: Tim Daly
Subject: Re: GCL on Windows
Cc: Mike Thomas, Bill Page

Greetigns!  Does Windows not recognize the ~ expansion in MSYS?  If it
does, and gcl is not picking it up for some reason, I'd like to get
the truename to work.  What about (truename (si::getenv "HOME"))?

Take care,

Tim Daly writes:

> Bill, Mike, Camm,
> 
> The |cd| function has a function call:
> 
> (user-homedir-pathname) ==> #P"~/"
> (truename (user-homedir-pathname)) ==>
>   Cannot get the truename of #P"~/"
> 
> Axiom uses this to set the current directory before calling the 
> si::chdir function. We can work around this.

\start
Date: 15 Dec 2004 09:39:44 -0500
From: Camm Maguire
To: Kostas Oikonomou
Subject: Re: More on building Axiom and GCL on Solaris 9

Greetings!

How did you configure the first time?  In any case, this run found a
bfd.h header which has an intelligible boolean syntax.  Would be
interested in the value of HAVE_BFD_BOOLEAN set by configure here.
Just in case you did configure with -disable-statsysbfd
--enable-locbfd the last time and somehow you still don't have false
and true, please do

cd o && cpp -I../h fat_string.h

And send me the output.  You should see what I do in this case:

# 113 "../h/bfd.h"
typedef enum bfd_boolean {false, true} boolean;
# 170 "../h/bfd.h"


The problem below is entirely separate -- configure could not
determine that your readline library already defined
rl_compentry_func_t.

Here is the test:

	AC_CHECK_LIB(readline,rl_completion_matches,
			AC_DEFINE(HAVE_DECL_RL_COMPLETION_MATCHES)
			AC_DEFINE(HAVE_RL_COMPENTRY_FUNC_T),,)

And here is the code in gcl_readline.d leading to the collision:

#ifndef HAVE_RL_COMPENTRY_FUNC_T
/* same here */
typedef char *rl_compentry_func_t(const char *, int);
#endif

My guess is that you've run configure without your /opt/csw/include
directory in your C_INCLUDE_PATH environment.  configure probably
could not find readline.h at all, and you may have had to instruct GCL
as to its location explicitly.  

My suggestion -- either add --disable-readline to the configure flags
to get quickly beyond this point, or 

1) start with a plain gcl-2.6.5 with only the patches from the errata
   page applied.

2) Do something like the following (in analogy with Mac OSX, which
   also has non-traditional locations for installed software:)

  export PATH=/opt/csw/bin:$PATH
  export C_INCLUDE_PATH=/opt/csw/include:$C_INCLUDE_PATH
  export LIBRARY_PATH=/opt/csw/lib:$LIBRARY_PATH
  export LD_LIBRARY_PATH=/opt/csw/lib:$LD_LIBRARY_PATH

        (probably don't need the below)
  export CPPFLAGS="-no-cpp-precomp"
  ulimit -s 8192

3) ./configure --disable-statsysbfd --enable-locbfd && make

4) send me the output from 3) if failures persist.

P.S. I think you are doing this already, but in my meager experience
with Solaris, one uses gcc for most free software projects like gcl,
but must use Solaris ld to link for reasons not completely clear to
me.  Most environments are setup for this to my knowledge.  Might want
to check which cc, which gcc, gcc -v, and which ld.

Take care,

Kostas Oikonomou writes:

> I tired one more thing last night, configuring with --enable-statsysbfd.
> That didn't work either:
> 
> gcc -c -I/opt/csw/include -Wall -DVOL=volatile -fsigned-char -pipe -O3 -fomit-frame-pointer  -I/home/build/axiom--main--1--patch-13/lsp/gcl-2.6.5/o -I../h -I../gcl-tk gcl_readline.c
> gcl_readline.d:211: error: redefinition of `rl_compentry_func_t'
> /opt/csw/include/readline/rltypedefs.h:51: error: `rl_compentry_func_t' previously declared here
> gcl_readline.d: In function `rl_completion':
> gcl_readline.d:221: warning: implicit declaration of function `completion_matches'
> gcl_readline.d:221: warning: return makes pointer from integer without a cast
> make[4]: *** [gcl_readline.o] Error 1
> make[4]: Leaving directory `/home/build/axiom--main--1--patch-13/lsp/gcl-2.6.5/o'
> make[3]: *** [unixport/saved_pre_gcl] Error 2
> make[3]: Leaving directory `/home/build/axiom--main--1--patch-13/lsp/gcl-2.6.5'
> /bin/sh: unixport/saved_gcl: not found
> make[2]: *** [gcldir] Error 1
> make[2]: Leaving directory `/home/build/axiom--main--1--patch-13/lsp'
> make[1]: *** [lspdir] Error 2
> make[1]: Leaving directory `/home/build/axiom--main--1--patch-13'
> make: *** [all] Error 2
> bash-2.05$
> 
> Could it be that something is wrong with the patches?

\start
Date: 15 Dec 2004 09:42:42 -0500
From: Camm Maguire
To: Kostas Oikonomou
Subject: Re: Solaris 9 patch "gcl-2.6.5.o.sfasli.c.patch"

Greetings!

Kostas Oikonomou writes:

> Slowly.  One high-level observation about GCL: the configure script seems to
> assume, basically, that you are building on a Linux/GNU system.  For example,
> utilities such as tar, awk, and patch are assumed to be gtar, gawk, and gpatch.
> This is no great problem (once you discover it!).  What is more troublesome is
> the assumption that include files such as readline.h are assumed to be in a
> default location also, e.g. /usr/include.
> 

Yes, the default assumption in the GNU configure toolchain, to my
feeble understanding, is that such locations are specified in the
user's environment before running configure.  Perhaps we need a readme
to this effect.  PATH, C_INCLUDE_PATH, LIBRARY_PATH, and
LD_LIBRARY_PATH, and possibly GCC_EXEC_PREFIX are the important ones.

Take care,
> > Kostas Oikonomou writes:
> > 
> > > Never mind, I got it from the GCL site.  Sorry to bother you.

\start
Date: 15 Dec 2004 16:20:53 -0500
From: Camm Maguire
To: Tim Daly
Subject: Re: [Gcl-devel] Re: Minor bugs

Greetings!

Not sure what could be going on here.  The following results with
2.6.5 are unchanged on i386 and amd64 (Debian):

>(round -3.72)

-4
0.28000000000000025

>(truncate 9.2)

9
0.19999999999999929

>(truncate -9.6)

-9
-0.59999999999999964

>(by)

Perhaps the original poster could try this in their GCL lisp image.

Take care,

Tim Daly writes:

> Kathy,
> 
> Yes, this is the right list.
> Thanks for the bug report. 
> 
> If I recall correctly this was a problem a long time ago
> and resolved into an issue in lisp. Perhaps something got
> broken in the GCL build?
> 
> Tim
> 
> ================================================================
> 
> Hi everyone -
> 
> I have been subscribed to this list for quite some time.  Usually, I am 
> too busy or overloaded with other activities and pass on by.
> 
> However, I thought that the least I could do was to try to do some basic 
> testing ahead of your news announcement.
> 
> So already I see  problems in the Windows release.  Here are the results:
> 
>                         AXIOM Computer Algebra System
>              Version of Wednesday December 15, 2004 at 00:50:38
> -----------------------------------------------------------------------------
>    Issue )copyright to view copyright notices.
>    Issue )summary for a summary of useful system commands.
>    Issue )quit to leave AXIOM and return to shell.
> -----------------------------------------------------------------------------
> 
>    Re-reading compress.daase   Re-reading interp.daase
>    Re-reading operation.daase
>    Re-reading category.daase
>    Re-reading browse.daase
> (1) -> round(-3.72)
>    Loading C:/Program Files/axiom/mnt/windows/algebra/FLOAT.o for
>       domain Float
> 
>    (1)  - 5.0
>                                                                   Type: 
> Float
> (2) -> truncate(9.2)
> 
>    (2)  9.0
>                                                                   Type: 
> Float
> (3) -> truncate(-9.6)
> 
>    (3)  - 10.0
>                                                                   Type: 
> Float
> (4) -> fractionPart(-3.7)
>    Loading C:/Program Files/axiom/mnt/windows/algebra/FPS-.o for domain
>       FloatingPointSystem&
>    Loading C:/Program Files/axiom/mnt/windows/algebra/RNS-.o for domain
>       RealNumberSystem&
> 
>    Loading C:/Program Files/axiom/mnt/windows/algebra/UNISEG.o for
>       domain UniversalSegment
>    (4)  0.3
>                                                                   Type: 
> Float
> (5) ->
> 
> 
> 
> I am running 32 bit XPSP2 on AMD 64 bit.
> 
> Please let me know if this is the incorrect list.
> 
> Thanks for all your hard work.

\start
Date: 15 Dec 2004 09:01:11 -0500
From: Camm Maguire
To: Kostas Oikonomou
Subject: Re: GCL on Solaris 9

Greetings!

This is a failure of the logic configure uses to determine your
boolean syntax in your bfd library.  configure knows about the
following two possibilities:

#ifdef HAVE_BFD_BOOLEAN
#define MY_BFD_BOOLEAN bfd_boolean
#define MY_BFD_FALSE FALSE
#define MY_BFD_TRUE TRUE
#else
#define MY_BFD_BOOLEAN boolean
#define MY_BFD_FALSE false
#define MY_BFD_TRUE true
#endif


Here is the test:

	AC_MSG_CHECKING(for useable bfd_boolean)
	AC_TRY_RUN([#define IN_GCC
		    #include <bfd.h>
		    bfd_boolean foo() {return FALSE;}
		    int main() {return 0;}],
		AC_MSG_RESULT(yes) 
		AC_DEFINE(HAVE_BFD_BOOLEAN),
		AC_MSG_RESULT(no),
		AC_MSG_RESULT(no))

So apparently you are defaulting to the second case, but false and
true are not defined either.  

Perhaps you could report the prototype of your 

    bfd_link_hash_traverse

function in your bfd.h?  

In general, I recommend your first attempts should be to configure
with

--disable-statsysbfd --enable-locbfd.

This will use GCL's own snapshot of bfd, which is known to work on
sparc (and elsewhere).

If you get a chance to post your full configure and make output, I'd
be appreciative, as well as any changes in addition to the patches you
felt the need to make.

Take care, and thanks so much for your feedback!

Kostas Oikonomou writes:

> Hi Camm
> 
> I am working with axiom--main--1--patch-13.  Still having some trouble with GCL :-)
> I applied all your patches.  Here is how the make fails:
> 
> gcc -c -I/opt/csw/include -Wall -DVOL=volatile -fsigned-char -pipe -O3 -fomit-frame-pointer  -I/home/build/axiom--main--1--patch-13/lsp/gcl-2.6.5/o -I../h -I../gcl-tk fat_string.c
> fat_string.c:229: error: parse error before "bfd_combined_table_update"
> fat_string.c:229: warning: return type defaults to `int'
> fat_string.c: In function `bfd_combined_table_update':
> fat_string.c:232: error: `false' undeclared (first use in this function)
> fat_string.c:232: error: (Each undeclared identifier is reported only once
> fat_string.c:232: error: for each function it appears in.)
> fat_string.c:235: error: `true' undeclared (first use in this function)
> make[4]: *** [fat_string.o] Error 1
> make[4]: Leaving directory `/home/build/axiom--main--1--patch-13/lsp/gcl-2.6.5/o'
> make[3]: *** [unixport/saved_pre_gcl] Error 2
> make[3]: Leaving directory `/home/build/axiom--main--1--patch-13/lsp/gcl-2.6.5'
> /bin/sh: unixport/saved_gcl: not found
> make[2]: *** [gcldir] Error 1
> make[2]: Leaving directory `/home/build/axiom--main--1--patch-13/lsp'
> make[1]: *** [lspdir] Error 2
> make[1]: Leaving directory `/home/build/axiom--main--1--patch-13'
> make: *** [all] Error 2
> bash-2.05$
> 
> 
> The reason is that there's a missing ; after "static MY_BFD_BOOLEAN" in fat_string.c.
> I fixed that, but then make complained that "false" was undefined in  MY_BFD_FALSE;
> To me that's an indication of something more serious that is wrong.
> So I didn't attempt any further hacks.
> 
> I'd appreciate your help.
> 
> 				Kostas
> 
> Here's my lsp/Makefile.pamphlet:

\start
Date: 15 Dec 2004 10:28:50 -0500
From: Camm Maguire
To: Tim Daly
Subject: re: lsp/Makefile.pamphlet
Cc: Paul F. Dietz, Bill Page

Greetings!

Tim Daly writes:

> Bill,
> 
> I had a few typos in that Makefile.pamphlet for the windows patches
> which I've now fixed. They should be on arch shortly.
> 
> In GCL if you have exact type information the function calling
> can be reduced by quite a few instructions (possibly by 100
> instructions or more if memory serves me). Normal function 
> calling has to do type-casing. The exact type information allows
> a good lisp implementation to elide this.

There are actually two issue here, argument type and number checking,
and passing arguments via the lisp stack.  Passing arguments, even if
untyped, via the C stack is much faster.  All the better of course if
you can type the arguments too.  The beauty of GCL's fast-link
mechanism, is, IMHO, that you can have your cake and eat it too --
when enabled, you get function calling at C speed via a function
pointer, when disabled, you can push the arguments to the lisp stack
for inspection via the lisp debugger.  

It appears that the code for this has evolved somewhat over time.
Tim's memory might be the best archive left in this world :-).  There
should be no reason, AFAICT, that any function should not at least be
proclaimed with generic object arguments at compile time to enable the
fast-linking function format, though it is still necessary at present
to either do this by hand or run the automatic sys-proclaims
generation as a separate step.  The latter will always be more
efficient than a 'proclaim-as-you-go' strategy, as all such
information will be present at the beginning.  But the two are not
incompatible, and the former will transparently catch many of the most
common cases where all calls are within the same file.  This should at
least straighten out certain long-standing misconceptions when
benchmarking GCL, as it has been difficult for me to impress upon the
benchmarker that GCL has been designed with the assumption that the
sys-proclaims would be autogenerated before compilation for maximum
efficiency.

I'd like to put something like this in to 2.7.0 time permitting.  Also
on the agenda is typed optional argument passing, and tail recursion
to functions with optional arguments. 

> 
> The best way to see this is to run disassemble on the function
> before and after. I did a lot of this with the AKCL and CMUCL
> implementations. In fact, CMUCL was so good that I could get
> 
> (+ a b)
> 
> to reduce to one instruction on the IBM RT with proper declarations.
> Of course you have to declare it something like:
> 
> (the fixnum (+ (the fixnum a) (the fixnum b))) 
> 

With Pauls' help, and with the help of his fantastic random compiler
tester, we've been putting in automatic type propagation into CVS
head.  For example:

COMPILER>(defun foo (x y) (declare ((integer -1000 1000) x y)) (+ x (* 2 y) (* 3 (1+ (+ x y))) (- (max 4 y) (- 2 x y))))

FOO

COMPILER>(disassemble 'foo)

Compiling gazonk0.lsp.

;; Note: var #:G3288 is type (INTEGER -1000 1000) from outer scope, declaring

;; Note: var #:G3289 is type (INTEGER -2000 2000) from deduced function return type, declaring

;; Note: var #:G3290 is type (INTEGER -5997 6003) from deduced function return type, declaring

;; Note: var #:G3291 is type (INTEGER -1998 2998) from deduced function return type, declaring

;; Note: Let* bindings ((#:G3288 X) (#:G3289 (* 2 Y))
                        (#:G3290 (* 3 (1+ (+ X Y))))
                        (#:G3291 (- (MAX 4 Y) (- 2 X Y)))) declared (((INTEGER
                                                                       -1000
                                                                       1000)
                                                                      #:G3288)
                                                                     ((INTEGER
                                                                       -2000
                                                                       2000)
                                                                      #:G3289)
                                                                     ((INTEGER
                                                                       -5997
                                                                       6003)
                                                                      #:G3290)
                                                                     ((INTEGER
                                                                       -1998
                                                                       2998)
                                                                      #:G3291))
End of Pass 1.  
End of Pass 2.  
OPTIMIZE levels: Safety=0 (No runtime error checking), Space=0, Speed=3, (Debug quality ignored)
Finished compiling gazonk0.lsp.

#include "gazonk0.h"
void init_code(){do_init(VV);}
/*	function definition for FOO	*/

static void L1()
{register object *base=vs_base;
	register object *sup=base+VM1; VC1
	vs_check;
	{long V1;
	register long V2;
	V1=fix(base[0]);
	V2=fix(base[1]);
	vs_top=sup;
	goto TTL;
TTL:;
	{long V3;
	long V4;
	long V5;
	long V6;
	V3= V1;
	V4= (fixnum)((fixnum)2)*(V2);
	V5= (fixnum)((fixnum)3)*((fixnum)((fixnum)(V1)+(V2))+((fixnum)1));
	{long V7= (fixnum)(((fixnum)4)>=(V2)?((fixnum)4):V2);
	V6= (fixnum)(/* INLINE-ARGS */V7)-((fixnum)((fixnum)2)-((fixnum)(V1)+(V2)));}
	base[2]= CMPmake_fixnum((long)((fixnum)((fixnum)(V3)+(V4))+(V5))+(V6));
	vs_top=(vs_base=base+2)+1;
	return;}
	}
}
       
#(
#((system::%init . #((system::mf (lisp::quote compiler::foo) 0) (system::debugger (lisp::quote compiler::foo) (lisp::quote (compiler::x compiler::y))))))
)

static void L1();
#define VC1
#define VM1 3
static char * VVi[1]={
#define Cdata VV[0]
(char *)(L1)
};
#define VV ((object *)VVi)

gazonk0.o:     file format elf32-i386

Disassembly of section .text:

00000000 <L1>:
L1():
   0:	83 ec 1c             	sub    $0x1c,%esp
   3:	8b 15 00 00 00 00    	mov    0x0,%edx
   9:	39 15 00 00 00 00    	cmp    %edx,0x0
   f:	89 5c 24 0c          	mov    %ebx,0xc(%esp)
  13:	8b 1d 00 00 00 00    	mov    0x0,%ebx
  19:	89 6c 24 18          	mov    %ebp,0x18(%esp)
  1d:	89 74 24 10          	mov    %esi,0x10(%esp)
  21:	8d 6b 0c             	lea    0xc(%ebx),%ebp
  24:	89 7c 24 14          	mov    %edi,0x14(%esp)
  28:	0f 83 82 00 00 00    	jae    b0 <L1+0xb0>
  2e:	8b 33                	mov    (%ebx),%esi
  30:	8b 4b 04             	mov    0x4(%ebx),%ecx
  33:	8b 56 04             	mov    0x4(%esi),%edx
  36:	8b 41 04             	mov    0x4(%ecx),%eax
  39:	89 2d 00 00 00 00    	mov    %ebp,0x0
  3f:	8d 0c 10             	lea    (%eax,%edx,1),%ecx
  42:	83 f8 04             	cmp    $0x4,%eax
  45:	8d 3c 00             	lea    (%eax,%eax,1),%edi
  48:	8d 74 49 03          	lea    0x3(%ecx,%ecx,2),%esi
  4c:	7d 05                	jge    53 <L1+0x53>
  4e:	b8 04 00 00 00       	mov    $0x4,%eax
  53:	01 fa                	add    %edi,%edx
  55:	8d 44 01 fe          	lea    0xfffffffe(%ecx,%eax,1),%eax
  59:	01 f2                	add    %esi,%edx
  5b:	01 c2                	add    %eax,%edx
  5d:	8d 82 00 04 00 00    	lea    0x400(%edx),%eax
  63:	89 15 00 00 00 00    	mov    %edx,0x0
  69:	a9 00 f8 ff ff       	test   $0xfffff800,%eax
  6e:	8d 0c d5 00 20 00 00 	lea    0x2000(,%edx,8),%ecx
  75:	75 29                	jne    a0 <L1+0xa0>
  77:	89 4b 08             	mov    %ecx,0x8(%ebx)
  7a:	8d 53 08             	lea    0x8(%ebx),%edx
  7d:	8b 74 24 10          	mov    0x10(%esp),%esi
  81:	89 2d 00 00 00 00    	mov    %ebp,0x0
  87:	8b 5c 24 0c          	mov    0xc(%esp),%ebx
  8b:	8b 7c 24 14          	mov    0x14(%esp),%edi
  8f:	89 15 00 00 00 00    	mov    %edx,0x0
  95:	8b 6c 24 18          	mov    0x18(%esp),%ebp
  99:	83 c4 1c             	add    $0x1c,%esp
  9c:	c3                   	ret    
  9d:	8d 76 00             	lea    0x0(%esi),%esi
  a0:	89 14 24             	mov    %edx,(%esp)
  a3:	e8 fc ff ff ff       	call   a4 <L1+0xa4>
  a8:	89 c1                	mov    %eax,%ecx
  aa:	eb cb                	jmp    77 <L1+0x77>
  ac:	8d 74 26 00          	lea    0x0(%esi),%esi
  b0:	e8 fc ff ff ff       	call   b1 <L1+0xb1>
  b5:	e9 74 ff ff ff       	jmp    2e <L1+0x2e>
  ba:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi

000000c0 <init_code>:
init_code():
  c0:	83 ec 0c             	sub    $0xc,%esp
  c3:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
  ca:	e8 fc ff ff ff       	call   cb <init_code+0xb>
  cf:	83 c4 0c             	add    $0xc,%esp
  d2:	c3                   	ret    
T

COMPILER>(proclaim '(ftype (function (fixnum fixnum) fixnum) foo))

NIL

COMPILER>(disassemble 'foo)

Compiling gazonk0.lsp.

;; Note: var #:G3301 is type (INTEGER -1000 1000) from outer scope, declaring

;; Note: var #:G3302 is type (INTEGER -2000 2000) from deduced function return type, declaring

;; Note: var #:G3303 is type (INTEGER -5997 6003) from deduced function return type, declaring

;; Note: var #:G3304 is type (INTEGER -1998 2998) from deduced function return type, declaring

;; Note: Let* bindings ((#:G3301 X) (#:G3302 (* 2 Y))
                        (#:G3303 (* 3 (1+ (+ X Y))))
                        (#:G3304 (- (MAX 4 Y) (- 2 X Y)))) declared (((INTEGER
                                                                       -1000
                                                                       1000)
                                                                      #:G3301)
                                                                     ((INTEGER
                                                                       -2000
                                                                       2000)
                                                                      #:G3302)
                                                                     ((INTEGER
                                                                       -5997
                                                                       6003)
                                                                      #:G3303)
                                                                     ((INTEGER
                                                                       -1998
                                                                       2998)
                                                                      #:G3304))
End of Pass 1.  
End of Pass 2.  
OPTIMIZE levels: Safety=0 (No runtime error checking), Space=0, Speed=3, (Debug quality ignored)
Finished compiling gazonk0.lsp.

#include "gazonk0.h"
void init_code(){do_init(VV);}
/*	local entry for function FOO	*/

static object LI1(V3,V4)

long V3;register long V4;
{	 VMB1 VMS1 VMV1
	goto TTL;
TTL:;
	{long V5;
	long V6;
	long V7;
	long V8;
	V5= V3;
	V6= (fixnum)((fixnum)2)*(V4);
	V7= (fixnum)((fixnum)3)*((fixnum)((fixnum)(V3)+(V4))+((fixnum)1));
	{long V9= (fixnum)(((fixnum)4)>=(V4)?((fixnum)4):V4);
	V8= (fixnum)(/* INLINE-ARGS */V9)-((fixnum)((fixnum)2)-((fixnum)(V3)+(V4)));}
	{long V10 = (fixnum)((fixnum)((fixnum)(V5)+(V6))+(V7))+(V8);
	VMR1((object)V10)}}
}
       
#(
#((system::%init . #((system::mfsfun (lisp::quote compiler::foo) 0 20738))))
)

static object LI1();
#define VMB1
#define VMS1
#define VMV1
#define VMR1(VMT1) return(VMT1);
#define VM1 0
static char * VVi[1]={
#define Cdata VV[0]
(char *)(LI1)
};
#define VV ((object *)VVi)

gazonk0.o:     file format elf32-i386

Disassembly of section .text:

00000000 <init_code>:
init_code():
   0:	83 ec 0c             	sub    $0xc,%esp
   3:	c7 04 24 00 00 00 00 	movl   $0x0,(%esp)
   a:	e8 fc ff ff ff       	call   b <init_code+0xb>
   f:	83 c4 0c             	add    $0xc,%esp
  12:	c3                   	ret    
  13:	8d b6 00 00 00 00    	lea    0x0(%esi),%esi
  19:	8d bc 27 00 00 00 00 	lea    0x0(%edi),%edi

00000020 <LI1>:
LI1():
  20:	83 ec 08             	sub    $0x8,%esp
  23:	8b 44 24 10          	mov    0x10(%esp),%eax
  27:	89 74 24 04          	mov    %esi,0x4(%esp)
  2b:	8b 74 24 0c          	mov    0xc(%esp),%esi
  2f:	83 f8 04             	cmp    $0x4,%eax
  32:	89 1c 24             	mov    %ebx,(%esp)
  35:	8d 14 30             	lea    (%eax,%esi,1),%edx
  38:	8d 1c 00             	lea    (%eax,%eax,1),%ebx
  3b:	8d 4c 52 03          	lea    0x3(%edx,%edx,2),%ecx
  3f:	7d 05                	jge    46 <LI1+0x26>
  41:	b8 04 00 00 00       	mov    $0x4,%eax
  46:	8d 54 02 fe          	lea    0xfffffffe(%edx,%eax,1),%edx
  4a:	8d 04 33             	lea    (%ebx,%esi,1),%eax
  4d:	8b 1c 24             	mov    (%esp),%ebx
  50:	8b 74 24 04          	mov    0x4(%esp),%esi
  54:	01 c8                	add    %ecx,%eax
  56:	01 d0                	add    %edx,%eax
  58:	83 c4 08             	add    $0x8,%esp
  5b:	c3                   	ret    
T

COMPILER>

> or some such. I believe some of the macros I wrote do a lot of
> this kind of expansion. I also load proclaims.lisp into the image
> so GCL function type information is available. 
> 
> Schelter and I worked quite a bit on speeding up function calling
> as much as possible. If I remember correctly the fast-links code
> will trade space (a link) for speedup.

I think the major tradeoff with fast-linking is that one has no
debugging information via the lisp stack.  Amazingly, this can be
toggled at runtime.

> 
> If you look in src/boot you'll see a newly created file called
> boot-proclaims.lisp which is part of my recent efforts to optimize
> the system. I plan to push it as far as I can. Eventually the 
> makefiles will automatically re-compile the lisp code to get the
> optimization information and type optimization will be pushed
> into the algebra code. I'm just not there yet.
> 

I think the Debian package does the extra pass now -- when this
changes in the official tree, please let me know so I can remove the
extra pass here.

\start
Date: Thu, 16 Dec 2004 10:27:33 -0500
From: Bill Page
To: Camm Maguire
Subject: RE: [Gcl-devel] Re: Minor bugs

Camm, Tim,

I don't think these rounding and truncation problems are
a lisp issue as such. They are a result of an assumption
in Axiom about the behavour of the shift operation on
signed integers which is not compatible with the current
lisp standard. Basically Axiom expects an unsigned shift
function but the standard lisp function call is extending
the sign arithmetically instead of "logically". Details are
on Savannah bug and patch lists. There is some discussion
of the efficiency of the proposed patch in the axiom-
developer email list archive of a little more than a year
ago.

The patch I submitted (but haven't yet found time to move
to the axiom--main--1 archive, provides the logical shift
by check the sign and changing things accordingly. This is
check is pretty fast, but it occurs at such a deep level
that even a little inefficiency could affect computationally
intensive programs. In the medium/long term it would be more
efficient to directly map many of the numerical functions in
float.spad (and a few other places) to their high level
equivalents in lisp.

Regards,
Bill Page.

On Wednesday, December 15, 2004 4:21 PM Camm Maguire wrote:
> 
> Not sure what could be going on here.  The following results
> with 2.6.5 are unchanged on i386 and amd64 (Debian):
> 
> >(round -3.72)
> 
> -4
> 0.28000000000000025
> 
> >(truncate 9.2)
> 
> 9
> 0.19999999999999929
> 
> >(truncate -9.6)
> 
> -9
> -0.59999999999999964
> 
> >(by)
> 
> Perhaps the original poster could try this in their GCL lisp image.
> 
> Take care,
> 
> Tim Daly writes:
> 
> > Kathy,
> > 
> > Yes, this is the right list.
> > Thanks for the bug report. 
> > 
> > If I recall correctly this was a problem a long time ago
> > and resolved into an issue in lisp. Perhaps something got
> > broken in the GCL build?
> > 
> > Tim
> > 
> > ================================================================
> > 
> > Hi everyone -
> > 
> > I have been subscribed to this list for quite some time.  
> Usually, I am 
> > too busy or overloaded with other activities and pass on by.
> > 
> > However, I thought that the least I could do was to try to 
> do some basic 
> > testing ahead of your news announcement.
> > 
> > So already I see  problems in the Windows release.  Here 
> are the results:
> > 
> >                         AXIOM Computer Algebra System
> >              Version of Wednesday December 15, 2004 at 00:50:38
> > 
> --------------------------------------------------------------
> ---------------
> >    Issue )copyright to view copyright notices.
> >    Issue )summary for a summary of useful system commands.
> >    Issue )quit to leave AXIOM and return to shell.
> > 
> --------------------------------------------------------------
> ---------------
> > 
> >    Re-reading compress.daase   Re-reading interp.daase
> >    Re-reading operation.daase
> >    Re-reading category.daase
> >    Re-reading browse.daase
> > (1) -> round(-3.72)
> >    Loading C:/Program Files/axiom/mnt/windows/algebra/FLOAT.o for
> >       domain Float
> > 
> >    (1)  - 5.0
> >                                                             
>       Type: 
> > Float
> > (2) -> truncate(9.2)
> > 
> >    (2)  9.0
> >                                                             
>       Type: 
> > Float
> > (3) -> truncate(-9.6)
> > 
> >    (3)  - 10.0
> >                                                             
>       Type: 
> > Float
> > (4) -> fractionPart(-3.7)
> >    Loading C:/Program 
> Files/axiom/mnt/windows/algebra/FPS-.o for domain
> >       FloatingPointSystem&
> >    Loading C:/Program 
> Files/axiom/mnt/windows/algebra/RNS-.o for domain
> >       RealNumberSystem&
> > 
> >    Loading C:/Program Files/axiom/mnt/windows/algebra/UNISEG.o for
> >       domain UniversalSegment
> >    (4)  0.3
> >                                                             
>       Type: 
> > Float
> > (5) ->
> > 
> > 
> > 
> > I am running 32 bit XPSP2 on AMD 64 bit.
> > 
> > Please let me know if this is the incorrect list.
> > 
> > Thanks for all your hard work.
> > 

\start
Date: Thu, 16 Dec 2004 13:46:26 -0500
From: Tim Daly
To: Camm Maguire
Subject: re: lsp/Makefile.pamphlet
Cc: Bill Page

Camm,

Here are the known patches:


=========================================================
AXIOM ONLY.... you don't care but included for completeness
=========================================================
gcl-2.6.5w.cmpnew.gcl_cmpcall.lsp.patch
=========================================================
--- gcl_cmpcall.lsp	2003-09-13 22:30:33.000000000 -0400
+++ gcl_cmpcall.lsp.tpd	2003-10-22 23:34:52.000000000 -0400
@@ -264,7 +264,9 @@
             (wt-label *exit*))
       (unwind-no-exit 'tail-recursion-mark)
       (wt-nl "goto TTL;")
-      (cmpnote "Tail-recursive call of ~s was replaced by iteration." fname))
+; 20031022000 tpd we don't need to know this
+;      (cmpnote "Tail-recursive call of ~s was replaced by iteration." fname)
+      )
 
      ;;; Open-codable function call.
      ((and (listp args)


=========================================================
AXIOM ONLY.... you don't care but included for completeness
=========================================================
gcl-2.6.5w.cmpnew.gcl_cmpflet.lsp.patch
=========================================================
--- gcl_cmpflet.lsp	2004-02-21 15:51:24.000000000 -0500
+++ gcl_cmpflet.lsp.tpd	2004-02-21 15:51:50.000000000 -0500
@@ -390,8 +390,10 @@
           (wt-label *exit*))
     (unwind-no-exit 'tail-recursion-mark)
     (wt-nl "goto TTL;")
-    (cmpnote "Tail-recursive call of ~s was replaced by iteration."
-             (fun-name (car fd))))
+; 20031022000 tpd we don't need to know this
+;    (cmpnote "Tail-recursive call of ~s was replaced by iteration."
+;             (fun-name (car fd)))
+    )
    (t (push-args args)
       (wt-nl "L" (fun-cfun (car fd)) "(")
       (dotimes** (n (fun-level (car fd))) (wt "base" n ","))


=========================================================
gcl-2.6.5w.h.gmp_wrappers.h.patch
=========================================================
--- gmp_wrappers.h.bb	Fri Sep 17 13:38:59 2004
+++ gmp_wrappers.h	Fri Sep 17 13:39:35 2004
@@ -96,8 +96,8 @@
 
 #define MEM_GMP_CALL(n_,rt_,a_,s_,b_...) \
    GMP_EXTERN_INLINE Join(RF_,rt_) Join(m,a_)(Join(P,n_)(b_)) { \
-           Join(RD_,rt_);\
            int j;\
+	   Join(RD_,rt_);\
 	   jmp_gmp=0;\
            if ((j=setjmp(gmp_jmp)))\
               GBC(j);\

=========================================================
AXIOM ONLY.... you don't care but included for completeness
=========================================================
gcl-2.6.5w.h.linux.defs.patch
=========================================================
--- linux.defs	2002-09-12 00:38:49.000000000 -0400
+++ linux.defs.tpd	2003-10-22 23:42:02.000000000 -0400
@@ -8,6 +8,10 @@
 
 # Machine dependent makefile definitions for intel 386,486 running linux
 
+# 20031022000 tpd link Axiom's code into the image
+EXTRAS = ${OBJ}/${SYS}/lib/cfuns-c.o ${OBJ}/${SYS}/lib/sockio-c.o
+OFLAG = -O
+
 LBINDIR=/usr/local/bin
 
 #OFLAG	=  -g -Wall


=========================================================
gcl-2.6.5w.h.mingw.defs.patch
=========================================================
--- mingw.defs	Wed Dec 15 01:46:02 2004
+++ mingw.defs.new	Wed Dec 15 01:46:30 2004
@@ -20,7 +20,7 @@
 FIRST_FILE   = $(ODIR)/firstfile.o
 LAST_FILE    = $(ODIR)/lastfile.o
 LIBFILES     = bcmp.o bzero.o bcopy.o
-EXTRAS       = ${ODIR}/mingwin.o ${ODIR}/mingfile.o
+EXTRAS       = ${ODIR}/mingwin.o ${ODIR}/mingfile.o ${OBJ}/${SYS}/lib/cfuns-c.o ${OBJ}/${SYS}/lib/sockio-c.o
 
 # When using SFASL it is good to have (si::build-symbol-table)
 INITFORM     = (si::build-symbol-table)


=========================================================
gcl-2.6.5w.o.alloc.c.patch
=========================================================
--- alloc.c	Wed Dec 15 01:37:29 2004
+++ alloc.c.new	Wed Dec 15 01:39:06 2004
@@ -1485,7 +1485,17 @@
 	     	RECREATE_HEAP
 #endif
 		;
-	   }
+#ifdef       __MINGW32__
+                /* If malloc() gets called by the C runtime before
+                 * main starts and the shared memory is not yet
+                 * initialised causing boofo.
+                 * SET_REAL_MAXPAGE calls init_shared_memory().
+                 * This problem arose with gcc 3.4.2 and new libs.
+                 */
+                SET_REAL_MAXPAGE
+                ;
+#endif
+            }
 	}
 
 #endif	

=========================================================
gcl-2.6.5w.o.mingfile.c.patch
=========================================================
--- mingfile.c	Wed Dec 15 01:49:32 2004
+++ mingfile.c.new	Wed Dec 15 01:49:48 2004
@@ -10,7 +10,7 @@
 	object path;
 	check_arg(1);
 	check_type_or_pathname_string_symbol_stream(&vs_base[0]);
-	path = vs_base[0] = truename(coerce_to_pathname(vs_base[0]));
+	path = vs_base[0] = coerce_to_pathname(vs_base[0]);
 	
 	if (vs_base[0]->pn.pn_name==Cnil && vs_base[0]->pn.pn_type==Cnil) {
 		coerce_to_filename(vs_base[0], filename);

=========================================================
gcl-2.6.5w.o.unixfsys.c.patch
=========================================================
--- unixfsys.c	Wed Dec 15 01:53:18 2004
+++ unixfsys.c.new	Wed Dec 15 01:53:35 2004
@@ -31,6 +31,10 @@
 #include <pwd.h>
 #endif
 
+#ifdef __MINGW32__ 
+#  include <windows.h> 
+#endif 
+
 #ifdef BSD
 #define HAVE_RENAME
 #endif
@@ -211,6 +215,10 @@
 {
   object namestring;
   namestring = coerce_to_namestring(pathname);
+  if ( pathname == Cnil ) { 
+     FEerror ( "NIL argument.", 1, pathname ); 
+  } 
+    
 #ifndef NO_PWD_H  
   if(namestring->st.st_self[0]=='~')
     {char name[20];
@@ -259,40 +267,67 @@
 	char current_directory[MAXPATHLEN];
 	char directory[MAXPATHLEN];
 	static char *getwd(char *buffer);
+#ifdef __MINGW32__ 
+        DWORD current_directory_length =
+            GetCurrentDirectory ( MAXPATHLEN, current_directory ); 
+        if ( MAXPATHLEN < current_directory_length ) { 
+           FEerror ( "truename got a current directory name larger than MAXPATHLEN", 1, "" ); 
+        } 
+        if ( 0 == current_directory_length ) { 
+           FEerror ( "truename could not determine the current directory.", 1, "" ); 
+        } 
+#else 
+        getwd(current_directory); 
+#endif 
+    
 	coerce_to_filename(pathname, filename);
-
-
 	
 	for (p = filename, q = 0;  *p != '\0';  p++)
 		if (*p == '/')
 			q = p;
 	if (q == filename) {
 		q++;
-		getwd(current_directory);
 		p = "/";
 	} else if (q == 0) {
 		q = filename;
-		p = getwd(current_directory);
+		p = current_directory;
 	} else
 #ifdef __MINGW32__
-	  if (q[-1]==':') {
-	    int current = (q++, q[0]);
-	    q[0]=0;
-	    getwd(current_directory);
-	    if (chdir(filename) < 0)
-	      FEerror("Cannot get the truename of ~S.", 1, pathname);
-	    p = getwd(directory);
-	    if (p[1]==':' && p[2]=='\\' && p[3]==0) p[2]=0;
-	    q[0]=current;
+	   if ( ( q > filename ) && ( q[-1] == ':' ) ) {
+	     int current = (q++, q[0]);
+	     q[0]=0;
+	     if (chdir(filename) < 0)
+	       FEerror("Cannot get the truename of ~S.", 1, pathname);
+             current_directory_length =
+               GetCurrentDirectory ( MAXPATHLEN, directory );
+             if ( MAXPATHLEN < current_directory_length ) { 
+               FEerror ( "truename got a current directory name larger than MAXPATHLEN", 1, "" ); 
+             } 
+             if ( 0 == current_directory_length ) { 
+               FEerror ( "truename could not determine the current directory.", 1, "" ); 
+             } 
+             p = directory; 
+             if ( p[1]==':' && ( p[2]=='\\' || p[2]=='/' ) && p[3]==0 ) p[2]=0; 
+	     q[0]=current;
           }
 	  else
 #endif	
 	  {
 		*q++ = '\0';
-		getwd(current_directory);
 		if (chdir(filename) < 0)
 		    FEerror("Cannot get the truename of ~S.", 1, pathname);
+#ifdef __MINGW32__ 
+                current_directory_length = GetCurrentDirectory ( MAXPATHLEN, directory ); 
+                if ( MAXPATHLEN < current_directory_length ) { 
+                    FEerror ( "truename got a current directory name larger than MAXPATHLEN", 1, "" ); 
+                } 
+                if ( 0 == current_directory_length ) { 
+                    FEerror ( "truename could not determine the current directory.", 1, "" ); 
+                } 
+                p = directory; 
+#else 
 		p = getwd(directory);
+#endif                
 	}
 	if (p[0] == '/' && p[1] == '\0') {
 		if (strcmp(q, "..") == 0)
@@ -327,6 +362,18 @@
 	struct stat filestatus;
 
 	coerce_to_filename(file, filename);
+
+#ifdef __MINGW32__
+        {
+            char *p;
+            for (p = filename;  *p != '\0';  p++);
+            if ( (p > filename) &&
+                 ( ( *(p-1) == '/' ) || ( *(p-1) == '\\' ) ) ) {
+               *(p-1) = '\0'; 
+            }
+        }
+#endif        
+
 	if (stat(filename, &filestatus) >= 0)
 	  {
 #ifdef AIX

=========================================================
AXIOM ONLY.... you don't care but included for completeness
=========================================================
gcl-2.6.5w.unixport.init_gcl.lsp.in.patch
=========================================================
--- init_gcl.lsp.in	Wed Apr  7 23:12:55 2004
+++ init_gcl.lsp.in.tpd	Wed Apr  7 23:13:25 2004
@@ -84,8 +84,8 @@
 	 (bye (if (or compiler::*error-p* (equal result '(nil))) 1 0))))
    (cond ((si::get-command-arg "-batch")
 	  (setq si::*top-level-hook* 'bye))
-	 ((si::get-command-arg "-f"))
-	 (t (format t si::*system-banner*)))
+	 ((si::get-command-arg "-f")))
+;	 (t (format t si::*system-banner*)))
    (setq si::*ihs-top* 1)
    (in-package 'system::user) (incf system::*ihs-top* 2)
    (funcall system::*old-top-level*))


=========================================================
gcl-2.6.5w.unixport.makefile.patch
=========================================================
--- makefile	Tue Dec  7 18:46:09 2004
+++ makefile.tpd	Tue Dec  7 18:47:13 2004
@@ -14,7 +14,8 @@
 PORTDIR = $(shell pwd)
 
 LD_LIBS_PRE=$(FIRST_FILE) $(addprefix -u ,$(PATCHED_SYMBOLS))
-LD_LIBS_POST=$(LIBS) $(LIBC) -lgclp $(LAST_FILE)
+# 20031022000 tpd link axiom's C library code.
+LD_LIBS_POST=$(LIBS) $(LIBC) -lgclp ${OBJ}/${SYS}/lib/libspad.a $(LAST_FILE)
 
 ifeq ($(ARRS),)
 ARRS:=ar rs
@@ -28,7 +29,7 @@
 	rm -rf gmp
 	mkdir gmp
 	a="$^" ; \
-	for i in $^ ; do \
+	for i in $$a ; do \
 		cp $$i gmp/$$(echo $$i | sed -e 's,\.\./,,1' -e 's,/,_,g') ; \
 	done
 	touch $@

\start
Date: Thu, 16 Dec 2004 13:29:45 -0500
From: Bill Page
To: Martin Rubey
Subject: RE: Beta Announcement / Final Questions
Cc: Frederic Lehobey, Bob McElrath

Martin,

On Thursday, December 16, 2004 6:54 AM you wrote:

> Since I have the OK of root, I'm going to announce Axiom
> Beta today evening.

Great!!!

> Two questions remain:
> 
> 1) Frederic suggested, that we should continue with the 
> version numbers of commercial Axiom. He stated that the
> last version was 2.3, so I see three possibilities:
> 
>    - we stick with 1.0 Beta, since axiom is free now and 
> that's a major change
> 
>    - we continue with 3.0 Beta, since axiom is free now
> and that's a major change, but there are only tiny changes
> to functionality.
> 
>    - we continue with 2.4 Beta, since axiom is free now and 
> there are only tiny changes to functionality.

I like your idea to begin official release version numbers
for open source Axiom at 3.0. My reasons::

- AXIOM-3-oh has a nice ring to it

- Tim likes to talk about the "30 year horizon" ... Axiom=30

- Version 3.0 implies some maturity but not too much maturity.
  Certainly Axiom  can claim that since even though a lot of
  things about the new release are new.

> 
> 2) Are there any chances
> 
>    - that the patches from savannah plus the mysterious patch 
> to bug #5977 x^2+1::DMP([x],INT) are applied to axiom--main--1
> 
>    - that axiom--main--1 will be copied into cvs 
> 
>    - that binaries with the patches applied exist in the 
> Download section
> 
>    today evening or tomorrow morning?
>

Unlikely but I just might be able to squeeze in a few patches
to the Windows version. No promises. For sure during this
weekend.

> 3) Bob, if you can make up your mind about your wish 
> regarding the bounty, I'll include this in the release-notes,
> or you can do it yourself, if you prefer.

That's a great idea. Even if Bob doesn't make up his mind, :)
I think you should do this with your first notices tonight.
You can be deliberately vague pointing to the current list as
examples and saying that although funds are limited, specific
tasks are negotiable and proposals will be considered from
all interested parties. ... etc.

> 
> --------------------------------------------------------------
> -----------------
> 
> If there are no Reponses regarding 1), I'll take 3.0 Beta as 
> versioning number.

I vote for "3.0 beta"

> 
> If one of the points in 2) would be possible, I'll wait with 
> the release until tomorrow and adapt it accordingly.
> 

I think you should proceed as planned tonight. There are
enough useable Linux binary versions available (although
not all up to date nor well documents) and the Windows
binary installer is in pretty good shape. I expect that
large proportion of new people interested that you might
reach will be Windows users.

I any case I expect we willing finally be in position to
"release often", as one should expect with an open source
project.

> Thanks for all the great work,
> 

Indeed, all around! This will be a great way to start the
next year's Axiom effort. Hey, another reason for 3.0 -
this will be my 3 year with the project.

\start
Date: Thu, 16 Dec 2004 10:46:40 -0800
From: Bob McElrath
To: Martin Rubey
Subject: Re: Beta Announcement / Final Questions
Cc: Frederic Lehobey, Bill Page


--boAH8PqvUi1v1f55

Martin Rubey [Martin Rubey] wrote:
> 3) Bob, if you can make up your mind about your wish regarding the bounty, I'll
>    include this in the release-notes, or you can do it yourself, if you prefer.

My lack of experience with Axiom is a major drawback.  I cannot even
readily identify what needs to be done.  I thought a bit about a QFT
module (a la FeynCalc) but by the time I got deep enough into that to
understand how to write the requirements, I'd have the bounty
half-completed...  Therefore I propose the following text for my bounty:

    $100 for any new mathematical Domain, extension, or algorithm.  The
    submitted pamphlet code must be at least 500 lines and include test
    cases and examples.  Proposals should be sent in advance of code to
    the axiom developer's mailing list: list to
    verify eligibility of your idea.

Comments?

I will likely put up further bounties for QFT pieces as I come to
understand the work involved.

\start
Date: Thu, 16 Dec 2004 15:44:12 -0500
From: Bill Page
To: Martin Rubey
Subject: RE: pi, e, EXPR INT
Cc: Manuel Bronstein, Bob McElrath

Martin,

On Thursday, December 16, 2004 2:57 AM you wrote:
> 
> as you probably know, I think that the EXPR domain could
> do with a redo. However, it seems to me that this is rather
> a research topic than anything within reach right now. So
> for the moment, I'd rather fix the more apparent problems.

Agreed.

> 
> Concerning pi and e, I realised this moment, that it
> is not really a problem:
> 
> %e::EXPR FLOAT::FLOAT
> 
> works just fine...
> 

That looks weird to me. What I think what you normally
would want to do is to just specify the target type:

  %e@FLOAT
  %pi@FLOAT

This provides an approximate floating point representation
for both e and pi.

>  > 
>  >   )show Pi
>  > 
>  > to see all of the operations defined in this domain.
>  > Notice that expressions like
>  > 
>  >   %pi+1
>  > 
>  > are also of type Pi.
> 
> I don't really understand why this should make sense.

I often have this feeling too when I look closely at the
Axiom type system. Many things strike me as strange at
first. Later I sometimes discover that there is/was some
good but poorly documented rational for the design.

This just convinces me again that Tim emphasis on
documentation documentation documentation is the right
one.

> After all, neither
> 
> asin(1)::FLOAT
> 
> asin(1)::HACKPI
> 
> work, although %pi/2 is of type HACKPI...
> 

Apparently there is no asin function in Pi. We need to
know what "they" were thinking when they they invented
the idea that pi and expressions involving pi ought to
be belong to their own domain. What was the intention
of this design?
 
What is the purpose of the domain HACKPI ?? 

There might be some relevant comments in the spad code
for PI.

To be continued ...

\start
Date: Fri, 17 Dec 2004 07:19:07 +0100 (CET)
From: Meino Christian Cramer
To: list
Subject: Compile errors on Axiom 2004-11-15

Hi,

 I downloaded the source of Axiom and did the following:

 cd axiom                        << where I unpacked the source
 ./configure
 export AXIOM=`pwd`/mnt/linux    << expanded by the shell
 export PATH=\$AXIOM/bin:\$PATH  << expanded by the shell

 make

 (after some time has elapsed...)


   gcc -c -Wall -DVOL=volatile -fsigned-char -pipe -O3 -fomit-frame-pointer  -I/home/mccramer/tmp/axiom/lsp/gcl-2.6.5/o -I../h -I../gcl-tk init_pari.c  
   gcc -c -Wall -DVOL=volatile -fsigned-char -pipe -O3 -fomit-frame-pointer  -I/home/mccramer/tmp/axiom/lsp/gcl-2.6.5/o -I../h -I../gcl-tk nsocket.c  
   gcc -c -Wall -DVOL=volatile -fsigned-char -pipe -O3 -fomit-frame-pointer  -I/home/mccramer/tmp/axiom/lsp/gcl-2.6.5/o -I../h -I../gcl-tk sfasl.c  
   In file included from sfasl.c:40:
   sfaslbfd.c: In function `fasload':
   sfaslbfd.c:266: error: structure has no member named `_raw_size'
   sfaslbfd.c:291: error: structure has no member named `_raw_size'
   sfaslbfd.c:356: error: structure has no member named `_raw_size'
   make[4]: *** [sfasl.o] Error 1
   make[4]: Leaving directory `/home/mccramer/tmp/axiom/lsp/gcl-2.6.5/o'
   make[3]: *** [unixport/saved_pre_gcl] Error 2
   make[3]: Leaving directory `/home/mccramer/tmp/axiom/lsp/gcl-2.6.5'
   /bin/sh: unixport/saved_gcl: No such file or directory
   make[2]: *** [gcldir] Error 127
   make[2]: Leaving directory `/home/mccramer/tmp/axiom/lsp'
   make[1]: *** [lspdir] Error 2
   make[1]: Leaving directory `/home/mccramer/tmp/axiom'
   make: *** [all] Error 2

 What did I wrong here ?

 My system's software:

 Linux 2.6.10-rc3
 gcc 3.3.4

\start
Date: Fri, 17 Dec 2004 16:06:02 +0100
From: Martin Rubey
To: Meino Christian Cramer
Subject: Re: Compile errors on Axiom 2004-11-15
Cc: Camm Maguire, list

It looks like there is a problem with bfd. (whatever this is) Most probably,
Camm Maguire will be able to help. What version of bfd do you have? Look for
something like

/usr/lib/libbfd-2.14.90.0.5.so

Sorry for the inconvenience,

\start
Date: Fri, 17 Dec 2004 16:21:37 +0100 (CET)
From: Meino Christian Cramer
To: Martin Rubey
Subject: Re: Compile errors on Axiom 2004-11-15

Hi Martin,

 thanks for the reply :)

 Here is my configuration:

 ----------------------------------------------------------
         libbfd.so (libc6) => /usr/lib/libbfd.so
         libbfd-2.15.91.0.1.so (libc6) => /usr/lib/libbfd-2.15.91.0.1.so
         libbfd-2.15.90.0.1.1.so (libc6) => /usr/lib/libbfd-2.15.90.0.1.1.so
 ----------------------------------------------------------
 -rw-r--r--  1 root 2206246 Oct 30 19:57 /usr/lib/libbfd-2.15.90.0.1.1.so
 -rwxr-xr-x  1 root 607226 May 30  2004 /usr/lib/libbfd-2.15.91.0.1.so
 lrwxrwxrwx  1 root 21 May 30  2004 /usr/lib/libbfd.so -> libbfd-2.15.91.0.1.so
 ----------------------------------------------------------

> It looks like there is a problem with bfd. (whatever this is) Most probably,
> Camm Maguire will be able to help. What version of bfd do you have? Look for
> something like
> 
> /usr/lib/libbfd-2.14.90.0.5.so
> 
> Sorry for the inconvenience,

\start
Date: Fri, 17 Dec 2004 11:37:38 -0500
From: Bill Page
To: Tim Daly
Subject: FW: [Axiom Book] Good luck

Tim,

Since you may not be subscribed to the Axiom Book page
on MathAction, you may not have seen this note:

On Thursday, December 16, 2004 8:37 PM Bob Sutor wrote:

> To: MathAction
> Subject: [Axiom Book] Good luck
>
> This all sounds fascinating and I wish you the best of
> luck with the project. It's nice to see that the old book
> still has life to it and is living on and evolving.

Dr. Sutor's encouragement means a lot to me!

Now that we have the Windows version off the ground,
I think the book should be the "next big push".

\start
Date: Fri, 17 Dec 2004 17:05:27 +0100
From: Martin Rubey
To: Meino Christian Cramer
Subject: Re: Compile errors on Axiom 2004-11-15
Cc: Camm Maguire

Dear Meino,

unfortunately I'm not the export, but maybe downgrading to 2.14 helps. (I have
libbfd-2.14.90.0.5.so ...)

I'm absolutely sure that there is a solution for libbfd-2.15, too, but I don't
know it. You'd have to wait for a more authoritative answer from Camm.

I suppose you got the source from savannah?

Good luck,

Martin

Meino Christian Cramer writes:
 > 
 > Hi Martin,
 > 
 >  thanks for the reply :)
 > 
 >  Here is my configuration:
 > 
 >  ----------------------------------------------------------
 >          libbfd.so (libc6) => /usr/lib/libbfd.so
 >          libbfd-2.15.91.0.1.so (libc6) => /usr/lib/libbfd-2.15.91.0.1.so
 >          libbfd-2.15.90.0.1.1.so (libc6) => /usr/lib/libbfd-2.15.90.0.1.1.so
 >  ----------------------------------------------------------
 >  -rw-r--r--  1 root 2206246 Oct 30 19:57 /usr/lib/libbfd-2.15.90.0.1.1.so
 >  -rwxr-xr-x  1 root 607226 May 30  2004 /usr/lib/libbfd-2.15.91.0.1.so
 >  lrwxrwxrwx  1 root 21 May 30  2004 /usr/lib/libbfd.so -> libbfd-2.15.91.0.1.so
 >  ----------------------------------------------------------
 > 
 >  
 > 
 > > It looks like there is a problem with bfd. (whatever this is) Most probably,
 > > Camm Maguire will be able to help. What version of bfd do you have? Look for
 > > something like
 > > 
 > > /usr/lib/libbfd-2.14.90.0.5.so
 > > 
 > > Sorry for the inconvenience,

\start
Date: Fri, 17 Dec 2004 11:44:14 -0500
From: Bill Page
To: Meino Christian Cramer, Martin Rubey
Subject: RE: Compile errors on Axiom 2004-11-15
Cc: Camm Maguire

Meino,

This is a GCL build problem. I think the usual solution that
Camm would suggest is to repeat the build specifying the
locbfd option in the GCL configure step. You can do that by
editing the file lsp/Makefile.pamphlet. This causes GCL to
build it's own library rather than depending on the one supplied
by the system. Check the axiom-developer and/or gcl email
archives for details.

Regards,
Bill Page.

> -----Original Message-----
> 
> Hi Martin,
> 
>  thanks for the reply :)
> 
>  Here is my configuration:
> 
>  ----------------------------------------------------------
>          libbfd.so (libc6) => /usr/lib/libbfd.so
>          libbfd-2.15.91.0.1.so (libc6) => 
> /usr/lib/libbfd-2.15.91.0.1.so
>          libbfd-2.15.90.0.1.1.so (libc6) => 
> /usr/lib/libbfd-2.15.90.0.1.1.so
>  ----------------------------------------------------------
>  -rw-r--r--  1 root 2206246 Oct 30 19:57 
> /usr/lib/libbfd-2.15.90.0.1.1.so
>  -rwxr-xr-x  1 root 607226 May 30  2004 /usr/lib/libbfd-2.15.91.0.1.so
>  lrwxrwxrwx  1 root 21 May 30  2004 /usr/lib/libbfd.so -> 
> libbfd-2.15.91.0.1.so
>  ----------------------------------------------------------
> 
> Kind regards,
>  Meino
> 
>  
> 
> > It looks like there is a problem with bfd. (whatever this 
> is) Most probably, Camm Maguire will be able to help. What
> version of bfd do you have? Look for something like
> > 
> > /usr/lib/libbfd-2.14.90.0.5.so
> > 
> > Sorry for the inconvenience,

\start
Date: Fri, 17 Dec 2004 18:28:08 +0100 (CET)
From: Meino Christian Cramer
To: Bill Page
Subject: Re: Compile errors on Axiom 2004-11-15
Cc: Camm Maguire


Bill,

 for what patterns/keywords should I look for in those mailing lists?

 With "gcl", "build" I got far too many hits.

 Could you give a little more detailed hellp other than "search in
 the mailing lists?"

 Regards,
 Meino Cramer


> Meino,
> 
> This is a GCL build problem. I think the usual solution that
> Camm would suggest is to repeat the build specifying the
> locbfd option in the GCL configure step. You can do that by
> editing the file lsp/Makefile.pamphlet. This causes GCL to
> build it's own library rather than depending on the one supplied
> by the system. Check the axiom-developer and/or gcl email
> archives for details.
> 
> Regards,
> Bill Page.
> 
> > -----Original Message-----
> > Hi Martin,
> > 
> >  thanks for the reply :)
> > 
> >  Here is my configuration:
> > 
> >  ----------------------------------------------------------
> >          libbfd.so (libc6) => /usr/lib/libbfd.so
> >          libbfd-2.15.91.0.1.so (libc6) => 
> > /usr/lib/libbfd-2.15.91.0.1.so
> >          libbfd-2.15.90.0.1.1.so (libc6) => 
> > /usr/lib/libbfd-2.15.90.0.1.1.so
> >  ----------------------------------------------------------
> >  -rw-r--r--  1 root 2206246 Oct 30 19:57 
> > /usr/lib/libbfd-2.15.90.0.1.1.so
> >  -rwxr-xr-x  1 root 607226 May 30  2004 /usr/lib/libbfd-2.15.91.0.1.so
> >  lrwxrwxrwx  1 root 21 May 30  2004 /usr/lib/libbfd.so -> 
> > libbfd-2.15.91.0.1.so
> >  ----------------------------------------------------------
> > 
> > Kind regards,
> >  Meino
> > 
> >  
> > 
> > > It looks like there is a problem with bfd. (whatever this 
> > is) Most probably, Camm Maguire will be able to help. What
> > version of bfd do you have? Look for something like
> > > 
> > > /usr/lib/libbfd-2.14.90.0.5.so
> > > 
> > > Sorry for the inconvenience,
> > > 
> > > Martin

\start
Date: Fri, 17 Dec 2004 12:36:32 -0500
From: Bill Page
To: Meino Christian Cramer
Subject: RE: Compile errors on Axiom 2004-11-15
Cc: Camm Maguire

Hi,

I am sorry. I hate when people who do that to me... :)

Maybe this entry in the archive will be of some help?

http://lists.gnu.org/archive/html/axiom-developer/2004-06/msg00279.html

Regards,
Bill Page.

> -----Original Message-----
> Bill,
> 
>  for what patterns/keywords should I look for in those mailing lists?
> 
>  With "gcl", "build" I got far too many hits.
> 
>  Could you give a little more detailed hellp other than "search in
>  the mailing lists?"
> 
>  Regards,
>  Meino Cramer
> 
> 
> > Meino,
> > 
> > This is a GCL build problem. I think the usual solution that
> > Camm would suggest is to repeat the build specifying the
> > locbfd option in the GCL configure step. You can do that by
> > editing the file lsp/Makefile.pamphlet. This causes GCL to
> > build it's own library rather than depending on the one supplied
> > by the system. Check the axiom-developer and/or gcl email
> > archives for details.
> > 
> > Regards,
> > Bill Page.
> > 
> > > -----Original Message-----
> > > From: 
> > > axiom-developer-bounces+bill.page1=sympatico.ca@nongnu.org 
> > > .org] On Behalf Of Meino Christian Cramer
> > > Sent: Friday, December 17, 2004 10:22 AM
> > > To: Martin Rubey
> > > Cc: Camm Maguire; list
> > > Subject: Re: Compile errors on Axiom 2004-11-15
> > > 
> > > 
> > > Hi Martin,
> > > 
> > >  thanks for the reply :)
> > > 
> > >  Here is my configuration:
> > > 
> > >  ----------------------------------------------------------
> > >          libbfd.so (libc6) => /usr/lib/libbfd.so
> > >          libbfd-2.15.91.0.1.so (libc6) => 
> > > /usr/lib/libbfd-2.15.91.0.1.so
> > >          libbfd-2.15.90.0.1.1.so (libc6) => 
> > > /usr/lib/libbfd-2.15.90.0.1.1.so
> > >  ----------------------------------------------------------
> > >  -rw-r--r--  1 root 2206246 Oct 30 19:57 
> > > /usr/lib/libbfd-2.15.90.0.1.1.so
> > >  -rwxr-xr-x  1 root 607226 May 30  2004 
> /usr/lib/libbfd-2.15.91.0.1.so
> > >  lrwxrwxrwx  1 root 21 May 30  2004 /usr/lib/libbfd.so -> 
> > > libbfd-2.15.91.0.1.so
> > >  ----------------------------------------------------------
> > > 
> > > Kind regards,
> > >  Meino
> > > 
> > >  
> > > 
> > > > It looks like there is a problem with bfd. (whatever this 
> > > is) Most probably, Camm Maguire will be able to help. What
> > > version of bfd do you have? Look for something like
> > > > 
> > > > /usr/lib/libbfd-2.14.90.0.5.so
> > > > 

\start
Date: Fri, 17 Dec 2004 18:49:27 +0100
From: Martin Rubey
To: Bill Page
Subject: Re: FW: [Axiom Book] Good luck

Dear Bill,

maybe this is the point where we could subscribe axiom-developer to mathaction,
i.e., any time mathaction is changed, a note is sent to
list.

Mathaction is pretty stable now, and because of the preview feature and the
possibility of using an external editor, most changes happen in one or two
steps.

I would strongly encourage you to take this step.

Martin

PS: Would it be possible to have the bibliography from 

http://page.axiom-developer.org/zope/Plone/bibliography_view

moved to mathaction? Of course I could do it by hand, but it seems easier to me
if you'd just do a "cp", if possible.


Bill Page writes:
 > Tim,
 > 
 > Since you may not be subscribed to the Axiom Book page
 > on MathAction, you may not have seen this note:
 > 
 > On Thursday, December 16, 2004 8:37 PM Bob Sutor wrote:
 > 
 > > To: MathAction
 > > Subject: [Axiom Book] Good luck
 > >
 > > This all sounds fascinating and I wish you the best of
 > > luck with the project. It's nice to see that the old book
 > > still has life to it and is living on and evolving.
 > 
 > --
 > forwarded from
 > http://page.axiom-developer.org/zope/mathaction/AxiomBook#msg20041216193645-
 > 0600@page.axiom-developer.org
 > 
 > --
 > 
 > Dr. Sutor's encouragement means a lot to me!
 > 
 > Now that we have the Windows version off the ground,
 > I think the book should be the "next big push".

\start
Date: Fri, 17 Dec 2004 13:34:46 -0500
From: Stephen Wilson
To: Bill Page
Subject: Re: Compile errors on Axiom 2004-11-15
Cc: Camm Maguire, Meino Christian Cramer

Hello,

I recall a more recent posting from Camm:

  http://lists.gnu.org/archive/html/axiom-developer/2004-11/msg00098.html

This posting gives a few patches to the gcl sources which should allow
it to compile with respect to a recent bfd. These patches involve the
precise files and bfd structures which caused Meino's build to choke.
Apparently the patches are available on gcl's errata page as well.

There is still the option of configuring gcl to build against its own
bfd library. In lsp/Makefile.pamphlet, about line 340, you will find
the following stanza starting as:

 ========================================================================
<<gclConfigureMake>>=
        @(cd ${GCLVERSION} ; \
        ./configure --enable-vssize=65536*2 --enable-statsysbfd	--enable-maxpage=128*1024 ; \
 ========================================================================

Where you can change the options to configure. You could try
`--disable-statsysbfd --enable-locbfd' thus:

 ========================================================================
<<gclConfigureMake>>=
        @(cd ${GCLVERSION} ; \
        ./configure --enable-vssize=65536*2 --disable-statsysbfd --enable-locbfd \
	--enable-maxpage=128*1024 ; \
 ========================================================================

Cheers,
Steve


On Fri, Dec 17, 2004 at 12:36:32PM -0500, Bill Page wrote:
> Hi,
> 
> I am sorry. I hate when people who do that to me... :)
> 
> Maybe this entry in the archive will be of some help?
> 
> http://lists.gnu.org/archive/html/axiom-developer/2004-06/msg00279.html
> 
> Regards,
> Bill Page.
> 
> > -----Original Message-----

> > Bill,
> > 
> >  for what patterns/keywords should I look for in those mailing lists?
> > 
> >  With "gcl", "build" I got far too many hits.
> > 
> >  Could you give a little more detailed hellp other than "search in
> >  the mailing lists?"
> > 
> >  Regards,
> >  Meino Cramer
> > 
> > 
> > > Meino,
> > > 
> > > This is a GCL build problem. I think the usual solution that
> > > Camm would suggest is to repeat the build specifying the
> > > locbfd option in the GCL configure step. You can do that by
> > > editing the file lsp/Makefile.pamphlet. This causes GCL to
> > > build it's own library rather than depending on the one supplied
> > > by the system. Check the axiom-developer and/or gcl email
> > > archives for details.
> > > 
> > > Regards,
> > > Bill Page.
> > > 
> > > > -----Original Message-----
> > > > Hi Martin,
> > > > 
> > > >  thanks for the reply :)
> > > > 
> > > >  Here is my configuration:
> > > > 
> > > >  ----------------------------------------------------------
> > > >          libbfd.so (libc6) => /usr/lib/libbfd.so
> > > >          libbfd-2.15.91.0.1.so (libc6) => 
> > > > /usr/lib/libbfd-2.15.91.0.1.so
> > > >          libbfd-2.15.90.0.1.1.so (libc6) => 
> > > > /usr/lib/libbfd-2.15.90.0.1.1.so
> > > >  ----------------------------------------------------------
> > > >  -rw-r--r--  1 root 2206246 Oct 30 19:57 
> > > > /usr/lib/libbfd-2.15.90.0.1.1.so
> > > >  -rwxr-xr-x  1 root 607226 May 30  2004 
> > /usr/lib/libbfd-2.15.91.0.1.so
> > > >  lrwxrwxrwx  1 root 21 May 30  2004 /usr/lib/libbfd.so -> 
> > > > libbfd-2.15.91.0.1.so
> > > >  ----------------------------------------------------------
> > > > 
> > > > Kind regards,
> > > >  Meino
> > > > 
> > > >  
> > > > 
> > > > > It looks like there is a problem with bfd. (whatever this 
> > > > is) Most probably, Camm Maguire will be able to help. What
> > > > version of bfd do you have? Look for something like
> > > > > 
> > > > > /usr/lib/libbfd-2.14.90.0.5.so
> > > > > 
> > > > > Sorry for the inconvenience,

\start
Date: Fri, 17 Dec 2004 13:23:14 -0500
From: Bill Page
To: Martin Rubey
Subject: MathAction preview and Axiom bibliography

Martin,

On Friday, December 17, 2004 12:49 PM you wrote:
> 
> maybe this is the point where we could subscribe 
> axiom-developer to mathaction, i.e., any time
> mathaction is changed, a note is sent to
> list.
>

Ok, I will do that later today.
 
> Mathaction is pretty stable now, and because of the preview 
> feature and the possibility of using an external editor,
> most changes happen in one or two steps.

Yes, isn't that preview great! It makes the ZWiki interface
much more usable in conjunction with subscriptions. I really
like how it is possible to run Axiom and/or Reduce to do some
test or other and then either save the results as a web page
for others to see or not depending on the results.

> 
> PS: Would it be possible to have the bibliography from 
> 
http://page.axiom-developer.org/zope/Plone/bibliography_view

moved to mathaction? Of course I could do it by hand, but
it seems easier to me if you'd just do a "cp", if possible.

Do you mean move it as a static web page?

Right now on plone it is managed as a database application
under Plone. As far as I know this I know this is not currently
possible under ZWiki alone.

As a static page some of the other functions would also not
work such as the bibtex download. If it is just one big page
then the wiki search would not be of much use.

What's wrong with leaving it where it is?

\start
Date: Fri, 17 Dec 2004 15:00:01 -0500
From: Tim Daly
To: list
Subject: axiom--main--1--patch-15

I've changed the top level Makefile.pamphlet to include a new per-system
variable called GCLOPTS. This variable is intended to allow simple
command line changes for GCL builds. The default value is:

GCLOPTS="--enable-vssize=65536*2 --enable-statsysbfd --enable-maxpage=128*1024"

but like all of the other system specific options this can be changed on 
the make command line with:

make GCLOPTS='"--enable-maxpage=128*1024 --enable-vssize=65536*2"'

Note that in this case you MUST include both the single and double quotes.
The single quotes escape the double quotes in the shell so that the double
quotes are actually seen as part of the GCLOPTS variable value. Since the
options contain spaces we need to add the double quotes.

This has been checked in as axiom--main--1--patch-15.

\start
Date: Fri, 17 Dec 2004 15:07:41 -0500
From: Tim Daly
To: list
Subject: stable release schedule

There are some differences between the axiom--main--1 branch 
and the Savannah CVS.

While, in general, it is not vital that Savannah (where the bravest
users get sources) track the axiom-main branch (where developers work), 
I suggest that we consider setting up an expectation of a 'release
schedule'. Since open source tends to follow the philosophy of 
'release early, release often' we should follow that.

My suggestion is that we bring axiom--main--1 up to a tested
release version as of the 1st of every month. That way the Savannah
version is at most a month behind the latest merged version in main.
Plus this will give developers a target to shoot for when developing
features and an idea of when the merged versions will emerge.

Comments?

\start
Date: Fri, 17 Dec 2004 19:35:43 +0100
From: Martin Rubey
To: Bill Page
Subject: Re: MathAction preview and Axiom bibliography

Bill Page writes:
 > Martin,
 > 
 > On Friday, December 17, 2004 12:49 PM you wrote:
 > > 
 > > maybe this is the point where we could subscribe axiom-developer to
 > > mathaction, i.e., any time mathaction is changed, a note is sent to
 > > list.
 > >
 > 
 > Ok, I will do that later today.

Great!
 
 > > PS: Would it be possible to have the bibliography from 
 > > 
 > http://page.axiom-developer.org/zope/Plone/bibliography_view
 > 
 > moved to mathaction? Of course I could do it by hand, but it seems easier to
 > me if you'd just do a "cp", if possible.
 > 
 > Do you mean move it as a static web page?
 > 
 > Right now on plone it is managed as a database application under Plone. As
 > far as I know this I know this is not currently possible under ZWiki alone.

OK, I didn't realize that there is functionality involved :-) No, it does not
make sense to move it then. The "emotionale" was: since it gets so many hits, I
would like to have it on mathaction :-)

\start
Date: Fri, 17 Dec 2004 11:38:28 -0800 (PST)
From: Cliff Yapp
To: Tim Daly
Subject: Re: stable release schedule

--- Tim Daly wrote:

> My suggestion is that we bring axiom--main--1 up to a tested
> release version as of the 1st of every month. That way the Savannah
> version is at most a month behind the latest merged version in main.
> Plus this will give developers a target to shoot for when developing
> features and an idea of when the merged versions will emerge.
> 
> Comments?

I like the idea (not that I'm qualified to have an opinion) but I would
suggest that the release period be three months rather than one.  In
the case of Maxima at least, it always seems that whenever we get ready
for a release, we spend lots of time squashing problems that crop up on
machines with slightly different configurations (Windows is especially
bad - we have had a case or two of the Zombie Bug, where it keeps
coming back when we kill it.)

My rational works like this:  since preparing a quasi-stable release
involves many things, including testing underlying lisps, new
underlying system software, fixing whatever won't work with newer
versions of both, rince and repeat a couple times, etc. I would say you
might want a period longer than 1 month to work on features and core
improvements without worrying about practical stuff.  Perhaps it won't
be as bad as I think, but I worry a little that a month might be just
enough time for all the little dumb things to get fixed, only to have
to start all over again as the underlying software gets updated and
more little dumb things pop up.

Anyway, just a thought.  If the savannah version is not always expected
to build and run smoothly, then it might not be as bad.

\start
Date: Fri, 17 Dec 2004 16:57:37 -0500
From: Bill Page
To: list
Subject: subscribing axiom-developer to MathAction

Martin,

On Friday, December 17, 2004 1:36 PM you wrote:
 
> maybe this is the point where we could subscribe axiom-developer
> to mathaction, i.e., any time mathaction is changed, a note 
> is sent to list.

Ok, *I think* I have set this up. It was a bit awkward to do it
because of the "email reply required" type of authentication
that is used by mailman. In order to post a message to axiom-
developer the email address of the sender has to be subscribed
to the email list. So I first have to subscribe mathaction to
axiom-developer. Mailman sends an email to the address that you
specify (in this case MathAction) and it
expects the receiver of the message to do something to confirm
the address. Normally email sent to MathAction
will be appended to a page on the MathAction website. To confirm
the mathaction email address as a subscriber to axiom-developer
I first had to temporily re-direct the mathaction email address
on axiom-developer.org to my own email address. Then I could
confirm the request and have (apparently) managed to get mathaction
subscribed.

But there is a potential problem. If the mathaction email address
is also subscribed to the MathAction wiki - what we really want
to do - then that could create a nasty email loop since anything
sent to the axiom-developer email list by the MathAction website
would be echoed back to MathAction and trigger another outgoing
email.

It turns out there are some options that I can specify for
subscriptions to the axiom-developer list, one of these is to
disable echoing of emails to the original sender. This would
prevent the loop but it would result in every message to the
axiom-developer email list to be duplicated since a posting
would be sent to MathAction who would update some webpage on
the site and then send the changes to the site subscribers
one of which is mathaction on the axiom-developer email list.

I have instead choosen to disable all emails to the mathaction
address (on permantent vacation :) but the address remains
subscribed.

So this is what I have set up:

1) A user with the name Relay from MathAction is subscribed
to the axiom-developer email list using the email address
MathAction. Email delivery to that address
is disabled. (I hope that this does not also disable posting
of messages by that address!)

2) A user named axiom-developer is subscribed to the MathAction
website using the email address list

What I expect to happen:

1) If a change or comment is made to the MathAction web site
by someone, that will generate an email to the subscribers to
MathAction, one of which will go to list.
It should be recognized by mailman as coming from a subscriber
with email address MathAction

2) The email from MathAction will in turn be distributed by the
email server (mailman) at nongnu.org to all the other subscribers
on the axiom-developer email list.

However...

I have just made a test change on MathAction. I received a notice
of the change at my own email address since I am a subscriber
(you must of received it too), but since I am also a subscriber
to axiom-developer, I expected to see the notice again a short
time later echoed from that list. But so far it has not shown
up. Sometimes postings do seem to take a long time, so I
will continue to wait. In the meantime I am sending this message
to axiom-developer only and I will see which of these messages
arrives back in my inbasket first.

As Tim always say: There is no such thing as a simple job ... :)

\start
Date: Fri, 17 Dec 2004 21:47:57 +0100
From: Martin Rubey
To: Cliff Yapp
Subject: Re: stable release schedule
Cc: list, Tim Daly

C Y writes:
 >
 > --- Tim Daly wrote:
 >
 > > My suggestion is that we bring axiom--main--1 up to a tested release
 > > version as of the 1st of every month. That way the Savannah version is at
 > > most a month behind the latest merged version in main.  Plus this will
 > > give developers a target to shoot for when developing features and an idea
 > > of when the merged versions will emerge.

I think that this is a good idea. There is one thing which should go along with
this schedule however: *what* we want to target at. Whether the period will be
one or three months does not seem so important to me. We should, however, take
into account major holidays: Christmas, end of term in January (or is that an
Austriacism?), Easter, end of term in June...

So, to fill this with a little life, I'd like to have the first "real" release
just before February with

* all the known (build and algebra) patches integrated
  By the way: whats the status of bug #5977 x^2+1::DMP([x],INT) 

* my guessing package ready and documented. (that's my part, however, this
  shouldn't really be part of the distribution, should it?

While we are at it, here's another idea: I think it would be sensible to divide
Axiom into two pieces: the Algebra and the rest. If it would be that way, we
could have several tla/arch branches like operating systems, book, graphics,
hyperdoc, various lisp implementations and one common branch algebra.

This way, the mathematics would be roughly the same for all branches and we
wouldn't be in the awkward situation that Bill says "well, I'll try to
integrate some of the patches into the windows version right now, but the linux
versions have to wait until the weekend". They would be the same automatically!

Martin

 > I like the idea (not that I'm qualified to have an opinion)

Why wouldn't you be qualified?

\start
Date: Fri, 17 Dec 2004 14:53:23 -0800 (PST)
From: Cliff Yapp
To: Martin Rubey
Subject: Re: stable release schedule

--- Martin Rubey wrote:

> C Y writes:
>  >
>  > --- Tim Daly wrote:
>  
> I think that this is a good idea. There is one thing which should go
> along with this schedule however: *what* we want to target at. 

Makes sense.

> Whether the period will be one or three months does not seem so 
> important to me. We should, however, take into account major 
> holidays: Christmas, end of term in January (or is that an
> Austriacism?), Easter, end of term in June...

In the US end of term is usually a week before Christmas.

> So, to fill this with a little life, I'd like to have the first
> "real" release just before February with
> 
> * all the known (build and algebra) patches integrated
>   By the way: whats the status of bug #5977 x^2+1::DMP([x],INT) 
> 
> * my guessing package ready and documented. (that's my part, however,
> this shouldn't really be part of the distribution, should it?

Unless there are legal reasons to to include it, or it takes massive
amounts of space, I think it's easier for the end user to have
everything already there.  Pretty much all available Maxima code (with
one exception I'm aware of) is now included in cvs.

(Caveot - having high speed internet and a (relatively) good sized hard
disk, making a file a meg or two larger doesn't tend to faze me at all.
 This is not universally true, so I guess the question is who our
audience is and what would best serve their needs.  I would be very
interested if, for this first release, both Axiom itself and
Axiom+TeXmacs were packaged as stand-alone exe installs and we could
see which would be more popular.)

> While we are at it, here's another idea: I think it would be sensible
> to divide Axiom into two pieces: the Algebra and the rest. If it
> would be that way, we could have several tla/arch branches like 
> operating systems, book, graphics, hyperdoc, various lisp 
> implementations and one common branch algebra.

Um.  Shouldn't the code be modular enough to make this unnecessary?

> This way, the mathematics would be roughly the same for all branches
> and we wouldn't be in the awkward situation that Bill says "well, 
> I'll try to integrate some of the patches into the windows version 
> right now, but the linux versions have to wait until the weekend". 
> They would be the same automatically!

Oh, I get it.  Tim, you're probably the one to best answer this - isn't
the windows branch temporary until the main codebase can build on all
branches without trouble?  Or are there Windows changes that cannot be
folded back into main?  In that case, I agree with Martin.

>  > I like the idea (not that I'm qualified to have an opinion)
> 
> Why wouldn't you be qualified?

I've never had to coordinate something like that.  Maxima's release
schedule is basically "when we're ready" and anybody who wants to look
at the current state of things can check out cvs.  Also, history
teaches that whenever we put together a release there tend to be
non-math issues that pop up.  But if Axiom is checked regularly (i.e.
once every few weeks) on all platforms, perhaps there won't be too many
issues with making periodic releases.  That's what I'm not sure about.

\start
Date: Fri, 17 Dec 2004 19:33:33 -0500
From: Tim Daly
To: Cliff Yapp
Subject: Re: stable release schedule

re: monthly vs three-month releases

The way Axiom is now being developed allows us to have various 
branches "release" at different times. Currently there are about
10 branches running in parallel. So for a change to the windows
branch we would see many changes that are not reflected in main.

Eventually a version of windows passes tests and will get a tag.
This tagged version will eventually be merged into main while the
windows branch continues to develop.

The main would get tested and then published to savannah.

The key issue is that "small, system independent" changes and bug
fixes get pushed out on a monthly basis but larger efforts have
their own branches and get pushed out after passing tests. So 
developers in the windows branch are not under any pressure to
publish on any given month but the savannah cvs won't have to wait
for quick fixes.

The downside is that I get to test-and-release frequently but I'm
testing constantly anyway. The upsides are that savannah is up to date
and I don't have pressure in mid-month to "get this fix out immediately".

So even though savannah gets updated monthly for the next several months
there will be no windows support in the release. However the linux
support for hyperdoc won't have to wait (once I get it to work, of course).

Three-month release cycles seem to feel too long to me. There would be
great pressure to fix various known problems well before the three
months is up. And missing a single release means that a simple fix
could take 6 months to reach savannah. The world moves much faster
than that and we need to polish our process so it works smoothly
and cleanly.

\start
Date: 17 Dec 2004 18:58:11 -0500
From: Camm Maguire
To: Stephen Wilson
Subject: Re: Compile errors on Axiom 2004-11-15
Cc: Meino Christian Cramer

Greetings!

You guys are so fast!  I concur -- the patch on the GCL errata page is
the ticket to the immediate problem below, but configuring with
--disable-statsysbfd --enable-locbfd should be an option out of the
box.

Take care,

Stephen Wilson writes:

> Hello,
> 
> I recall a more recent posting from Camm:
> 
>   http://lists.gnu.org/archive/html/axiom-developer/2004-11/msg00098.html
> 
> This posting gives a few patches to the gcl sources which should allow
> it to compile with respect to a recent bfd. These patches involve the
> precise files and bfd structures which caused Meino's build to choke.
> Apparently the patches are available on gcl's errata page as well.
> 
> There is still the option of configuring gcl to build against its own
> bfd library. In lsp/Makefile.pamphlet, about line 340, you will find
> the following stanza starting as:
> 
>  ========================================================================
> <<gclConfigureMake>>=
>         @(cd ${GCLVERSION} ; \
>         ./configure --enable-vssize=65536*2 --enable-statsysbfd	--enable-maxpage=128*1024 ; \
>  ========================================================================
> 
> Where you can change the options to configure. You could try
> `--disable-statsysbfd --enable-locbfd' thus:
> 
>  ========================================================================
> <<gclConfigureMake>>=
>         @(cd ${GCLVERSION} ; \
>         ./configure --enable-vssize=65536*2 --disable-statsysbfd --enable-locbfd \
> 	--enable-maxpage=128*1024 ; \
>  ========================================================================
> 
> Cheers,
> Steve
> 
> 
> On Fri, Dec 17, 2004 at 12:36:32PM -0500, Bill Page wrote:
> > Hi,
> > 
> > I am sorry. I hate when people who do that to me... :)
> > 
> > Maybe this entry in the archive will be of some help?
> > 
> > http://lists.gnu.org/archive/html/axiom-developer/2004-06/msg00279.html
> > 
> > Regards,
> > Bill Page.
> > 
> > > -----Original Message-----
> > > From: Meino Christian Cramer [mailto:Meino Christian Cramer] 
> > > Sent: Friday, December 17, 2004 12:28 PM
> > > To: Bill Page
> > > Cc: Martin Rubey; Camm Maguire; 
> > > list
> > > Subject: Re: Compile errors on Axiom 2004-11-15
> > > 
> > > 
> > > From: Bill Page
> > > Subject: RE: Compile errors on Axiom 2004-11-15
> > > Date: Fri, 17 Dec 2004 11:44:14 -0500
> > > 
> > > Bill,
> > > 
> > >  for what patterns/keywords should I look for in those mailing lists?
> > > 
> > >  With "gcl", "build" I got far too many hits.
> > > 
> > >  Could you give a little more detailed hellp other than "search in
> > >  the mailing lists?"
> > > 
> > >  Regards,
> > >  Meino Cramer
> > > 
> > > 
> > > > Meino,
> > > > 
> > > > This is a GCL build problem. I think the usual solution that
> > > > Camm would suggest is to repeat the build specifying the
> > > > locbfd option in the GCL configure step. You can do that by
> > > > editing the file lsp/Makefile.pamphlet. This causes GCL to
> > > > build it's own library rather than depending on the one supplied
> > > > by the system. Check the axiom-developer and/or gcl email
> > > > archives for details.
> > > > 
> > > > Regards,
> > > > Bill Page.
> > > > 
> > > > > -----Original Message-----
> > > > > From: 
> > > > > axiom-developer-bounces+bill.page1=sympatico.ca@nongnu.org 
> > > > > .org] On Behalf Of Meino Christian Cramer
> > > > > Sent: Friday, December 17, 2004 10:22 AM
> > > > > To: Martin Rubey
> > > > > Cc: Camm Maguire; list
> > > > > Subject: Re: Compile errors on Axiom 2004-11-15
> > > > > 
> > > > > 
> > > > > Hi Martin,
> > > > > 
> > > > >  thanks for the reply :)
> > > > > 
> > > > >  Here is my configuration:
> > > > > 
> > > > >  ----------------------------------------------------------
> > > > >          libbfd.so (libc6) => /usr/lib/libbfd.so
> > > > >          libbfd-2.15.91.0.1.so (libc6) => 
> > > > > /usr/lib/libbfd-2.15.91.0.1.so
> > > > >          libbfd-2.15.90.0.1.1.so (libc6) => 
> > > > > /usr/lib/libbfd-2.15.90.0.1.1.so
> > > > >  ----------------------------------------------------------
> > > > >  -rw-r--r--  1 root 2206246 Oct 30 19:57 
> > > > > /usr/lib/libbfd-2.15.90.0.1.1.so
> > > > >  -rwxr-xr-x  1 root 607226 May 30  2004 
> > > /usr/lib/libbfd-2.15.91.0.1.so
> > > > >  lrwxrwxrwx  1 root 21 May 30  2004 /usr/lib/libbfd.so -> 
> > > > > libbfd-2.15.91.0.1.so
> > > > >  ----------------------------------------------------------
> > > > > 
> > > > > Kind regards,
> > > > >  Meino
> > > > > 
> > > > >  
> > > > > 
> > > > > > It looks like there is a problem with bfd. (whatever this 
> > > > > is) Most probably, Camm Maguire will be able to help. What
> > > > > version of bfd do you have? Look for something like
> > > > > > 
> > > > > > /usr/lib/libbfd-2.14.90.0.5.so
> > > > > > 
> > > > > > Sorry for the inconvenience,

\start
Date: 17 Dec 2004 18:56:16 -0500
From: Camm Maguire
To: Tim Daly
Subject: re: lsp/Makefile.pamphlet

Thanks Tim!  Are there any other problems as yet unsolved by patches
which should go into a 2.6.6, or is this list pretty final?

\start
Date: Fri, 17 Dec 2004 19:37:55 -0500
From: Tim Daly
To: Cliff Yapp
Subject: unified vs separate builds

Traditionally Axiom has built many versions from the same sources.
I don't see any reason to change this and it will require a bit of
work so it's unlikely to happen.

Ideally the end user should only have to type 'make' and we take
care of all of the magic. Else what are magicians for?

\start
Date: Fri, 17 Dec 2004 18:11:53 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: none
Cc: Simon Michael

--removed:
- > 
- > although I really (really, really) like mathaction and I'm 
- > impatiently awaiting the point were the documentation effort
- > gets started there,
-
-I hear you.::
-

--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomDeveloper#msg20041217181153-0600@page.axiom-developer.org

\start
Date: Fri, 17 Dec 2004 16:11:03 -0800 (PST)
From: Cliff Yapp
To: Tim Daly
Subject: Re: stable release schedule

--- Tim Daly wrote:

> Three-month release cycles seem to feel too long to me. There would
> be great pressure to fix various known problems well before the three
> months is up. And missing a single release means that a simple fix
> could take 6 months to reach savannah. The world moves much faster
> than that and we need to polish our process so it works smoothly
> and cleanly.

That is a compelling point.  OK, one month sounds good.

\start
Date: Fri, 17 Dec 2004 20:03:10 -0500
From: Tim Daly
To: Camm Maguire
Subject: re: lsp/Makefile.pamphlet

Camm,

As far as I know the list is final. There are only 4 patches that
relate to windows and I think they are only fixing two problems.
The first problem is the makedir function and the second problem
had to do with wildcard expansion or some such.

There is still a known problem with HOME/truename/~ expansion.

Likely there will be more patches as we begin to investigate
socket support for graphics/sman but noone is there yet.

\start
Date: Fri, 17 Dec 2004 19:28:50 -0500
From: Bill Page
To: list
Subject: RE: subscribing axiom-developer to MathAction

On Friday, December 17, 2004 4:58 PM I wrote:

> 
> I have just made a test change on MathAction. I received a notice
> of the change at my own email address since I am a subscriber
> (you must of received it too), but since I am also a subscriber
> to axiom-developer, I expected to see the notice again a short
> time later echoed from that list. But so far it has not shown
> up. Sometimes postings do seem to take a long time, so I
> will continue to wait. In the meantime I am sending this message
> to axiom-developer only and I will see which of these messages
> arrives back in my inbasket first.
> 

Well, it wasn't quite so easy ...

I (via the re-directed mathaction email address) received the
follow bounce message from the axiom-developer mail list:

> Your mail to 'Axiom-developer' with the subject
>
>    
>
> Is being held until the list moderator can review it for approval.
>
> The reason it is being held:
>
>    Message has implicit destination

The reason is that ZWiki is using the Bcc: email field to send
it's email to subscribers. For security reasons (I guess) mailman
rejects messages that it receives only via the Bcc field. As a
temporary work-a-round I have changed MathAction to us Cc:
instead. This has the side effect that the list of subscribers
email addresses are visible to other subscribers. But right
now with only 4 subscribers that is not much of a problem.
Anyway, if we can forward through axiom-developer, then for
most people there would be little reason to subscribe directly
to MathAction, except for page-specific subscriptions.

\start
Date: Fri, 17 Dec 2004 20:14:16 -0500
From: Tim Daly
To: MathAction
Subject: mathaction

Bill,

Am I missing something? Have you set up a way to collaborate
that doesn't use email? I'm off to see what you're suggesting.

I've had my head so full I hadn't noticed.

\start
Date: Fri, 17 Dec 2004 15:04:08 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: 

??changed:
-Messages from the Axiom-developer email mailing list
Selected Messages from the Axiom-developer email mailing list

--removed:
-
-I am testing the ExternalEdit option. This page was accessed using Mozilla under windows with ExternalEdit defaulting to WORD (yuk).
-I modified the ZopeEdit.ini file in c:\Document Settings\ so that editor="WinEdt" and now I am editing using WinEdt. So it seems to work.
-
-ExternalEdit now works using Mozilla 1.7.1 and FireFox 0.9.3 under Windows. I can use either WORD (the default)
-or I can set the editor in the ZopeEdit.ini file. WinEdt works for me. vi under cygwin shows the known
-problem that the most recent version of the page is not loaded.
-
-If someone tries ExternalEdit under Linux please let us know what browsers and editors work for you.
-
-I am still having trouble using Explorer, apparently due to a "no-cache" option that is being set somewhere.
-But following the troubleshooting instructions at http://zope.org/Members/Caseman/ExternalEditor/install-win32
-regarding this problem did not seem to help. As far as I can tell we are not using "cookiecrumbler" or any
-other Zope option that affects caching. It is possible that this might be happening because we are using Apache
-as a frontend proxy to Zope. If so, or in any case, I think it might be possible to set some options in Apache
-to override this. But unless we have some users who really really want to use Explorer, then I would suggest
-we use either Mozilla or FireFox instead.
-
-From BillPage Thu Sep 23 21:26:35 -0500 2004
-[102 more lines...]

--removed:
-> On the other hand, you do have a point regarding "keeping a
-> record of the discussion". Thus, I promise to try the following
-> in the future:
-> 
-> As soon as I realize that I can somehow "classify" a discussion,
-> I'll create a page and continue the discussion there. (The
-> prerequisite is that the discussion gets its "own" page.
-> I will detail this below.)
-
-I didn't see quite enough details below, but I think this might
-be hard to achieve. Right now it is only possible for MathAction
-to direct a message to a specific page in the wiki based on the
-occurrence of [xxxxx] in the subject line. Messages distributed
-via the axiom-developer mailing list automatically have
-added to the subject line and so if mathaction
-is included in the mailing list (either by subscription or via
-Cc, as in the case of this and a few previous messages), it will
-only attach the email as a comment to the page [Axiom-developer].
-It is only a coincidence that [xxxx] is used in both systems,
-[1 more lines...]

--removed:
-
-Well, as a physicist it seems that I am often in the position of
-having to remind myself that it is user *perceptions* and not
-facts that determine how users behave. :) You realize, of course
-that email via the axiom-developer mailing list is also archived
-and (quite) easily accessible via the web even for people who are
-not subscribed to axiom-developer? In MathAction the situation
-does seem to emphasize the web interface first with the ability to
-subscribe and act like a mailing list as a secondary feature. But
-really they are essential the same.
-
-Lately I seem to be dealing more and more with the fact that
-people view interaction via the web (as in the case of a wiki)
-quite differently than they view material that is delivered and
-distributed via email. This currently seems to be a major
-obstacle to implementing active collaboration via the web. :(
- 
-> By the way, there is one big difference in style regarding 
-> email exchange and mathaction exchange: When I reply to an
-[13 more lines...]

--removed:
-> It remains to say thank you once more for MathAction,
-> 
-> Martin
-> 
-> PS: How're pamphlets going?
-> 
-
-Maybe later this weekend on test.axiom-developer.org
-
-Later on Friday, September 24, 2004 6:28 AM Martin Rubey
-wrote:
-> 
-> Hmmm, another detail:
-> 
-> Martin Rubey writes:
-> > 
-> > There is another important detail: I think it is *very* 
-> > important to summarize the discussion from time to time,
-> > and for a "clean" look, I'd like to remove the exchange
-[90 more lines...]

--removed:
-
-> -----Original Message-----
-> From: Martin Rubey [mailto:MathAction] 
-> Sent: Friday, September 24, 2004 1:15 PM
-> To: MathAction
-> Subject: speakerscorner
-> 
-> 
-> Bob McElrath writes:
->> The situation suggests an integrated email/web/axiom 
->> interface that does all this without the intermediate
->> submit-to-webpage step.  
-> 
-> I'm unwilling to exchange MY (:-) emacs against any such 
-> tool. BTW: Bill, could you set up support for external editor?
-> http://zwiki.org/HowToSetUpExternalEditor
->
-> Thanks, Martin
-
-[14 more lines...]

--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomDeveloper#msg20041217150408-0600@page.axiom-developer.org

\start
Date: Fri, 17 Dec 2004 15:11:18 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: 

??changed:
-On Friday, September 24, 2004 6:14 AM Martin Rubey wrote: 
-> 
-> although I really (really, really) like mathaction and I'm 
-> impatiently awaiting the point were the documentation effort
-> gets started there,
-
-I hear you.
-
-> I do believe that it cannot serve as a replacement for the
-> mailing list.
On Friday, September 24, 2004 6:14 AM Martin Rubey wrote::
 
 > 
 > although I really (really, really) like mathaction and I'm 
 > impatiently awaiting the point were the documentation effort
 > gets started there,

I hear you.::

 > I do believe that it cannot serve as a replacement for the
 > mailing list.

??changed:
-
-> 
-> On the other hand, I do *not* like the idea of having *all* 
-> of axiom-developer copied to mathaction. I cannot really say why,
-> it is a (probably completely irrational) feeling. Maybe it does
-> have to do with some sort of privacy.
->
-> There is another important detail: I think it is *very* 
-> important to summarize the discussion from time to time,
-> and for a "clean" look, I'd like to remove the exchange then.
-> So, unless the discussion is copied (CC'd) to one of the
-> mailing lists, it will be lost.
->
::

 > 
 > On the other hand, I do *not* like the idea of having *all* 
 > of axiom-developer copied to mathaction. I cannot really say why,
 > it is a (probably completely irrational) feeling. Maybe it does
 > have to do with some sort of privacy.
 >
 > There is another important detail: I think it is *very* 
 > important to summarize the discussion from time to time,
 > and for a "clean" look, I'd like to remove the exchange then.
 > So, unless the discussion is copied (CC'd) to one of the
 > mailing lists, it will be lost.
 >

??changed:
-client-side (helper) installation here:
client-side (helper) installation here::

??changed:
-or here
or here::

--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomDeveloper#msg20041217151118-0600@page.axiom-developer.org

\start
Date: Fri, 17 Dec 2004 16:18:57 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: 

??changed:
-As Tim always say: There is no such thing as a simple job ... :)
As Tim always says: There is no such thing as a simple job ... :)

--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomDeveloper#msg20041217161857-0600@page.axiom-developer.org

\start
Date: Fri, 17 Dec 2004 20:21:43 -0500
From: Bill Page
To: list
Subject: avoiding duplicate messages

While looking at the issue of connecting the axiom-developer
email list to the MathAction wiki, I discovered something
that I must have missed earlier when subscribing to this
list:

  It is possible to tell the mailing list software to
  check if you were also on the To: or Cc: list of a
  message that it is forwarding and to avoid sending
  duplicates!

To do this go to

  http://lists.nongnu.org/mailman/options/axiom-developer

Fill in your email address and the password that you choose
when you subscribed to the list (not your email system password)
and click 'Login'.

At the bottom of the page look for the option

  "Avoid duplicate copies of messages?"

Click on "yes" and then 'Submit my Changes'. Clicking
"Set globally" will make this effective on all email list
to which you are subscribed.

And that's it. No more duplicates.

\start
Date: Fri, 17 Dec 2004 20:38:36 -0500
From: Bill Page
To: Tim Daly
Subject: RE: mathaction

Tim,

On Friday, December 17, 2004 8:14 PM you asked:
> 
> Am I missing something? Have you set up a way to collaborate
> that doesn't use email? I'm off to see what you're suggesting.

The MathAction wiki has the feature that anyone can "subscribe"
to the whole web site or to individual pages on the site. If
anyone updates or comments on a page on MathAction then all
subscribers receive a notice by email.

As Martin Ruby and I discussed some time ago, it is often seen
as awkward to subscribe in multiple places for the same project
so most people subscribe only once: one of the mailing lists.

MathAction has the potential to greatly facilitate communication
by allowing users to write equations in LaTeX and to execute
Axiom (and Reduce) commands to illustrate some point. But
currently it is still being used as if it were an 1-way only
medium. Recently I upgrade the wiki software to the newest
release of ZWiki that allows one to "preview" the result of
editing changes to a page before committing it to the website.

So for example you pick an exist page containing some Axiom
commands, click Edit and make some changes, correct a mistake,
etc. When you click Preview, you will see the output of Axiom
and other contents of the page nicely formatted as it would
appear to others *if* you decide to click Save. If you don't
want to save, you can just cancel.

When you click Save, any subscribers will be notified by
email of the change you made.

What Martin suggested this morning is that now that we have
this preview function most things that people actually save
will be things that will be of interest to others. Therefore
it makes sense that a notice be sent to all subscribers to
the axiom-developer mailing list, not just to the subscribers
to MathAction wiki. This way we hope that the number of
people actively using MathAction to communicate will gradually
increase as people learn how easy it is to use.

> 
> I've had my head so full I hadn't noticed.
> 

I am not surprized, it has been a busy time!

\start
Date: Fri, 17 Dec 2004 20:32:17 -0600
From: MathAction (billpage)
To: MathAction
Subject: [TeXmacs] 
Cc: Simon Michael


??changed:
-  On all Unix platforms TeXmacs is pre-configured to automatically interface with Axiom provided that "Axiom is installed":AxiomDownload and AXIOMsys is accessible at the command line (is in the path). Of course this means
-that you have to install "Axiom for Windows":AxiomDownload first.
-
-1  On Windows, the "cygwin":http://www.cygwin.com version of TeXmacs will also automatically interface with "Axiom for Windows" provided that the Path enviroment variable includes the Axiom directory as described in AxiomDownload. TeXmacs for cygwin on Windows is installed using the standard
1  On all Unix platforms TeXmacs is pre-configured to automatically interface with Axiom provided that "Axiom is installed":AxiomDownload and AXIOMsys is accessible at the command line (is in the path). Of course this means
that you have to install "Axiom":AxiomDownload first.

2  On Windows, the "cygwin":http://www.cygwin.com version of TeXmacs will also automatically interface with "Axiom for Windows" provided that the Path enviroment variable includes the Axiom directory as described in AxiomDownload. TeXmacs for cygwin on Windows is installed using the standard

??changed:
-2  The current experimental "native windows":http://www.texmacs.org/tmweb/download/windows.en.html version of TeXmacs does not require cygwin however, it does require the separate installation of a tm_axiom program in order to run Axiom. It is possible
-use the same program as under cygwin:
-
-   - "cygwin tm_axiom interface":http://page.axiom-developer.org/WinTexmacs.zip
-
-3  Download this file and unzip it into the 'C:\Program Files' directory. tm_axiom depends on the cygwin1.dll libarary which is also included in this zip file. Both files are copied into 'C:\Program Files\WinTeXmacs\TeXmacs\bin'.
-
-4  In order to comply with the cygwin licensing conditions (GPL) the source code for the "cygwin1.dll library":http://page.axiom-developer.org/cygwin-src-20041125.tar.bz2 is also provided, but it is not required for the interface to work.
-
-5  Finally a new experimental Native Windows TeXmacs-Axiom interface is available for testing:
-
-   - "native tm_axiom interface":http://page.axiom-developer.org/tmwin_axiom.zip
-
-   Please help us test it. It installs the same away as the cygwin program (by manually
-   copying the file) but no cygwin1.dll file is required.
-
3  The "native windows":http://www.texmacs.org/tmweb/download/windows.en.html version of TeXmacs does not require cygwin however, it does require the separate installation of the TeXmacs-Axiom interface program (tm_axiom) in order to run Axiom. A new version of tm_axiom especially for Windows is included in the "Axiom for Windows":AxiomDownload installation program.

To start an Axiom session from within TeXmacs use the menu options -- **Insert/Session/Axiom**

--
forwarded from http://page.axiom-developer.org/zope/mathaction/TeXmacs#msg20041217203217-0600@page.axiom-developer.org

\start
Date: Sat, 18 Dec 2004 02:21:13 -0500
From: Tim Daly
To: Mark Murray
Subject: BSD build

Mark,

I've installed BSD locally on a machine so I can smash things at will.
This should allow me to make more-than-glacial progress because the
screen is staring at me. There is nothing like the presence of a 
machine in my living room to motivate progress.

\start
Date: Sat, 18 Dec 2004 08:26:24 +0100
From: Martin Rubey
To: Bill Page
Subject: Re: subscribing axiom-developer to MathAction

Dear Bill,

Thanks for your effort. However, there are some things I don't understand at
all:

Bill Page writes:
 > 
 > Ok, *I think* I have set this up. It was a bit awkward to do it because of
 > the "email reply required" type of authentication that is used by
 > mailman. In order to post a message to axiom- developer the email address of
 > the sender has to be subscribed to the email list.

Is this really true? If yes, we should either change it or keep it in mind for
the next release! It is not very nice if you have a question and want to ask
and the mailman tells you "subscribe first!" Also, if we could change this, all
the problems you describe hereafter would vanish...

 > So I first have to subscribe mathaction to axiom-developer. Mailman sends an
 > email to the address that you specify (in this case
 > MathAction) and it expects the receiver of the message
 > to do something to confirm the address. Normally email sent to
 > MathAction will be appended to a page on the MathAction
 > website. To confirm the mathaction email address as a subscriber to
 > axiom-developer I first had to temporily re-direct the mathaction email
 > address on axiom-developer.org to my own email address. Then I could confirm
 > the request and have (apparently) managed to get mathaction subscribed.

Sounds like an interesting job :-)

 > But there is a potential problem. If the mathaction email address is also
 > subscribed to the MathAction wiki - what we really want to do - then that
 > could create a nasty email loop since anything sent to the axiom-developer
 > email list by the MathAction website would be echoed back to MathAction and
 > trigger another outgoing email.

This paragraph I do not understand. The mathaction email adress is
MathAction, so subscribing this to mathaction would mean
that any change on mathaction will send a message to
MathAction. What for?

\start
Date: Sat, 18 Dec 2004 01:50:43 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [TeXmacs] 


??changed:
-1  On all Unix platforms TeXmacs is pre-configured to automatically interface with Axiom provided that "Axiom is installed":AxiomDownload and AXIOMsys is accessible at the command line (is in the path). Of course this means
-that you have to install "Axiom":AxiomDownload first.
-
-2  On Windows, the "cygwin":http://www.cygwin.com version of TeXmacs will also automatically interface with "Axiom for Windows" provided that the Path enviroment variable includes the Axiom directory as described in AxiomDownload. TeXmacs for cygwin on Windows is installed using the standard
-
-   - "cygwin setup program":http://www.texmacs.org/tmweb/download/cygwin.en.html.
-
-3  The "native windows":http://www.texmacs.org/tmweb/download/windows.en.html version of TeXmacs does not require cygwin however, it does require the separate installation of the TeXmacs-Axiom interface program (tm_axiom) in order to run Axiom. A new version of tm_axiom especially for Windows is included in the "Axiom for Windows":AxiomDownload installation program.
   On all Unix/Linux systems the most recent version of TeXmacs is pre-configured to automatically interface with Axiom provided that Axiom is "installed":AxiomDownload and AXIOMsys is accessible at the command line (must be in the path). The current interface for Axiom has some known limitations when formatting long mathematical expressions.

   "Cygwin":http://www.cygwin.com is a Unix-emulation environment for windows. The "cygwin version of TeXmacs":http://www.texmacs.org/tmweb/download/cygwin.en.html automatically interfaces with "Axiom for Windows":AxiomDownload provided that the Path enviroment variable includes the Axiom directory as described in AxiomDownload. This path is set automatically by the "Axiom for Windows":AxiomDownload installer program. 

   <b>The "native windows version of TeXmacs":http://www.texmacs.org/tmweb/download/windows.en.html does not require the installation of cygwin. A new version of the Axiom interface program (called tm_axiom) written especially for Windows is included in the latest "Axiom for Windows":AxiomDownload installation program. This will be used automatically by the native windows version of TeXmacs.</b>

   This new interface program is also recommended for use in cygwin. To check that you are using the new program, in a cygwin shell enter the command::

      $ which tm_axiom

   If the response is::

      /cygdrive/c/Program Files/axiom/mnt/windows/bin/tm_axiom.exe

   (where the default location 'Program Files' might be different) then you are using the new version. Otherwise make sure you delete or rename the older version of tm_axiom and try the 'which' command again.

   A new version of the Axiom stylesheet 'axiom.ts' is available in Axiom for Windows which improves the formatting of Axiom output. The new stylesheet is included automatically if you install the updated version of TeXmacs for Windows from the Axiom website "here":http://page.axiom-developer.org/wintexmacs-1.0.4.4.exe

   Otherwise to obtain this stylesheet, use Windows file manager to replace the existing file in TeXmacs::

      c:\Program Files\wintexmacs\TeXmacs\plugins\axiom\packages\session\axiom.ts

   with the file of the same name found in Axiom for Windows::

      /cygdrive/c/Program Files/axiom/mnt/windows/axiom.ts

   On cygwin the file 'axiom.ts' is located in the directory::

      cd /usr/share/TeXmacs/plugins/axiom/packages/session

   Overwrite existing stylesheet with the new stylesheet file::

      cp /cygdrive/c/Program Files/axiom/mnt/windows/axiom.ts .

++added:
Troubleshooting

   If you do not see Axiom in the list of sessions then make sure that you have installed the latest versions of both "Axiom for Windows":AxiomDownload and "TeXmacs":http://page.axiom-developer.org/wintexmacs-1.0.4.4.exe .


??changed:
-   The following are examples of using TeXmacs with Axiom
-
--  "Introduction to the AXIOM book":http://savannah.nongnu.org/download/axiom/book-axiom-intro.tm
-
--  "Axiom Tutorial":http://savannah.nongnu.org/download/axiom/tutorial.tgz.gz Instructions are provided for "how to use the tutorial":http://savannah.nongnu.org/download/axiom/tutorial-README.txt
   The following TeXmacs documents contain examples of how to use TeXmacs with Axiom:

-  The "Introduction to the AXIOM book":http://savannah.nongnu.org/download/axiom/book-axiom-intro.tm is available in TeXmacs format with embedded Axiom commands.

-  The "Axiom Tutorial":http://savannah.nongnu.org/download/axiom/tutorial.tgz.gz is included in the Axiom for Windows installation program. Here are some instructions on "how to use the tutorial":http://savannah.nongnu.org/download/axiom/tutorial-README.txt

--
forwarded from http://page.axiom-developer.org/zope/mathaction/TeXmacs#msg20041218015043-0600@page.axiom-developer.org

\start
Date: Sat, 18 Dec 2004 08:58:17 +0100
From: Martin Rubey
To: Martin Rubey
Subject: Re: subscribing axiom-developer to MathAction

I wrote:

 > Bill Page writes:
 >  > 
 >  > Ok, *I think* I have set this up. It was a bit awkward to do it because
 >  > of the "email reply required" type of authentication that is used by
 >  > mailman. In order to post a message to axiom- developer the email address
 >  > of the sender has to be subscribed to the email list.
 > 
 > Is this really true? If yes, we should either change it or keep it in mind
 > for the next release! It is not very nice if you have a question and want to
 > ask and the mailman tells you "subscribe first!" Also, if we could change
 > this, all the problems you describe hereafter would vanish...

Sorry, this was a very stupid proposal. Please ignore it.

\start
Date: Sat, 18 Dec 2004 03:29:47 -0500
From: Bill Page
To: Martin Rubey
Subject: RE: subscribing axiom-developer to MathAction

Martin,

On Saturday, December 18, 2004 2:26 AM you wrote:
> 
> Thanks for your effort. However, there are some things I 
> don't understand at all:
> 
> Bill Page writes:
> 
>> But there is a potential problem. If the mathaction email 
>> address is also subscribed to the MathAction wiki - what we
>> really want to do - then that could create a nasty email
>> loop since anything sent to the axiom-developer email list
>> by the MathAction website would be echoed back to MathAction
>> and trigger another outgoing email.
> 
> This paragraph I do not understand. The mathaction email adress is
> MathAction, so subscribing this to mathaction
> would mean that any change on mathaction will send a message to
> MathAction. What for?
> 

I am sorry I was not clear.

1) Yes, MathAction is the email address of
   the MathAction web site. If you receive an email from MathAction
   it will appear to have originated from this address. If you
   reply or send a message to this address *and* if you are subscribed
   to MathAction, then MathAction will add the contents of the
   email to as a comment to the page given by the name in [  ] in
   the subject of the email.

2) I have subscribed the axiom-developer mailing list to the
   MathAction web site. Now all change notices will also be sent
   to the mailing list.

3) I have subscribed MathAction to the
   axiom-developer mailing list. This is necessary if I expect
   MathAction to be able to post it's notices on the mailing list.

   But I do not want the axiom-developer mailing list to send it's
   messages to the mathaction email address because then MathAction
   would treat that as a new comment on one of it's web pages and
   that would trigger another notice to be sent, ad infinitum. So
   I must tell the axiom-developer mailing list not to send
   MathAction such notices even though MathAction is subscribed
   to the list. (I need to be a one-way only subscriber).

In fact, this is all set up now and appears to be working. I even
(with Tim Daly's help) managed to change the configuration of the
axiom-developer email list so that it will accept emails via the
Bcc list. So in the end I did not have to change this to a Cc list
and everything is working on MathAction the way it was before I
set this up.

Please try using MathAction with it setup like this and let me
know if it works the way you had in mind.

\start
Date: Sat, 18 Dec 2004 12:30:42 +0100 (CET)
From: Meino Christian Cramer
To: Camm Maguire
Subject: Re: Compile errors on Axiom 2004-11-15

Greetings !  :)

 Ok, I did the build with the two changes and it works well.

 I installed it with:

   sudo make INSTALL=/usr/axiom COMMAND=/usr/bin/xiom install

 as described in the README
 
 and typed

   xiom

 on the commandline, which gaves me back this one:

   /usr/bin/xiom: line 7: /usr/axiom/mnt//bin/clef: No such file or directory

 The  I looked into that place and found:


    -rwxr-xr-x   1 mccramer users       34188 Dec 18 10:55 /usr/axiom/mnt/linux/bin/clef

 So...what is going wrong here again ?

 Regards,
 Meino


> Greetings!
> 
> You guys are so fast!  I concur -- the patch on the GCL errata page is
> the ticket to the immediate problem below, but configuring with
> --disable-statsysbfd --enable-locbfd should be an option out of the
> box.
> 
> Take care,
> 
> Stephen Wilson writes:
> 
> > Hello,
> > 
> > I recall a more recent posting from Camm:
> > 
> >   http://lists.gnu.org/archive/html/axiom-developer/2004-11/msg00098.html
> > 
> > This posting gives a few patches to the gcl sources which should allow
> > it to compile with respect to a recent bfd. These patches involve the
> > precise files and bfd structures which caused Meino's build to choke.
> > Apparently the patches are available on gcl's errata page as well.
> > 
> > There is still the option of configuring gcl to build against its own
> > bfd library. In lsp/Makefile.pamphlet, about line 340, you will find
> > the following stanza starting as:
> > 
> >  ========================================================================
> > <<gclConfigureMake>>=
> >         @(cd ${GCLVERSION} ; \
> >         ./configure --enable-vssize=65536*2 --enable-statsysbfd	--enable-maxpage=128*1024 ; \
> >  ========================================================================
> > 
> > Where you can change the options to configure. You could try
> > `--disable-statsysbfd --enable-locbfd' thus:
> > 
> >  ========================================================================
> > <<gclConfigureMake>>=
> >         @(cd ${GCLVERSION} ; \
> >         ./configure --enable-vssize=65536*2 --disable-statsysbfd --enable-locbfd \
> > 	--enable-maxpage=128*1024 ; \
> >  ========================================================================
> > 
> > Cheers,
> > Steve
> > 
> > 
> > On Fri, Dec 17, 2004 at 12:36:32PM -0500, Bill Page wrote:
> > > Hi,
> > > 
> > > I am sorry. I hate when people who do that to me... :)
> > > 
> > > Maybe this entry in the archive will be of some help?
> > > 
> > > http://lists.gnu.org/archive/html/axiom-developer/2004-06/msg00279.html
> > > 
> > > Regards,
> > > Bill Page.
> > > 
> > > > -----Original Message-----
> > > > Bill,
> > > > 
> > > >  for what patterns/keywords should I look for in those mailing lists?
> > > > 
> > > >  With "gcl", "build" I got far too many hits.
> > > > 
> > > >  Could you give a little more detailed hellp other than "search in
> > > >  the mailing lists?"
> > > > 
> > > >  Regards,
> > > >  Meino Cramer
> > > > 
> > > > 
> > > > > Meino,
> > > > > 
> > > > > This is a GCL build problem. I think the usual solution that
> > > > > Camm would suggest is to repeat the build specifying the
> > > > > locbfd option in the GCL configure step. You can do that by
> > > > > editing the file lsp/Makefile.pamphlet. This causes GCL to
> > > > > build it's own library rather than depending on the one supplied
> > > > > by the system. Check the axiom-developer and/or gcl email
> > > > > archives for details.
> > > > > 
> > > > > Regards,
> > > > > Bill Page.
> > > > > 
> > > > > > -----Original Message-----
> > > > > > Hi Martin,
> > > > > > 
> > > > > >  thanks for the reply :)
> > > > > > 
> > > > > >  Here is my configuration:
> > > > > > 
> > > > > >  ----------------------------------------------------------
> > > > > >          libbfd.so (libc6) => /usr/lib/libbfd.so
> > > > > >          libbfd-2.15.91.0.1.so (libc6) => 
> > > > > > /usr/lib/libbfd-2.15.91.0.1.so
> > > > > >          libbfd-2.15.90.0.1.1.so (libc6) => 
> > > > > > /usr/lib/libbfd-2.15.90.0.1.1.so
> > > > > >  ----------------------------------------------------------
> > > > > >  -rw-r--r--  1 root 2206246 Oct 30 19:57 
> > > > > > /usr/lib/libbfd-2.15.90.0.1.1.so
> > > > > >  -rwxr-xr-x  1 root 607226 May 30  2004 
> > > > /usr/lib/libbfd-2.15.91.0.1.so
> > > > > >  lrwxrwxrwx  1 root 21 May 30  2004 /usr/lib/libbfd.so -> 
> > > > > > libbfd-2.15.91.0.1.so
> > > > > >  ----------------------------------------------------------
> > > > > > 
> > > > > > Kind regards,
> > > > > >  Meino
> > > > > > 
> > > > > >  
> > > > > > 
> > > > > > > It looks like there is a problem with bfd. (whatever this 
> > > > > > is) Most probably, Camm Maguire will be able to help. What
> > > > > > version of bfd do you have? Look for something like
> > > > > > > 
> > > > > > > /usr/lib/libbfd-2.14.90.0.5.so
> > > > > > > 
> > > > > > > Sorry for the inconvenience,

\start
Date: Sat, 18 Dec 2004 12:38:05 +0100 (CET)
From: Meino Christian Cramer
To: Camm Maguire
Subject: Re: Compile errors on Axiom 2004-11-15

...me  again...sorry...

Here the contents of /usr/bin/xiom

  AXIOM=/usr/axiom/mnt/
  export AXIOM
  
  system=`uname -s`
  
  case "$system" in
      Linux) $AXIOM/bin/clef -e $AXIOM/bin/AXIOMsys "$@"
          ;;
      
      *)
          echo "Warning: I don't know if clef is supported on your system ($system) so clef is disabled."
          echo " You can try it by issuing \"$AXIOM/bin/clef -e $AXIOM/bin/AXIOMsys $@\" command."
          echo " If it works, please report to list."
          $AXIOM/bin/AXIOMsys "$@"
          ;;
  esac;

keep hacking!
Meino


> Greetings!
> 
> You guys are so fast!  I concur -- the patch on the GCL errata page is
> the ticket to the immediate problem below, but configuring with
> --disable-statsysbfd --enable-locbfd should be an option out of the
> box.
> 
> Take care,
> 
> Stephen Wilson writes:
> 
> > Hello,
> > 
> > I recall a more recent posting from Camm:
> > 
> >   http://lists.gnu.org/archive/html/axiom-developer/2004-11/msg00098.html
> > 
> > This posting gives a few patches to the gcl sources which should allow
> > it to compile with respect to a recent bfd. These patches involve the
> > precise files and bfd structures which caused Meino's build to choke.
> > Apparently the patches are available on gcl's errata page as well.
> > 
> > There is still the option of configuring gcl to build against its own
> > bfd library. In lsp/Makefile.pamphlet, about line 340, you will find
> > the following stanza starting as:
> > 
> >  ========================================================================
> > <<gclConfigureMake>>=
> >         @(cd ${GCLVERSION} ; \
> >         ./configure --enable-vssize=65536*2 --enable-statsysbfd	--enable-maxpage=128*1024 ; \
> >  ========================================================================
> > 
> > Where you can change the options to configure. You could try
> > `--disable-statsysbfd --enable-locbfd' thus:
> > 
> >  ========================================================================
> > <<gclConfigureMake>>=
> >         @(cd ${GCLVERSION} ; \
> >         ./configure --enable-vssize=65536*2 --disable-statsysbfd --enable-locbfd \
> > 	--enable-maxpage=128*1024 ; \
> >  ========================================================================
> > 
> > Cheers,
> > Steve
> > 
> > 
> > On Fri, Dec 17, 2004 at 12:36:32PM -0500, Bill Page wrote:
> > > Hi,
> > > 
> > > I am sorry. I hate when people who do that to me... :)
> > > 
> > > Maybe this entry in the archive will be of some help?
> > > 
> > > http://lists.gnu.org/archive/html/axiom-developer/2004-06/msg00279.html
> > > 
> > > Regards,
> > > Bill Page.
> > > 
> > > > -----Original Message-----
> > > > From: Meino Christian Cramer [mailto:Meino Christian Cramer] 
> > > > Sent: Friday, December 17, 2004 12:28 PM
> > > > To: Bill Page
> > > > Cc: Martin Rubey; Camm Maguire; 
> > > > list
> > > > Subject: Re: Compile errors on Axiom 2004-11-15
> > > > 
> > > > 
> > > > From: Bill Page
> > > > Subject: RE: Compile errors on Axiom 2004-11-15
> > > > Date: Fri, 17 Dec 2004 11:44:14 -0500
> > > > 
> > > > Bill,
> > > > 
> > > >  for what patterns/keywords should I look for in those mailing lists?
> > > > 
> > > >  With "gcl", "build" I got far too many hits.
> > > > 
> > > >  Could you give a little more detailed hellp other than "search in
> > > >  the mailing lists?"
> > > > 
> > > >  Regards,
> > > >  Meino Cramer
> > > > 
> > > > 
> > > > > Meino,
> > > > > 
> > > > > This is a GCL build problem. I think the usual solution that
> > > > > Camm would suggest is to repeat the build specifying the
> > > > > locbfd option in the GCL configure step. You can do that by
> > > > > editing the file lsp/Makefile.pamphlet. This causes GCL to
> > > > > build it's own library rather than depending on the one supplied
> > > > > by the system. Check the axiom-developer and/or gcl email
> > > > > archives for details.
> > > > > 
> > > > > Regards,
> > > > > Bill Page.
> > > > > 
> > > > > > -----Original Message-----
> > > > > > Hi Martin,
> > > > > > 
> > > > > >  thanks for the reply :)
> > > > > > 
> > > > > >  Here is my configuration:
> > > > > > 
> > > > > >  ----------------------------------------------------------
> > > > > >          libbfd.so (libc6) => /usr/lib/libbfd.so
> > > > > >          libbfd-2.15.91.0.1.so (libc6) => 
> > > > > > /usr/lib/libbfd-2.15.91.0.1.so
> > > > > >          libbfd-2.15.90.0.1.1.so (libc6) => 
> > > > > > /usr/lib/libbfd-2.15.90.0.1.1.so
> > > > > >  ----------------------------------------------------------
> > > > > >  -rw-r--r--  1 root 2206246 Oct 30 19:57 
> > > > > > /usr/lib/libbfd-2.15.90.0.1.1.so
> > > > > >  -rwxr-xr-x  1 root 607226 May 30  2004 
> > > > /usr/lib/libbfd-2.15.91.0.1.so
> > > > > >  lrwxrwxrwx  1 root 21 May 30  2004 /usr/lib/libbfd.so -> 
> > > > > > libbfd-2.15.91.0.1.so
> > > > > >  ----------------------------------------------------------
> > > > > > 
> > > > > > Kind regards,
> > > > > >  Meino
> > > > > > 
> > > > > >  
> > > > > > 
> > > > > > > It looks like there is a problem with bfd. (whatever this 
> > > > > > is) Most probably, Camm Maguire will be able to help. What
> > > > > > version of bfd do you have? Look for something like
> > > > > > > 
> > > > > > > /usr/lib/libbfd-2.14.90.0.5.so
> > > > > > > 
> > > > > > > Sorry for the inconvenience,

\start
Date: Sat, 18 Dec 2004 16:04:52 +0100
From: Michel Lavaud
To: bill Page <Bill Page>
Subject: Re: [TeXmacs] 

<?xml  version="1.0" ?><html>
<head>
<title></title>
</head>
<body>
<div align="left"><font face="Arial"><span style="font-size:10pt">He=
llo Bill,</span></font></div>
<div align="left"><br/>
</div>
<div align="left"><font face="Arial"><span style="font-size:10pt">On=
 17 Dec 2004 at 20:32, billpage wrote:</span></font></div>
<div align="left"><br/>
</div>
<div align="left"><font face="Arial" color="#7f0000"><span style="=
font-size:10pt">&gt; -5&#160; Finally a new experimental Native Windows Te=
Xmacs-Axiom interface</span></font></div>
<div align="left"><font face="Arial" color="#7f0000"><span style="=
font-size:10pt">&gt; is available for testing: - -&#160;&#160; - &quot;nat=
ive tm_axiom</span></font></div>
<div align="left"><font face="Arial" color="#7f0000"><span style="=
font-size:10pt">&gt; interface&quot;:http://page.axiom-developer.org/tmwin=
_axiom.zip - -&#160; </span></font></div>
<div align="left"><font face="Arial" color="#7f0000"><span style="=
font-size:10pt">&gt; Please help us test it. It installs the same away as =
the cygwin</span></font></div>
<div align="left"><font face="Arial" color="#7f0000"><span style="=
font-size:10pt">&gt; program (by manually -&#160;&#160; copying the file) =
but no cygwin1.dll file is</span></font></div>
<div align="left"><font face="Arial" color="#7f0000"><span style="=
font-size:10pt">&gt; required.</span></font></div>
<div align="left"><br/>
</div>
<div align="left"><br/>
</div>
<div align="left"><font face="Arial"><span style="font-size:10pt">I =
downloaded tmwin_axiom.zip, renamed tmwin_axiom.exe to to tm_axiom.exe and=
 
copied it on the cygwin tm_axiom.exe. But Axiom inside TeXmacs does not wo=
rk any 
more, while it works with the cygwin tm_axiom.exe.</span></font></div>
<div align="left"><br/></div>
<div align="left"><font face="Arial"><span style="font-size:10pt">I =
have a further question about the cygwin tm_axiom.exe : the output of the =
example </span></font></div>
<div align="left"><br/>
</div>
<div align="left"><font face="Arial"><span style="font-size:10pt">in=
tegrate (1/(x**3 * (a+b*x)**(1/3),x)</span></font></div>
<div align="left"><br/>
</div>
<div align="left"><font face="Arial"><span style="font-size:10pt">in=
 tutorial axiom-intro.pdf by Jenks et al. is displayed on one line in TeXm=
acs, not on 
three lines as in the tutorial. Is it normal with the current version of a=
xiom_tm, or is it 
specific to the Windows version (I did not try on Linux)? Is it this behav=
iour that the new 
axiom_tm ought to correct? </span></font></div>
<div align="left"><br/></div>
<div align="left"><br/></div>
<div align="left"><font face="Arial"><span style="font-size:10pt">My=
 installation is under WinXP, and the tm_axiom.exe I used is the one in Te=
Xmacs-
1.0.4-4.tar.bz2 obtained from Cygwin site.</span></font></div>
<div align="left"><br/>
</div>
<div align="left"><br/>
</div>
<div align="left"><font face="Arial"><span style="font-size:10pt">Be=
st wishes,</span></font></div>
<div align="left"><br/>
</div>
<div align="left"><br/></div>
<div align="left"><font face="Arial"><span style="font-size:10pt">Mi=
chel.Lavaud@univ-orleans.fr</span></font></div>
<div align="left"><font face="Arial"><span style="font-size:10pt">ht=
tp://www.univ-orleans.fr/EXT/ASTEX</span></font></div>
<div align="left"><font face="Arial"><span style="font-size:10pt">ft=
p://ftp.univ-orleans.fr/pub/tex/PC/AsTeX</span></font></div>
<div align="left"><font face="Arial"><span style="font-size:10pt">li=
ste de discussion: astex@univ-orleans.fr</span></font></div>
<div align="left"><font face="Arial"><span style="font-size:10pt">Ab=
onnement &#224; la liste: envoyer un message de contenu</span></font></div=
>
<div align="left"><font face="Arial"><span style="font-size:10pt">&q=
uot;sub astex Nom Prenom Etablissement&quot; &#224; sympa@univ-orleans.fr<=
/span></font></div>
<div align="left"></div>
</body>
</html>

\start
Date: Sat, 18 Dec 2004 11:31:11 -0500
From: Tim Daly
To: Meino Christian Cramer
Subject: Re: Compile errors on Axiom 2004-11-15
Cc: Camm Maguire

Meino,

Notice the error message

>   /usr/bin/xiom: line 7: /usr/axiom/mnt//bin/clef: No such file or directory
                                         ^^
                                       two slashes?


but clef exists as we can see from your message

>    -rwxr-xr-x   ....  34188 Dec 18 10:55 /usr/axiom/mnt/linux/bin/clef

it appears that your $AXIOM shell variable contained a trailing slash

When I look at your second message I see:

Here the contents of /usr/bin/xiom

>  AXIOM=/usr/axiom/mnt/
>  export AXIOM

so if you remove the trailing slash from the AXIOM variable all
should work properly. 

\start
Date: Sat, 18 Dec 2004 11:06:51 -0500
From: Bill Page
To: Michel Lavaud
Subject: RE: [TeXmacs] 

On Saturday, December 18, 2004 10:05 AM Michel Lavaud
wrote:

>On 17 Dec 2004 at 20:32, billpage wrote:
>> -5  Finally a new experimental Native Windows TeXmacs-Axiom
>> interface is available for testing:
>> -
>> -   - "native
tm_axiominterface":http://page.axiom-developer.org/tmwin_axiom.zip
>> -
>> -  Please help us test it. It installs the same away as the cygwin
>>    program (by manually
>> -  copying the file) but no cygwin1.dll file is required.

It is probably not obvious from the line folding of the
original email, but what you are quoting here is actually the
old version (leading minus '-' sign) of the instructions. The
new version appears immediately after this without any minus
signs. This type of notice is automatically generated by
MathAction when a page is updated. In most cases it is probably
best to refer to the web page itself referenced at the bottom
of the message.

--
  forwarded from
http://page.axiom-developer.org/zope/mathaction/TeXmacs#msg20041218015043=
-06
00@page.axiom-developer.org

(be careful that the url is complete starting with http: and ending
with .org)

> I downloaded tmwin_axiom.zip, renamed tmwin_axiom.exe to
> tm_axiom.exe and copied it on the cygwin tm_axiom.exe. But Axiom
> inside TeXmacs does not work any more, while it works with the
> cygwin tm_axiom.exe.

Could you be a little more specific about what you see in
TeXmacs with the new version? Do you see the red --> prompt
from Axiom when you click Insert/Session/Axiom?

tmwin_axiom.zip is the first version of the new tm_axiom program
that I uploaded last week. There is a new flavour available this
week along with an updated Axiom binary included in the most recent
axiom-windows-0.1.2.exe install file.

However, I would have expected that old version to work since
the changes did not have anything to do with the basic function.

As a test (although this is not normally how you would use it)
could you try running tm_axiom from the cygwin command window?
It should start and wait for input. If you type something like

  1+1

followed by Enter, then you should see LaTeX output from Axiom.

If this doesn't happen there is a basic problem starting tm_axiom.

I have seen this happen so far only on one system (Windows 2000)
where I tried to install TeXmacs and Axiom. On that system AXIOMsys
runs ok from the command line, but if I type tm_axiom from the
command line, it starts and immediately exits with no message.
I am not sure what is causing this since exactly the same program
when copied to another system with Axiom runs fine.

On the test system where it fails, I do not have local admin rights
and the directory Program Files is protected from change. So I am
forced to installed Axiom and TeXmacs in a non-default location.
Still both Axiom and TeXmacs separately seem to run properly.

Since the only difference between that system where it fails
and other systems where it works is that fact that my access
privileges are considerably restricted where it fails, I suspect
that perhaps there is some missing operating system privilege
that is required by the new tm_axiom program because it uses
threaded execution? Windows XP has similar, and perhaps even
more elaborate access controls, to Windows 2000.

If possible, could you try re-installing the latest Windows
version from

  http://page.axiom-developer.org/zope/mathaction/AxiomDownload

as the Administrator user of your XP system?

Then simply delete the tm_axiom.exe program from the cygwin
directory. Cygwin will then automatically find the new tm_axiom
from the Axiom directory which has been automatically added to
the path.

Let me know if this works. And if it does, do you have any
clue about what the specific operating system privilege might
be that makes this work when run as Administrator?

> I have a further question about the cygwin tm_axiom.exe :
> the output of the example 
>
> integrate (1/(x**3 * (a+b*x)**(1/3),x)
>
> in tutorial axiom-intro.pdf by Jenks et al. is displayed on
> one line in TeXmacs, not on three lines as in the tutorial.
> Is it normal with the current version of axiom_tm, or is it
> specific to the Windows version (I did not try on Linux)? Is
> it this behaviour that the new axiom_tm ought to correct? 

That is the behaviour of the old tm_axiom interface program
on both cygwin and Linux. It does not include any special LaTeX
line breaking code. Unfortunately TeXmacs is not able to do
line-breaking in most of the cases of LaTeX generated by Axiom
output. The newest version of tm_axiom that is included with
axiom-windows-0.1.2.exe does include the Axiom specific
line-breaking code (the save as originally written by Robert
Sutor and used in the production of the Axiom book). If you
can get that to work, then the output should look identical to
the book.

> My installation is under WinXP, and the tm_axiom.exe I used
> is the one in TeXmacs-1.0.4-4.tar.bz2 obtained from Cygwin
> site.

Thank you for trying this. If you can let me know the results
of what I suggested above, I would be very happy to try to
continue to assist you to get this working.

\start
Date: Sat, 18 Dec 2004 11:42:47 -0500
From: Bill Page
To: Meino Christian Cramer
Subject: RE: Compile errors on Axiom 2004-11-15
Cc: Camm Maguire

On Saturday, December 18, 2004 11:33 AM Meino Christian Cramer
wrote:
> 
>  after hacking the xiom script, I got axiom up and running.
> 

What is the 'xiom' script? I do not remember a script by this
name in the current version of axiom.

Normally the graphics cabable version of axiom is started
with the command

  sman

that provided socket communication services and starts a
special X-windows processes that does the graphics.


>  From the book I tried the command
> 
> 	  draw((x**2), x=0..10)
> 
>  and got a lot of "loading...." message, which ends up in:
> 
>     Loading /usr/axiom/mnt/linux/algebra/COORDSYS.o for package 
>       CoordinateSystems 
>    Graph data being transmitted to the viewport manager...
>    AXIOM2D data being transmitted to the viewport manager...
> 
>    (1)  TwoDimensionalViewport: "x*x"
>                                                  Type: 
> TwoDimensionalViewport
> 
>  That's it...
> 
>  No plot, no result, no error....nothing else. 
> 

Are you running this from inside the X-windows environment?

\start
Date: Sat, 18 Dec 2004 17:33:21 +0100 (CET)
From: Meino Christian Cramer
To: Camm Maguire
Subject: Re: Compile errors on Axiom 2004-11-15

Hi,

 after hacking the xiom script, I got axiom up and running.

 From the book I tried the command

	  draw((x**2), x=0..10)

 and got a lot of "loading...." message, which ends up in:

    Loading /usr/axiom/mnt/linux/algebra/COORDSYS.o for package 
      CoordinateSystems 
   Graph data being transmitted to the viewport manager...
   AXIOM2D data being transmitted to the viewport manager...

   (1)  TwoDimensionalViewport: "x*x"
                                                 Type: TwoDimensionalViewport

 That's it...

 No plot, no result, no error....nothing else. 

 Any help is very appreciated.... ;)

 Thanky you very much in advance!
 Meino

 PS: I tried complexer function directly copied from the book with the
 same result....

> Greetings!
> 
> You guys are so fast!  I concur -- the patch on the GCL errata page is
> the ticket to the immediate problem below, but configuring with
> --disable-statsysbfd --enable-locbfd should be an option out of the
> box.
> 
> Take care,
> 
> Stephen Wilson writes:
> 
> > Hello,
> > 
> > I recall a more recent posting from Camm:
> > 
> >   http://lists.gnu.org/archive/html/axiom-developer/2004-11/msg00098.html
> > 
> > This posting gives a few patches to the gcl sources which should allow
> > it to compile with respect to a recent bfd. These patches involve the
> > precise files and bfd structures which caused Meino's build to choke.
> > Apparently the patches are available on gcl's errata page as well.
> > 
> > There is still the option of configuring gcl to build against its own
> > bfd library. In lsp/Makefile.pamphlet, about line 340, you will find
> > the following stanza starting as:
> > 
> >  ========================================================================
> > <<gclConfigureMake>>=
> >         @(cd ${GCLVERSION} ; \
> >         ./configure --enable-vssize=65536*2 --enable-statsysbfd	--enable-maxpage=128*1024 ; \
> >  ========================================================================
> > 
> > Where you can change the options to configure. You could try
> > `--disable-statsysbfd --enable-locbfd' thus:
> > 
> >  ========================================================================
> > <<gclConfigureMake>>=
> >         @(cd ${GCLVERSION} ; \
> >         ./configure --enable-vssize=65536*2 --disable-statsysbfd --enable-locbfd \
> > 	--enable-maxpage=128*1024 ; \
> >  ========================================================================
> > 
> > Cheers,
> > Steve
> > 
> > 
> > On Fri, Dec 17, 2004 at 12:36:32PM -0500, Bill Page wrote:
> > > Hi,
> > > 
> > > I am sorry. I hate when people who do that to me... :)
> > > 
> > > Maybe this entry in the archive will be of some help?
> > > 
> > > http://lists.gnu.org/archive/html/axiom-developer/2004-06/msg00279.html
> > > 
> > > Regards,
> > > Bill Page.
> > > 
> > > > -----Original Message-----
> > > > Bill,
> > > > 
> > > >  for what patterns/keywords should I look for in those mailing lists?
> > > > 
> > > >  With "gcl", "build" I got far too many hits.
> > > > 
> > > >  Could you give a little more detailed hellp other than "search in
> > > >  the mailing lists?"
> > > > 
> > > >  Regards,
> > > >  Meino Cramer
> > > > 
> > > > 
> > > > > Meino,
> > > > > 
> > > > > This is a GCL build problem. I think the usual solution that
> > > > > Camm would suggest is to repeat the build specifying the
> > > > > locbfd option in the GCL configure step. You can do that by
> > > > > editing the file lsp/Makefile.pamphlet. This causes GCL to
> > > > > build it's own library rather than depending on the one supplied
> > > > > by the system. Check the axiom-developer and/or gcl email
> > > > > archives for details.
> > > > > 
> > > > > Regards,
> > > > > Bill Page.
> > > > > 
> > > > > > -----Original Message-----
> > > > > > Hi Martin,
> > > > > > 
> > > > > >  thanks for the reply :)
> > > > > > 
> > > > > >  Here is my configuration:
> > > > > > 
> > > > > >  ----------------------------------------------------------
> > > > > >          libbfd.so (libc6) => /usr/lib/libbfd.so
> > > > > >          libbfd-2.15.91.0.1.so (libc6) => 
> > > > > > /usr/lib/libbfd-2.15.91.0.1.so
> > > > > >          libbfd-2.15.90.0.1.1.so (libc6) => 
> > > > > > /usr/lib/libbfd-2.15.90.0.1.1.so
> > > > > >  ----------------------------------------------------------
> > > > > >  -rw-r--r--  1 root 2206246 Oct 30 19:57 
> > > > > > /usr/lib/libbfd-2.15.90.0.1.1.so
> > > > > >  -rwxr-xr-x  1 root 607226 May 30  2004 
> > > > /usr/lib/libbfd-2.15.91.0.1.so
> > > > > >  lrwxrwxrwx  1 root 21 May 30  2004 /usr/lib/libbfd.so -> 
> > > > > > libbfd-2.15.91.0.1.so
> > > > > >  ----------------------------------------------------------
> > > > > > 
> > > > > > Kind regards,
> > > > > >  Meino
> > > > > > 
> > > > > >  
> > > > > > 
> > > > > > > It looks like there is a problem with bfd. (whatever this 
> > > > > > is) Most probably, Camm Maguire will be able to help. What
> > > > > > version of bfd do you have? Look for something like
> > > > > > > 
> > > > > > > /usr/lib/libbfd-2.14.90.0.5.so
> > > > > > > 
> > > > > > > Sorry for the inconvenience,

\start
Date: Sat, 18 Dec 2004 17:53:39 +0100 (CET)
From: Meino Christian Cramer
To: Bill Page
Subject: Re: Compile errors on Axiom 2004-11-15
Cc: Camm Maguire

xiom is installed by axiom under /usr/bin/. after giving finally the
command

		make INSTALL=/usr/axiom COMMAND=/usr/bin/xiom install

as described in the README.

A command "sman" does not exist (neither in the executable path nor
under /usr/axiom/. and below.

What is going wrong here ?

Meino

> On Saturday, December 18, 2004 11:33 AM Meino Christian Cramer
> wrote:
> > 
> >  after hacking the xiom script, I got axiom up and running.
> > 
> 
> What is the 'xiom' script? I do not remember a script by this
> name in the current version of axiom.
> 
> Normally the graphics cabable version of axiom is started
> with the command
> 
>   sman
> 
> that provided socket communication services and starts a
> special X-windows processes that does the graphics.
> 
> 
> >  From the book I tried the command
> > 
> > 	  draw((x**2), x=0..10)
> > 
> >  and got a lot of "loading...." message, which ends up in:
> > 
> >     Loading /usr/axiom/mnt/linux/algebra/COORDSYS.o for package 
> >       CoordinateSystems 
> >    Graph data being transmitted to the viewport manager...
> >    AXIOM2D data being transmitted to the viewport manager...
> > 
> >    (1)  TwoDimensionalViewport: "x*x"
> >                                                  Type: 
> > TwoDimensionalViewport
> > 
> >  That's it...
> > 
> >  No plot, no result, no error....nothing else. 
> > 
> 
> Are you running this from inside the X-windows environment?

\start
Date: Sat, 18 Dec 2004 18:11:51 +0100
From: Michel Lavaud
To: Bill Page
Subject: RE: [TeXmacs] 

On 18 Dec 2004 at 11:06, Bill Page wrote:

> It is probably not obvious from the line folding of the
> original email, but what you are quoting here is actually the
> old version (leading minus '-' sign) of the instructions. The
> new version appears immediately after this without any minus
> signs. This type of notice is automatically generated by
> MathAction when a page is updated.

Ah OK ! Sorry for that. But then I think that, in its present state (at le=
ast in the state I 
received it in my mailer) the message generated is largely incomprehensibl=
e, as there 
is no leading minus sign, only minus signs embedded in the middle of long =
lines. The 
only indicators I could detect by inspection are "??changed" and "++added"


> In most cases it is probably
> best to refer to the web page itself referenced at the bottom
> of the message.

Ah ? Well.. I had actually looked at it, and  I didn't even realize that t=
he message 
originated from this page :-(

If parts that are deleted from the web page are sent to the axiom-develope=
r list, I 
wonder if this is useful for others than the author of the previous versio=
n of the page? 
Maybe it would be better (if it is possible?) to send to the list only the=
 new parts, and 
send the complete message only to those who are directly involved in the w=
riting of the 
page, and have asked for the complete report on the wiki ? If it was possi=
ble, I think 
this would make the automatic notifications on axiom-developer less bulky =
and more 
comprehensible, and thus more useful ?


> > I downloaded tmwin_axiom.zip, renamed tmwin_axiom.exe to
> > tm_axiom.exe and copied it on the cygwin tm_axiom.exe. But Axiom
> > inside TeXmacs does not work any more, while it works with the
> > cygwin tm_axiom.exe.
> 
> Could you be a little more specific about what you see in
> TeXmacs with the new version? Do you see the red --> prompt
> from Axiom when you click Insert/Session/Axiom?

No, no arrow, just axiom]

> tmwin_axiom.zip is the first version of the new tm_axiom program
> that I uploaded last week. There is a new flavour available this
> week along with an updated Axiom binary included in the most recent
> axiom-windows-0.1.2.exe install file.

Ah OK, I will download it and try with this one. As it is rather large and=
 
wintm_axiom.exe is very small, could it be possible in the future to uploa=
d just this one, 
or to send the new wintm_axiom.zip as attached file on the list or in priv=
ate mail?
 
> However, I would have expected that old version to work since
> the changes did not have anything to do with the basic function.
> 
> As a test (although this is not normally how you would use it)
> could you try running tm_axiom from the cygwin command window?
> It should start and wait for input. If you type something like
> 
>   1+1
> followed by Enter, then you should see LaTeX output from Axiom.
> If this doesn't happen there is a basic problem starting tm_axiom.

When I type tmwin_axiom, nothing happens and I am sent back to cmd.exe pro=
mpt. 
When I type tm_axiom.exe (the cygwin one) I get the correct behaviour 
"latex:$\displaystyle 2 \leqno(1)$" etc.

> I have seen this happen so far only on one system (Windows 2000)
> where I tried to install TeXmacs and Axiom. On that system AXIOMsys
> runs ok from the command line, but if I type tm_axiom from the command
> line, it starts and immediately exits with no message. I am not sure
> what is causing this since exactly the same program when copied to
> another system with Axiom runs fine.

Yes, this is exactly the behaviour you describe. 
 
> On the test system where it fails, I do not have local admin rights
> and the directory Program Files is protected from change. So I am
> forced to installed Axiom and TeXmacs in a non-default location. Still
> both Axiom and TeXmacs separately seem to run properly.
> Since the only difference between that system where it fails
> and other systems where it works is that fact that my access
> privileges are considerably restricted where it fails, I suspect
> that perhaps there is some missing operating system privilege
> that is required by the new tm_axiom program because it uses
> threaded execution? Windows XP has similar, and perhaps even
> more elaborate access controls, to Windows 2000.

Under XP, I have full admin rights, but I installed in non-default locatio=
n, so maybe it is rather the location?
 
> If possible, could you try re-installing the latest Windows
> version from
> 
>   http://page.axiom-developer.org/zope/mathaction/AxiomDownload
> 
> as the Administrator user of your XP system?
> 
> Then simply delete the tm_axiom.exe program from the cygwin
> directory. Cygwin will then automatically find the new tm_axiom
> from the Axiom directory which has been automatically added to
> the path.
> 
> Let me know if this works. And if it does, do you have any
> clue about what the specific operating system privilege might
> be that makes this work when run as Administrator?

I will do that and inform you of the result.
 
> > I have a further question about the cygwin tm_axiom.exe :
> > the output of the example 
> >
> > integrate (1/(x**3 * (a+b*x)**(1/3),x)
> >
> > in tutorial axiom-intro.pdf by Jenks et al. is displayed on
> > one line in TeXmacs, not on three lines as in the tutorial.
> > Is it normal with the current version of axiom_tm, or is it
> > specific to the Windows version (I did not try on Linux)? Is
> > it this behaviour that the new axiom_tm ought to correct? 
> 
> That is the behaviour of the old tm_axiom interface program
> on both cygwin and Linux. It does not include any special LaTeX
> line breaking code. Unfortunately TeXmacs is not able to do
> line-breaking in most of the cases of LaTeX generated by Axiom
> output. The newest version of tm_axiom that is included with
> axiom-windows-0.1.2.exe does include the Axiom specific
> line-breaking code (the save as originally written by Robert
> Sutor and used in the production of the Axiom book). If you
> can get that to work, then the output should look identical to
> the book.

OK, thanks a lot for the info, I will test
 
\start
Date: Sat, 18 Dec 2004 11:58:55 -0500
From: Bill Page
To: Meino Christian Cramer
Subject: RE: Compile errors on Axiom 2004-11-15
Cc: Camm Maguire

On Saturday, December 18, 2004 11:54 AM Meino Christian Cramer
wrote:
> 
> xiom is installed by axiom under /usr/bin/. after giving finally the
> command
> 
> 		make INSTALL=/usr/axiom COMMAND=/usr/bin/xiom install
> 
> as described in the README.

Ahhh, I see. I have never done this before. I usually do the final
installation manually since that is how we used to have to do it.
This install thing was recently added. I have to admit that I also
have never read the README :) ...

> 
> A command "sman" does not exist (neither in the executable path nor
> under /usr/axiom/. and below.
> 
> What is going wrong here ?
> 

Perhaps the make INSTALL is not copying the sman program.
Check in your original build location in the directory

  .../mnt/linux/bin

You should be able to run it from there and/or copy sman
to your install directory.

\start
Date: Sat, 18 Dec 2004 13:17:08 -0500
From: Tim Daly
To: Jinzhong Niu
Subject: Re: things to try
Cc: Gilbert Baumslag

Jinzhong,

The reason your console output ended with a running Axiom command 
prompt is that the Axiom build runs tests. The test you were running
is called "wiggle" (src/input/wiggle.input.pamphlet). It attempts
to draw a graph on the screen. It appears that the graph process
never started (perhaps you don't have xhost permission to open a
window?) or that the graph process hung somewhere. Normally the
axiom build completes and returns to a top level shell prompt.

It appears that there may be a race condition for handling graphics.

As for the issue of )quit vs quit...
'quit' is a perfectly valid variable name as are most other
symbols so there has to be a syntax for "escaping" the commands.
axiom uses a leading paren for all commands.

In any case, you should now have a working axiom, right?

btw, please copy list as there are several
people on this list who either have answers or have similar problems.

Tim

============== attached email =========================================

It seems that someone has actually updated the version in the arch
server, so I updated my local copy without doing anything on the
Makefile.pamphlet. The problem seemed gone, but the compilation never
brought the prompt back. The following is the ending part of the
output of the compilation.

########################################################################
....
make[3]: Leaving directory `/home/jniu/axiom/axiom--main--1--patch-15/src/graph'
5 making /home/jniu/axiom/axiom--main--1--patch-15/src/sman
make[3]: Entering directory `/home/jniu/axiom/axiom--main--1--patch-15/src/sman'
18 finished /home/jniu/axiom/axiom--main--1--patch-15/src/sman
make[3]: Leaving directory `/home/jniu/axiom/axiom--main--1--patch-15/src/sman'
33 making /home/jniu/axiom/axiom--main--1--patch-15/src/input
make[3]: Entering directory `/home/jniu/axiom/axiom--main--1--patch-15/src/input'
3 making /home/jniu/axiom/axiom--main--1--patch-15/int/input

make[4]: Entering directory `/home/jniu/axiom/axiom--main--1--patch-15/int/input'
967a making /home/jniu/axiom/axiom--main--1--patch-15/int/input/wiggle.output from /home/jniu/axiom/axiom--main--1--patch-15/int/input/wiggle.input
sman:main entered
sman:process_options entered
sman:set_up_defaults entered
sman:set_up_defaults exit
sman:process_arguments entered
  sman -noclef -gr -nonag -noht -noiw -ihere -ihere -nox -ws '$AXIOM/bin/AXIOMsys' -grprog '$AXIOM/lib/viewman' -nagprog '$AXIOM/lib/nagman' -htprog '$AXIOM/bin/hypertex -s' -clefprog '' -sessionprog '$AXIOM/lib/session' -clientprog '$AXIOM/lib/spadclient' -rm '(null)' -rv '(null)' -paste '(null)' 
sman:process_arguments exit
sman:process_options exit
sman:start_the_local_spadclient: $AXIOM/lib/spadclient
                        AXIOM Computer Algebra System 
             Version of Saturday December 18, 2004 at 02:45:08 
-----------------------------------------------------------------------------
   Issue )copyright to view copyright notices.
   Issue )summary for a summary of useful system commands.
   Issue )quit to leave AXIOM and return to shell.
-----------------------------------------------------------------------------
 
   Using local database /home/jniu/axiom/axiom--main--1--patch-15/mnt/linux/algebra/compress.daase..   Re-reading compress.daase   Using local database /home/jniu/axiom/axiom--main--1--patch-15/mnt/linux/algebra/interp.daase..   Re-reading interp.daase
   Using local database /home/jniu/axiom/axiom--main--1--patch-15/mnt/linux/algebra/operation.daase..   Re-reading operation.daase
   Using local database /home/jniu/axiom/axiom--main--1--patch-15/mnt/linux/algebra/category.daase..   Re-reading category.daase
   Using local database /home/jniu/axiom/axiom--main--1--patch-15/mnt/linux/algebra/browse.daase..   Re-reading browse.daase
(1) -> 
(1) ->

########################################################################

When I checked with 'ps', it seemed that 'mnt/linux/bin/AXIOMsys' has
been started, which I guess was axiom just built. Is this what I am
supposed to see? I don't think it a good idea to launch axiom right
away at the end of 'make'. Instead it may be more straightforward to
give a message telling how to launch axiom after the compilation
succeeds. In addition, I missed the ')' before 'quit' in my first try
after '(1) ->'. I guess that's the style you guys have been practicing
since 30 years ago with axiom. But from the viewpoint of user
friendliness, the symbols like ')' (leading a command) and '='
(leading a file name) had better been removed. What do you think?

\start
Date: Sat, 18 Dec 2004 18:40:34 +0100
From: Michel Lavaud
To: Bill Page
Subject: RE: [TeXmacs] 

On 18 Dec 2004 at 11:06, Bill Page wrote:

> If this doesn't happen there is a basic problem starting tm_axiom.
> 
> I have seen this happen so far only on one system (Windows 2000)
> where I tried to install TeXmacs and Axiom. On that system AXIOMsys
> runs ok from the command line, but if I type tm_axiom from the command
> line, it starts and immediately exits with no message. I am not sure
> what is causing this since exactly the same program when copied to
> another system with Axiom runs fine.

I looked at the code of tmwin_axiom.c. I may be wrong, but it would seem t=
hat the 
variable AXIOM_exe is given the default value c:/Program 
Files/axiom/mnt/windows/bin/AXIOMsys.exe at the beginning, and not modifie=
d 
afterwards, so that tmwin_axiom.exe would not find axiomsys.exe if it has =
been 
installed elsewhere?

\start
Date: Sat, 18 Dec 2004 12:54:45 -0500
From: Bill Page
To: Meino Christian Cramer
Subject: RE: Compile errors on Axiom 2004-11-15
Cc: Camm Maguire

On Saturday, December 18, 2004 12:45 PM Meino Christian Cramer
wrote:
> 
> I did a 
> 
>   find /tmp/axiom | grep sman 
> 
> the only thing find finds was:
> 
>   ./src/include/sman.H1
> 
> so I think, there is more missing than a updated README... ;)
> 

I think that can only mean that you did not build the graphics
capable version of Axiom, or possibly that your build did not
run all the way to completion.  The right version for graphics
should be available in the CVS repository for about the last
month, right Tim? I haven't done this for a while because I
have been building lately from the development arch repository
axiom--main--1 and axiom--windows--1.

As I recall the version of AXIOM make in CVS did not build sman
and other graphics programs until after it completed all of the
AXIOM algebra tests. If your system hangs during those tests,
then the graphics would not have been built. If you do have the
correct version from CVS it might be worthwhile repeating the

  make

step to see if it completes properly or if it is hung somewhere.

\start
Date: Sat, 18 Dec 2004 18:45:06 +0100 (CET)
From: Meino Christian Cramer
To: Bill Page
Subject: Re: Compile errors on Axiom 2004-11-15
Cc: Camm Maguire

I did a 

  find /tmp/axiom | grep sman 

the only thing find finds was:

  ./src/include/sman.H1

so I think, there is more missing than a updated README... ;)

Cheers,
Meino


> On Saturday, December 18, 2004 11:54 AM Meino Christian Cramer
> wrote:
> > 
> > xiom is installed by axiom under /usr/bin/. after giving finally the
> > command
> > 
> > 		make INSTALL=/usr/axiom COMMAND=/usr/bin/xiom install
> > 
> > as described in the README.
> 
> Ahhh, I see. I have never done this before. I usually do the final
> installation manually since that is how we used to have to do it.
> This install thing was recently added. I have to admit that I also
> have never read the README :) ...
> 
> > 
> > A command "sman" does not exist (neither in the executable path nor
> > under /usr/axiom/. and below.
> > 
> > What is going wrong here ?
> > 
> 
> Perhaps the make INSTALL is not copying the sman program.
> Check in your original build location in the directory
> 
>   .../mnt/linux/bin
> 
> You should be able to run it from there and/or copy sman
> to your install directory.
> 

\start
Date: Sat, 18 Dec 2004 12:46:23 -0500
From: Bill Page
To: Michel Lavaud
Subject: RE: [TeXmacs] 

On Saturday, December 18, 2004 12:41 PM Michel Lavaud
wrote:
> 
> I looked at the code of tmwin_axiom.c. I may be wrong, but it 
> would seem that the variable AXIOM_exe is given the default
> value c:/Program Files/axiom/mnt/windows/bin/AXIOMsys.exe at
> the beginning, and not modified afterwards, so that tmwin_axiom.exe
> would not find axiomsys.exe if it has been installed elsewhere?
> 

Yes you are right! I was in such a rush I did not even check
the obvious. Thank you very much.

I think that it should not specify a full path, only the
executable name. But I will have to check that that is
possible with that particular system call. If not, then
the path can be constructed from the AXIOM environment
variable.

I will make corrections and upload a new version later today.

\start
Date: Sat, 18 Dec 2004 19:11:19 +0100 (CET)
From: Meino Christian Cramer
To: Bill Page
Subject: Re: Compile errors on Axiom 2004-11-15
Cc: Camm Maguire

It jumps out of the rail at this point:

  [axiom/] :make
  0 SPAD=/tmp/axiom/mnt/ SYS= SPD=/tmp/axiom LSP=/tmp/axiom/lsp GCLDIR=/tmp/axiom/lsp/gcl-2.6.5 SRC=/tmp/axiom/src INT=/tmp/axiom/int OBJ=/tmp/axiom/obj MNT=/tmp/axiom/mnt ZIPS=/tmp/axiom/zips TMP=/tmp/axiom/obj/tmp SPADBIN=/tmp/axiom/mnt//bin INC=/tmp/axiom/src/include CCLBASE=/tmp/axiom/obj//ccl/ccllisp PART=cprogs SUBPART=everything NOISE=-o /tmp/axiom/obj/tmp/trace GCLVERSION=gcl-2.6.5 TANGLE=/tmp/axiom/mnt//bin/lib/notangle
  10 copying /tmp/axiom/src/scripts to /tmp/axiom/mnt//bin
  cp: `/tmp/axiom/mnt//bin': specified destination directory does not exist
  Try `cp --help' for more information.
  make: *** [litcmds] Error 1

I see that there is an error...but I downloaded this package the first
time...
So please, friendly guys out there, please help me out of this
dschungle (and update the docu...and may be some makefiles...)

Meino

> On Saturday, December 18, 2004 12:45 PM Meino Christian Cramer
> wrote:
> > 
> > I did a 
> > 
> >   find /tmp/axiom | grep sman 
> > 
> > the only thing find finds was:
> > 
> >   ./src/include/sman.H1
> > 
> > so I think, there is more missing than a updated README... ;)
> > 
> 
> I think that can only mean that you did not build the graphics
> capable version of Axiom, or possibly that your build did not
> run all the way to completion.  The right version for graphics
> should be available in the CVS repository for about the last
> month, right Tim? I haven't done this for a while because I
> have been building lately from the development arch repository
> axiom--main--1 and axiom--windows--1.
> 
> As I recall the version of AXIOM make in CVS did not build sman
> and other graphics programs until after it completed all of the
> AXIOM algebra tests. If your system hangs during those tests,
> then the graphics would not have been built. If you do have the
> correct version from CVS it might be worthwhile repeating the
> 
>   make
> 
> step to see if it completes properly or if it is hung somewhere.

\start
Date: Sat, 18 Dec 2004 13:22:58 -0500
From: Bill Page
To: Meino Christian Cramer
Subject: RE: Compile errors on Axiom 2004-11-15
Cc: Camm Maguire

On Saturday, December 18, 2004 1:11 PM Meino Christian Cramer
wrote:

> 
> It jumps out of the rail at this point:
> 
>   [axiom/] :make
>   0 SPAD=/tmp/axiom/mnt/ SYS= SPD=/tmp/axiom 
> LSP=/tmp/axiom/lsp GCLDIR=/tmp/axiom/lsp/gcl-2.6.5 
> SRC=/tmp/axiom/src INT=/tmp/axiom/int OBJ=/tmp/axiom/obj 
> MNT=/tmp/axiom/mnt ZIPS=/tmp/axiom/zips 
> TMP=/tmp/axiom/obj/tmp SPADBIN=/tmp/axiom/mnt//bin 
> INC=/tmp/axiom/src/include 
> CCLBASE=/tmp/axiom/obj//ccl/ccllisp PART=cprogs 
> SUBPART=everything NOISE=-o /tmp/axiom/obj/tmp/trace 
> GCLVERSION=gcl-2.6.5 TANGLE=/tmp/axiom/mnt//bin/lib/notangle
>   10 copying /tmp/axiom/src/scripts to /tmp/axiom/mnt//bin
>   cp: `/tmp/axiom/mnt//bin': specified destination directory 
> does not exist
>   Try `cp --help' for more information.
>   make: *** [litcmds] Error 1
> 
> I see that there is an error...but I downloaded this package
> the first time...
> So please, friendly guys out there, please help me out of this
> dschungle (and update the docu...and may be some makefiles...)
> 

Please have patience with us. This is open source development
and you are helping us a great deal by trying to follow our
sketchy and imprecise instructions. With your help and persistence
we will be able to make this easier for other people.

Of course if you have some specific changes to the documentation
or the makefile scripts etc. Then we would also be very happy
to receive them. :)

It looks like your AXIOM variable is set incorrectly again.
There should not be a double // As Tim said earlier

>  export AXIOM=/usr/axiom/mnt/

should not have the trailing /

\start
Date: Sun, 19 Dec 2004 00:46:01 +0600 (NOVT)
From: Andrey G. Grozin
To: Bill Page
Subject: RE: Compile errors on Axiom 2004-11-15
Cc: Camm Maguire, Meino Christian Cramer

On Sat, 18 Dec 2004, Bill Page wrote:
> It looks like your AXIOM variable is set incorrectly again.
> There should not be a double // As Tim said earlier
> 
> >  export AXIOM=/usr/axiom/mnt/
> 
> should not have the trailing /
Shouldn't it by

export AXIOM=/usr/axiom/mnt/linux

instead?

There should be no double slashes, but there should be some architecture 
subdirectory under mnt.

\start
Date: Sat, 18 Dec 2004 13:58:38 -0500
From: Jinzhong Niu
To: Tim Daly
Subject: re: things to try

That makes sense. I did the compilation remotely from a windows pc. I will try again when I am physically at the computer in our lab. Thanks a lot.

---------- Original Message -------------

>Jinzhong,
>
>The reason your console output ended with a running Axiom command 
>prompt is that the Axiom build runs tests. The test you were running
>is called "wiggle" (src/input/wiggle.input.pamphlet). It attempts
>to draw a graph on the screen. It appears that the graph process
>never started (perhaps you don't have xhost permission to open a
>window?) or that the graph process hung somewhere. Normally the
>axiom build completes and returns to a top level shell prompt.
>
>It appears that there may be a race condition for handling graphics.
>
>As for the issue of )quit vs quit...
>'quit' is a perfectly valid variable name as are most other
>symbols so there has to be a syntax for "escaping" the commands.
>axiom uses a leading paren for all commands.
>
>In any case, you should now have a working axiom, right?
>
>btw, please copy list as there are several
>people on this list who either have answers or have similar problems.
>
>Tim
>
>============== attached email =========================================
>
>It seems that someone has actually updated the version in the arch
>server, so I updated my local copy without doing anything on the
>Makefile.pamphlet. The problem seemed gone, but the compilation never
>brought the prompt back. The following is the ending part of the
>output of the compilation.
>
>########################################################################
>....
>make[3]: Leaving directory `/home/jniu/axiom/axiom--main--1--patch-15/src/graph'
>5 making /home/jniu/axiom/axiom--main--1--patch-15/src/sman
>make[3]: Entering directory `/home/jniu/axiom/axiom--main--1--patch-15/src/sman'
>18 finished /home/jniu/axiom/axiom--main--1--patch-15/src/sman
>make[3]: Leaving directory `/home/jniu/axiom/axiom--main--1--patch-15/src/sman'
>33 making /home/jniu/axiom/axiom--main--1--patch-15/src/input
>make[3]: Entering directory `/home/jniu/axiom/axiom--main--1--patch-15/src/input'
>3 making /home/jniu/axiom/axiom--main--1--patch-15/int/input
>
>make[4]: Entering directory `/home/jniu/axiom/axiom--main--1--patch-15/int/input'
>967a making /home/jniu/axiom/axiom--main--1--patch-15/int/input/wiggle.output from /home/jniu/axiom/axiom--main--1--patch-15/int/input/wiggle.input
>sman:main entered
>sman:process_options entered
>sman:set_up_defaults entered
>sman:set_up_defaults exit
>sman:process_arguments entered
>  sman -noclef -gr -nonag -noht -noiw -ihere -ihere -nox -ws '$AXIOM/bin/AXIOMsys' -grprog '$AXIOM/lib/viewman' -nagprog '$AXIOM/lib/nagman' -htprog '$AXIOM/bin/hypertex -s' -clefprog '' -sessionprog '$AXIOM/lib/session' -clientprog '$AXIOM/lib/spadclient' -rm '(null)' -rv '(null)' -paste '(null)' 
>sman:process_arguments exit
>sman:process_options exit
>sman:start_the_local_spadclient: $AXIOM/lib/spadclient
>                        AXIOM Computer Algebra System 
>             Version of Saturday December 18, 2004 at 02:45:08 
>-----------------------------------------------------------------------------
>   Issue )copyright to view copyright notices.
>   Issue )summary for a summary of useful system commands.
>   Issue )quit to leave AXIOM and return to shell.
>-----------------------------------------------------------------------------
> 
>   Using local database /home/jniu/axiom/axiom--main--1--patch-15/mnt/linux/algebra/compress.daase..   Re-reading compress.daase   Using local database /home/jniu/axiom/axiom--main--1--patch-15/mnt/linux/algebra/interp.daase..   Re-reading interp.daase
>   Using local database /home/jniu/axiom/axiom--main--1--patch-15/mnt/linux/algebra/operation.daase..   Re-reading operation.daase
>   Using local database /home/jniu/axiom/axiom--main--1--patch-15/mnt/linux/algebra/category.daase..   Re-reading category.daase
>   Using local database /home/jniu/axiom/axiom--main--1--patch-15/mnt/linux/algebra/browse.daase..   Re-reading browse.daase
>(1) -> 
>(1) ->
>
>########################################################################
>
>When I checked with 'ps', it seemed that 'mnt/linux/bin/AXIOMsys' has
>been started, which I guess was axiom just built. Is this what I am
>supposed to see? I don't think it a good idea to launch axiom right
>away at the end of 'make'. Instead it may be more straightforward to
>give a message telling how to launch axiom after the compilation
>succeeds. In addition, I missed the ')' before 'quit' in my first try
>after '(1) ->'. I guess that's the style you guys have been practicing
>since 30 years ago with axiom. But from the viewpoint of user
>friendliness, the symbols like ')' (leading a command) and '='
>(leading a file name) had better been removed. What do you think?
>

\start
Date: Sat, 18 Dec 2004 14:05:46 -0500
From: Bill Page
To: Michel Lavaud
Subject: RE: [TeXmacs] 

Dear Michel
 (and other brave "Axiom in TeXmacs for Windows" souls):

Please try the new version of tm_axiom that I have just now
uploaded here:

  http://page.axiom-developer.org/tm_axiom.zip

This version includes corrections to read the AXIOM environment
variable so that it works when placed in a non-standard location
and also the Robert Sutor line-breaking algorithms.

Regards,
Bill Page.

On Saturday, December 18, 2004 12:46 PM I wrote:
> 
> On Saturday, December 18, 2004 12:41 PM Michel Lavaud
> wrote:
> > 
> > I looked at the code of tmwin_axiom.c. I may be wrong, but it 
> > would seem that the variable AXIOM_exe is given the default
> > value c:/Program Files/axiom/mnt/windows/bin/AXIOMsys.exe at
> > the beginning, and not modified afterwards, so that tmwin_axiom.exe
> > would not find axiomsys.exe if it has been installed elsewhere?
> > 
> 
> Yes you are right! I was in such a rush I did not even check
> the obvious. Thank you very much.
> 
> I think that it should not specify a full path, only the
> executable name. But I will have to check that that is
> possible with that particular system call. If not, then
> the path can be constructed from the AXIOM environment
> variable.
> 
> I will make corrections and upload a new version later today.
> 

\start
Date: Sat, 18 Dec 2004 14:04:52 -0500
From: Stephen Wilson
To: Bill Page
Subject: Re: Compile errors on Axiom 2004-11-15
Cc: Camm Maguire, Meino Christian Cramer

Meino,

A minor point for clarification. As pointed out earlier, the `xiom'
script which was installed sets the environment variable AXIOM for
you, before launching the system proper. However, during a make, you
must set the AXIOM variable yourself as instructed by running
`configure' at the top of your source tree. 

I mention this because the AXIOM variable has appeared in two
different contexts throughout this discussion:

   1) During a make, the AXIOM variable is used to guide the build
      process. It points to the place where axiom is being built
      inside the source tree. Again, at this stage, the AXIOM
      variable should be set by hand as instructed by `configure'.

   2) When you type `make INSTALL=/usr/axiom COMMAND=/usr/bin/xiom
      install' the resulting `xiom' script will set the AXIOM variable
      appropriate for axioms new home.


I would like to second Bills comment and thank you for your patience
and help.

On Sat, Dec 18, 2004 at 01:22:58PM -0500, Bill Page wrote:
> On Saturday, December 18, 2004 1:11 PM Meino Christian Cramer
> wrote:
> 
> > 
> > It jumps out of the rail at this point:
> > 
> >   [axiom/] :make
> >   0 SPAD=/tmp/axiom/mnt/ SYS= SPD=/tmp/axiom 
> > LSP=/tmp/axiom/lsp GCLDIR=/tmp/axiom/lsp/gcl-2.6.5 
> > SRC=/tmp/axiom/src INT=/tmp/axiom/int OBJ=/tmp/axiom/obj 
> > MNT=/tmp/axiom/mnt ZIPS=/tmp/axiom/zips 
> > TMP=/tmp/axiom/obj/tmp SPADBIN=/tmp/axiom/mnt//bin 
> > INC=/tmp/axiom/src/include 
> > CCLBASE=/tmp/axiom/obj//ccl/ccllisp PART=cprogs 
> > SUBPART=everything NOISE=-o /tmp/axiom/obj/tmp/trace 
> > GCLVERSION=gcl-2.6.5 TANGLE=/tmp/axiom/mnt//bin/lib/notangle
> >   10 copying /tmp/axiom/src/scripts to /tmp/axiom/mnt//bin
> >   cp: `/tmp/axiom/mnt//bin': specified destination directory 
> > does not exist
> >   Try `cp --help' for more information.
> >   make: *** [litcmds] Error 1
> > 
> > I see that there is an error...but I downloaded this package
> > the first time...
> > So please, friendly guys out there, please help me out of this
> > dschungle (and update the docu...and may be some makefiles...)
> > 
> 
> Please have patience with us. This is open source development
> and you are helping us a great deal by trying to follow our
> sketchy and imprecise instructions. With your help and persistence
> we will be able to make this easier for other people.
> 
> Of course if you have some specific changes to the documentation
> or the makefile scripts etc. Then we would also be very happy
> to receive them. :)
> 
> It looks like your AXIOM variable is set incorrectly again.
> There should not be a double // As Tim said earlier
> 
> >  export AXIOM=/usr/axiom/mnt/
> 
> should not have the trailing /

\start
Date: Sat, 18 Dec 2004 15:08:57 -0500
From: Tim Daly
To: Jinzhong Niu
Subject: Re: things to try

Jinzhong,

There is no need to try the build again. If it failed during testing
of the graphics it is likely the case that it built correctly.

The next step is to try to recover the zlc work from Xaiowei.
I might have a copy here. I'll look around.

\start
Date: Sat, 18 Dec 2004 12:03:33 -0800
From: Bob McElrath
To: Michel Lavaud
Subject: Re: [TeXmacs]

Michel Lavaud wrote:
> Ah OK ! Sorry for that. But then I think that, in its present state (at least in the state I 
> received it in my mailer) the message generated is largely incomprehensible, as there 
> is no leading minus sign, only minus signs embedded in the middle of long lines. The 
> only indicators I could detect by inspection are "??changed" and "++added"

The "diff-format" output could definitely be improved.  The place to do
this is in ZWiki itself, Diff.py: DiffSupport:textDiff.

Also the zwiki folder property (or per-page property) "mailout_policy"
can be set to either "comments" or "edits".  Right now it is set to
"edits" so is sending out these diffs.  I find them useless, and for
most cases "comments" is appropriate.  Note that when in "comments"
mode, emails will also be sent when new pages are created, but not when
pages are edited.

Is there some way we could have a hybrid?  e.g. when a page is edited we
send out the entire page with a comment at the top "this page was
edited".  If one wants to see line-by-line changes it can always be
retreived through the zwiki interface.

\start
Date: Sat, 18 Dec 2004 14:42:05 -0500
From: Bill Page
To: list
Subject: RE: [TeXmacs] 
Cc: Michel Lavaud

Axiom in TeXmacs for Windows users:

Now, assuming that the new tm_axiom file below does work for
you, with either please try the original Axiom test command
from the Axiom Book

  integrate (1/(x**3 * (a+b*x)**(1/3)),x)

What you will find is that this very first example actually
fails :( to display properly in TeXmacs but very simple variants
such as

  integrate (1/(x**2 * (a+b*x)**(1/3)),x)

actually do display properly. Almost everything else I try
also seems to work.

When I look at the document tree in TeXmacs - something that
only people with a little experience with TeXmacs should do -
as far as I can tell the coding for both of these cases is
correct.

So it seems that this is a bug in TeXmacs that we need to
discuss with the TeXmacs developers.

I have also included a revised axiom.ts style file in the
zip below that should replace the existing axiom.ts file
in both native and cygwin versions of TeXmacs. If there are
any TeXmacs style file wizards out there, I would like to
ask why this change seems to be necessary to properly format
Axiom output. In previous versions of TeXmacs this did not
seem to be necessary.

If you haven't already please download the newest version
of Axiom for Windows here

http://page.axiom-developer.org/zope/mathaction/AxiomDownload

Regards,
Bill Page.

On Saturday, December 18, 2004 2:06 PM I wrote:
> 
> Please try the new version of tm_axiom that I have just now
> uploaded here:
> 
>  http://page.axiom-developer.org/tm_axiom.zip
>
> This version includes corrections to read the AXIOM environment
> variable so that it works when placed in a non-standard location
> and also the Robert Sutor line-breaking algorithms.

\start
Date: Sat, 18 Dec 2004 15:05:27 -0500
From: Tim Daly
To: Meino Christian Cramer
Subject: Re: Compile errors on Axiom 2004-11-15
Cc: Camm Maguire

Meino,

Try 

cd /tmp/axiom
export AXIOM=/tmp/axiom/mnt/linux
export PATH=$AXIOM/bin:$PATH
make clean
make

The step you have that failed is very, very early in the build.
The build step should take hours.

\start
Date: Sat, 18 Dec 2004 20:37:17 +0100 (CET)
From: Meino Christian Cramer
To: Stephen Wilson
Subject: Re: Compile errors on Axiom 2004-11-15
Cc: Camm Maguire

Hi Steve,

 Hahahahhaha,....now we have, what Shortwave listeners used to call
 "crosstalking" ;)

 I send a mail just seconds before your mail reches me, which
 described how I stuck in the dark about this AXIOM thingy... ;)))))

 Ok, this clearifies some points for me :)

 Nonetheless, the xiom script -- as installed -- does not find clef.

 I had to patch it.

> 
> Meino,
> 
> A minor point for clarification. As pointed out earlier, the `xiom'
> script which was installed sets the environment variable AXIOM for
> you, before launching the system proper. However, during a make, you
> must set the AXIOM variable yourself as instructed by running
> `configure' at the top of your source tree. 
> 
> I mention this because the AXIOM variable has appeared in two
> different contexts throughout this discussion:
> 
>    1) During a make, the AXIOM variable is used to guide the build
>       process. It points to the place where axiom is being built
>       inside the source tree. Again, at this stage, the AXIOM
>       variable should be set by hand as instructed by `configure'.
> 
>    2) When you type `make INSTALL=/usr/axiom COMMAND=/usr/bin/xiom
>       install' the resulting `xiom' script will set the AXIOM variable
>       appropriate for axioms new home.
> 
> 
> I would like to second Bills comment and thank you for your patience
> and help.
> 
> On Sat, Dec 18, 2004 at 01:22:58PM -0500, Bill Page wrote:
> > On Saturday, December 18, 2004 1:11 PM Meino Christian Cramer
> > wrote:
> > 
> > > 
> > > It jumps out of the rail at this point:
> > > 
> > >   [axiom/] :make
> > >   0 SPAD=/tmp/axiom/mnt/ SYS= SPD=/tmp/axiom 
> > > LSP=/tmp/axiom/lsp GCLDIR=/tmp/axiom/lsp/gcl-2.6.5 
> > > SRC=/tmp/axiom/src INT=/tmp/axiom/int OBJ=/tmp/axiom/obj 
> > > MNT=/tmp/axiom/mnt ZIPS=/tmp/axiom/zips 
> > > TMP=/tmp/axiom/obj/tmp SPADBIN=/tmp/axiom/mnt//bin 
> > > INC=/tmp/axiom/src/include 
> > > CCLBASE=/tmp/axiom/obj//ccl/ccllisp PART=cprogs 
> > > SUBPART=everything NOISE=-o /tmp/axiom/obj/tmp/trace 
> > > GCLVERSION=gcl-2.6.5 TANGLE=/tmp/axiom/mnt//bin/lib/notangle
> > >   10 copying /tmp/axiom/src/scripts to /tmp/axiom/mnt//bin
> > >   cp: `/tmp/axiom/mnt//bin': specified destination directory 
> > > does not exist
> > >   Try `cp --help' for more information.
> > >   make: *** [litcmds] Error 1
> > > 
> > > I see that there is an error...but I downloaded this package
> > > the first time...
> > > So please, friendly guys out there, please help me out of this
> > > dschungle (and update the docu...and may be some makefiles...)
> > > 
> > 
> > Please have patience with us. This is open source development
> > and you are helping us a great deal by trying to follow our
> > sketchy and imprecise instructions. With your help and persistence
> > we will be able to make this easier for other people.
> > 
> > Of course if you have some specific changes to the documentation
> > or the makefile scripts etc. Then we would also be very happy
> > to receive them. :)
> > 
> > It looks like your AXIOM variable is set incorrectly again.
> > There should not be a double // As Tim said earlier
> > 
> > >  export AXIOM=/usr/axiom/mnt/
> > 
> > should not have the trailing /

\start
Date: Sat, 18 Dec 2004 17:49:40 -0500
From: Tim Daly
To: Bill Page
Subject: windows/linux coherency

Bill,

Is it possible to make a linux/texmacs binary also?

I'd like to try, as much as possible, to have the windows and linux
versions of the system to appear the same.

\start
Date: Sat, 18 Dec 2004 18:55:00 -0500
From: Tim Daly
To: Bill Page
Subject: Re: windows/linux coherency

ah, my confusion.

i was under the impression that you had packaged texmacs with axiom
in the axiom.exe download for windows. i just downloaded it, ran it,
and found out that this was not the case.

methinks we could package the tm_axiom with axiom (src/texmacs?)
so it is available to those who want it.

also we should include the installer control file so we can change it.

\start
Date: Sat, 18 Dec 2004 17:43:46 -0500
From: Bill Page
To: Tim Daly
Subject: RE: windows/linux coherency

Tim,

On Saturday, December 18, 2004 5:50 PM you asked:
> 
> Is it possible to make a linux/texmacs binary also?
> 
> I'd like to try, as much as possible, to have the windows and
> linux versions of the system to appear the same.
> 

Hmmm... what do you mean by a linux/texmacs binary? A binary
of what? There is a small interface program called tm_axiom.
Do you mean a binary version of that for linux?

There is already a tm_axiom interface that works with Linux
included with the linux version of TeXmacs itself. That version,
however does not include the Sutor line-break code. I did a
version of tm_axiom for linux last year that included the
line-break code but the TeXmacs developers chose not to include
it in their distribution. But I think it is still on Savannah
somewhere. I am planning to prepare an updated version of the
linux tm_axiom now that I know a little something about threads
(at least how they work under Windows :) I still have to learn
how it works under linux).

Do you think that we should distribute tm_axiom separately or
just include it with the linux builds of Axiom?

\start
Date: Sat, 18 Dec 2004 18:03:26 -0500
From: Bill Page
To: Bob McElrath
Subject: RE: [TeXmacs]
Cc: Michel Lavaud

Bob,

On Saturday, December 18, 2004 3:04 PM you wrote:
> 
> The "diff-format" output could definitely be improved.  The 
> place to do this is in ZWiki itself, Diff.py: DiffSupport:textDiff.

Yes, I agree. It is particular difficult to understand with long
text lines. The - marker looks ok if each line is short. A strike-out
kind of notation would be nice, but that seems hard to achieve in an
ascii only email. At the very least the long text lines could be
wrapped at some reasonable limit for ascii email and each folded
line prefixed with - or other character. How about

Deleted:
    Pre-context lines (2 or 3 lines)
  < deletions ...                     line folded at 72 chars
  < more deletions
    Post-context lines (2 or 3 lines)

Inserted:
    Pre-context lines (2 or 3 lines)
  > additions ...                     lines folded at 72 chars
  > more additions
    Post-context lines (2 or 3 lines)

would that be more readable?

Sending HTML email with pretty strike-outs etc (like on the
diffs page of the wiki itself) would be nice but it seems that
HTML is still poorly supported by a majority of email clients
in use by people who frequent the email lists. Allowing HTML
email as a user option might be a good idea.

> 
> Also the zwiki folder property (or per-page property)
> "mailout_policy" can be set to either "comments" or "edits".
> Right now it is set to "edits" so is sending out these diffs.
> I find them useless, and for most cases "comments" is appropriate.
> Note that when in "comments" mode, emails will also be sent
> when new pages are created, but not when pages are edited.
>

I had a lot of second thoughts about enabling the "edits" mode
especially before there was the preview option since then there
were a lot of unnecessarily detailed diffs being generated as
one got a page to look the way one wanted. The preview function
relieves a lot of that.

But I worry about missing important changes to a page since a lot
of times the main reason for subscribing is to track such changes.
 
> Is there some way we could have a hybrid?  e.g. when a page 
> is edited we send out the entire page with a comment at the
> top "this page was edited".  If one wants to see line-by-line
> changes it can always be retreived through the zwiki interface.
> 

I am tempted to say that all that is necessary is to send a
notice containing a url link to the diffs of a page if there
is some change on that page. That way the user could see the
diffs displayed in nicely formated HTML and easily navigate
to the page if they want to read the whole thing. But perhaps
we do want to include something more useful in the email
notice itself. However I think the whole page for each small
change might be a bit too much.

\start
Date: Sun, 19 Dec 2004 01:21:43 +0100
From: Michel Lavaud
To: Bill Page
Subject: RE: [TeXmacs] 

Hello Bill,

On 18 Dec 2004 at 14:05, Bill Page wrote:

> Dear Michel
>  (and other brave "Axiom in TeXmacs for Windows" souls):
> 
> Please try the new version of tm_axiom that I have just now
> uploaded here:
> 
>   http://page.axiom-developer.org/tm_axiom.zip
> 
> This version includes corrections to read the AXIOM environment
> variable so that it works when placed in a non-standard location
> and also the Robert Sutor line-breaking algorithms.

Great ! The new tm_axiom works perfectly, now. However, the Jenks
integration example does not appear correctly : the big left
parenthesis is not a \left( but an ordinary (, the same for the right
parenthesis. Moreover, the third line disappears. I have pasted the
input in tm-axiom.exe in a cmd.exe command window, and then the \left(
and \right) appear correctly, and the whole LaTeX formula is correct
(in particular the third line is also present). So it seems to be a
bug in the LaTeX import module of TeXmacs, as you already pointed a
few days ago to Andrey Grozin.

I tried also with the same input but with power -1/3 instead of 1/3,
and the result appears to have big left and right parentheses, but the
first two lines are incorrect. So the error seems not to be localized
to the treatment of \left( and \right).

On the other hand, the output of the cygwin tm_axiom is correct,
although on a single line. So I think that the only solution for
users, for the Windows version of Axiom, would be to include the
cygwin tm_axiom, until Andrey or Joris provide a corrected import
module of LaTeX arrays in TeXmacs ?

And congratulations for the great work !

\start
Date: Sat, 18 Dec 2004 19:59:53 -0500
From: Bill Page
To: Michel Lavaud
Subject: RE: [TeXmacs] 

On Saturday, December 18, 2004 7:51 PM Michel Lavaud
wrote:
> ...
> Bill Page wrote:  
> > I have also included a revised axiom.ts style file in the
> > zip below that should replace the existing axiom.ts file
> > in both native and cygwin versions of TeXmacs. If there are
> > any TeXmacs style file wizards out there, I would like to
> > ask why this change seems to be necessary to properly format
> > Axiom output. In previous versions of TeXmacs this did not
> > seem to be necessary.
> 
> What differences did you notice? I didn't find any ? 
> (probably because it is too late here:-))
>  

Or is it too early?? (I guess we are all the same ... :)

When I display these formula on my system - both native
Windows and cygwin versions display the Axiom

                                  Type: Expression Integer

output immediately after the equation number, on the same
line, often wrapping to the start of the next line. Something
like this:

                     x+y+z            (2)Type: Expression
Integer

Normally it is formatted on the next full line below with
right hand justification. The change to the stylesheet
is to add an explicit new-line formatting command for
\axiomtype{...} to force it to a new line. In previous
versions of TeXmacs, this was not necessary since it was
automatically treated like a new paragraph.

Have a good night.

\start
Date: Sun, 19 Dec 2004 01:50:38 +0100
From: Michel Lavaud
To: Bill Page
Subject: RE: [TeXmacs] 

Hello Bill,

On 18 Dec 2004 at 14:42, Bill Page wrote:

> Axiom in TeXmacs for Windows users:
> 
> Now, assuming that the new tm_axiom file below does work for
> you, with either please try the original Axiom test command
> from the Axiom Book
> 
>   integrate (1/(x**3 * (a+b*x)**(1/3)),x)
> 
> What you will find is that this very first example actually
> fails :(

Ah sorry, I hadn't received this message before seding comments to your pr=
eceding 
mail.

> So it seems that this is a bug in TeXmacs that we need to
> discuss with the TeXmacs developers.

Yes, I agree completely, it seems it is not a bug in Sutor's break algorit=
hm but in the 
TeXmacs module that imports LaTeX arrays.
 
> I have also included a revised axiom.ts style file in the
> zip below that should replace the existing axiom.ts file
> in both native and cygwin versions of TeXmacs. If there are
> any TeXmacs style file wizards out there, I would like to
> ask why this change seems to be necessary to properly format
> Axiom output. In previous versions of TeXmacs this did not
> seem to be necessary.

What differences did you notice? I didn't find any ? (probably because it =
is too late 
here:-))
 
\start
Date: Sun, 19 Dec 2004 00:41:32 -0500
From: Bill Page
To: Michel Lavaud
Subject: RE: [TeXmacs] 

On Saturday, December 18, 2004 7:22 PM Michel Lavaud
wrote:
> 
> I tried also with the same input but with power -1/3 instead 
> of 1/3,

  I1 := integrate (1/(x**3 * (a+b*x)**(-1/3)),x)

> and the result appears to have big left and right parentheses,
> but the first two lines are incorrect.

Actually if you look closely, it is correct but just formatted
in a rather unexpected style. To see this try

  numer(I1)

You will notice that in the full expression, the first term of
the numerator has been folded locally at the \cdot into two lines
with a leading minus sign vertically centered on the right like
this

   b^2x^2\sqrt{3} \cdot
-                               + 2b^2x^2\sqrt{3}log(sqrt[3]{-a^2} ...
   \log(sqrt[3]{-a^2}^2 ...

This type of "nested folding" is actually built in to Robert
Sutor's algorithm. There may be an option that I am not explicitly
setting which controls this type of behaviour.

See also the web page at

http://page.axiom-developer.org/zope/mathaction/VeryLongLaTeX

I am glad to see that all of these examples work on MathAction
since MathAction is actually using LaTeX internally to do the
formatting. So this represents a reasonable "benchmark" against
which to compare the TeXmacs output.

> So the error seems not to be localized to the treatment of 
> \left( and \right).

Yes, I agree. This is true in at least the current version of
TeXmacs. I seem to recall somewhat different behaviour in the
versions of TeXmacs that were current at this time last year.
The current problems might have something to do with how TeXmacs
converts \begin{array} structures into tables and an interaction
of the table entries (where each table entry is a folded line)
with complex math formatting.

> 
> On the other hand, the output of the cygwin tm_axiom is 
> correct, although on a single line. So I think that the
> only solution for users, for the Windows version of Axiom,
> would be to include the cygwin tm_axiom, until Andrey or
> Joris provide a corrected import module of LaTeX arrays in
> TeXmacs ?

So far I only know one example that fails to display properly.
Unfortunately it is the very first example in the book! Arghh.
One example of an apparently wrong result that is not easily
distinguished as a typesetting problem is enough to "stop the
show", of course. However I am optimistic that this can be
corrected quite easily since other apparently equally complex
examples actually do work.

I think that the more we (Axiom developers) depend on TeXmacs,
the more we must be prepared to try to help maintain TeXmacs -
just as we already have a great (sometimes two-way) relationship
with the GCL developers, on which the current version of Axiom
strongly depends ... :) That is just the nature of complex open
source development projects, I guess. So, as time permits, I hope
to be able to begin to work directly with the TeXmacs source code.
But so far it looks as foreign to me as Axiom's "bootsys" level
did to be two years ago ... <sigh>.

> 
> And congratulations for the great work !
> 

Thank you for your interest in Axiom in TeXmacs and agreeing
to test this!

\start
Date: Sat, 18 Dec 2004 22:57:28 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [VeryLongLaTeX] 

??changed:
-programs for this web site. It has also been used experimentallt in TeXmacs.
-There have been problems reported concerning incorrect formatting that
programs for this web site. It has also been used experimentally in the
TeXmacs - Axiom interface program called tm_axiom.

  There have been problems reported concerning incorrect formatting that

??changed:
-Reported by Andrey G. Grozin:
Experiment 0

  The first example below was reported by Andrey G. Grozin as failing
when displayed in TeXmacs when using the Sutor line-break algorithm.
But typeset and folded correctly by TeXmacs without the line-break
algorithm. However it does appear correctly below and it is also
correct in the most recent versions of TeXmacs (1.0.4.5 on cygwin
and 1.0.4.4 on native windows) when using the newest version of
"tm_axiom":http://page.axiom-developer.org/tm_axiom.zip and
the version of Axiom at AxiomDownload.

++added:

  This expression is not folded at all by the current version of
TeXmacs but it displayed correctly both here and in TeXmacs when
using the line-break algorithm.

++added:
Experiment 2

  This is the first example in the Jenks and Sutor AXIOM book.
It is formatted properly below but in TeXmacs the output is
wrong - small instead of large brackets and one of the terms
of the numerator not display at all. Without the line-break
algorithm TeXmacs displays it correctly but as one long non-
folded line.

\begin{axiom}
integrate (1/(x**3 * (a+b*x)**(1/3)),x)
\end{axiom}

Experiment 3

  This simple variant of the above expression, (-1/3) instead
of (1/3), is formatted properly both here and in TeXmacs

\begin{axiom}
integrate (1/(x**3 * (a+b*x)**(-1/3)),x)
\end{axiom}

Notice that the first term in the paranthesis appears a little
odd at first site because the first term itself is "locally
folded" at the ${\mathbf \cdot}$ with a vertically centered leading minus sign.

--
forwarded from http://page.axiom-developer.org/zope/mathaction/VeryLongLaTeX#msg20041218225728-0600@page.axiom-developer.org

\start
Date: Sat, 18 Dec 2004 23:57:18 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [TeXmacs] 


??changed:
-   <b>The "native windows version of TeXmacs":http://www.texmacs.org/tmweb/download/windows.en.html does not require the installation of cygwin. A new version of the Axiom interface program (called tm_axiom) written especially for Windows is included in the latest "Axiom for Windows":AxiomDownload installation program. This will be used automatically by the native windows version of TeXmacs.</b>
   <b>The "native windows":http://www.texmacs.org/tmweb/download/windows.en.html
version of TeXmacs does not require the installation of cygwin.
A new version of the Axiom interface program
"tm_axiom":http://page.axiom-developer.org/tm_axiom.zip
that was written especially for Windows is included in the
latest "Axiom for Windows":AxiomDownload installation program.
This will be used automatically by the native windows version
of TeXmacs.</b>

??changed:
-   If you do not see Axiom in the list of sessions then make sure that you have installed the latest versions of both "Axiom for Windows":AxiomDownload and "TeXmacs":http://page.axiom-developer.org/wintexmacs-1.0.4.4.exe .
1  If you do not see Axiom in the list of sessions then make sure that
   you have installed the latest versions of both "Axiom for Windows":AxiomDownload
   and "TeXmacs":http://page.axiom-developer.org/wintexmacs-1.0.4.4.exe .

2  There is an <span style="background:lightgreen">
   "update to tm_axiom":http://page.axiom-developer.org/tm_axiom.zip
   </span> that corrects a problem that occurs if Axiom is installed
   in a non-default location. The previous version would silently
   fail to start Axiom if it is not located in c:\Program Files\axiom.

--
forwarded from http://page.axiom-developer.org/zope/mathaction/TeXmacs#msg20041218235718-0600@page.axiom-developer.org

\start
Date: Sat, 18 Dec 2004 23:59:54 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [TeXmacs] 


??changed:
-   <b>The "native windows version of TeXmacs":http://www.texmacs.org/tmweb/download/windows.en.html does not require the installation of cygwin. A new version of the Axiom interface program (called tm_axiom) written especially for Windows is included in the latest "Axiom for Windows":AxiomDownload installation program. This will be used automatically by the native windows version of TeXmacs.</b>
   <b>The "native windows":http://www.texmacs.org/tmweb/download/windows.en.html
version of TeXmacs does not require the installation of cygwin.
A new version of the Axiom interface program
"tm_axiom":http://page.axiom-developer.org/tm_axiom.zip
that was written especially for Windows is included in the
latest "Axiom for Windows":AxiomDownload installation program.
This will be used automatically by the native windows version
of TeXmacs.</b>

??changed:
-   If you do not see Axiom in the list of sessions then make sure that you have installed the latest versions of both "Axiom for Windows":AxiomDownload and "TeXmacs":http://page.axiom-developer.org/wintexmacs-1.0.4.4.exe .
1  If you do not see Axiom in the list of sessions then make sure that
   you have installed the latest versions of both "Axiom for Windows":AxiomDownload
   and "TeXmacs":http://page.axiom-developer.org/wintexmacs-1.0.4.4.exe .

2  There is an <span style="background:lightgreen">
   "update to tm_axiom":http://page.axiom-developer.org/tm_axiom.zip
   </span> that corrects a problem that occurs if Axiom is installed
   in a non-default location. The previous version would silently
   fail to start Axiom if it is not located in c:\Program Files\axiom.

--
forwarded from http://page.axiom-developer.org/zope/mathaction/TeXmacs#msg20041218235954-0600@page.axiom-developer.org

\start
Date: Sun, 19 Dec 2004 07:48:20 +0200
From: Vladimir Bondarenko
To: list
Subject: Axiom I/O/conversion questions

Hello,

1) How can the user use the batch mode?

   (Say, to have a bat like  AXIOMsys < in.input > in.output
   where in in.input one can put some AXIOM inputs)

2) How the user can convert an Axiom output to a string?
                    x
   Say, instead of  -  it would be great to see x/2
                    2

3) How can the user (in a simple way, without much writing)
   enter a protocol mode (automated registering of the
   inputs AND outputs)?

   Things like )spool test.txt sends to a file only the output...

Much thanks in advance.

\start
Date: Sun, 19 Dec 2004 07:40:12 +0100 (CET)
From: Meino Christian Cramer
To: list
Subject: Nightly build

Hi,

 this night I did a complete fresh rebuild of axiom-2004-11-15.
 Nothing was patched or hacked beside of the options

		   --disable-statsysbfd --enable-locbfd

 in lsp/Makefile.pamphlet.

 The compressed logfile of this build is ~ 758738 bytes long
 (bzip2-compressed). If one wants it, I will mail it.

 The logfile shows no Error-lines. I did a 

	 grep '\*\*\*' MAKELOG | grep -i error

 to find them. Nor did make stop on an error.

 Nonetheless, a second

	 make 

 afterwards shows that the build was not successful:

     [axiom/] :make
     0 SPAD=/tmp/axiom/mnt/ SYS= SPD=/tmp/axiom LSP=/tmp/axiom/lsp GCLDIR=/tmp/axiom/lsp/gcl-2.6.5 SRC=/tmp/axiom/src INT=/tmp/axiom/int OBJ=/tmp/axiom/obj MNT=/tmp/axiom/mnt ZIPS=/tmp/axiom/zips TMP=/tmp/axiom/obj/tmp SPADBIN=/tmp/axiom/mnt//bin INC=/tmp/axiom/src/include CCLBASE=/tmp/axiom/obj//ccl/ccllisp PART=cprogs SUBPART=everything NOISE=-o /tmp/axiom/obj/tmp/trace GCLVERSION=gcl-2.6.5 TANGLE=/tmp/axiom/mnt//bin/lib/notangle
     10 copying /tmp/axiom/src/scripts to /tmp/axiom/mnt//bin
     cp: `/tmp/axiom/mnt//bin': specified destination directory does not exist
     Try `cp --help' for more information.
     make: *** [litcmds] Error 1
     [axiom/] :mkdir -p /tmp/axiom/mnt//bin
     [axiom/] :make
     0 SPAD=/tmp/axiom/mnt/ SYS= SPD=/tmp/axiom LSP=/tmp/axiom/lsp GCLDIR=/tmp/axiom/lsp/gcl-2.6.5 SRC=/tmp/axiom/src INT=/tmp/axiom/int OBJ=/tmp/axiom/obj MNT=/tmp/axiom/mnt ZIPS=/tmp/axiom/zips TMP=/tmp/axiom/obj/tmp SPADBIN=/tmp/axiom/mnt//bin INC=/tmp/axiom/src/include CCLBASE=/tmp/axiom/obj//ccl/ccllisp PART=cprogs SUBPART=everything NOISE=-o /tmp/axiom/obj/tmp/trace GCLVERSION=gcl-2.6.5 TANGLE=/tmp/axiom/mnt//bin/lib/notangle
     10 copying /tmp/axiom/src/scripts to /tmp/axiom/mnt//bin
     1 making a system, PART=cprogs SUBPART=everything
     2 Environment SPAD=/tmp/axiom/mnt/ SYS= SPD=/tmp/axiom LSP=/tmp/axiom/lsp GCLDIR=/tmp/axiom/lsp/gcl-2.6.5 SRC=/tmp/axiom/src INT=/tmp/axiom/int OBJ=/tmp/axiom/obj MNT=/tmp/axiom/mnt ZIPS=/tmp/axiom/zips TMP=/tmp/axiom/obj/tmp SPADBIN=/tmp/axiom/mnt//bin INC=/tmp/axiom/src/include CCLBASE=/tmp/axiom/obj//ccl/ccllisp PART=cprogs SUBPART=everything NOISE=-o /tmp/axiom/obj/tmp/trace GCLVERSION=gcl-2.6.5 TANGLE=/tmp/axiom/mnt//bin/lib/notangle
     /bin/sh: /tmp/axiom/mnt//bin/lib/notangle: No such file or directory
     make: *** [all] Error 127
     [axiom/] :mkdir -p /tmp/axiom/mnt//bin/lib/notangle
     [axiom/] :make
     0 SPAD=/tmp/axiom/mnt/ SYS= SPD=/tmp/axiom LSP=/tmp/axiom/lsp GCLDIR=/tmp/axiom/lsp/gcl-2.6.5 SRC=/tmp/axiom/src INT=/tmp/axiom/int OBJ=/tmp/axiom/obj MNT=/tmp/axiom/mnt ZIPS=/tmp/axiom/zips TMP=/tmp/axiom/obj/tmp SPADBIN=/tmp/axiom/mnt//bin INC=/tmp/axiom/src/include CCLBASE=/tmp/axiom/obj//ccl/ccllisp PART=cprogs SUBPART=everything NOISE=-o /tmp/axiom/obj/tmp/trace GCLVERSION=gcl-2.6.5 TANGLE=/tmp/axiom/mnt//bin/lib/notangle
     10 copying /tmp/axiom/src/scripts to /tmp/axiom/mnt//bin
     1 making a system, PART=cprogs SUBPART=everything
     2 Environment SPAD=/tmp/axiom/mnt/ SYS= SPD=/tmp/axiom LSP=/tmp/axiom/lsp GCLDIR=/tmp/axiom/lsp/gcl-2.6.5 SRC=/tmp/axiom/src INT=/tmp/axiom/int OBJ=/tmp/axiom/obj MNT=/tmp/axiom/mnt ZIPS=/tmp/axiom/zips TMP=/tmp/axiom/obj/tmp SPADBIN=/tmp/axiom/mnt//bin INC=/tmp/axiom/src/include CCLBASE=/tmp/axiom/obj//ccl/ccllisp PART=cprogs SUBPART=everything NOISE=-o /tmp/axiom/obj/tmp/trace GCLVERSION=gcl-2.6.5 TANGLE=/tmp/axiom/mnt//bin/lib/notangle
     /bin/sh: /tmp/axiom/mnt//bin/lib/notangle: is a directory
     make: *** [all] Error 126

 At this point, I gave up, since I don't know what was initially
 intended.

 Any help is very appreciated... :)

\start
Date: Sun, 19 Dec 2004 02:20:19 -0500
From: Tim Daly
To: Vladimir Bondarenko
Subject: Re: Axiom I/O/conversion questions

Vladimir,

>1) How can the user use the batch mode?
>
>   (Say, to have a bat like  AXIOMsys < in.input > in.output
>   where in in.input one can put some AXIOM inputs)

a) create an input file:

echo '2+2' >tst.input
echo '3+3' >>tst.input

b) make sure your shell variables are set:

export AXIOM=/path/axiom/mnt/linux
export PATH=$AXIOM/bin:$PATH

c) pipe a )read command to AXIOMsys and capture the output

echo ')read tst.input' | AXIOMsys >tst.output


>2) How the user can convert an Axiom output to a string?
>                    x
>   Say, instead of  -  it would be great to see x/2
>                    2
>

See: http://lists.gnu.org/archive/html/axiom-developer/2004-06/msg00080.html


>3) How can the user (in a simple way, without much writing)
>   enter a protocol mode (automated registering of the
>   inputs AND outputs)?
>
>   Things like )spool test.txt sends to a file only the output...

See the answer to question 1.

\start
Date: Sun, 19 Dec 2004 08:30:47 +0100 (CET)
From: Meino Christian Cramer
To: Stephen Wilson
Subject: Re: Nightly build

Oh YES!

 thanks, that's it....after all this compiling my head git a little
 confused...my fault...sorry.

 Now make runs ok (at least it looks like that).


 But 
 
		find | grep sman 

 still only finds:

	    ./src/include/sman.H1
 
 So, still no graphical output possible ?!!!

> 
> On Sun, Dec 19, 2004 at 07:40:12AM +0100, Meino Christian Cramer wrote:
> >      [axiom/] :make
> >      0 SPAD=/tmp/axiom/mnt/ SYS= SPD=/tmp/axiom LSP=/tmp/axiom/lsp 
>                               ^^^^
> That your SYS variable is not set implies that the AXIOM variable is
> not set (SYS is derived from AIXOM in the makefile). Perhaps on the
> second invocation of make you were using a new shell? 
> 
> 
> Tim: Perhaps we should add a basic sanity check to the
> makefiles. Somthing like:
> 
> checkenvironment:
> 	-@ if [ "x$(AXIOM)" = "x" ] ; then echo "** no AXIOM variable **"
>          @ [ "x$(AXIOM)" != "x" ]
> 
> 
> Is there a plan in place for geting the configure script to
> automaticly set the AXIOM variable? A minimal goal might be to have
> configure generate a Makefile.include and `include' this everywhere.

\start
Date: Sun, 19 Dec 2004 02:12:09 -0500
From: Stephen Wilson
To: Meino Christian Cramer
Subject: Re: Nightly build

On Sun, Dec 19, 2004 at 07:40:12AM +0100, Meino Christian Cramer wrote:
>      [axiom/] :make
>      0 SPAD=/tmp/axiom/mnt/ SYS= SPD=/tmp/axiom LSP=/tmp/axiom/lsp 
                              ^^^^
That your SYS variable is not set implies that the AXIOM variable is
not set (SYS is derived from AIXOM in the makefile). Perhaps on the
second invocation of make you were using a new shell? 


Tim: Perhaps we should add a basic sanity check to the
makefiles. Somthing like:

checkenvironment:
	-@ if [ "x$(AXIOM)" = "x" ] ; then echo "** no AXIOM variable **"
         @ [ "x$(AXIOM)" != "x" ]


Is there a plan in place for geting the configure script to
automaticly set the AXIOM variable? A minimal goal might be to have
configure generate a Makefile.include and `include' this everywhere.

\start
Date: Sun, 19 Dec 2004 02:37:29 -0500
From: Bill Page
To: Meino Christian Cramer
Subject: RE: Nightly build

On Sunday, December 19, 2004 1:40 AM Meino Christian Cramer
wrote:

> 
>  Nonetheless, a second
> 
> 	 make 
> 
>  afterwards shows that the build was not successful:

First, I do not understand your reason for doing a second make
if the log of the first one is very long and apparently completed
without any error message. Why did you not just run AXIOMsys to
see if it worked? You can do this without first doing a
make install. You can run Axiom from where it was built in
the

  .../mnt/linux/bin

directory. You could also try sman etc.

Perhaps you could send just the first 10 lines of your log file?

The second time you ran make, the AXIOM variable seems to have
been again set incorrectly. The reason I say this is that the first
line of the make output below shows SYS= which means that this
variable is empty. It should be 'linux'. Please compare that to
the first line of you log file.

If you look at the commands in Makefile you will see that it
contains

  SYS=$(notdir $AXIOM)

This command gets the last part of the path after the last /
contained the AXIOM variable. As the ./configure says

    You must set your AXIOM and PATH variables. Type:

    export AXIOM=/tmp/axiom/mnt/linux
    export PATH=$AXIOM/bin:$PATH

This means that YOU must do this. You must type these commands
exactly as you see them before running make. The first line
MUST NOT end in /. If it does, then SYS will be empty and make
will fail.

What I prefer to do is to use cut-and-paste so that I do not
make a mistake.

Third, I think that it is not a good idea to use the /tmp
directory in this way. Linux can freely delete files from
/tmp that it thinks are no longer needed. It is better
to put the axiom source in a sub-directory in your home
directory.

> 
>      [axiom/] :make
>      0 SPAD=/tmp/axiom/mnt/ SYS= SPD=/tmp/axiom 
> ...

You can see that SPAD SYS are not correct in the first
line of the log output above.

> 
>  At this point, I gave up, since I don't know what was initially
>  intended.
> 

I think that you intend to compile the AXIOM system from
the source files. No?

\start
Date: Sun, 19 Dec 2004 02:42:48 -0500
From: Stephen Wilson
To: Tim Daly
Subject: Re: Nightly build

Tim,

I apologize for being short with the proposed change. I was intending
to post a followup with a bit more detail and offer my help in
implementing the changes.

If you are available, perhaps join me on irc at irc.freenode.net,
#axiom-developer, and we can discuss the issues involved?

On Sun, Dec 19, 2004 at 03:12:54AM -0500, root wrote:
> Steve,
> 
> The configure script is due for a rewrite. There are several issues
> coming to the surface that it needs to address.

\start
Date: Sun, 19 Dec 2004 03:12:54 -0500
From: Tim Daly
To: Stephen Wilson
Subject: Re: Nightly build

Steve,

The configure script is due for a rewrite. There are several issues
coming to the surface that it needs to address.

\start
Date: Sun, 19 Dec 2004 02:48:54 -0500
From: Tim Daly
To: Meino Christian Cramer
Subject: Re: Nightly build

Meino,

The problem is your AXIOM variable again. 
Perhaps I should explain it in more detail.

The AXIOM variable is used at 2 different times, during make and
during execution.

===================================================================

First, lets look at the make case:

The build process needs to know 2 things. It needs to know where
the axiom sources are. It needs to know what kind of system to build.
Both of these pieces of information are in the AXIOM shell variable.

Suppose you download axiom into /tmp/axiom and 
you want to build a linux system. 
The AXIOM shell variable would be set to:

export AXIOM=/tmp/axiom/mnt/linux
             ^^^^^^^^^^
             where          ^^^^^
                            what

when the make starts it looks for where it will find the sources and
gets /tmp/axiom. It next looks for what kind of system to build and
gets linux.

Now if we look at the environment variables from your build we see:
SPAD=/tmp/axiom/mnt/ 
SYS= 
SPD=/tmp/axiom 
LSP=/tmp/axiom/lsp 
GCLDIR=/tmp/axiom/lsp/gcl-2.6.5 SRC=/tmp/axiom/src 
INT=/tmp/axiom/int 
OBJ=/tmp/axiom/obj 
MNT=/tmp/axiom/mnt 
ZIPS=/tmp/axiom/zips 
TMP=/tmp/axiom/obj/tmp 
SPADBIN=/tmp/axiom/mnt//bin 
INC=/tmp/axiom/src/include 
CCLBASE=/tmp/axiom/obj//ccl/ccllisp 
PART=cprogs 
SUBPART=everything 
NOISE=-o /tmp/axiom/obj/tmp/trace 
GCLVERSION=gcl-2.6.5 
TANGLE=/tmp/axiom/mnt//bin/lib/notangle

and, ignoring the irrelevant ones:

In the top level makefile we see:

SPD=$(shell pwd)

which means that SPD will be the current working directory. 
It got set to:

SPD=/tmp/axiom

which is correct.

Next in the Makefile we see:

SYS=$(notdir $(AXIOM))

which got set to:

SYS= 

which is NOT correct. It should have been 

SYS=linux

so from this information we can figure out that your AXIOM variable
was set to:

AXIOM=/tmp/axiom

which is wrong. It should have been:

AXIOM=/tmp/axiom/mnt/linux

===================================================================



Second, the AXIOM variable is used at runtime to tell axiom where
it lives. When you build an axiom system everything that is important
and worth keeping lives under the mnt subdirectory. So to "install"
an Axiom system into /usr/local/axiom, for example, you need only
copy the mnt subdirectory thus:

mkdir /usr/local/axiom
cd /tmp/axiom
cp -pr mnt /usr/local/axiom

Now that we've done that we can remove the whole axiom directory
from /tmp because it is no longer needed. 

However, in order to run Axiom we need 2 pieces of information.
First, we have to tell Axiom where it now lives and second, we
have to put the commands on our path so they can be found. So,
since we installed axiom into /usr/local/axiom we need:

export AXIOM=/usr/local/axiom/mnt/linux
export PATH=$AXIOM/bin:$PATH

The AXIOM shell variable tells axiom where to find itself.
The PATH shell variable tells linux where to find executables.

Hope this helps.

\start
Date: Sun, 19 Dec 2004 03:27:38 -0500
From: Tim Daly
To: Meino Christian Cramer
Subject: Re: Nightly build

Meino,

If you got your sources from savannah via CVS then those sources
will not properly build sman. The problem is the line in the
src/Makefile.pamphlet file. In your version it reads:

DIRS=bootdir interpdir sharedir algebradir inputdir etcdir clefdir docdir \
     graphdir smandir

It should read:

DIRS=bootdir interpdir sharedir algebradir etcdir clefdir docdir \
     graphdir smandir inputdir 

This will be fixed in the next savannah release which is scheduled 
for the first of January.

If you want you can correct this line and try rebuilding the system.

\start
Date: Sun, 19 Dec 2004 03:31:29 -0500
From: Tim Daly
To: Meino Christian Cramer
Subject: Re: Nightly build

The AXIOM variable is used at 2 different times, during make and
during execution.

===================================================================

First, lets look at the make case:

The build process needs to know 2 things. It needs to know where
the axiom sources are. It needs to know what kind of system to build.
Both of these pieces of information are in the AXIOM shell variable.

Suppose you download axiom into /tmp/axiom and 
you want to build a linux system. 
The AXIOM shell variable would be set to:

export AXIOM=/tmp/axiom/mnt/linux
             ^^^^^^^^^^
             where          ^^^^^
                            what

when the make starts it looks for where it will find the sources and
gets /tmp/axiom. It next looks for what kind of system to build and
gets linux.

Now if we look at the environment variables from your build we see:
SPAD=/tmp/axiom/mnt/ 
SYS= 
SPD=/tmp/axiom 
LSP=/tmp/axiom/lsp 
GCLDIR=/tmp/axiom/lsp/gcl-2.6.5 SRC=/tmp/axiom/src 
INT=/tmp/axiom/int 
OBJ=/tmp/axiom/obj 
MNT=/tmp/axiom/mnt 
ZIPS=/tmp/axiom/zips 
TMP=/tmp/axiom/obj/tmp 
SPADBIN=/tmp/axiom/mnt//bin 
INC=/tmp/axiom/src/include 
CCLBASE=/tmp/axiom/obj//ccl/ccllisp 
PART=cprogs 
SUBPART=everything 
NOISE=-o /tmp/axiom/obj/tmp/trace 
GCLVERSION=gcl-2.6.5 
TANGLE=/tmp/axiom/mnt//bin/lib/notangle

and, ignoring the irrelevant ones:

In the top level makefile we see:

SPD=$(shell pwd)

which means that SPD will be the current working directory. 
It got set to:

SPD=/tmp/axiom

which is correct.

Next in the Makefile we see:

SYS=$(notdir $(AXIOM))

which got set to:

SYS= 

which is NOT correct. It should have been 

SYS=linux

so from this information we can figure out that your AXIOM variable
was set to:

AXIOM=/tmp/axiom

which is wrong. It should have been:

AXIOM=/tmp/axiom/mnt/linux

===================================================================

Second, the AXIOM variable is used at runtime to tell axiom where
it lives. When you build an axiom system everything that is important
and worth keeping lives under the mnt subdirectory. So to "install"
an Axiom system into /usr/local/axiom, for example, you need only
copy the mnt subdirectory thus:

mkdir /usr/local/axiom
cd /tmp/axiom
cp -pr mnt /usr/local/axiom

Now that we've done that we can remove the whole axiom directory
from /tmp because it is no longer needed. 

However, in order to run Axiom we need 2 pieces of information.
First, we have to tell Axiom where it now lives and second, we
have to put the commands on our path so they can be found. So,
since we installed axiom into /usr/local/axiom we need:

export AXIOM=/usr/local/axiom/mnt/linux
export PATH=$AXIOM/bin:$PATH

The AXIOM shell variable tells axiom where to find itself.
The PATH shell variable tells linux where to find executables.

\start
Date: Sun, 19 Dec 2004 09:05:59 +0100 (CET)
From: Meino Christian Cramer
To: Bill Page
Subject: Re: Nightly build

Hi Bill, Hi List ;)

 yes, while fireing up the second make AXIOM was not set....my fault,
 sorry... my head got confused a little while all this compiling.

 Normally I do not "make" a second time, but before searching through 
 a 15763936 bytes long MAKELOG for the reason why sman do not build
 (and possibly not finding it...) I restart make and (normally) it
 will fail exactly at that point.

 After setting AXIOM again, the second make runs "successfully" ( ==
 without complaining) but sman still is not built.

 I can start AXIOMsys. A "draw" command put nothing else than a lot of
 text on the terminal (sman is missing).

 Yes I downloaded axio.20041115.tgz (source) from savannah to build
 Axiom.

 I had setup my own Linux (no distribution used, Linux was build from
 source by hand from ground up). At least for my system I can say,
 that there is no cron job or anything else except myself, who
 deletetes anything from /tmp.

 Regards,
 Meino


> On Sunday, December 19, 2004 1:40 AM Meino Christian Cramer
> wrote:
> 
> > 
> >  Nonetheless, a second
> > 
> > 	 make 
> > 
> >  afterwards shows that the build was not successful:
> 
> First, I do not understand your reason for doing a second make
> if the log of the first one is very long and apparently completed
> without any error message. Why did you not just run AXIOMsys to
> see if it worked? You can do this without first doing a
> make install. You can run Axiom from where it was built in
> the
> 
>   .../mnt/linux/bin
> 
> directory. You could also try sman etc.
> 
> Perhaps you could send just the first 10 lines of your log file?
> 
> The second time you ran make, the AXIOM variable seems to have
> been again set incorrectly. The reason I say this is that the first
> line of the make output below shows SYS= which means that this
> variable is empty. It should be 'linux'. Please compare that to
> the first line of you log file.
> 
> If you look at the commands in Makefile you will see that it
> contains
> 
>   SYS=$(notdir $AXIOM)
> 
> This command gets the last part of the path after the last /
> contained the AXIOM variable. As the ./configure says
> 
>     You must set your AXIOM and PATH variables. Type:
> 
>     export AXIOM=/tmp/axiom/mnt/linux
>     export PATH=$AXIOM/bin:$PATH
> 
> This means that YOU must do this. You must type these commands
> exactly as you see them before running make. The first line
> MUST NOT end in /. If it does, then SYS will be empty and make
> will fail.
> 
> What I prefer to do is to use cut-and-paste so that I do not
> make a mistake.
> 
> Third, I think that it is not a good idea to use the /tmp
> directory in this way. Linux can freely delete files from
> /tmp that it thinks are no longer needed. It is better
> to put the axiom source in a sub-directory in your home
> directory.
> 
> > 
> >      [axiom/] :make
> >      0 SPAD=/tmp/axiom/mnt/ SYS= SPD=/tmp/axiom 
> > ...
> 
> You can see that SPAD SYS are not correct in the first
> line of the log output above.
> 
> > 
> >  At this point, I gave up, since I don't know what was initially
> >  intended.
> > 
> 
> I think that you intend to compile the AXIOM system from
> the source files. No?

\start
Date: Sun, 19 Dec 2004 16:40:41 +0100
From: Michel Lavaud
To: Tim Daly, Bill Page
Subject: Re: windows/linux coherency

Hello Tim, Bill and everybody,

I would like to complete the new version of Rosetta CD for Windows by addi=
ng 
Axiom + WinTeXmacs, executable directly from the CD. In order to do it in =
the 
best conditions, I think that it would be desirable, as suggested by Tim, =
to provide 
windows/linux coherency. For this I would propose the following:

1 - READ-ONLY DIRECTORIES (on cd-rom):

Programs\alg\Axiom\v3.0
                                        \axiom.ini
                                        \bin\axiomsys.exe
                                        \(other files of axiom binary dist=
rib)
Programs\edit\TeXmacs\v1.044
                                                  \ plugins\Axiom\bin\tm_a=
xiom.exe
                                                  \ (other files of WinTeX=
macs binary distrib)

2 - INITIALIZATION FILES:

A - Defaults :

a - axiom.ini in Axiom main directory on cd-rom.
b - If axiom.ini is present in user's directory, it overrides default axio=
m.ini. More 
precisely:
- On Linux, if $HOME\axiom.ini is present, it overrides default axiom.ini
- On Windows, if  USERPROFILE\axiom.ini is present, it overrides default 
axiom.ini; if not present, if ALLUSERSPROFILE\axiom.ini is present, it ove=
rrides 
default axiom.ini

B - Customized:
If axiomsys is invoked with the -i switch (or --init, or whatever switch b=
est suited) :

axiomsys -i My_personal_directory\my_personal_initialization_file.ini

where the dir name and file name are any legal name for the OS, then the f=
ile 
my_presonal_initialization_file.ini overrides all other init files.

Right now, axiom.ini would contain :
- anything that would seem important for Axiom initialization,
- a switch allowing / preventing Bill's tm_axiom to use linebreaker.c. Thi=
s would be 
desirable to provide flexibility to the user, in case it would happen that=
 either 
TeXmacs or texbreaker.c can be broken from time to time. Right now, the sw=
itch 
would be to disallow the use of texbreaker

3 - TM_AXIOM

Introduce in Bill's tm_axiom.c the possibility to select the correct ini f=
ile for Axiom 
as defined above, and to read the value of the texbreaker switch.

\start
Date: Sun, 19 Dec 2004 17:01:41 +0100 (CET)
From: Meino Christian Cramer
To: list
Subject: Building sman from Axiom-20041115 source

Hi,

 how can I build the sman binary from source ?
 The described way does not build it.

 Thank you very much in advance!

 Regards,
 Meino

\start
Date: Sun, 19 Dec 2004 12:48:26 -0500
From: Bill Page
To: Tim Daly
Subject: RE: Minor bugs

Tim,

I have been plugging away trying to apply some of the
outstanding patches recorded on Savannah to my local
copy of axiom--main--1. After a few miss-steps I think
I now almost understand the procedure that you sketched
below. But I am still confused about how to do the
regression testing part. Is this described somewhere?

As I understand it the idea is to maintain a set of hand
verified result files (*.output) and to compare the output
of selected (*.input) files to their corresponding (*.output)
file. If the comparison fails then a error is raised. (How?
Where?) How does this relate to the "Daly bug" hack that
you have also described.

Anyway, I am looking for a quick recipe and an example.

So far this what I have done is:

1) Applied the negative float rounding/truncation patch from
Savannah to the floats.spad.pamphlet file.

2) Created a simple input file called
     negfloats.input.pamphlet
   in the src/input directory that executes some Axiom
   commands illustrating the bugs

3) Modified the file src/input/Makefile.pamphlet to
   include the following new subsection and stanzas

\subsection{negfloats}
<<negfloats>>=
${OUT}/negfloats.input: ${MID}/negfloats.input
        @ echo 426 making ${OUT}/negfloats.input from =
${MID}/negfloats.input
        @ cp ${MID}/negfloats.input ${OUT}/ngefloats.input

${MID}/negfloats.input: ${IN}/negfloats.input.pamphlet
        @ echo 427 making ${MID}/negfloats.input from
${IN}/negfloats.input.pamphlet
        @(cd ${MID} ; \
          ${TANGLE} ${IN}/negfloats.input.pamphlet >negfloats.input )

4) Made a new entry for negfloats in

FILES= ${OUT}/algaggr.input  ${OUT}/algbrbf.input    =
${OUT}/algfacob.input \
       ...
       ${OUT}/ndftip.input   ${OUT}/newlodo.input \
       ${OUT}/negfloats.input \
       ...

5) Added a reference to <<negfloats>> in <<*>>=

<<*>>=
...
<<NDFtip>>
<<negfloats>>
...

6) Did axiom 'make' to compile the revised floats domain and
   (hopefully) run the negfloats.input test file.

   ./configure
   (set AXIOM and PATH manually ... yuck :)
   make

-------

Now what about checking the results of negfloats.input?
Where do I look? Provided I like the output, how do I make
it part of the regression suite? How can I easily tell if the
new .input file "passes"?

If you could spend a bit of time completing and correcting this
recipe for me, I will put it on a web page somewhere for easy
reference.

<soapbox>
BTW, all of this stuff seems so excrutiatingly low-level to
me and SO EASY to break one way or another

 <b>like most of the Axiom build process --  !!</b>

<sigh />

I am becoming used to the idea of automated tools that make
this "messing around with picky details" less unnecessary.
Documentation is of course is still important but when it is
at such a low level and burdened with many details, just the
"on ramp" to the learning curve becomes very high even if the
process itself is quite simple.

I find I spend an enormous amount of time just correctly
stupid simple silly mistakes like the use of a space some
place in a Makefile rather than a tab. Using "stupid tools"
always makes me feel stupid...

Since a lot of the "pickiness" is just in the use of the
noweb/pamphlet low-level literature programming stuff, we
could for example (if we had infinite time and resources :),
invest in a more high-level literate programming tool such
as Leo.

  http://leo.sourceforge.net/
  http://sourceforge.net/projects/leo/
  http://webpages.charter.net/edreamleo/front.html
  http://sourceforge.net/forum/forum.php?forum_id=408847

  The highlights of Leo 4.2: 
  - @thin trees make Leo much more friendly to cvs. 
  - Leo's data structures have been reorganized to make outline
    operations significantly faster. All old scripts still work. 
  - @test and @script nodes convert scripts to unit tests
    automatically. You can convert scripts to unit tests in
    seconds! 
  - A faster and more robust spell checker plugin. (requires
    Python 2.3) 
  - Leo is now much more friendly to using spaces instead of
    tabs. 
  - The Execute Script command reports erroneous lines more
    clearly. 
  - Leo draws large outlines more quickly using less memory. 
  - Dozens of other improvements. 

Leo provides some very nice project outlining tools including
folding etc., that can considerably reduce the apparent
complexity. And it serves (more or less) like an integrated
development environment for literate programming.

At the very least I think we need to spend more time
structuring the whole build process in a simpler way (i.e.
make more use of the advanced features of gnu make). I think
the whole thing from start to finish could be MUCH simpler
and the Makefiles much smaller. But then, what we have now
works (at least for those who designed it ... :) so of course
the incentive is not so great to change it. Still it seems
to me to be a significant barrier to greater participation
by other developers.
</soapbox>

Thanks.

Regards,
Bill Page.

----------

Here is my new negfloats.input.pamphlet file:

\documentclass{article}
\usepackage{../../src/scripts/tex/axiom}
\begin{document}
\title{\$SPAD/src/input float.input}
\author{The Axiom Team}
\maketitle
\begin{abstract}
\end{abstract}
\eject
\tableofcontents
\eject
\section{License}
<<license>>=
--Copyright The Numerical Algorithms Group Limited 1991.
@
<<*>>=
<<license>>

-- check results of rounding, truncation etc. on negative floats
)cl all
truncate(-9.6571)
fractionPart(-3.432)
round(-9.6571)
@
\eject
\begin{thebibliography}{99}
\bibitem{1} nothing
\end{thebibliography}
\end{document}


> -----Original Message-----
> 
> Bill,
> 
> First make a .input file that contains these test cases
> and add it to the src/input subdir and Makefile.pamhlet.
> 
> Yes, please apply them to axiom--main and axiom--windows.
> After applying the patches we need to do a complete rebuild
> from the tla sources (be sure you download them fresh from
> the archive as I've been burned in the past by assuming that
> my copy was clean).
> 
> Let me know 
>  (a) when the patches are applied (i'll also test them here)
>  (b) when the rebuilds are cleanly compiled and the .input
>      passes
> 
> at which point we can tag the axiom--main build and push it
> to savannah.
> 

\start
Date: Sun, 19 Dec 2004 15:17:28 -0500
From: Tim Daly
To: Bill Page
Subject: Re: Minor bugs

Bill,

>Now what about checking the results of negfloats.input?
>Where do I look? Provided I like the output, how do I make
>it part of the regression suite? How can I easily tell if the
>new .input file "passes"?
>
>If you could spend a bit of time completing and correcting this
>recipe for me, I will put it on a web page somewhere for easy
>reference.

The regression test process has not yet been recovered.
I'll document it when I do recover it. Like everything
else it "should" be working now but it all takes time.
You've followed the pattern so your input file will be
picked up in the regression process when it works.

The regression testing is done by hand for the moment.


><soapbox>
>BTW, all of this stuff seems so excrutiatingly low-level to
>me and SO EASY to break one way or another
>
> <b>like most of the Axiom build process --  !!</b>
>
><sigh />

Yes, but trivial to fix because it's just a missing character or two.
The reliability of a process is a ratio of the mean-time-to-failure
and the mean-time-to-repair. The build process is easily broken but
trivial to fix, thus higly reliable. Note that I've included explicit
debugging information (those pesky unique echo line numbers) so the
location of a mistake is painfully obvious and so is the fix.

>I am becoming used to the idea of automated tools that make
>this "messing around with picky details" less unnecessary.
>Documentation is of course is still important but when it is
>at such a low level and burdened with many details, just the
>"on ramp" to the learning curve becomes very high even if the
>process itself is quite simple.

If you have to work "thru a tool" and there is a bug in the tool you
can spend hours (a) deciding it's a tool bug and (b) fixing the tool.
Just look at the struggles of line-breaking and texmacs.

Axiom is a finely tuned, high performance, very large machine.
I'm working to include every bit of knowledge about the build
process into the makefiles so (a) it works, (b) it's automated
and (c) it's documented.

The makefiles are not hard as evidenced by the fact that i gave you 
NO instructions on how to make the changes and you did everything
correctly. The makefiles are tedious, I'll give you that.

>I find I spend an enormous amount of time just correctly
>stupid simple silly mistakes like the use of a space some
>place in a Makefile rather than a tab. Using "stupid tools"
>always makes me feel stupid...
>
>Since a lot of the "pickiness" is just in the use of the
>noweb/pamphlet low-level literature programming stuff, we
>could for example (if we had infinite time and resources :),
>invest in a more high-level literate programming tool such
>as Leo.
>

[.....SNIP.....]

I downloaded and used Leo when I started this process but
Leo does not really understand the pamphlet structure and
Leo isn't emacs. Editors are like wives; you only get one,
you learn its quirks, you learn to love its features and
flaws, it is very costly to switch, your new editor 
hates it when you use expressions from the previous editor,
and you can get in deep trouble asking the new editor to
do what the old editor used to do. I'm married to emacs.

Leo was not effective for me. If you can use it without
breaking the pamphlet structure it should be transparent
to everyone else.

In the fullness of time I'm hoping that your mathaction
site (and the doyen local version of it) understands the
pamphlet file structure and we can use it directly to 
maintain the sources.

>At the very least I think we need to spend more time
>structuring the whole build process in a simpler way (i.e.
>make more use of the advanced features of gnu make). I think
>the whole thing from start to finish could be MUCH simpler
>and the Makefiles much smaller. But then, what we have now
>works (at least for those who designed it ... :) so of course
>the incentive is not so great to change it. Still it seems
>to me to be a significant barrier to greater participation
>by other developers.
></soapbox>

Ummm, your definition of 'simpler' is different from mine.
Using "advanced" features in gmake is NOT making it 'simpler'.
Up until the introduction of $(shell..) the makefiles were
"vanilla" and did not depend on any version of make. The
size of the makefile is not a measure of complexity as you'll
discover that there is a simple, repetitive pattern used in every
makefile.

My other open source project (magnus) used a makefile scheme
that used every feature of gnu-make. In fact, it used the gcc
compiler with the -MM switch to automatically generate the
stanzas and dynamically load and evaluate the make dependencies.
It was 'simple' in some sense but it took several days to decode
how it worked because everything about the makefile was dynamic.
unless you understood the gcc -MM switch, dynamic stanza loading,
filename completion rules, and were a gnu-make wizard it was 
unreadable and unmaintainable. 

My makefiles are 'dumb' by design. Keep it dirt simple.  For every
file there is a stanza.  The makefile structure follows the directory
structure.  You don't even need to guess which makefile to modify as
the makefile is always in the current directory.

Each directory has a makefile which has 2 responsibilities:
(a) 'make' all subdirectories and (b) build its piece of
the final build. it's a tree rooted at the top level.

And within each makefile there is a stanza for each final file in the
build that gets made. No implicit rules are used.  Every stanza is
uniquely tagged by number and a comment of intention.  The makefiles
follow the "pull" model. that is,

  final file in mnt   DEPENDS-ON file in obj    (the sys dep files)

  file in obj         DEPENDS-ON file in int    (the sys indep files)

  file in int         DEPENDS-ON pamphlet file in src

  doc file in mnt/doc DEPENDS-ON pamphlet file in src

I've previously explained the reasoning behind the src/int/obj/mnt
structure. make (and gmake and configure) are based on the C 
programmers world-view. They are not really capable of cleanly
handling cross-directory dependencies although they can be
coerced into it. 

In the fullness of time I'd like the whole system to be in
common lisp. At that point i believe we should rewrite the
build machinery so it uses 'asdf' or 'mk:defsystem' which
follow the lisp worldview.

\start
Date: Sun, 19 Dec 2004 15:15:39 -0500
From: Bill Page
To: Tim Daly
Subject: RE: Minor bugs

Tim,

On Sunday, December 19, 2004 3:17 PM you wrote:
> 
> The regression test process has not yet been recovered.
> I'll document it when I do recover it. Like everything
> else it "should" be working now but it all takes time.
> You've followed the pattern so your input file will be
> picked up in the regression process when it works.
> 
> The regression testing is done by hand for the moment.
>

But there is a lot of regression stuff in the

 src/input/Makefile.pamphlet

that is trying to run every time I do a build ...

> 
> ><soapbox>
> >BTW, all of this stuff seems so excruciatingly low-level to
> >me and SO EASY to break one way or another
> >
> > <b>like most of the Axiom build process --  !!</b>
> >
> ><sigh />
> 
> Yes, but trivial to fix because it's just a missing character or two.
> The reliability of a process is a ratio of the mean-time-to-failure
> and the mean-time-to-repair.

For me, mean-time-to-repair is VERY HIGH. It takes the system
on which I am running these builds about 1 hour to get around
to pointing out to me that I used a space instead of a comma.
I have repeated this process (as time permitted) about 10
times over the last two days, each time repairing just one
little thing that I had not idea I had broken.

> The build process is easily broken but trivial to fix,
> thus highly reliable.

After 2+ years of doing this stuff with Axiom I STRONGLY
disagree.

> Note that I've included explicit debugging information
> (those pesky unique echo line numbers) so the location of
> a mistake is painfully obvious and so is the fix.

Yes, useful if it even gets to that stage.

> 
> >I am becoming used to the idea of automated tools that make
> >this "messing around with picky details" less unnecessary.
> >Documentation is of course is still important but when it is
> >at such a low level and burdened with many details, just the
> >"on ramp" to the learning curve becomes very high even if the
> >process itself is quite simple.
> 
> If you have to work "thru a tool" and there is a bug in the
> tool you can spend hours (a) deciding it's a tool bug and
> (b) fixing the tool. Just look at the struggles of line-breaking
> and texmacs.

I don't understand this argument. We do not build houses any
more with sticks and rock hammers ...

> 
> Axiom is a finely tuned, high performance, very large machine.
> I'm working to include every bit of knowledge about the build
> process into the makefiles so (a) it works, (b) it's automated
> and (c) it's documented.
> 

Yes but it is so huge that it is usually like looking at an
elephant's tail and deciding that it is a rope ... etc. you
know that story.

> The makefiles are not hard as evidenced by the fact that
> i gave you NO instructions on how to make the changes and
> you did everything correctly.

I don't know anyone else on this project that is doing
this... :(

> The makefiles are tedious, I'll give you that.
> 
> >I find I spend an enormous amount of time just correctly
> >stupid simple silly mistakes like the use of a space some
> >place in a Makefile rather than a tab. Using "stupid tools"
> >always makes me feel stupid...
> >
> >Since a lot of the "pickiness" is just in the use of the
> >noweb/pamphlet low-level literature programming stuff, we
> >could for example (if we had infinite time and resources :),
> >invest in a more high-level literate programming tool such
> >as Leo.
> >
> 
> [.....SNIP.....]
> 
> I downloaded and used Leo when I started this process but
> Leo does not really understand the pamphlet structure and
> Leo isn't emacs.

Leo has a better approach than "pamphlets".

> Editors are like wives; you only get one,
> you learn its quirks, you learn to love its features and
> flaws, it is very costly to switch, your new editor 
> hates it when you use expressions from the previous editor,
> and you can get in deep trouble asking the new editor to
> do what the old editor used to do. I'm married to emacs.

That is a bad state to be in. As far as I am concerned
editors are "a dime a dozen" I probably use half a dozen
different editors all in the same day. I am more particular
about my relations with other people, however ... :)

> 
> Leo was not effective for me. If you can use it without
> breaking the pamphlet structure it should be transparent
> to everyone else.
> 

No, the pamphlet structure is too particular to Axiom.
But it is possible to do the same thing with Leo, only
better.

> In the fullness of time I'm hoping that your mathaction
> site (and the doyen local version of it) understands the
> pamphlet file structure and we can use it directly to 
> maintain the sources.
>

Perhaps, I like the idea of a collaboration project
environment mediated by something like MathAction, but
I think that is quite a long way off. In the mean time
Leo has a lot of useful features that one can get just
by downloading it to your desktop.
 
> >At the very least I think we need to spend more time
> >structuring the whole build process in a simpler way (i.e.
> >make more use of the advanced features of gnu make). I think
> >the whole thing from start to finish could be MUCH simpler
> >and the Makefiles much smaller. But then, what we have now
> >works (at least for those who designed it ... :) so of course
> >the incentive is not so great to change it. Still it seems
> >to me to be a significant barrier to greater participation
> >by other developers.
> ></soapbox>
> 
> Ummm, your definition of 'simpler' is different from mine.
> Using "advanced" features in gmake is NOT making it 'simpler'.

For the most part the "advanced" features of gmake are
quite trivial to learn - no more difficult than programming
in lisp. And if by learning one or two things it is possible
to reduce 3000 lines of makefile stanzas to just three lines
that it seems to me that the gain is enormous. Yes it takes
be a little longer to understand exactly what those 3 lines
are doing, but when I do it is equivalent to having read
and understood 3000 lines of other approach.

> Up until the introduction of $(shell..) the makefiles were
> "vanilla" and did not depend on any version of make. The
> size of the makefile is not a measure of complexity as you'll
> discover that there is a simple, repetitive pattern used in
> every makefile.

A simple repetitive pattern is a sure sign that you
are coding at too low a level.

> 
> My other open source project (magnus) used a makefile scheme
> that used every feature of gnu-make. In fact, it used the gcc
> compiler with the -MM switch to automatically generate the
> stanzas and dynamically load and evaluate the make dependencies.
> It was 'simple' in some sense but it took several days to decode
> how it worked because everything about the makefile was dynamic.
> unless you understood the gcc -MM switch, dynamic stanza loading,
> filename completion rules, and were a gnu-make wizard it was 
> unreadable and unmaintainable. 

I would VERY MUCH prefer that this approach be used with
AXIOM. Compared to the time it might take to become a "wizard"
working repeatedly with the low-level "keep it simple" approach
eats up far more of my time.

> 
> My makefiles are 'dumb' by design. Keep it dirt simple.  For
> every file there is a stanza.  The makefile structure follows
> the directory structure.  You don't even need to guess which
> makefile to modify as the makefile is always in the current
> directory.
> 
> Each directory has a makefile which has 2 responsibilities:
> (a) 'make' all subdirectories and (b) build its piece of
> the final build. it's a tree rooted at the top level.
>

That is a commonly used design but it has been strongly
criticized as fundamentally defeating the purpose for which
make was designed.
 
> And within each makefile there is a stanza for each final
> file in the build that gets made. No implicit rules are used.
> Every stanza is uniquely tagged by number and a comment of
> intention.  The makefiles follow the "pull" model. that is,
> 
>   final file in mnt   DEPENDS-ON file in obj    (the sys dep files)
> 
>   file in obj         DEPENDS-ON file in int    (the sys indep files)
> 
>   file in int         DEPENDS-ON pamphlet file in src
> 
>   doc file in mnt/doc DEPENDS-ON pamphlet file in src
> 
> I've previously explained the reasoning behind the src/int/obj/mnt
> structure. make (and gmake and configure) are based on the C 
> programmers world-view. They are not really capable of cleanly
> handling cross-directory dependencies although they can be
> coerced into it. 
>

Really I can only say that this just looks like a big mess
every time I leave it for a month and do something else and
later come back to it.
 
> In the fullness of time I'd like the whole system to be in
> common lisp. At that point i believe we should rewrite the
> build machinery so it uses 'asdf' or 'mk:defsystem' which
> follow the lisp worldview.
> 

Yes, we do certainly have different "world views"!!

--------------

Tim, please excuse the tone of this reply. I know that
it sounds rather adversarial. But keep in mind that I am
writing this while waiting for the 11th repeat of make
to come back and tell me I left out one more comma or
another. ...

\start
Date: Sun, 19 Dec 2004 17:18:30 -0500
From: Tim Daly
To: Bill Page
Subject: Re: Minor bugs

Bill,

>Tim, please excuse the tone of this reply. I know that
>it sounds rather adversarial. But keep in mind that I am
>writing this while waiting for the 11th repeat of make
>to come back and tell me I left out one more comma or
>another. ...

No problem. I understand the frustrations of making Axiom.
Remember, Axiom used to take 3 weeks to build so life is now sweet.
You DO printout, desk-check, and hand-execute your changes
before you run it, right? (and where is your flowchart?)


>But there is a lot of regression stuff in the
>
> src/input/Makefile.pamphlet
>
>that is trying to run every time I do a build ...

Actually, that's only the input to the regression mechanism
which is yet to be recovered.

> For me, mean-time-to-repair is VERY HIGH. 

sigh. we differ on this. but then i wrote it so ....

[.....snip....]

>For the most part the "advanced" features of gmake are
>quite trivial to learn - no more difficult than programming
>in lisp. And if by learning one or two things it is possible
>to reduce 3000 lines of makefile stanzas to just three lines
>that it seems to me that the gain is enormous. Yes it takes
>be a little longer to understand exactly what those 3 lines
>are doing, but when I do it is equivalent to having read
>and understood 3000 lines of other approach.

Clearly this is a question of taste. It appears that you view
'make' as a programming language and I view 'make' as a list
of commands. I fear the "slippery slope" of using gmake features.

It's been my experience that any project that starts down that
path eventually heads toward ever-more-clever makefiles. Witness
the patch that we do to GCL. Neither you nor I know what the
sed script does that mangles lists of filenames. Programmers
simply cannot resist features.

Makefiles that use "advanced features" (like if blocks, gcl -MM,
includes, sed-built file lists, dynamic stanza loading, etc) quickly
change 'make' into yet-another-programming-language.

I can read (and program) complex makefiles. I just don't want to write
a program in a language consisting mostly of line-noise. The
rule-based programming feature of make (a DEPENDS-ON b) is useful for
minimizing work redone but the rest of the features are truly bad
language design. This might as well be APL code.

I find these examples (taken from real makefiles at random) hard to read:

=======================================================================
OOBJS:=$(shell j=$$(ar t $(ODIR)/gcllib.a) ; for i in $$(ls -1 $(ODIR)/*.o) ; do if ! echo $$j |grep $$(basename $$i) >/dev/null 2>&1 ; then echo $$i ; fi ; done)

=======================================================================
ifneq ($(NIFLAGS),)
new_init.o: new_init.c $(DECL)
	$(CC) -c $(NIFLAGS) $(DEFS) $< -o $@
endif


=======================================================================
	cd $(@D) && rm -f *.o rt/*.o && echo '(load "gclload.lsp")' | ../$< >$(@F) 2>&1 & j=$$! ; \

=======================================================================
	GCLDIR=`echo $(GCLDIR) | sed -e 'sX^/cygdrive/\([a-z]\)X\1!Xg' -e 'sX^//\([a-z]\)X\1!Xg'` ; \

=======================================================================
	$(CC) -DNO_DEFUN $(CFLAGS) $(DEFS) -E $*.c | sed -e 's:\"[ ]*):\"):g' | ./grab_defs > $*.ini
	nm $< | awk '/ U / {a=$$2;if (k) sub("^_","",a);\
                            b=a;gsub("_","",b);\
                            if (match(j,b)) printf("MY_PLT(%s)\n",a)}' \
			j="$$(awk '/main/ {i=1;next} {if (!i) next} \
				/^ *[a-zA-Z_]*\(/ {sub("\\(.*$$","",$$1);print $$1}' plttest.c)" \
			k=$(LEADING_UNDERSCORE) |\
			sort | \
			awk '{A[++k]=$$0} END {for (i=1;i<=k;i++) \
				printf("%s%s\n",A[i],i==k ? "" : ",");}' >$@

=======================================================================

Makefiles, for me, are just a record of the correct sequence of
lists of commands needed to build a system. Isn't this simple?

I agree that implicit stanzas shorten the makefiles and would reduce
the clutter and size of the makefile. Provided the implicit stanza
was generic enough to work in both make and gmake it might be ok.
They "break" two design points: stanza-per-file and unique echo numbering.
However, I'm more willing now to reconsider implicit stanzas if only
to concede to a meet-in-the-middle compromise.

\start
Date: Sun, 19 Dec 2004 23:12:19 -0500
From: Tim Daly
To: list
Subject: axiom--main--1--patch-17

--patch-16 added a few items to the FAQ that have come up recently
--patch-17 adds a new configure shell script

  This shell script uses uname -s to try to decode the system name.
  It checks the AXIOM variable to see if it is set properly.
  It suggests proper settings for the AXIOM variable if it looks wrong.
  It suggests command line arguments to 'make' if gawk is missing.

\start
Date: Sun, 19 Dec 2004 22:36:18 -0500
From: Bill Page
To: Tim Daly
Subject: RE: Minor bugs

Tim,

Shortly after my last message I did (finally) manage to
get a clean build. But I can't help but feel like there
must still be some "loose wires" in the
src/input/Makefile.pamphlet because I kept having to
repair things that I never changed. For example make
suddenly started complaining about a file named
XPOLY.output (no rule for target), it occurs in the list
named OUTS but sure enough I can't find any stanza and I
certainly didn't add anything with that name. There are
other stanzas for xpoly.input etc., but nothing with
uppercase names. I just commented it out and the build
worked. Weird.

On Sunday, December 19, 2004 5:19 PM you wrote:

> ...
> Remember, Axiom used to take 3 weeks to build so life
> is now sweet.

Ah, the pleasures of talking with the old-timers ... <grin>

> You DO printout, desk-check, and hand-execute your changes
> before you run it, right? (and where is your flowchart?)
> 

Why, yes. Of course. (flow what? oh, you mean like those
complex pictures they draw in UML, I guess ... I thought
nobody did that until Rational invented it back in the
90's ;)

Actually, I started programming in 1970 so I do have
some grey hair and a few stories to tell myself. The
trouble is, machines are enormously faster - that's
nice, but people are just as slow as ever.

> 
> >But there is a lot of regression stuff in the
> >
> > src/input/Makefile.pamphlet
> >
> >that is trying to run every time I do a build ...
> 
> Actually, that's only the input to the regression
> mechanism which is yet to be recovered.

Then what exactly is "Daly bug"?

> 
> > For me, mean-time-to-repair is VERY HIGH. 
> 
> sigh. we differ on this. but then i wrote it so ....
> 
> ...
> 
> It appears that you view 'make' as a programming language
> and I view 'make' as a list of commands. I fear the
> "slippery slope" of using gmake features.

No, I do not think 'make' is either of these. When used
properly a Makefile is just an abstract specification of
the dependency relationships between objects mapped to
associated concrete actions that implement those dependencies.
There should be no procedural programming in a make file at
all. The goal of 'make' is to allow the programmer to work
at a higher level of abstraction, knowing that for each
change to the objects she makes, 'make' will convert her
specification into a minimum set of actions to take on all
the related objects that are necessary in order to satisfy
the dependencies.

Actually this very likely has a nice tidy formal description
as an adjoint functor on some category or other, I am sure.
But that is another story.

> 
> It's been my experience that any project that starts down
> that path eventually heads toward ever-more-clever makefiles.
> Witness the patch that we do to GCL. Neither you nor I know
> what the sed script does that mangles lists of filenames.
> Programmers simply cannot resist features.

This has nothing to do with 'make' as such. But yes, on first
examination I do find the GCL makefiles largely unintelligible.
Certainly in part this is because of the use of "clever hacks"
such as the one you mention. But in most cases I think you
will probably discover that such obscure coding is forced
on the programmer by a number of other circumstances some
of which are beyond their direct control. Usually this has
a lot to do with the lack of standards. I think this problem
is gradually, with the rise of the Internet and open source
development we are at last we are learning to appreciate the
value of standards.

> 
> Makefiles that use "advanced features" (like if blocks,
> gcl -MM,includes, sed-built file lists, dynamic stanza
> loading, etc) quickly change 'make' into yet-another-
> programming-language.

Again, when used properly these things should be just short-
cuts for specifying a large number of complex dependencies
in a simple manner. Often this takes for form of a kind of
"2nd order" program whose output is the specification of some
dependencies. I agree that sometimes the methods for specifying
these dependencies that is chosen by the designer of a makefile
can be as obscure and poorly documented as any other programming
language.


> 
> I can read (and program) complex makefiles. I just don't
> want to write a program in a language consisting mostly
> of line-noise. The rule-based programming feature of make
> (a DEPENDS-ON b) is useful for minimizing work redone but
> the rest of the features are truly bad language design.
> This might as well be APL code.

I agree with you (except for the slur against APL :). But I
think that it is possible to write efficient makefiles, i.e.
short and relatively simple, makefiles without such "line noise".
Such obscure notation for make specifications is usually just
expedient, poorly thought out design that turns to stone when
it cannot be maintained. It is possible to write obscure
programs in almost any language. And unix shell script is
one of the easiest in which to do this.

> 
> I find these examples (taken from real makefiles at random) 
> hard to read:
> 
> ==============================================================
> =========
> OOBJS:=$(shell j=$$(ar t $(ODIR)/gcllib.a) ; for i in $$(ls 
> -1 $(ODIR)/*.o) ; do if ! echo $$j |grep $$(basename $$i) 
> >/dev/null 2>&1 ; then echo $$i ; fi ; done)
> 

This one appears complex precisely because of the shell script.
This is not make's fault, it is the fault of the programmer
who choose to use these commands. But this is actually
not so hard to understand if you understand the unix tools
and filters that are being used.

I think most of your other examples are similar

> ...
> ==============================================================
> 
> Makefiles, for me, are just a record of the correct sequence
> of lists of commands needed to build a system. Isn't this
> simple?

No. If that is all that make was, then why not simply write
out that sequence of commands and stop messing around with
dependencies.

> 
> I agree that implicit stanzas shorten the makefiles and would
> reduce the clutter and size of the makefile. Provided the
> implicit stanza was generic enough to work in both make and
> gmake it might be ok. They "break" two design points:
> stanza-per-file and unique echo numbering. However, I'm more
> willing now to reconsider implicit stanzas if only to concede
> to a meet-in-the-middle compromise.
> 

Implicit stanzas are another way of providing a large number
of specifications in an economical manner but they can only
be used to specify very simple relationships. Still, I agree
that a few carefully chosen implicit stanzas would go a
long way to reducing the sheer bulk of the current Axiom
makefiles.

Yes, I like meet-in-the-middle compromises. Isn't that
one way to help make a marriage last a little longer. :)

\start
Date: Mon, 20 Dec 2004 00:02:36 -0500
From: Tim Daly
To: Bill Page
Subject: Re: Minor bugs

Bill,

>Then what exactly is "Daly bug"?

If you say ')set message test on' then every failure will generate
the message "Daly bug". The simple hack is to grep the .output files
and find these messages.

Some input files have examples in them that are intended to fail.
These intentional failures are wrapped in order to turn off the
"Daly bug" message when the failure occurs. 

This provides a way to distinguish the failure cases.

\start
Date: Mon, 20 Dec 2004 09:54:32 +0100
From: Michel Lavaud
To: Bill Page
Subject: Re: windows/linux coherency

Hello Bill,

On 19 Dec 2004 at 16:40, Michel Lavaud wrote:

> I would like to complete the new version of Rosetta CD for Windows by
> adding Axiom + WinTeXmacs, executable directly from the CD.

If my proposal seems too Windows-specific or too complicated to implement =
or 
inadequate, the minimum I would need for the Rosetta CD would be the possi=
bility for 
tm_axiom.exe to read whether it must use texbreaker or not, from a user wr=
itable 
place, so either from a file in USERPROFILE or ALLUSERSPROFILE directories=
, or 
from memory through an environment variable TM_AXIOM containing some instr=
uction 
specific to your version, say "texbreaker=y" or "texbreaker=n", or any=
thing you find 
appropriate, and silently ignore anything else to eliminate the possibilit=
y of some other 
program defining also a TM_AXIOM env var. Otherwise, I would have to put a=
ll Axiom 
in texmacs/plugins/axiom because Andrei Grozin's (cygwin) tm_axiom seems n=
ot to 
read the AXIOM env var, or add its location to the  PATH, which I prefer t=
o avoid, as it 
is a source of potential problems (in my opinion). Technically, putting Ax=
iom in a 
TeXmacs subdir is sufficient to have a working Rosetta CD, but it would be=
 more 
satisfactory to be able to put it in a more logical place.

\start
Date: Mon, 20 Dec 2004 12:23:23 +0100
From: Michel Lavaud
To: Bill Page
Subject: RE: [TeXmacs] 

On 18 Dec 2004 at 19:59, Bill Page wrote:

> > What differences did you notice?
> I didn't find any ? > (probably because it is too late here:-)) >  
> 
> Or is it too early?? (I guess we are all the same ... :)
> 
> When I display these formula on my system - both native
> Windows and cygwin versions display the Axiom
> 
>                                   Type: Expression Integer
> 
> output immediately after the equation number, on the same
> line, often wrapping to the start of the next line. Something
> like this:
> 
>                      x+y+z            (2)Type: Expression
> Integer
> 
> Normally it is formatted on the next full line below with
> right hand justification. The change to the stylesheet
> is to add an explicit new-line formatting command for
> \axiomtype{...} to force it to a new line. In previous
> versions of TeXmacs, this was not necessary since it was
> automatically treated like a new paragraph.

Ah OK,  I see. I had noticed it but it was concentrated only on the correc=
tness of 
mathematics ; and I thought it was a feture, not a bug.  Actually I agree,=
 it would look 
better (although it is not very disturbing, as it is displayed in a differ=
ent color)

> Have a good night.

I had, thanks a lot :-)

\start
Date: Mon, 20 Dec 2004 12:12:43 +0100
From: Michel Lavaud
To: Bill Page
Subject: RE: [TeXmacs] 

Hello Bill,

On 19 Dec 2004 at 0:41, Bill Page wrote:

>   I1 := integrate (1/(x**3 * (a+b*x)**(-1/3)),x)
> 
> > and the result appears to have big left and right parentheses,
> > but the first two lines are incorrect.
> 
> Actually if you look closely, it is correct but just formatted
> in a rather unexpected style. To see this try
> 
>   numer(I1)
> 
> You will notice that in the full expression, the first term of
> the numerator has been folded locally at the \cdot into two lines with
> a leading minus sign vertically centered on the right like this
> 
>    b^2x^2\sqrt{3} \cdot
> -                               + 2b^2x^2\sqrt{3}log(sqrt[3]{-a^2} ...
>    \log(sqrt[3]{-a^2}^2 ...
> 
> This type of "nested folding" is actually built in to Robert
> Sutor's algorithm. There may be an option that I am not explicitly
> setting which controls this type of behaviour.

Ah OK ! you are right, everything is there, although the formula is nonsense when read 
normally. So, on this example, it is Sutor's algorithm that is broken, and TeXmacs 
renders Sutor's output correctly, except that it imports incorrectly the "l" parameter of 
arrays into a "c" parameter.

In Sutor's output, the three lines you mention are constructed as an array embedded in 
the main array, and it seems there is an end of line \\ which is inserted incorrectly 
inside this embedded array, while it ought to be after the \end{array}. Otherwise, there 
ought to be a \left( just before the embedded array, and a \right) after its end, for the 
LaTeX output to be correct mathematically ; and this is apparently not what was 
intended, as these are absent, and as the rest of formula is on the right instead of 
being below.

> See also the web page at
> 
> http://page.axiom-developer.org/zope/mathaction/VeryLongLaTeX
> 
> I am glad to see that all of these examples work on MathAction
> since MathAction is actually using LaTeX internally to do the
> formatting. So this represents a reasonable "benchmark" against
> which to compare the TeXmacs output.

Well, I don't really agree on this point ? For me, the last formula on
the web page does not appear "a little odd at first sight", it appears
incomprehensible...

> I think that the more we (Axiom developers) depend on TeXmacs,
> the more we must be prepared to try to help maintain TeXmacs -
> just as we already have a great (sometimes two-way) relationship
> with the GCL developers, on which the current version of Axiom
> strongly depends ... :)

While Axiom depends on gcl, it does not depend on TeXmacs. I think we
ought to privilege rigor, not ease of use. For education or training
with Axiom, TeXmacs is very nice. But for research, in my opinion, the
default editor for Axiom ought to be Emacs, not TeXmacs. Some
adaptation to Axiom of imaxima.el, by Jesper Harder, would be vey
nice, as it relies on TeX itself, and the new version of Emacs allows
to include images, on Linux and Windows. So, beautiful output and
rigor can coexist.

\start
Date: Mon, 20 Dec 2004 12:34:32 +0100
From: Michel Lavaud
To: Tim Daly
Subject: Re: windows/linux coherency

Hello Tim,

On 18 Dec 2004 at 18:55, root wrote:

> i was under the impression that you had packaged texmacs with axiom in
> the axiom.exe download for windows. i just downloaded it, ran it, and
> found out that this was not the case.

If you think it could be useful, I can package texmacs + axiom for
Windows? I had the impression that the general opinion was that it
would be too large a download?  But it would be smaller than the
Rosetta CD anyway :-) Is there a demand?

\start
Date: Mon, 20 Dec 2004 10:19:01 +0100
From: Michel Lavaud
To: Bob McElrath
Subject: Re: [TeXmacs]

Hello Bob,

On 18 Dec 2004 at 12:03, Bob McElrath wrote:

> Michel Lavaud [Michel Lavaud] wrote: >
> Ah OK ! Sorry for that. But then I think that, in its present state
> (at least in the state I > received it in my mailer) the message
> generated is largely incomprehensible, as there > is no leading minus
> sign, only minus signs embedded in the middle of long lines. The >
> only indicators I could detect by inspection are "??changed" and
> "++added"
> 
> The "diff-format" output could definitely be improved.  The place to
> do this is in ZWiki itself, Diff.py: DiffSupport:textDiff.
> 
> Also the zwiki folder property (or per-page property) "mailout_policy"
> can be set to either "comments" or "edits".  Right now it is set to
> "edits" so is sending out these diffs.  I find them useless, and for
> most cases "comments" is appropriate.  Note that when in "comments"
> mode, emails will also be sent when new pages are created, but not
> when pages are edited.
> 
> Is there some way we could have a hybrid?  e.g. when a page is edited
> we send out the entire page with a comment at the top "this page was
> edited".  If one wants to see line-by-line changes it can always be
> retreived through the zwiki interface.

Thank you very much for these explanations. Yes, I agree the hybrid mode y=
ou 
describe would seem more appropriate than the present edit mode for the cc=
 to the 
list, as it would be readable as a normal message. The 2 latest messages s=
ent 
automatically were more readable for me however, thanks to your explanatio=
ns, and 
because modifs were shorter.

\start
Date: Mon, 20 Dec 2004 05:02:19 -0800 (PST)
From: Cliff Yapp
To: Michel Lavaud, Tim Daly
Subject: Re: windows/linux coherency

--- Michel Lavaud wrote:

> Hello Tim,

> If you think it could be useful, I can package texmacs + axiom for
> Windows? I had the impression that the general opinion was that it 
> would be too large a download?
> But it would be smaller than the Rosetta CD anyway :-) Is there a
> demand?

Well, in my case there could be, but unless someone other than me
thinks so I guess the answer would have to be no.  I was curious to put
the larger, TeXmacs including file up with the basic axiom one and see
which is the more popular download, as a test of whether convenience or
filesize should be the more important factor, but perhaps savannah
wouldn't like that.

\start
Date: 20 Dec 2004 11:29:39 -0500
From: Camm Maguire
To: Tim Daly
Subject: possible GCL 2.6.6

Greetings!  Thanks!  Just a quick note -- I'm leaving town tomorrow
for 1 week.  Can this wait until then?  I'd like to send out a global
email to the heavy users to ask for anything else which might need to
go into 2.6.6.  I'm thinking by 1/1 if that suits you.

Take care,

Tim Daly writes:

> Camm,
> 
> As far as I know the list is final. There are only 4 patches that
> relate to windows and I think they are only fixing two problems.
> The first problem is the makedir function and the second problem
> had to do with wildcard expansion or some such.
> 
> There is still a known problem with HOME/truename/~ expansion.
> 
> Likely there will be more patches as we begin to investigate
> socket support for graphics/sman but noone is there yet.

\start
Date: 20 Dec 2004 11:22:29 -0500
From: Camm Maguire
To: Kostas Oikonomou
Subject: Re: GCL results on Solaris

Greetings!  And thanks for your feedback!

The problem appears to be, from the make log you sent, that the local
bfd library is not being built at all.  Either this, or it has been
built in a previous run and not cleaned before this one.  The latter
is actually the more probable, as configure did setup the BUILD_BFD
make direction correctly.  What you should see immediately after
configure ends and make begins is:

add-defs1 386-linux
using 386-linux.defs
cd binutils/bfd && make
make[1]: Entering directory `/fix/t1/camm/debian/gcl/gcl-2.6.5/binutils/bfd'

So lets assume you already have the h/bfd.h and binuntils/bfd/libbfd.a
(et.al.).

Even if you don't have boolean defined in your gcc (quite doubtful),
you should get it in h/bfd.h generated by the local bfd build:

#if defined (__GNUG__) && (__GNUC__ > 2 || (__GNUC__ == 2 && __GNUC_MINOR__ >= 6))
#define TRUE_FALSE_ALREADY_DEFINED
#else
#if defined (__bool_true_false_are_defined)
/* We have <stdbool.h>.  */
#define TRUE_FALSE_ALREADY_DEFINED
#endif
#endif
#ifdef MPW
/* Pre-emptive strike - get the file with the enum.  */
#include <Types.h>
#define TRUE_FALSE_ALREADY_DEFINED
#endif /* MPW */
#ifndef TRUE_FALSE_ALREADY_DEFINED
typedef enum bfd_boolean {false, true} boolean;
#define BFD_TRUE_FALSE
#else
/* Use enum names that will appear nowhere else.  */
typedef enum bfd_boolean {bfd_fffalse, bfd_tttrue} boolean;
#endif

Once you have this file, you might try the simple test program:

#include "h/bfd.h"
int main() {
boolean x;
return 0;
}

If this compiles, then we're left with the following -- I notice
you've placed /opt/csw/include in the -I flags as opposed to the
C_INCLUDE_PATH environment variable.  The latter is more flexible, and
also differs from what you've done insofar as your method preempts the
standard -I gcc command line flags (-I../h -I../gcl-tk) as well as the
system include path.  If you have a bfd.h in /opt/csw/include, it will
preempt h/bfd.h, and may lead to this problem, but will certainly lead
to other problems later if not.  bfd.h and libbfd.a/libiberty.a must
be synchronous.

So my first suggestion is to make sure the gcl directory is cleaned to
start (make clean in this directory), remove the -I/opt.... flag, do
'export C_INCLUDE_PATH=/opt/csw/include' (or setenv C_INCLUDE_PATH
/opt... if using csh) as well as the analogous settings for
LIBRARY_PATH, LD_LIBRARY_PATH, and possibly PATH as posted previously,
retry, and send me the results again exactly as you did so helpfully
this time.  

Please feel free to write back if any of this needs clarification --
I'm writing rather quickly.  Also, will be leaving town for about 1
week on Tue. evening.

Take care,

Kostas Oikonomou writes:

> Hi Camm,
> 
> Thanks for all your comments and hints.
> 
> Unfortunately, I'm still unable to get the GCL compilation to work.
> 
> Here's what I did:
> 
> 1. I applied all the patches you sent me.
> 2. I used --disable-statsysbfd --enable-locbfd.
> (I had tried this before, and I reported the results in the first email I sent you:
> the make fails when compiling bfd_combined_table_update.)
> 3. This time, having read your comments on HAVE_BFD_BOOLEAN, I edited
> the configure script and added #undef HAVE_BFD_BOOLEAN.  If I understood
> what you said, this would be the correct thing to do.  I also made one other small change
> to configure, but I don't think it's important for the present problem.
> 
> Despite these changes, the build failed in exactly the same way.
> 
> Here is a .tgz file containing the output of the make until the failure, my Makefile.pamphlet,
> my lsp/Makefile.pamphlet, and my lsp/gcl-2.6.5/configure.
> 
> I hope you can figure out what's going wrong.  Please tell me if you need more information.
> Again, thanks very much for your assistance.

\start
Date: Mon, 20 Dec 2004 12:51:30 -0500
From: Tim Daly
To: Cliff Yapp
Subject: Re: windows/linux coherency
Cc: Michel Lavaud

>> If you think it could be useful, I can package texmacs + axiom for
>> Windows? I had the impression that the general opinion was that it 
>> would be too large a download?
>> But it would be smaller than the Rosetta CD anyway :-) Is there a
>> demand?
>
>Well, in my case there could be, but unless someone other than me
>thinks so I guess the answer would have to be no.  I was curious to put
>the larger, TeXmacs including file up with the basic axiom one and see
>which is the more popular download, as a test of whether convenience or
>filesize should be the more important factor, but perhaps savannah
>wouldn't like that.

Savannah wouldn't care as it's actually hosted on a machine I pay for,
not savannah.

Likely, however, is that the users will download both because they
don't know the differences.

\start
Date: Mon, 20 Dec 2004 12:57:00 -0500
From: Tim Daly
To: Camm Maguire
Subject: Re: possible GCL 2.6.6

Camm,

We maintain our own meta-patches for GCL so it is not a problem.
Have fun on your vacation. I'm "on vacation" at the moment. I have
7 laptops open on my coffee table (my son is here and we're hacking
together). I can't imagine why I need to go to work except to get
away and rest :-)

\start
Date: Mon, 20 Dec 2004 15:43:19 -0500
From: Bill Page
To: Tim Daly
Subject: Daly bugs

On Monday, December 20, 2004 12:03 AM Tim Daly wrote:
> Bill Page asked:
> 
> >Then what exactly is "Daly bug"?
> 
> If you say ')set message test on' then every failure
> will generate the message "Daly bug". The simple hack
> is to grep the .output files and find these messages.
> 
> Some input files have examples in them that are intended
> to fail. These intentional failures are wrapped in order
> to turn off the "Daly bug" message when the failure occurs. 
> 
> This provides a way to distinguish the failure cases.
> 

If this is not regression testing, then what do you mean
by failure? What conditions can generate a failure that
will be caught this way?

\start
Date: Mon, 20 Dec 2004 15:16:44 +0100
From: Michel Lavaud
To: Cliff Yapp
Subject: Re: windows/linux coherency

Hello Cliff,

On 20 Dec 2004 at 5:02, C Y wrote:

> > If you think it could be useful, I can package texmacs + axiom for
> > Windows? I had the impression that the general opinion was that it
> > would be too large a download? But it would be smaller than the
> > Rosetta CD anyway :-) Is there a demand?
> 
> Well, in my case there could be, but unless someone other than me
> thinks so I guess the answer would have to be no.  I was curious to
> put the larger, TeXmacs including file up with the basic axiom one and
> see which is the more popular download, as a test of whether
> convenience or filesize should be the more important factor, but
> perhaps savannah wouldn't like that.

Yes, I agree with you, this would be interesting, but IMHO, probably
better to wait until the tm_axiom problem be solved
satisfactorily. Otherwise, downloading a large file, running it and
finding it does not work with the very first example of the Axiom book
might provide a disastrous feeling.


\start
Date: Mon, 20 Dec 2004 16:03:13 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [FrontPage] 

??changed:
-- learn more [about Axiom], more "about Reduce":ReduceWiki, or more [about MathAction]
-
-- "download Axiom":AxiomDownload or try it out "online":AxiomInterface right here. You can also use
-  Axiom with TeXmacs
-
-- Read the "Axiom documentation":AxiomDocumentationAndCommunity, including first
-  tutorials and the Axiom book; find out about the [Axiom Development] project and
-  about other [Related Projects]
- Learn more [about Axiom], more "about Reduce":ReduceWiki, or more [about MathAction]

- Try Axiom "online":AxiomInterface right here or "download Axiom":AxiomDownload now.
  Chose an optional [User Interface] such as TeXmacs or Emacs
  
- Read the "Axiom documentation":AxiomDocumentationAndCommunity, including short getting
  started tutorials and the "Axiom book":http://page.axiom-developer.org/zope/Plone/refs/books/axiom-book2.pdf (1000+ pages)

- Find out about the [Axiom Development] project and other [Related Projects]

--
forwarded from http://page.axiom-developer.org/zope/mathaction/FrontPage#msg20041220160313-0600@page.axiom-developer.org

\start
Date: Mon, 20 Dec 2004 16:14:11 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [User Interface] (new) 

This page is still under construction ...

Outline

  - Native axiom user interface

    - readline functionality for line editing, arrow keys

    - "ascii text" rendering of mathematics

    - multi-line input

  - Emacs

    - running Axiom in an Emacs buffer

    - proposal to develop [iAxiom.el] an adaptation to Axiom of imaxima.el,
      by Jesper Harder. See http://www.ifa.au.dk/~harder/imaxima.html

  - TeXmacs

    - include Axiom commands and formatted output in mathematical documents

--
forwarded from http://page.axiom-developer.org/zope/mathaction/UserInterface#msg20041220161409-0600@page.axiom-developer.org

\start
Date: Mon, 20 Dec 2004 16:15:59 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [AxiomInterface] trying axiom

\begin{axiom}
[2/4,4/4]
\edn{axiom}

--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomInterface#msg20041220161556-0600@page.axiom-developer.org

\start
Date: Mon, 20 Dec 2004 16:17:16 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [AxiomInterface] pluto

\begin{axiom}
[3/3,4/6]
\end{axiom}
--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomInterface#msg20041220161704-0600@page.axiom-developer.org

\start
Date: Mon, 20 Dec 2004 16:42:35 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [AxiomInterface] trying axiom

Trivial typo: \end not \edn. (Pedantic, I know :-)
--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomInterface#msg20041220164233-0600@page.axiom-developer.org

\start
Date: Mon, 20 Dec 2004 18:05:51 -0500
From: Bill Page
To: Michel Lavaud
Subject: RE: windows/linux coherency

On Sunday, December 19, 2004 10:41 AM Michel Lavaud
wrote:
> 
> I would like to complete the new version of Rosetta CD for 
> Windows by adding Axiom + WinTeXmacs, executable directly from
> the CD. In order to do it in the best conditions, I think that
> it would be desirable, as suggested by Tim, to provide 
> windows/linux coherency. For this I would propose the following:
> 
> 1 - READ-ONLY DIRECTORIES (on cd-rom):
> 
> Programs\alg\Axiom\v3.0
>                      \axiom.ini
>                      \bin\axiomsys.exe
>                      \(other files of axiom binary distrib)
> Programs\edit\TeXmacs\v1.044
>                      \plugins\Axiom\bin\tm_axiom.exe
>                      \(other files of WinTeXmacs binary distrib)
>

I like the idea of the axiom.ini file. I think as someone
else mentioned earlier, this might be a good way to get
around some of the awkwardness of the setting of the
AXIOM environment variable.

BTW, have you confirmed that it is possible to execute these
programs directly from CD? What about setting the AXIOM
environment variable and the PATH which is done now during
installation? I think TeXmacs might require a place to write
temporary files. I don't think Axiom requires this.
 
> 2 - INITIALIZATION FILES:
> 
> A - Defaults :
> 
> a - axiom.ini in Axiom main directory on cd-rom.
> b - If axiom.ini is present in user's directory, it
>     overrides default axiom.ini. More precisely:
> - On Linux, if $HOME\axiom.ini is present, it overrides 
>   default axiom.ini
> - On Windows, if  USERPROFILE\axiom.ini is present, it 
>   overrides default axiom.ini; if not present, if
>   ALLUSERSPROFILE\axiom.ini is present, it overrides 
>   default axiom.ini
> 
> B - Customized:
> If axiomsys is invoked with the -i switch (or --init, or 
> whatever switch best suited) :
> 
> axiomsys -i My_personal_directory\my_personal_initialization_file.ini
> 
> where the dir name and file name are any legal name for
> the OS, then the file my_presonal_initialization_file.ini
> overrides all other init files.
>

Specifying an alternate axiom.ini file on the command line
as you suggest above would require some serious surgery to
the way Axiom starts up. Axiom already has the ability to
read a file containing Axiom commands on startup called

  axiom.input

I know this works under Linux when the file is placed in
the user's home directory. Under Windows exactly where to
put this file is not too clear. I just tried with a file
of this name in the current directory when starting AXIOMsys
from the command line, but the commands in axiom.input
where not read by AXIOMsys :( So this needs more testing.

Typically this file contains commands like

  )set message autoload off

etc. But perhaps this could be extended to include user
interface options without disturbing Axiom itself. E.g.

  --Option: TeXmacs line-break off

would be treated as a comment by Axiom but could be
read and interpreted by the tm_axiom program on startup.
 
> Right now, axiom.ini would contain :
> - anything that would seem important for Axiom initialization,
> - a switch allowing / preventing Bill's tm_axiom to use 
>   linebreaker.c. This would be desirable to provide flexibility
>   to the user, in case it would happen that either TeXmacs or
>   texbreaker.c can be broken from time to time. 
>   Right now, the switch would be to disallow the use of
>   texbreaker
> 
> 3 - TM_AXIOM
> 
> Introduce in Bill's tm_axiom.c the possibility to select the 
> correct ini file for Axiom as defined above, and to read the
> value of the texbreaker switch.
> 

Yes, this would be quite easy. But since tm_axiom is a separate
program form AXIOMsys and in fact is invoked by TeXmacs, not
by Axiom, the Axiom command line option would not be of much
use here. Perhaps there a similar option already available in
TeXmacs? In that case some change would have to be made to
the scheme coding that actually starts tm_axiom in order to
pass the file name and/or options to tm_axiom. I suppose this
would not be hard for someone who knows scheme and also
something about TeXmacs internals. Is anyone willing to help
me to implement this?

\start
Date: Mon, 20 Dec 2004 18:18:09 -0500
From: Bill Page
To: Michel Lavaud
Subject: RE: windows/linux coherency

On Monday, December 20, 2004 3:55 AM Michel Lavaud
wrote:
> 
> On 19 Dec 2004 at 16:40, Michel Lavaud wrote:
> 
> > I would like to complete the new version of Rosetta CD for 
> > Windows by adding Axiom + WinTeXmacs, executable directly
> > from the CD.
> 
> If my proposal seems too Windows-specific or too complicated 
> to implement or inadequate, the minimum I would need for the
> Rosetta CD would be the possibility for tm_axiom.exe to read
> whether it must use texbreaker or not, from a user writable 
> place, so either from a file in USERPROFILE or ALLUSERSPROFILE
> directories, or from memory through an environment variable
> TM_AXIOM containing some instruction specific to your version,
> say "texbreaker=y" or "texbreaker=n", or anything you find 
> appropriate, and silently ignore anything else to eliminate 
> the possibility of some other program defining also a TM_AXIOM
> env var.

Yes, either alternative would be easy to implement in tm_axiom.
Would you consider manually setting or changing an environment
variable "too difficult" for the average Windows user? If not
then I think that is the best way to go. I can arrange to set
this variable to some default during installation on Windows.
How would you control this when running Axiom directly from
CD?

> Otherwise, I would have to put all Axiom in texmacs/plugins/axiom
> because Andrei Grozin's (cygwin) tm_axiom seems not to read
> the AXIOM env var, or add its location to the PATH, which
> I prefer to avoid, as it is a source of potential problems
> (in my opinion). Technically, putting Axiom in a TeXmacs
> subdir is sufficient to have a working Rosetta CD, but it
> would be more satisfactory to be able to put it in a more
> logical place.
> 

I agree that it is undesirable to put all of Axiom in a
sub-directory of the TeXmacs tree.

If the new tm_axiom consults the TM_AXIOM environment variable
and finds

  TM_AXIOM=texbreaker:n

then it can be made to behave exactly the way the cygwin
tm_axiom does now.

\start
Date: Mon, 20 Dec 2004 16:14:35 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [AxiomInterface] trying axiom

/begin{axiom}
[1/1,1/4,3/4]
/end{axiom}
--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomInterface#msg20041220161433-0600@page.axiom-developer.org

\start
Date: Mon, 20 Dec 2004 18:48:04 -0500
From: Bill Page
To: Michel Lavaud
Subject: RE: [TeXmacs] 

On Monday, December 20, 2004 6:13 AM Michel Lavaud
wrote:
> Bill Page wrote:
> > 
> > You will notice that in the full expression, the first term
> > of the numerator has been folded locally at the \cdot into
> > two lines with a leading minus sign vertically centered on
> > the right like this
> > 
> >    b^2x^2\sqrt{3} \cdot
> > -                         +  2b^2x^2\sqrt{3}log(sqrt[3]{-a^2} ...
> >    \log(sqrt[3]{-a^2}^2 ...
> > 
> > This type of "nested folding" is actually built in to Robert
> > Sutor's algorithm. There may be an option that I am not
> > explicitly  setting which controls this type of behaviour.
> 
> Ah OK ! you are right, everything is there, although the 
> formula is nonsense when read normally. So, on this example,
> it is Sutor's algorithm that is broken, and TeXmacs 
> renders Sutor's output correctly, except that it imports 
> incorrectly the "l" parameter of arrays into a "c" parameter.

Could you please explain the use of the "l" and "c" parameters?

> 
> In Sutor's output, the three lines you mention are constructed
> as an array embedded in the main array, and it seems there is
> an end of line \\ which is inserted incorrectly inside this
> embedded array, while it ought to be after the \end{array}.
> Otherwise, there ought to be a \left( just before the embedded
> array, and a \right) after its end, for the LaTeX output to be
> correct mathematically ; and this is apparently not what was 
> intended, as these are absent, and as the rest of formula is 
> on the right instead of being below.

I think Sutor's logic for splitting long products is slightly
different than for splitting sums and that might explain some
of the difference (e.g. absence of parenthesis). Would you be
willing to send me some hand modified LaTeX coding for this
example so that we are both completely clear on what you are
proposing. In that case I will attempt to analyze the
linebreak program and make the necessary changes.

> 
> > See also the web page at
> > 
> > http://page.axiom-developer.org/zope/mathaction/VeryLongLaTeX
> > 
> > I am glad to see that all of these examples work on MathAction
> > since MathAction is actually using LaTeX internally to do the
> > formatting. So this represents a reasonable "benchmark" against
> > which to compare the TeXmacs output.
> 
> Well, I don't really agree on this point ? For me, the last 
> formula on the web page does not appear "a little odd at first
> sight", it appears incomprehensible... 
> 

Ok, let's fix it.

> > I think that the more we (Axiom developers) depend on TeXmacs,
> > the more we must be prepared to try to help maintain TeXmacs -
> > just as we already have a great (sometimes two-way) relationship
> > with the GCL developers, on which the current version of Axiom
> > strongly depends ... :)
> 
> While Axiom depends on gcl, it does not depend on TeXmacs.

Actually in principle Axiom has been built with many different
lisp environments in the past and Tim has plans to support
several of these again, so technically Axiom does not depend
on gcl either. My point was only that open source development
presumes an active co-operative relationship between related
projects.

> I think we ought to privilege rigor, not ease of use.

I agree whole heartedly!

> For education or training with Axiom, TeXmacs is very nice.
> But for research, in my opinion, the default editor for 
> Axiom ought to be Emacs, not TeXmacs.

What do you find more attractive about Emacs for research?

I am not familiar with running Axiom in Emacs but I would
like to learn and also to document it for other users.
I have set up a new [User Interface] page on MathAction
where I hope to describe the different user interface options
available for Axiom. Would you be willing to take a look at

http://page.axiom-developer.org/zope/mathaction/UserInterface

and perhaps edit it to include some basic instructions for
Emacs users?

> Some adaptation to Axiom of imaxima.el, by Jesper Harder,
> would be vey nice, as it relies on TeX itself, and the new
> version of Emacs allows to include images, on Linux and
> Windows. So, beautiful output and rigor can coexist.
> 

Can you tell me or point me to instructions on how to
install and set up Emacs on windows to access Maxima and
use imaxima.el? I experimented with this about 6 months
ago but I did not get very far. As I recall I had some
difficulty especially installing the imaxima component.
But I would like to try again. I am hoping also to learn
enough about the interface to Maxima in order to also
provide a Maxima interface on MathAction.

\start
Date: Mon, 20 Dec 2004 19:07:19 -0500
From: Bill Page
To: Michel Lavaud
Subject: RE: [TeXmacs]
Cc: Bob McElrath

On Monday, December 20, 2004 4:19 AM Michel Lavaud
wrote:
> On 18 Dec 2004 at 12:03, Bob McElrath wrote:
> > The "diff-format" output could definitely be improved.
> > The place to do this is in ZWiki itself, Diff.py:
> > DiffSupport:textDiff.
> > ... 
> > Is there some way we could have a hybrid?  e.g. when a
> > page is edited we send out the entire page with a comment
> > at the top "this page was edited".  If one wants to see
> > line-by-line changes it can always be retrieved through
> > the zwiki interface.
> 
> Thank you very much for these explanations. Yes, I agree
> the hybrid mode you describe would seem more appropriate
> than the present edit mode for the cc to the list, as it
> would be readable as a normal message. The 2 latest messages
> sent automatically were more readable for me however, thanks
> to your explanations, and because modifs were shorter.
> 

Since ZWiki appears to generate the email directly from the
original source format, on the last edits to the website that
I did, I deliberately keep the editing line length of the
text contents short, anticipating how these edits would look
when sent out as email. I think the fact that you found the
result more readable confirms my proposal that ZWiki should
do such line folding automatically during the preparation
of the email.

I can make this change on the MathAction site and then
propose a patch to the ZWiki developers. 

\start
Date: Mon, 20 Dec 2004 19:22:31 -0500
From: Bill Page
To: Leno Pedrotti
Subject: RE: Axiom and WinTexmacs

Leno,

On Monday, December 20, 2004 10:02 AM you wrote:

> Just for your information I have set up WinTexmacs and Axiom 
> and it does seem to work fine.

Excellent.

> I concur that
> 
> integrate (1/(x**3 * (a+b*x)**(1/3)),x)
> 
> does not linebreak properly but most other operations do.

We will try to find a solution to that problem as soon as
possible.

> Is it likely that axiom graphics will (eventually) work
> on the windows platform?

Yes, absolutely. What we have now is only a very preliminary
version of Axiom on Windows and Tim Daly has only just recently
got the graphics working on Linux. In principle porting the
graphics to Windows should not be too difficult however we
have two problems:

  1) the socket communication protocol with GCL (the lisp
     system on which Axiom depends) on Windows has not yet
     been fully tested. sockets are needed for Axiom graphics.

  2) right now Axiom graphics also requires the X-windows
     environment. X windows in not available under native
     Windows so either we have to port the graphics code to
     another windowing library that is available under native
     Windows or we might be forced (for the first release of
     graphics at least) to resort to the cygwin environment
     under windows for the graphics.

I think we can probably achieve Axiom graphics functionality
under cygwin quit easily (say within 1 or 2 months) but for
users who do not already have cygwin installed, setting up
the X-windows environment can be a little complex. On the
other hand, the cygwin version of TeXmacs is already depends
on X-windows and sets up this environment more or less
automatically.


> Thanks for your work on this project.
> 

You are welcome. I look forward to any reports from you
about how you are using it in your research.

\start
Date: Mon, 20 Dec 2004 18:58:20 -0500
From: Bill Page
To: Michel Lavaud
Subject: RE: windows/linux coherency

On Monday, December 20, 2004 6:35 AM Michel Lavaud
wrote:
> On 18 Dec 2004 at 18:55, Tim Daly wrote:
> 
> > i was under the impression that you had packaged texmacs 
> > with axiom in the axiom.exe download for windows. i just
> > downloaded it, ran it, and found out that this was not
> > the case.
> 
> If you think it could be useful, I can package texmacs + 
> axiom for Windows? I had the impression that the general
> opinion was that it would be too large a download? 
> But it would be smaller than the Rosetta CD anyway :-)
> Is there a demand?
> 

Yes, I think there is likely to be a BIG demand for it.
Already the preliminary versions of Axiom for windows have
been downloaded more that 550 times in just 20 days. See

http://page.axiom-developer.org/usage/usage_200412.html#TOPURLS

and the daily rate of downloads continues to be quite high.
I would fully expect that considerably more than half of
these windows users would prefer the TeXmacs interface to
Axiom over the limitations of the native Axiom interface.

The NSIS installed that Dan Martens uses with WinTexmacs
and which he helped me setup for Axiom does a remarkably
good job of compressing binary files (typically as much
as 1/10 the original size). So I expect a combined TeXmacs+
Axiom for Windows would be less than 40 Mb. in size - not
too bad for those with high speed connections.

I would be very interested if you could prepare such a
combined installer.

\start
Date: Mon, 20 Dec 2004 17:05:21 -0800
From: Bob McElrath
To: Bill Page
Subject: Re: [TeXmacs]
Cc: Michel Lavaud

Page, Bill [Bill Page] wrote:
> 
> Since ZWiki appears to generate the email directly from the
> original source format, on the last edits to the website that
> I did, I deliberately keep the editing line length of the
> text contents short, anticipating how these edits would look
> when sent out as email. I think the fact that you found the
> result more readable confirms my proposal that ZWiki should
> do such line folding automatically during the preparation
> of the email.
> 
> I can make this change on the MathAction site and then
> propose a patch to the ZWiki developers. 

There used to be such functionality in zwiki...that I removed.
It was mangling emails when a zwiki page was used as a mailing list.

line wrapping is fine as long as it is done by the diff piece or
web-form submit piece.  Just don't mangle incoming emails.  ;)

The code is at the end of Mail.py, formatMailout() and in my codebase,
and there are some relevant things in tests/testMail.py.  If you have
any trouble locating the old code, shoot me an email and I'll send it to
you.

\start
Date: Mon, 20 Dec 2004 17:27:40 -0800
From: Bob McElrath
To: Bill Page
Subject: Re: line wrapping diffs from MathAction
Cc: Michel Lavaud

Page, Bill wrote:
> I agree. What I had in mind would apply only to the emails
> generated as diffs. After I thought about this a little
> more, I realize that you may be right to imply that doing
> this folding in a naive manner on text with a complex
> format might well mangle some things badly. On the other
> hand, the un-rendered wiki text itself is quite simple in
> format (by design) so in most cases folding this (or diffs
> of this) should not make things too unreable - especially
> if I try to maintain the indent level if it is structured
> text. Don't you think?

I honestly don't remember now how to trigger the email mangling...

It is only in the cycle mailin->mailout that the format must be
preserved (e.g. it was sent by a mailer it must be formatted correctly
as an email so let's not mess with it).  Do with you will with
wiki-generated content.

The problem is that the code does not have a way (currently) of
differentiating the source of the content to be mailed out, and was
line-wrapping whatever it saw, whether email/diff/new page etc.

\start
Date: Mon, 20 Dec 2004 20:18:11 -0500
From: Bill Page
To: list
Subject: line wrapping diffs from MathAction
Cc: Bob McElrath, Michel Lavaud

On Monday, December 20, 2004 8:05 PM Bob McElrath wrote:
> 
> Page, Bill [Bill Page] wrote:
> > 
> > Since ZWiki appears to generate the email directly from the
> > original source format, on the last edits to the website that
> > I did, I deliberately keep the editing line length of the
> > text contents short, anticipating how these edits would look
> > when sent out as email. I think the fact that you found the
> > result more readable confirms my proposal that ZWiki should
> > do such line folding automatically during the preparation
> > of the email.
> > 
> > I can make this change on the MathAction site and then
> > propose a patch to the ZWiki developers. 
> 
> There used to be such functionality in zwiki...that I removed.
> It was mangling emails when a zwiki page was used as a mailing
> list.
> 
> line wrapping is fine as long as it is done by the diff piece
> or web-form submit piece.  Just don't mangle incoming emails.
>  ;)
>

I agree. What I had in mind would apply only to the emails
generated as diffs. After I thought about this a little
more, I realize that you may be right to imply that doing
this folding in a naive manner on text with a complex
format might well mangle some things badly. On the other
hand, the un-rendered wiki text itself is quite simple in
format (by design) so in most cases folding this (or diffs
of this) should not make things too unreable - especially
if I try to maintain the indent level if it is structured
text. Don't you think?

> The code is at the end of Mail.py, formatMailout() and in my
> codebase, and there are some relevant things in tests/testMail.py.
> If you have any trouble locating the old code, shoot me an email
> and I'll send it to you.
> 

\start
Date: Tue, 21 Dec 2004 04:41:18 -0500
From: Bill Page
To: Michel Lavaud
Subject: RE: windows/linux coherency

Michel,

I have uploaded a new version of tm_axiom to

  http://page.axiom-developer.org/tm_axiom.zip

This version reads several default options from the TM_AXIOM
environment variable in the manner that you suggested.

Default options can be specified by the environment variable:

  export TM_AXIOM='break 1, over 1, cdot 1, space 0, big( 1, width 4.500'

The above values are the defaults if TM_AXIOM does not exist.
If TM_AXIOM already exist but does not contain parameters of
this exactly this format, then these other parameters are
silently ignored.

The default options can be overridden by on the command line:

  tm_axiom 'break 1, over 1, cdot 1, space 0, big( 1, width 4.500'

This would require modification of the scheme code in TeXmacs
that starts tm_axiom.

And these options can also be modified dynamically via a
simulated Axiom command:

  )set output texmacs break on, over on, cdot on, space off,
                      big( on, width 4.500

I said 'simulated' since although the syntax of this command
looks very much like an Axiom command, it is actually processed
only by the tm_axiom interface program.

  )set output texmacs

with no options display the current values of the options.

The available options and their defaults are as follows:

  break <on>|<off>  line-break algorithm                on
  over <on>|<off>   do not convert 2-d \over to 1-d /   on
  cdot <on>|<off>   do not convert \cdot to \ (space)   on
  space <on>|<off>  convert \ (space) to \,             off
  big( <on>|<off>   do not convert \left( \right to ( ) on
  width <9.99>      line width in inches                4.5

You may use 1 yes or on and 0 no or off.

---------

I also found and corrected a bug in the previous version
that prevented non-TeX output from being displayed. Now
it is possible to write:

  )set output tex off
  )set output algebra on
  )set output length 70

then the output of Axiom will be displayed in the same
"ascii format" used in the native Axiom text only interface.

You might like to note that by increasing the line width,
e.g.

  )set output texmacs width 5.0

the oddly folded format of your integrate( ... -1/3 ...)
variant of the first example in the AXIOM book now looks
normal. Perhaps we should make the default width a little
larger? However I am still unable to find any combination
of options that compensates for the TeXmacs problem with
the actual first example itself.

I will also shortly upload a complete new version of Axiom for
Windows

  http://page.axiom-developer.org/tm_axiom.zip

which includes this new version of tm_axiom.

I look forward to your comments on whether this new version
of tm_axiom will meet your needs for the Rosetta CD.

Regards,
Bill Page.

On Monday, December 20, 2004 6:18 PM I wrote:
>
> On Monday, December 20, 2004 3:55 AM Michel Lavaud
> wrote:
> > 
> > On 19 Dec 2004 at 16:40, Michel Lavaud wrote:
> > 
> > > I would like to complete the new version of Rosetta CD for 
> > > Windows by adding Axiom + WinTeXmacs, executable directly
> > > from the CD.
> > 
> > If my proposal seems too Windows-specific or too complicated 
> > to implement or inadequate, the minimum I would need for the
> > Rosetta CD would be the possibility for tm_axiom.exe to read
> > whether it must use texbreaker or not, from a user writable 
> > place, so either from a file in USERPROFILE or ALLUSERSPROFILE
> > directories, or from memory through an environment variable
> > TM_AXIOM containing some instruction specific to your version,
> > say "texbreaker=y" or "texbreaker=n", or anything you find 
> > appropriate, and silently ignore anything else to eliminate 
> > the possibility of some other program defining also a TM_AXIOM
> > env var.
> 
> Yes, either alternative would be easy to implement in tm_axiom.
> Would you consider manually setting or changing an environment
> variable "too difficult" for the average Windows user? If not
> then I think that is the best way to go. I can arrange to set
> this variable to some default during installation on Windows.
> How would you control this when running Axiom directly from
> CD?
> 
> ... 
> 
> If the new tm_axiom consults the TM_AXIOM environment variable
> and finds
> 
>   TM_AXIOM=texbreaker:n
> 
> then it can be made to behave exactly the way the cygwin
> tm_axiom does now.
> 

\start
Date: Tue, 21 Dec 2004 04:24:17 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [AxiomDownload] 

??changed:
-  - "Windows (exe) version 0.1.2":http://page.axiom-developer.org/axiom-windows-0.1.2.exe ${\bf \longleftarrow}$ ** Recommended Download** 
  * "Windows (exe) version 0.1.3":http://page.axiom-developer.org/axiom-windows-0.1.3.exe ${\bf \longleftarrow}$ ** Recommended Download** 

    (19 Mb.) This version corrects a bug which prevented the TeXmacs interface
    from working when Axiom is installed in a non-default location. It also
    includes improvements to the TeXmacs interface to allow the user or
    installer to specify several options which controls how TeXmacs formats
    Axiom output. For example it is possible to change the line width
    (specified in inches)

    ')set output texmacs width 5.5'
 
    or to disable the interface line breaking algorithm completely.

    ')set output texmacs break off'

    This version also permits an unformated output mode.

  - "Windows (exe) version 0.1.2":http://page.axiom-developer.org/axiom-windows-0.1.2.exe

??changed:
-    This pre-release version 0.1.1 corrects some problems with )summary and )cd commands
-
-  - "Windows (zip) version 0.1.0":http://page.axiom-developer.org/axiom-windows-0.1.0.zip (Thankyou Mike Thomas!)
-
-    (45 Mb.) Manual install
    This pre-release version 0.1.1 corrects some problems with )summary and
    )cd commands. The original windows version of Axiom was prepared by Mike Thomas.

??changed:
-    1 Download either the "zip":http://page.axiom-developer.org/axiom-windows-0.1.0.zip or
-      "tgz":http://page.axiom-developer.org/axiom-windows-0.1.0.tgz file above. (User
-      right-click / !SaveAs in your browser.)
-
-    2 "Unzip":http://www.thefreesite.com/Free_Software/Unzipping_compression_freeware/)
-      the contents to a convenient location, e.g.:<pre>
-        C:\Program Files</pre>
-
-    3 Add the AXIOM variable to the environment:<pre>
-        Start / Settings / Control Panel / System / Advanced / Environment Variables / New
-        C:/Program Files/axiom/mnt/windows</pre>
    1 Download the "installer":http://page.axiom-developer.org/axiom-windows-0.1.3.exe
      program (use right-click / !SaveAs in your browser.)

    2 Execute this program and specify the location where you would like to
      install Axiom e.g.:<pre>
        C:\Program Files\axiom</pre>

    3 The AXIOM variable will be automatically added to the environment. To
      check it refer to<pre>
        Start / Settings / Control Panel / System / Advanced / Environment Variables</pre>

??changed:
-    4 Update the PATH to permit Axiom to run from the command line:<pre>
    4 The PATH is also update by the installed to permit Axiom to run from
      the command line:<pre>

??changed:
-      Path must use the \\ character.
-
-    5 Create a shortcut on the desktop that points to AXIOMsys using Windows Explorer:<pre>
-        Navigate to C:\Program Files\axiom\mnt\windows\bin\AXIOMsys
-        Right-click/Sendto/Desktop</pre>
-
-    6 Start Axiom by double-clicking the shortcut icon or from the command window:<pre>
      The Path must use the \\ character.

    5 A short-cut with an AXIOM icon is created on the desktop that points
      to AXIOMsys:<pre>

    6 Start Axiom by double-clicking the AXIOM icon, from the Start menu<pre>
        Start/Programs/Axiom/Axiom</pre>

      or from the command window:<pre>

++added:
    7 The Axiom Book and a tutorial on using Axiom with TeXmacs is also available
      from the Start menu<pre>
        Start/Programs/Axiom</pre>


--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomDownload#msg20041221042417-0600@page.axiom-developer.org

\start
Date: Tue, 21 Dec 2004 06:25:31 -0500
From: Tim Daly
To: Bill Page
Subject: re: windows/linux coherency
Cc: Michel Lavaud

Bill,

re: )set output texmac

Is this in the axiom--windows branch?

\start
Date: Tue, 21 Dec 2004 06:12:43 -0500
From: Bill Page
To: Tim Daly
Subject: re: windows/linux coherency
Cc: Michel Lavaud

Tim,

On Tuesday, December 21, 2004 6:26 AM you asked:
> 
> re: )set output texmacs
> 
> Is this in the axiom--windows branch?
> 

No. This command is actually implemented as part of the
tm_axiom TeXmacs-Axiom interface program. I have not yet
added this program to axiom--windows--1 but I think that
it is time to do that real soon now. I propose to create
a texmacs directory under src and wrap the .c files into
.c.pamphlet format. And then the compile step to the
<<windows>> section of the Makefile.pamphlet.

I think we should place the executable tm_axiom.exe in
mnt/windows/bin. Is that ok?

Also, we need to put the axiom.nsi script for the NSIS
installer somewhere in the axiom--windows--1 tree. Of
course it also can become axiom.nsi.pamphlet but I am a
little uncertain where it should go especially if we
consider the possibility that we may also want to
 provide a linux installer for Axiom. Unfortunately NSIS
is not available for Linux and the only good one I know
for Linux (InstallAnywhere) is not open source, but I
have been looking at a couple of java-based open source
installers that might work well. I am not sure though
that we want to assume that the user has java has installed?
Do you have any installer programs for Linux that you would
recommend.

\start
Date: Tue, 21 Dec 2004 07:06:04 -0500
From: Tim Daly
To: Bill Page
Subject: re: windows/linux coherency
Cc: Michel Lavaud

Bill,

re: texmacs directory. that's the same path i'd take.

re: tm_axiom.exe in bin. that's also good.

re: installer axiom.nsi. probably the src/scripts directory

\start
Date: Tue, 21 Dec 2004 19:30:05 +0600 (NOVT)
From: Andrey G. Grozin
To: Bill Page
Subject: re: windows/linux coherency

On Tue, 21 Dec 2004, Page, Bill wrote:
> I am not sure though
> that we want to assume that the user has java has installed?
No.

> Do you have any installer programs for Linux that you would
> recommend.
We should have an rpm package. Best of all if it would install on many 
distributions - RedHat, SUSE, Mandrake. A deb package for Debian and an 
.ebuild for Gentoo would be also useful.

As a Linux sysadmin, I'd at no circumstances install something using some 
funny "installer" on my rpm-based system, or on Debian, or Gentoo.

\start
Date: Tue, 21 Dec 2004 09:15:57 -0500
From: Bill Page
To: Andrey G. Grozin
Subject: re: windows/linux coherency

On Tuesday, December 21, 2004 8:30 AM Andrey G. Grozin wrote:
> 
> > Do you have any installer programs for Linux that you
> > would recommend.
>
> We should have an rpm package. Best of all if it would 
> install on many distributions - RedHat, SUSE, Mandrake.

Do you know how to create an rpm that works on all three
"rpm-style" distributions? Or do you know a good "how-to"
document? Would you be willing to help me prepare such an
rpm for Axiom on Linux?

> A deb package for Debian and an .ebuild for Gentoo would
> be also useful.

Oh ya, 3 different installer systems for 5 different
"linux" systems - that's progress. ;)

Debian we already have - Thanks to Camm Maguire.

Fedora has some variant of apt-get doesn't it? I don't
suppose a Debian/Fedora package is possible though, eh?

> 
> As a Linux sysadmin, I'd at no circumstances install 
> something using some funny "installer" on my rpm-based
> system, or on Debian, or Gentoo.

Maybe that's why there are so few linux systems running
Maple and such programs ... :?) I understand your
reluctance but as long as the installer is open source
and widely used, I don't see any real problem - except
of course that as far as I have been able to determine
there are no such installer programs yet.

\start
Date: Tue, 21 Dec 2004 20:38:12 +0600 (NOVT)
From: Andrey G. Grozin
To: Bill Page
Subject: re: windows/linux coherency

On Tue, 21 Dec 2004, Page, Bill wrote:
> Do you know how to create an rpm that works on all three
> "rpm-style" distributions? Or do you know a good "how-to"
> document? Would you be willing to help me prepare such an
> rpm for Axiom on Linux?
I used RedHat for years, and made my own rpms for it. Not difficult. At 
the moment, it would be easy to produce an rpm which would work on RHEL3 
and similar systems, and on Fedora - they are quite similar. "Native" 
Mandrake rpms typically use a lot of Mandrake-specific macros, and won't 
build on RedHat. In the other direction, things must be much easier, and 
most probably a RedHat rpm will be OK for Mandrake and its derivatives 
(ALTLinux etc.). Haven't much experience with SUSE other as a 
non-priviledged user (I'm writing this at a SUSE box), cannot say about 
constructing rpms for it.

> Debian we already have - Thanks to Camm Maguire.
Yes, this is very good. So, Debian, Ubuntu etc. people can rest assured 
:-)

> Fedora has some variant of apt-get doesn't it? I don't
> suppose a Debian/Fedora package is possible though, eh?
No. Fedora uses apt-get to install rpms, not debs.

\start
Date: Tue, 21 Dec 2004 09:22:46 -0500
From: Bill Page
To: Cliff Yapp
Subject: re: windows/linux coherency

On Tuesday, December 21, 2004 9:15 AM C Y wrote:
> 
> > A deb package for Debian and an .ebuild for Gentoo
> > would be also  useful.
> 
> I can take a stab at an ebuild, but it might be a bit of a 
> long process given Axiom's odd build system.

If you focus on a binary only install then for the most
part you don't have to worry about the build. All you have
to do is get the contents of the mnt/linux directory stuffed
into the right corners of that particular system.

> I've been meaning to take a stab at installing Axiom
> anyway, and (knock on wood) my system updates are almost
. done.
>  
> > As a Linux sysadmin, I'd at no circumstances install
> > something using some funny "installer" on my rpm-based
> system, or on Debian, or Gentoo.
> 
> Agreed.

Still sounds overly cautious to me. That is exactly the
same attitude I get from my Windows server sysadmins. We
are talking about linux after all, what is there to screw
up on a linux system that you can't fix. :)

\start
Date: Tue, 21 Dec 2004 06:15:24 -0800 (PST)
From: Cliff Yapp
To: Andrey G. Grozin,
Subject: re: windows/linux coherency

--- Andrey G. Grozin wrote:

> A deb package for Debian and an .ebuild for Gentoo would be also 
> useful.

I can take a stab at an ebuild, but it might be a bit of a long process
given Axiom's odd build system.  I've been meaning to take a stab at
installing Axiom anyway, and (knock on wood) my system updates are
almost done.
 
> As a Linux sysadmin, I'd at no circumstances install something using
> some funny "installer" on my rpm-based system, or on Debian, or 
> Gentoo.

Agreed.

\start
Date: Tue, 21 Dec 2004 06:59:37 -0800 (PST)
From: Cliff Yapp
To: Bill Page, Andrey G. Grozin
Subject: re: windows/linux coherency

--- Bill Page wrote:

> Maybe that's why there are so few linux systems running
> Maple and such programs ... :?) 

Nah, I think that's because we're all broke ;-).

> I understand your
> reluctance but as long as the installer is open source
> and widely used, I don't see any real problem - except
> of course that as far as I have been able to determine
> there are no such installer programs yet.

Well, if you're determined you might take a look at this:
http://www.icculus.org/loki_setup/
It's primarily for games but could probably work for this, too.

\start
Date: Tue, 21 Dec 2004 10:00:00 -0500
From: Bill Page
To: Andrey G. Grozin
Subject: re: windows/linux coherency

On Tuesday, December 21, 2004 9:38 AM Andrey G. Grozin
> 
> On Tue, 21 Dec 2004, Page, Bill wrote:
> > Do you know how to create an rpm that works on all three
> > "rpm-style" distributions? Or do you know a good "how-to"
> > document? Would you be willing to help me prepare such an
> > rpm for Axiom on Linux?
> I used RedHat for years, and made my own rpms for it. Not 
> difficult. At the moment, it would be easy to produce an
> rpm which would work on RHEL3 and similar systems, and on
> Fedora - they are quite similar.

Ok, great. I think that making such an rpm would indeed be
good progress. Would it be possible for you to do a "first
draft" of such an rpm? Then you could send it to me and
I could see if I understand the process and try to install
it on one of my RedHat systems.

> "Native" Mandrake rpms typically use a lot of Mandrake-specific 
> macros, and won't build on RedHat. In the other direction,
> things must be much easier, and most probably a RedHat rpm
> will be OK for Mandrake and its derivatives (ALTLinux etc.).

Ok, that can be a secondary goal.

> Haven't much experience with SUSE other as a non-privileged
> user (I'm writing this at a SUSE box), cannot say about 
> constructing rpms for it.

No problem. I know several people are using Axiom successfully
built from source on Suse. I think there was a significant
issue regarding clib or some such.

RPM for suse could be goal #3.

> 
> > Fedora has some variant of apt-get doesn't it? I don't
> > suppose a Debian/Fedora package is possible though, eh?
> No. Fedora uses apt-get to install rpms, not debs.
> 

Ok, thanks. I was clearly confused.

\start
Date: Tue, 21 Dec 2004 07:17:08 -0800 (PST)
From: Cliff Yapp
To: Bill Page
Subject: re: windows/linux coherency

--- Bill Page wrote:

> On Tuesday, December 21, 2004 9:15 AM C Y wrote:
> > 
> > > A deb package for Debian and an .ebuild for Gentoo
> > > would be also  useful.
> > 
> > I can take a stab at an ebuild, but it might be a bit of a 
> > long process given Axiom's odd build system.
> 
> If you focus on a binary only install then for the most
> part you don't have to worry about the build. All you have
> to do is get the contents of the mnt/linux directory stuffed
> into the right corners of that particular system.

Yes, that would be the "wimp out" way ;-).  It cuts against the grain
though - part of Gentoo is being able to build everything you possibly
can from source.  (Some people argue this improves performance - I like
it because it ensures everything you'll ever need for developing
anything is present, and the system is entirely self contained in the
sense it can recreate itself from source code.)

I'm not up to doing proper autoconf/automake stuff, but I may try to
hack up something to be able to use the more normal install commands. 
Fortunately the ebuild system allows local gentoo specific patches, so
any hackish stuff I do stays contained.

> Still sounds overly cautious to me. That is exactly the
> same attitude I get from my Windows server sysadmins. We
> are talking about linux after all, what is there to screw
> up on a linux system that you can't fix. :)

Very little, given a proper setup, but part of a distribution specific
package is that you can be pretty sure things are well integrated with
your "working environment", so to speak.  For example, the Maxima
ebuild integrates emacs support for Maxima into its logic, so if you
have told the system to install emacs specific components everything is
handled for you.  No "generic" installer would likely handle this,
since gentoo's emacs system is (AFAIK at least) unique.  So I would
have to figure out what the installer did by hand, and tweak it to
work.  At that point, I might as well build and install it myself, sans
installer.  Also, what about package upgrades in the future?  Will a
generic installer handle that cleanly?  What about removal? 
Dependancies?  All these things are handled by the various
distributions.  Frankly, I think Redhat, Mandrake, Debian, and Gentoo
users have much better reasons than Windows folk to prefer local
packages - the benefits are considerable.  Pretty much any mess in
Linux due to non-standard stuff can be cleaned up, but the process can
be rather painful.

However, there is no harm in creating such a package - if people using
more obscure systems prefer an installer to building it themselves, it
doesn't hurt to have that option available.

Typically, once a package is created for a distribution and the rough
spots ironed out, it's fairly straightforward to maintain that package
in the future barring major changes. 

\start
Date: Tue, 21 Dec 2004 13:34:27 -0500
From: Kostas Oikonomou
To: list
Subject: Progress on the Solaris 9 build
Cc: Camm Maguire

I've made some progress finally, thanks to a lot of help from Camm.
GCL 2.6.5 finally builds.

  After that, the make enters axiom--main--1--patch-17/src/boot.
Here things go well for a while, until this error:

272 making /home/build/axiom--main--1--patch-17/obj/sol9gcc/interp/g-util=
.lisp from /home/build/axiom--main--1--patch-17/src/interp/g-util.boot.pa=
mphlet
221 making /home/build/axiom--main--1--patch-17/obj/sol9gcc/interp/clam.l=
isp from /home/build/axiom--main--1--patch-17/src/interp/clam.boot.pamphl=
et
403 making /home/build/axiom--main--1--patch-17/obj/sol9gcc/interp/slam.l=
isp from /home/build/axiom--main--1--patch-17/src/interp/slam.boot.pamphl=
et
3 making /home/build/axiom--main--1--patch-17/obj/sol9gcc/bin/depsys

>
Loading /home/build/axiom--main--1--patch-17/obj/sol9gcc/interp/makedep.l=
isp

Error: Cannot open the file /home/build/axiom--main--1--patch-17/obj/sol9=
gcc/interp/sys-pkg.lsp.
Fast links are on: do (si::use-fast-links nil) for debugging
Error signalled by PROGN.
Broken at LOAD.  Type :H for Help.
>> make[3]: *** [/home/build/axiom--main--1--patch-17/obj/sol9gcc/bin/dep=
sys] Error 255
make[3]: Leaving directory `/home/build/axiom--main--1--patch-17/src/inte=
rp'
make[2]: *** [interpdir] Error 2
make[2]: Leaving directory `/home/build/axiom--main--1--patch-17/src'
make[1]: *** [srcdir] Error 2
make[1]: Leaving directory `/home/build/axiom--main--1--patch-17'
make: *** [all] Error 2
bash-2.05$



The problem is that all the files in obj/sol9gcc/interp are named ".lisp"=
, not ".lsp".

\start
Date: Tue, 21 Dec 2004 14:04:46 -0500
From: Bill Page
To: Kostas Oikonomou
Subject: RE: Progress on the Solaris 9 build
Cc: Camm Maguire

On Tuesday, December 21, 2004 1:34 PM Kostas Oikonomou
wrote:
> 
> I've made some progress finally, thanks to a lot of help
> from Camm. GCL 2.6.5 finally builds.

That's good news. I am also hoping to build a Solaris
version of Axiom.

> ... 
> The problem is that all the files in obj/sol9gcc/interp
> are  named ".lisp", not ".lsp".
> 

I might be necessary for you to set the the 'LISP' variable
differently in root Makefile.pamphlet in the section
<<Makefile.sol9gcc>> (Is this a new section that you have
defined for Solaris 9?)

The variable LISP is supposed to be set to the part of
the lisp file name after the last .

See for example the section <<Makefile.axposf1v3>> where
LISP=lisp in contrast in <<Makefile.linux>> where
LISP=lsp

You can try editing the Makefile.pamphlet and repeating
the make.

I hope that helps.

\start
Date: Tue, 21 Dec 2004 15:09:55 -0500
From: Tim Daly
To: Kostas Oikonomou
Subject: Re: Progress on the Solaris 9 build
Cc: Camm Maguire

i'm just starting a compile of --patch-17
i'll let you know my results.

\start
Date: Tue, 21 Dec 2004 15:34:11 -0500
From: Tim Daly
To: Kostas Oikonomou
Subject: Re: Progress on the Solaris 9 build

libintl. internationalization. got it.

there was an effort to internationalize axiom.
i collected most of the message strings into a file
and they are now looked up by hash-table.

the idea was to look at the locale variable and try to use a
different language for the messages. this was in the very early
days of internationalization.

the main sticking point is that i only speak one language 
so there wasn't much chance of any other translations given
that i was the only maintainer at ibm.

\start
Date: Tue, 21 Dec 2004 20:40:13 -0500
From: Tim Daly
To: list
Subject: axiom--main--1--patch-18

Changes by Steve Wilson:

src/interp/debugsys.boot
   rewritten to use the current AXIOM variable setting
src/interp/msgdb.boot
   gcl does not treat some strings as simple-arrays in interpreted code

\start
Date: Wed, 22 Dec 2004 02:20:07 +0100
From: Michel Lavaud
To: Bill Page
Subject: RE: windows/linux coherency

Hello Bill and everybody,

I am not sure I will be able to answer nor read any messages for a few days, 
as I my lab will be closed until 2nd week of next year, and I was informed 
yesterday that my adsl line at home will be unavailable for an undetermined 
duration, because of hardware upgrades in their lines. As Xmas and New 
Year are close, I'm not sure it will be available before lab reopens. I will try to 
find a temporary solution but if I can't, please forgive me.  In any case, I wish 
you a Merry Christmas and Happy New Year !

\start
Date: Wed, 22 Dec 2004 06:47:15 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [AxiomInterface] trying axiom

\begin{axiom}
solve(cos(x)+sin(x)=1/2)
\end{axiom}
--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomInterface#msg20041222064654-0600@page.axiom-developer.org

\start
Date: Wed, 22 Dec 2004 09:30:31 -0800 (PST)
From: Cliff Yapp
To: list
Subject: Ebuild underway

Hey gang.  I've got a (very) bare bones ebuild put together and am in
the process of building Axiom.  Turned out to be simpler than I thought
once I knew how to do it.  I'm using the 11-15 tarball as my base - is
that the correct one for the 1.0beta release?  Also, does this one have
graphics?  Is the /usr/bin/axiom command the one to have start it or
should I add a note about using something else?

\start
Date: Wed, 22 Dec 2004 16:18:47 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [AxiomInterface] 

++added:
This works remember the comment before the first command.

--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomInterface#msg20041222161847-0600@page.axiom-developer.org

\start
Date: Wed, 22 Dec 2004 16:25:04 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [AxiomInterface] 

??changed:
-This works remember the comment before the first command.
This works if you start with a comment instead of a command.

--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomInterface#msg20041222162504-0600@page.axiom-developer.org

\start
Date: Wed, 22 Dec 2004 16:26:43 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [AxiomInterface] 

--removed:
-
-From unknown Mon Dec 20 16:14:33 -0600 2004
-From: 
-Date: Mon, 20 Dec 2004 16:14:33 -0600
-Subject: trying axiom
-Message-ID: <20041220161433-0600@page.axiom-developer.org>
-In-Reply-To: <20041215041214-0600@page.axiom-developer.org>
-
-/begin{axiom}
-[1/1,1/4,3/4]
-/end{axiom}
-
-From unknown Mon Dec 20 16:15:56 -0600 2004
-From: 
-Date: Mon, 20 Dec 2004 16:15:56 -0600
-Subject: trying axiom
-Message-ID: <20041220161556-0600@page.axiom-developer.org>
-In-Reply-To: <20041220161433-0600@page.axiom-developer.org>
-
-[22 more lines...]

--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomInterface#msg20041222162643-0600@page.axiom-developer.org

\start
Date: Wed, 22 Dec 2004 14:44:07 -0800 (PST)
From: Cliff Yapp
To: Cliff Yapp, list
Subject: Re: Ebuild underway - success

Success - while I would not term it a mature ebuild, I do have one that
seems to get the job done.

http://bugs.gentoo.org/show_bug.cgi?id=75372

--- Cliff Yapp wrote:

> Hey gang.  I've got a (very) bare bones ebuild put together and am in
> the process of building Axiom.  Turned out to be simpler than I
> thought once I knew how to do it.  I'm using the 11-15 tarball as my 
> base - is that the correct one for the 1.0beta release?  Also, does 
> this one have graphics?  Is the /usr/bin/axiom command the one to 
> have start it or should I add a note about using something else?

\start
Date: Wed, 22 Dec 2004 18:29:51 -0500
From: Bill Page
To: Cliff Yapp
Subject: RE: Ebuild underway - success

C Y,

Congratulations on the Axiom ebuild. Good work!

The 11-15 tarball is already getting a little dated and
I think that it probably does not have graphics. The
best definition of what constitues Axiom 3.0 beta is the
contents of the CVS on Savannah. Perhaps you should point
your ebild to the nightly CVS tarball on Savannah instead:

  http://savannah.nongnu.org/cvs-backup/axiom-sources.tar.gz

The command /usr/bin/axiom will not start Axiom in graphics
mode. This script has not yet been updated. To use graphics
the script must run sman instead of AXIOMsys.

Regards,
Bill Page.

On Wednesday, December 22, 2004 5:44 PM C Y wrote:
> 
> Success - while I would not term it a mature ebuild, I do 
> have one that seems to get the job done.
> 
http://bugs.gentoo.org/show_bug.cgi?id=75372

--- Cliff Yapp wrote:

> Hey gang.  I've got a (very) bare bones ebuild put together and
> am in the process of building Axiom.  Turned out to be simpler
> than I thought once I knew how to do it.  I'm using the 11-15
> tarball as my base - is that the correct one for the 1.0beta
> release? Also, does this one have graphics?  Is the /usr/bin/axiom
> command the one to have start it or should I add a note about
> using something else?

\start
Date: Wed, 22 Dec 2004 16:30:05 -0800 (PST)
From: Cliff Yapp
To: Bill Page
Subject: RE: Ebuild underway - success

--- Bill Page wrote:

> C Y,
> 
> Congratulations on the Axiom ebuild. Good work!

Thanks :-).  About time I did something useful!
 
> The 11-15 tarball is already getting a little dated and
> I think that it probably does not have graphics. The
> best definition of what constitues Axiom 3.0 beta is the
> contents of the CVS on Savannah. Perhaps you should point
> your ebild to the nightly CVS tarball on Savannah instead:
> 
>   http://savannah.nongnu.org/cvs-backup/axiom-sources.tar.gz

Eeek.  I don't think that will work - there are special provisions for
CVS ebuilds, and IIRC it's a bit of a headache in some cases.  Then,
too, gentoo will mirror the file on many servers, and in such a case
the updates probably won't be mirrored.  Also, the digest would have to
be continually rebuilt each night.  Yuck.  It would be better to have
one tarball which constitutes the 3.0beta, or I suppose it could wait
for 3.0 final.  I'll leave it where it is for now, since on my machine
at least it builds :-).  I suspect the ebuild will likely need a little
polishing before it goes "live" (certainly in the DEPENDS section), and
that way people will have a nice incentive to upgrade to 3.0 final so
we don't get outdated bug reports.

> The command /usr/bin/axiom will not start Axiom in graphics
> mode. This script has not yet been updated. To use graphics
> the script must run sman instead of AXIOMsys.

I take it the intent is to update the script at some point?  End users
are going to expect /usr/bin/axiom to do the job, at least by 3.0
final. (If not I can always patch it, I suppose.)

\start
Date: Wed, 22 Dec 2004 17:00:55 -0800 (PST)
From: Cliff Yapp
To: Tim Daly
Subject: Re: Ebuild underway - success

--- Tim Daly wrote:

> C Y
> 
> The plan is to update savannah on the first of every month.
> We could put a tarball together of that build and keep it on
> mathaction.
> In fact, we should rebuid all the binaries at that time.

Sounds good.  Should we call the next month's version 3.0beta then?

\start
Date: Wed, 22 Dec 2004 20:32:17 -0500
From: Tim Daly
To: Cliff Yapp
Subject: Re: Ebuild underway - success

C Y

The plan is to update savannah on the first of every month.
We could put a tarball together of that build and keep it on mathaction.
In fact, we should rebuid all the binaries at that time.

\start
Date: Wed, 22 Dec 2004 21:22:56 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [#6 wrong integration result] (new) 

integrate((x^2)*(%e^(-x^2)),x=0..%plusInfinity) does not give
sqrt(%pi)/4.
--
forwarded from http://page.axiom-developer.org/zope/mathaction/6WrongIntegrationResult#msg20041222212251-0600@page.axiom-developer.org

\start
Date: Wed, 22 Dec 2004 22:13:51 -0600
From: MathAction (Bob McElrath)
To: MathAction
Subject: [#6 wrong integration result] (new)

Actually the text output is::

          _ 3
         | (-)
            2
   (28)  -----
           2
                    Type: Union(f1: OrderedCompletion Expression Integer,...)

which I assume is the Gamma function, but the tex is converted improperly::

    {{|{\overline {\ }}} 
    \left(
    {{3 \over 2}} 
    \right)}
    \over 2 
    \leqno(29)

i.e. clearly does *not* contain '\Gamma'.


--
forwarded from http://page.axiom-developer.org/zope/mathaction/6WrongIntegrationResult#msg20041223041351.GE8990@mcelrath.org

\start
Date: Wed, 22 Dec 2004 22:04:17 -0600
From: MathAction (Bob McElrath)
To: MathAction
Subject: [#6 wrong integration result] (new)

anonymous [MathAction] wrote:
> integrate((x^2)*(%e^(-x^2)),x=0..%plusInfinity) does not give
> sqrt(%pi)/4.

The answer it gives is correct (unless there is a new bug introduced
that is not on my axiom 0.20040831-1).  The gamma function has sqrt(pi)
for half-integer values.

\begin{axiom}
integrate(x^2*(exp(-x^2)), x=0..%plusInfinity)
Gamma(3/2)/2::Float
sqrt(%pi)/4::Float
\end{axiom}

What I don't understand is why the integration result is so hard to
convert to a Float.  Appending '::Float' to the 'integrate()' command
fails.  Why?  If I type 'Gamma(3/2)/2' by hand it has no problem.


--
forwarded from http://page.axiom-developer.org/zope/mathaction/6WrongIntegrationResult#msg20041223035753.GD8990@mcelrath.org

\start
Date: Thu, 23 Dec 2004 00:51:32 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [Found Objects] 

++added:

http://www-troja.fjfi.cvut.cz/~liska/ca/all.html -- COMPUTER ALGEBRA, Algorithms, Systems and Applications
Richard Liska, Ladislav Drska, Jiri Limpouch, Milan Sinor, Michael Wester, Franz Winkler;
June 2, 1997

--
forwarded from http://page.axiom-developer.org/zope/mathaction/FoundObjects#msg20041223005132-0600@page.axiom-developer.org

\start
Date: Thu, 23 Dec 2004 08:01:09 +0100
From: Martin Rubey
To: Cliff Yapp
Subject: Re: Ebuild / Versioning

Dear CY, dear Tim, *

the original plan concerning the recent release was to call it 3.0
BETA. However it seems that there were different versions available at
different places: MathAction Linux, MathAction Windows, Savannah.

At least one person (Meino) got a CVS ("axiom-2004-11-15") were graphics are
missing. Obviously, I should have checked myself that all versions were the
same, except *documented* differences. I'll learn.

So I think that -- according to Tims plan -- the update on savannah first
January will be still a 3.0BETA (or 3.0GAMMA, if you like). I'd argue that 3.0
should be a version were

* builds on all architectures were it should without depending on the knowledge
  of axiom-developer.

* all patches are reviewed and applied if appropriate, implying that the
  algebra on windows and linux are the same. As far as I know, Bill Page is
  already working on this.

* contains a clear label in the banner (i.e: AXIOM Computer Algebra System 3.0)

and I'd hope that this version would be out just before February.

A nice add on would be a future release plan, as done for maxima, that tells
users what changes / features they can expect from the next version.

C Y writes:
 > 
 > --- Tim Daly wrote:
 > 
 > > C Y
 > > 
 > > The plan is to update savannah on the first of every month.
 > > We could put a tarball together of that build and keep it on
 > > mathaction.
 > > In fact, we should rebuid all the binaries at that time.
 > 
 > Sounds good.  Should we call the next month's version 3.0beta then?

\start
Date: Thu, 23 Dec 2004 01:32:26 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [#6 wrong integration result] {|{\overline {\ } == Gamma?

It is possible to convert this peculiar monogram to \Gamma for
display but I think the problem is more fundamental. Clearly AXIOM
does not have a consistent and complete representation of the Gamma
function. I think integrate should at least return a Gamma that can
be converted to Float or something of type Expression Integer like
sqrt(%pi)/4. But it seems that the current Gamma function always
agressively returns a DoubleFloat value. This doesn't seem very
useful to me for symbolic computations.
--
forwarded from http://page.axiom-developer.org/zope/mathaction/6WrongIntegrationResult#msg20041223013223-0600@page.axiom-developer.org

\start
Date: Thu, 23 Dec 2004 01:42:53 -0600
From: MathAction (Bob McElrath)
To: MathAction
Subject: [#6 wrong integration result] {|{\overline {\ } == Gamma?

Bill, What is the type that is returned there?  How can I get axiom to
print the entire type rather than '...'?

I think therein lies the problem.  Note that
\begin{axiom}
integrate(x^2*(exp(-x^2)), x=0..%plusInfinity)::InputForm
\end{axiom}
seems correct.

P.S. IssueTracker + axiom rules.  Having axiom right here is so
powerful...  I will have to pay more attention to IssueTracker.  I was
half thinking to strip it when (if) I fork zwiki.  Right now
IssueTracker is a big hack that can't be uninstalled...

--
forwarded from http://page.axiom-developer.org/zope/mathaction/6WrongIntegrationResult#msg20041223074250.GG8990@mcelrath.org

\start
Date: Thu, 23 Dec 2004 01:11:11 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [Found Objects] 

??changed:
-http://www.dcs.st-and.ac.uk/~tom/pub/papers.html
-
-http://www.math.utah.edu/pub/tex/bib/axiom.dvi
http://www.dcs.st-and.ac.uk/~tom/pub/papers.html -- Tom Kelsey's refereed papers and theses; Formal methods in computational mathematics

http://www.math.utah.edu/pub/tex/bib/axiom.dvi -- A Bibliography of Publications about AXIOM; Nelson Beebe; 2002.

??changed:
-
-
http://mathforum.org/epigone/sci.math.symbolic/kerdchixwheh -- a topic from sci.math.symbolic
"On Axiom"


--
forwarded from http://page.axiom-developer.org/zope/mathaction/FoundObjects#msg20041223011111-0600@page.axiom-developer.org

\start
Date: Thu, 23 Dec 2004 16:39:33 +0100
From: Michel Lavaud
To: Bill Page
Subject: RE: windows/linux coherency

Hello Bill,

Back with good ol' 33k modem...

On 20 Dec 2004 at 18:18, Page, Bill wrote:

> Yes, either alternative would be easy to implement in tm_axiom.
> Would you consider manually setting or changing an environment
> variable "too difficult" for the average Windows user? 

Too difficult? No, I think (at least from 10 years experience with
AsTeX) that it's sufficient to indicate the procedure in the user's
manual and recall it eventually in a FAQ. The discussion list can
solve last problems for those who don't read manuals and don't know
all options of Windows. The only potential problem I would see is to
know whether user's modifications can be harmful or not : for env
vars, I think they can't because there is a well-defined procedure in
Windows to modify them that avoids regedit, and because TM_AXIOM is a
variable specific to AXIOM (e.g.  modifying the PATH env var could be
considered as more "dangerous", as it is shared by many other
programs).

If not
> then I think that is the best way to go. I can arrange to set
> this variable to some default during installation on Windows.
> How would you control this when running Axiom directly from
> CD?

At installation time. It is possible to enter this as a new key in the
registry, or in autoexec.bat. And if there will be an axiom.ini, it
would be possible to read it from the installed axiom.ini.
 
> I agree that it is undesirable to put all of Axiom in a
> sub-directory of the TeXmacs tree.
> 
> If the new tm_axiom consults the TM_AXIOM environment variable
> and finds
> 
>   TM_AXIOM=texbreaker:n
> 
> then it can be made to behave exactly the way the cygwin
> tm_axiom does now.

Great! I downloaded the latest version and it reads OK the parameter
value. Maybe it would be useful to add in the doc that it is necessary
to got out of TeXmacs and rerun it, to take into account a
modification?

Unfortunately, it seems that it is still necessary that axiomsys.exe
be either in the PATH or in the texmacs/plugins/axiom/bin directory. I
succeeded in making nevertheless Axiom run inside TeXmacs and keeping
axiomsys.exe in the Axiom tree, by adding an axiomsys.bat in the
TeXmacs\plugins\axiom\bin directory, then changing the bat extension
into exe extension, but it's a rather dirty and temporary hack. I
think it would be better if tm_axiom could find the true binary
axiomsys.exe from $AXIOM\bin.

I am sorry to insist on having (if possible) axiomsys.exe NOT run from
the PATH.  I know it's rather orthogonal to the usual practice on
Unixes, but on these systems there is a superuser that is supposed to
"know" and install everything cleanly. On Windows, users often install
themeselves, and they can install different versions or different
distributions of a given program, so that, if several binaries with
the same name are in the PATH, it can produce very strange
results. This is a classical problem e.g. for TeX distributions (and I
solved the pb in AsTeX in this way, so that it is compatible with all
other TeX installations, even if they use the PATH).

- For the "l" and "c" parameters in Sutor's output, these are the
"left" and "center" parameters of the array environment. In Sutor's
output, the "l" is used, but it is rendered centered inside TeXmacs,
as if the "c" parameter was used instead, so I suspect it is a bug in
TeXmacs import filter.

- For the output with nested arrays (in the example with -1/3 power), the structure is 
the following:

begin array
- 
   begin array 
     text
    \\
    \\
    text
  end array
text
end array

I think it ought to be either

begin array
- 
   \left( begin array 
     text
    \\
    \\
    text
  end array\righ)
text
end array

to be correct, and I supposed that, if the original form was intended
(i.e. with no \left( and \right)) then probably it ought to be

begin array
- 
   begin array 
     text
    \\
    text
  end array
    \\
ext
end array

i.e. the second \\ in the first array would seem to be incorrectly
placed.

Another reason I would suppose the original form is not what was
intended : the motivation for using a LaTeX array seems to be to break
a long line into several small ones. So :

- if one breaks a long part into 3,
- and then adds the sequel after the block of 3 lines on the same line,

it seems rather contradictory ?  But of course, it is just a supposition.

Your last question, about the possibility to run TeXmacs + Axiom
directly from the CD : yes, it works with apparently no problem
(although I did not test it very much).

And a last point about axiom.ts : I think there might be a problem on
Windows : the type is still written just after the number of the
formula, not on the next line. Is your modified axiom.ts supposed to
write it on the next line, or did I understand you incorrectly?
(sorry, I don't write from my PC, I answer just from memory - it might
be deficient :-))

\start
Date: Thu, 23 Dec 2004 11:33:37 -0500
From: Tim Daly
To: Martin Rubey
Subject: Re: Ebuild / Versioning

Well, there are likely to be 12 releases in 2005, one per month.
Since these are so frequent perhaps the month should be reflected
somewhere, as in 3.1 (jan), 3.2 (feb), etc or 2005.1, 2005.2, etc

Axiom prints the results of a call to (yearweek) which timestamps
the build.

\start
Date: Thu, 23 Dec 2004 11:49:39 -0500
From: Tim Daly
To: Kostas Oikonomou
Subject: Re: Progress on the Solaris 9 build

Btw, please copy list on all mail. There are a
lot of people on this list who can solve problems faster than I can as
I'm heavily multitasked.

Looks like a GCL problem in saving systems on Solaris 9.
It's odd, though, because in order to get this far you must have
already built two saved systems (bootsys, depsys). It's now trying
to build interpsys and failing.

In fact, it is failing with the line:

----------------------------------------------------------------
directoryp is undefined

Error: Cannot get relocated section contents

Fast links are on: do (si::use-fast-links nil) for debugging
Error signalled by MAPCAR.
Broken at LOAD.  Type :H for Help.
BOOT>>make[3]: *** [/home/build/axiom--main--1--patch-17/obj/sol9gcc/bin/interpsys] Error 255
make[3]: Leaving directory `/home/build/axiom--main--1--patch-17/src/interp'
make[2]: *** [interpdir] Error 2
make[2]: Leaving directory `/home/build/axiom--main--1--patch-17/src'
make[1]: *** [srcdir] Error 2
make[1]: Leaving directory `/home/build/axiom--main--1--patch-17'
make: *** [all] Error 2
----------------------------------------------------------------

I'll look to see where directoryp gets called in the process.

\start
Date: Thu, 23 Dec 2004 11:51:55 -0500
From: Tim Daly
To: Cliff Yapp
Subject: Re: Ebuild underway - success

C Y,

Could you document the steps you took to create the ebuild?
We need to capture the expertise as much as we need to capture
the final results. In fact, eventually a 'make ebuild' is
probably in order.

\start
Date: Thu, 23 Dec 2004 10:28:21 -0800 (PST)
From: Cliff Yapp
To: Tim Daly
Subject: Re: Ebuild underway - success

--- Tim Daly wrote:

> C Y,
> 
> Could you document the steps you took to create the ebuild?
> We need to capture the expertise as much as we need to capture
> the final results. 

Well, there wasn't a whole lot of expertise involved - it was basically
trial and error until I found the set of ebuild incantations that
worked.  Think of it as writing a configure or make script, only
simpler.  The only tricky part was figuring out how and where to set
the AXIOM and PATH variables - with that attended to, everything else
is pretty much in the Axiom build scripts' ballpark.  I was afraid it
would be hard, but on the whole it's quite simple thanks to Axiom's
self-contained build nature.

>From here on, it will basically be tweaking the ebuild to adapt to any
changes in the Axiom build process, providing patches if needed, and
figuring out the proper dependancies to list.  Typically this is done
on the bugs.gentoo.org site, with some help from upstream if they are
interested and the bug is non-ebuild specific.  Gentoo users often have
newer libraries than average, so they sometimes hit unusual problems.

> In fact, eventually a 'make ebuild' is probably in order.

Uh...  I'm not really sure if a "make ebuild" command would make any
sense.  An ebuild is, in some sense, a gentoo-specific set of building
instructions, unlike deb and rpm files which are actual bundles of the
software.  It's (probably) not something Axiom will need to distribute
- once the set of instructions is put in the gentoo ebuild tree, if
someone wants to install axiom the ebuild essentially tells the
computer what to do.  If patch files are needed to the base tarball,
those are provided as well. Essentially, an ebuild has the following
information:

a)  where to download the software (providing a gentoo mirror doesn't
have it, if it does it is downloaded from there first.)

b)  Any support software needed (X, tetex, etc)

b)  how to unpack and configure the software for building, including
any patches needed for gentoo specifically

c)  how to build it, and install it

So in essence, Axiom doesn't have to worry about the ebuild except to
have someone check that everything is working.  Gentoo takes the
vanilla release tarball, and works with that to make things happen.  If
you're familiar with the BSD ports tree, gentoo uses the same basic
idea.  For example, with the current ebuild in bugzilla I have one
patch which changes the ./configure options for gcl.  Normally this is
not needed, but on gentoo system the more conservative settings are
needed, so I provide a patch making this change.  With
axiom--main--1--patch--18 the gcl settings have moved, so I created a
new patch for that.  (I've yet to complete a successful ebuild with
axiom--main--1--patch--18, so I'm not sure if something else will be
needed.  At one point the Axiom terminal interface popped up and CPU
and disk activity went to zero, which doesn't seem right.)  Other than
that, if all that needs to be done is change the location of the
tarball in the ebuild, point it to the new patches, and away it goes.

That said (pant pant), did you have something specific in mind for
"make ebuild" Tim?  Just because I don't see it doesn't mean I'm not
missing something.

Now, in some cases there are binary ebuilds that are maintained as
alternatives to the source ebuilds, in the case of VERY large software
like OpenOffice.  I don't know whether one is needed for Axiom - I
suspect the users will let us know. :-).

CY

P.S.  Oh, one other neat feature - as Axiom becomes known to compile on
other platforms than x86 (maybe it already does?) there are flags in
the ebuild which can be set to indicate it works on, say PPC.

\start
Date: Thu, 23 Dec 2004 12:53:39 -0600
From: MathAction (kratt6)
To: MathAction
Subject: [Axiom Development] 

??changed:
-the way Linus Torvolds does kernel development to try to understand
the way Linus Torvalds does kernel development to try to understand

--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomDevelopment#msg20041223125339-0600@page.axiom-developer.org

\start
Date: Thu, 23 Dec 2004 14:40:22 -0500
From: Tim Daly
To: Cliff Yapp
Subject: Re: Ebuild underway - success

CY,

>So in essence, Axiom doesn't have to worry about the ebuild except to
>have someone check that everything is working.  Gentoo takes the
>vanilla release tarball, and works with that to make things happen.  If
>you're familiar with the BSD ports tree, gentoo uses the same basic
>idea.  For example, with the current ebuild in bugzilla I have one
>patch which changes the ./configure options for gcl.  Normally this is
>not needed, but on gentoo system the more conservative settings are
>needed, so I provide a patch making this change.  With
>axiom--main--1--patch--18 the gcl settings have moved, so I created a
>new patch for that.  (I've yet to complete a successful ebuild with
>axiom--main--1--patch--18, so I'm not sure if something else will be
>needed.  At one point the Axiom terminal interface popped up and CPU
>and disk activity went to zero, which doesn't seem right.)  Other than
>that, if all that needs to be done is change the location of the
>tarball in the ebuild, point it to the new patches, and away it goes.

The axiom mechanism for this is to modify the Makefile.pamphlet to
introduce a new <<makefile.gentoo>> chunk. Then gentoo users would
set the AXIOM variable to:

AXIOM=`pwd`/axiom/mnt/gentoo
                      ^^^^^^
                       this selects the makefile.gentoo chunk
which is where you would put the new .configure



Also, the 'pop up a terminal and hang' issue seems to have something
to do with a race condition. Graphics works and it is running some
graphics input test file (likely wiggle.input). If the graphics window
does not start, say because you do not have xhost permission to open
a window, then the build hangs.

\start
Date: Thu, 23 Dec 2004 11:51:51 -0800 (PST)
From: Cliff Yapp
To: Tim Daly
Subject: Re: Ebuild underway - success

--- Tim Daly wrote:

> CY,
> 
> The axiom mechanism for this is to modify the Makefile.pamphlet to
> introduce a new <<makefile.gentoo>> chunk. Then gentoo users would
> set the AXIOM variable to:
> 
> AXIOM=`pwd`/axiom/mnt/gentoo
>                       ^^^^^^
>                        this selects the makefile.gentoo chunk
> which is where you would put the new .configure
 
Hmm.  OK, this should work - I guess the thing to do is check that the
latest monthly release builds using this section on an up to date
gentoo install before bumping the ebuild version number.
 
> Also, the 'pop up a terminal and hang' issue seems to have something
> to do with a race condition. Graphics works and it is running some
> graphics input test file (likely wiggle.input). If the graphics
> window does not start, say because you do not have xhost permission 
> to open a window, then the build hangs.

That's probably it.  This will most likely be a problem, because AFAIK
there isn't any way to insist that emerge has access to an X server. 
(In fact, in many situations it definitely won't.)  Is there a toggle
that could be set to build the graphics, but not run the live test?

For the moment I did a xhost +localhost to (hopefully) allow things to
proceed - I'll let you know if it makes it the rest of the way. 
Impressive stuff Tim - I'm really looking forward to trying out
graphics :-).  Thanks for all your hard worK!

\start
Date: Thu, 23 Dec 2004 12:19:30 -0800 (PST)
From: Cliff Yapp
To: Tim Daly
Subject: Re: Ebuild underway - success

Crud.  It hung again, and you called it Tim - it's wiggle.  Below is
the text from the point where things stop.  I guess I should try a
non-ebuild build to see if that works.

967a making
/var/tmp/portage/axiom-3.0b/work/axiom/int/input/wiggle.output from 
/var/tmp/portage/axiom-3.0b/work/axiom/int/input/wiggle.input
sman:main entered
sman:process_options entered
sman:set_up_defaults entered
sman:set_up_defaults exit
sman:process_arguments entered
  sman -noclef -gr -nonag -noht -noiw -ihere -ihere -nox -ws
'$AXIOM/bin/AXIOMsy
s' -grprog '$AXIOM/lib/viewman' -nagprog '$AXIOM/lib/nagman' -htprog
'$AXIOM/bin
/hypertex -s' -clefprog '' -sessionprog '$AXIOM/lib/session'
-clientprog '$AXIOM
/lib/spadclient' -rm '(null)' -rv '(null)' -paste '(null)' 
sman:process_arguments exit
sman:process_options exit
sman:start_the_local_spadclient: $AXIOM/lib/spadclient
                        AXIOM Computer Algebra System 
             Version of Thursday December 23, 2004 at 13:16:17 
-----------------------------------------------------------------------------
   Issue )copyright to view copyright notices.
   Issue )summary for a summary of useful system commands.
   Issue )quit to leave AXIOM and return to shell.
-----------------------------------------------------------------------------
 
   Using local database
/var/tmp/portage/axiom-3.0b/work/axiom/mnt/linux/algebra
/compress.daase..   Re-reading compress.daase   Using local database
/var/tmp/po
rtage/axiom-3.0b/work/axiom/mnt/linux/algebra/interp.daase..  
Re-reading interp
.daase
   Using local database
/var/tmp/portage/axiom-3.0b/work/axiom/mnt/linux/algebra
/operation.daase..   Re-reading operation.daase
   Using local database
/var/tmp/portage/axiom-3.0b/work/axiom/mnt/linux/algebra
/category.daase..   Re-reading category.daase
   Using local database
/var/tmp/portage/axiom-3.0b/work/axiom/mnt/linux/algebra
/browse.daase..   Re-reading browse.daase
(1) -> 
(1) -> 

\start
Date: Thu, 23 Dec 2004 15:24:00 -0500
From: Bill Page
To: Michel Lavaud
Subject: RE: windows/linux coherency

On Thursday, December 23, 2004 10:40 AM Michel Lavaud
wrote:
> Bill Page wrote:
> > 
> > If the new tm_axiom consults the TM_AXIOM environment variable
> > and finds
> > 
> >   TM_AXIOM=texbreaker:n
> > 
> > then it can be made to behave exactly the way the cygwin
> > tm_axiom does now.
> 
> Great! I downloaded the latest version and it reads OK the 
> parameter value.

Note of course that the syntax has changed a little to
conform to the Axiom )set output command. So the above
should be written:

TM_AXIOM='breaker no'

> Maybe it would be useful to add in the doc that it is necessary
> to got out of TeXmacs and rerun it, to take into account a
> modification?

Ok, thanks.

> 
> Unfortunately, it seems that it is still necessary that 
> axiomsys.exe be either in the PATH or in the
>   texmacs/plugins/axiom/bin
> directory. I succeeded in making nevertheless
> Axiom run inside TeXmacs and keeping axiomsys.exe in the Axiom 
> tree, by adding an axiomsys.bat in the TeXmacs\plugins\axiom\bin
> directory, then changing the bat extension into exe extension,
> but it's a rather dirty and temporary hack. I think it would be
> better if tm_axiom could find the true binary axiomsys.exe 
> from $AXIOM\bin.
>

tm_axiom already finds axiomsys.exe from $AXIOM\bin. tm_axiom
does not use the PATH.

The problem that you are having is that TeXmacs itself is looking
for AXIOMsys as a sign that it should include Axiom in the
Insert/Session menu. It serves no other purpose so your hack is
not so bad. TeXmacs also looks for tm_axiom in the PATH but
TeXmacs adds
 texmacs/plugins/axiom/bin
to the PATH variable locally before doing the search so if
you move tm_axiom here (as is usual in TeXmacs installations)
then you will not have a problem.

In the windows Axiom installer puts tm_axiom in the
  $AXIOM/mnt/windows/bin
directory since it can not be sure whether TeXmacs is present or
not. The current native Windows version of TeXmacs does not
include any tm_axiom binary, but as long as the PATH includes
  $AXIOM/mnt/windows/bin
then everything works.
 
> I am sorry to insist on having (if possible) axiomsys.exe NOT 
> run from the PATH.  I know it's rather orthogonal to the usual
> practice on Unixes, but on these systems there is a superuser
> that is supposed to "know" and install everything cleanly. On 
> Windows, users often install themeselves, and they can install
> different versions or different distributions of a given program,
> so that, if several binaries with the same name are in the PATH,
> it can produce very strange results. This is a classical 
> problem e.g. for TeX distributions (and I solved the pb in 
> AsTeX in this way, so that it is compatible with all other
> TeX installations, even if they use the PATH).

I understand. That is not a problem I said above. To correct
this behaviour requires a change to the axiom_init script in
TeXmacs so that it not longer looks for AXIOMsys. Maybe it
should look for the AXIOM environment variable instead. But
right now I do not know enough about scheme scripts in TeXmacs
to make even this simple change.

If
  $AXIOM/mnt/windows/bin
is not in the PATH, then right now I can only think of one
minor problem that would affect the way AXIOM works. The current
version of AXIOM for Windows expects to be able to run a program
called 'cat' (after the unix command of the same name), it order
to display some help files. In the current version there is a
simple 'cat.exe' program in 
  $AXIOM/mnt/windows/bin
that does the job. I think you will have to move this to
  texmacs/plugins/axiom/bin
so that the )summary command will work in your CD configuration.

> 
> - For the "l" and "c" parameters in Sutor's output, these are 
> the "left" and "center" parameters of the array environment.
> In Sutor's output, the "l" is used, but it is rendered centered
> inside TeXmacs, as if the "c" parameter was used instead, so I 
> suspect it is a bug in TeXmacs import filter.

Are you familiar with how to file a bug report for TeXmacs.
If not, then I can do this later.

> 
> - For the output with nested arrays (in the example with -1/3 
> power), the structure is the following:
> 
> begin array
> - 
>    begin array 
>      text
>     \\
>     \\
>     text
>   end array
> text
> end array
> 
> I think it ought to be either
> 
> begin array
> - 
>    \left( begin array 
>      text
>     \\
>     \\
>     text
>   end array\righ)
> text
> end array
> 
> to be correct, and I supposed that, if the original form was 
> intended (i.e. with no \left( and \right)) then probably it
> ought to be
> 
> begin array
> - 
>    begin array 
>      text
>     \\
>     text
>   end array
>     \\
> ext
> end array
> 
> i.e. the second \\ in the first array would seem to be 
> incorrectly placed.
> 
> Another reason I would suppose the original form is not what 
> was intended : the motivation for using a LaTeX array seems
> to be to break a long line into several small ones. So :
> 
> - if one breaks a long part into 3,
> - and then adds the sequel after the block of 3 lines on the
> same line, it seems rather contradictory ?  But of course,
> it is just a supposition.
> ... 
> And a last point about axiom.ts : I think there might be a 
> problem on Windows : the type is still written just after the
> number of the formula, not on the next line. Is your modified
> axiom.ts supposed to write it on the next line, or did I
> understand you incorrectly? (sorry, I don't write from my PC,
> I answer just from memory - it might be deficient :-))
> 

Yes, that is what the modified axiom.ts does. It forces the
Type: information to a new line. In order to use it, you
*must* replace the existing axiom.ts in TeXmacs with the
new one manually copied from
  $AXIOM\mnt\windows\src\texmacs
To just install AXIOM for windows alone is not enough. I do not
know how to make this automatic.

\start
Date: Thu, 23 Dec 2004 14:29:07 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [#4 )copyright does not work on MathAction] test

\begin{axiom}
)copyright
\end{axiom}
--
forwarded from http://page.axiom-developer.org/zope/mathaction/4CopyrightDoesNotWorkOnMathAction#msg20041223142844-0600@page.axiom-developer.org

\start
Date: Thu, 23 Dec 2004 15:15:58 -0600
From: MathAction (Bob McElrath)
To: MathAction
Subject: [FrontPage] 

Inconsistent treatment:
\begin{axiom}
factor(simplify((1+x)^3))
\end{axiom}
vs.
\begin{axiom}
factor((1+x)^3)
\end{axiom}

simplify changes the type to 'Expression Integer', where the original
was 'Polynomial Integer'.

--
forwarded from http://page.axiom-developer.org/zope/mathaction/FrontPage#msg20041223211537.GF14419@mcelrath.org

\start
Date: Thu, 23 Dec 2004 16:48:37 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [#7 Simplify changes the type of an expression] (new) 

\begin{axiom}
factor(simplify((1+x)^3))
\end{axiom}
vs.
\begin{axiom}
factor((1+x)^3)
\end{axiom}

simplify changes the type to 'Expression Integer', where the original was 'Polynomial Integer'.

--
forwarded from http://page.axiom-developer.org/zope/mathaction/7SimplifyChangesTheTypeOfAnExpression#msg20041223164828-0600@page.axiom-developer.org

\start
Date: Thu, 23 Dec 2004 16:59:36 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [FrontPage] 

--removed:
-
-From BobMcElrath Thu Dec 23 15:15:34 -0600 2004
-From: Bob McElrath
-Date: Thu, 23 Dec 2004 15:15:34 -0600
-Subject: 
-Message-ID: <20041223211537.GF14419@mcelrath.org>
-In-Reply-To: <20041223142844-0600@page.axiom-developer.org>
-
-Inconsistent treatment:
-\begin{axiom}
-factor(simplify((1+x)^3))
-\end{axiom}
-vs.
-\begin{axiom}
-factor((1+x)^3)
-\end{axiom}
-
-simplify changes the type to 'Expression Integer', where the original
-was 'Polynomial Integer'.
-[1 more lines...]

--
forwarded from http://page.axiom-developer.org/zope/mathaction/FrontPage#msg20041223165936-0600@page.axiom-developer.org

\start
Date: Thu, 23 Dec 2004 17:55:05 -0800 (PST)
From: Cliff Yapp
To: Tim Daly
Subject: Re: Ebuild underway - success

--- Cliff Yapp wrote:

> Crud.  It hung again, and you called it Tim - it's wiggle.  Below is
> the text from the point where things stop.  I guess I should try a
> non-ebuild build to see if that works.

Crud.  For the record, it also failed in a straight build, same
(non)error from the looks of it.  What kind of permissions do I need to
have set?  Does X need to be listening for tcp?

Sorry to cause so much ruckus.

\start
Date: Thu, 23 Dec 2004 21:53:04 -0500
From: Tim Daly
To: Cliff Yapp
Subject: Re: Ebuild underway - success

CY,

type

touch int/input/wiggle.output

and restart the make (don't do a make clean)

The makefile will see that wiggle.output exists and will not rerun it.

\start
Date: Thu, 23 Dec 2004 20:48:09 -0800 (PST)
From: Cliff Yapp
To: Tim Daly
Subject: Re: gentoo - plotting works outside of build

--- Tim Daly wrote:

> CY,
> 
> type
> 
> touch int/input/wiggle.output
> 
> and restart the make (don't do a make clean)
> 
> The makefile will see that wiggle.output exists and will not rerun
> it.

Well, I did that and ran the sman command from the temp build directory
- graphing seems to work fine!  Weird.  Oh well - nice to have it
working!  Thanks Tim.  So I guess this and the gcl config changes
should go in the gentoo section of the Makefile.pamphlet?

\start
Date: Fri, 24 Dec 2004 00:37:39 -0500
From: Tim Daly
To: Cliff Yapp
Subject: makefile.gentoo

Only the ./configure changes for GCL should go there.
Copy the makefile.linux and change the config line.
(Be sure to use the one from axiom--main--1)
If you send me the config line I'll patch axiom--main--1 to handle gentoo.

The wiggle problem is one I'm chasing but have no resolution yet.
Likely I'll just skip graphics testing during build because it
raises a lot of issues (such as automated builds that don't have
xhost privs).

\start
Date: Fri, 24 Dec 2004 16:18:12 +0600 (NOVT)
From: Andrey G. Grozin
To: Cliff Yapp
Subject: Re: Ebuild underway - success

On Thu, 23 Dec 2004, C Y wrote:
> > Also, the 'pop up a terminal and hang' issue seems to have something
> > to do with a race condition. Graphics works and it is running some
> > graphics input test file (likely wiggle.input). If the graphics
> > window does not start, say because you do not have xhost permission 
> > to open a window, then the build hangs.
> That's probably it.  This will most likely be a problem, because AFAIK
> there isn't any way to insist that emerge has access to an X server. 
> (In fact, in many situations it definitely won't.)  Is there a toggle
> that could be set to build the graphics, but not run the live test?
I very much second this request. In many cases (e.g., Debian with all its 
arcghitectures) package building will run in batch mode, an a compilation 
farm, which probably has no X running.

\start
Date: Fri, 24 Dec 2004 16:55:52 -0500
From: Tim Daly
To: list
Subject: book--main--1--patch-5

The book--main--1 branch has been updated.

--patch-4
  added bookvol4.pamphlet (Developers Guide)
--patch-5
  added endpapers.pamphlet (Diagrams of the algebra and data hierarchy)

\start
Date: Mon, 27 Dec 2004 05:17:16 -0600
From: MathAction (kratt6)
To: MathAction
Subject: [CallForSoftware] 


??changed:
-* let us know that they exist at list.
* let us know that they exist at list or via Martin Rubey.

--
forwarded from http://page.axiom-developer.org/zope/mathaction/CallForSoftware#msg20041227051715-0600@page.axiom-developer.org

\start
Date: Mon, 27 Dec 2004 05:20:14 -0600
From: MathAction (kratt6)
To: MathAction
Subject: [CallForSoftware] 

??changed:
-* let us know that they exist at list or via Martin Rubey.
* let us know that they exist at list or via Martin Rubey.

--
forwarded from http://page.axiom-developer.org/zope/mathaction/CallForSoftware#msg20041227052014-0600@page.axiom-developer.org

\start
Date: Mon, 27 Dec 2004 07:24:35 -0500
From: Tim Daly
To: Barry Trager
Subject: axiom--algebra--1

Barry,

I've added a new development branch for the algebra code you sent.
See http://arch.axiom-developer.org and look for axiom--algebra--1
>From there you'll be able to download the code. If you follow the
directions on that page and send me a key I can give you write access.

I'll upload and integrate your code into this branch shortly.
Can you give me a link to the groebner basis package?

Let me know if you have any questions.

\start
Date: Mon, 27 Dec 2004 07:30:24 -0500
From: Tim Daly
To: list
Subject: code release

I'll be working on the monthly code release to savannah this week.
I expect to be away on the 1st so it will likely happen slightly early.

If one of you is feeling ambitious it would be good to gather the 
known bugs into a single pamphlet that we could include in the top
directory. Ideally each bug has an explanation and a failing test case. 

\start
Date: Mon, 27 Dec 2004 12:55:07 +0100
From: Martin Rubey
To: Tim Daly
Subject: Re: software archeology / new structure on MathAction

Dear Tim, *

Tim Daly writes:
 > Martin,
 > 
 > >I hope I'm not being too annoying: I still did not get permission to use
 > >the email adresses provided on the old earthlink page. I really would like
 > >to send this out...
 > 
 > sorry, just saw this email...
 > 
 > you can use the addresses. do you have them? the earthlink page is gone.  i
 > can find them around here if you don't have them.

Yes, using the internet archive :-)

 > btw, use Tim Daly for email. i only look at my work email when i come
 > to work but i monitor the Tim Daly address all day.

Hmm, in fact I usually send it to Tim Daly. I thought you were just too
busy...

If there are no comments within the next few hours, I'll send out 

http://page.axiom-developer.org/zope/mathaction/CallForSoftware

tomorrow morning (European time) to sci.math.symbolic and the Tim's email
adresses.

Furthermore, there will be a proposal for a new FrontPage on 

http://page.axiom-developer.org/zope/mathaction/SandBox

shortly. I thought a little about a sensible structure, unfortunately I left
the notes at home, so I can only tell you that I arrived something more or less
OK... I found that it's not that easy, since there are several different "User"
profiles:

* the sponsor who wants to check that his name is mentioned often enough, and
  maybe is interested in some superficial facts

* the guy passing by, who is mainly interested in some superficial facts, but
  might want to try it out.

* the newbie looking for help solving his homework

* the advanced user, who is looking for something very specific

* the developer...

If you like it, I'll make it the "real" FrontPage and you can then make
MathAction the new homepage. In any case, I will have transferred everything
until tomorrow morning.

\start
Date: Mon, 27 Dec 2004 13:03:00 +0100
From: Martin Rubey
To: Tim Daly
Subject: Re: code release

root writes:
 > I'll be working on the monthly code release to savannah this week.
 > I expect to be away on the 1st so it will likely happen slightly early.

Great. I suspect this will make most of the build troubles go away. However,
(just as a reminder) please call it BETA (or nothing at all) until the proposed
fixes are integrated.

 > If one of you is feeling ambitious it would be good to gather the 
 > known bugs into a single pamphlet that we could include in the top
 > directory. Ideally each bug has an explanation and a failing test case. 

Is it possible to "export" the list of bugs from savannah somehow?

And since I still didn't get an answer: what about bug #5977 ? Do you have a
patch lying around somewhere. If not, we really should "reopen" it!

Another bug issue: The possibility of using axiom to demonstrate failures in
IssueTracker is superb, I do agree. But caution: it is absolutely necessary to
include a version number for each of those bugs, since, as soon as axiom is
upgraded on MathAction, these bugs won't be reproducible there anymore!

\start
Date: Mon, 27 Dec 2004 08:07:29 -0500
From: Tim Daly
To: Martin Rubey
Subject: Re: code release

>Great. I suspect this will make most of the build troubles go
>away. However, (just as a reminder) please call it BETA (or nothing at
>all) until the proposed fixes are integrated.

Umm, I don't propose to call it anything. I leave that up to the director
of marketing. I'm going to download, build, and test axiom--main--1 on
all the platforms I have available and, if it passes, promote it to 
savannah. Then I need to grab the savannah copy and redo the testing to
ensure I didn't make a mistake. Following that we have to chase down all
of the binaries and upgrade them. 

I don't yet have the ability to do this for the windows versions. We
need to get the scripts in place so I can automate the task but
probably not for this version as it is bad practice to change anything
at the last minute.

>Is it possible to "export" the list of bugs from savannah somehow?

By hand, I'd assume. Bug tracking has traditionally been done in the
input subdirectory. Several files there have bug fixes with listed
dates as well as some known bugs that are pre-NAG. Besides, these
bugs need to be better documented. I've been so busy making new bugs
and killing them before they get off my desk to concentrate on the
outstanding bugs.

>And since I still didn't get an answer: what about bug #5977 ? Do you have a
>patch lying around somewhere. If not, we really should "reopen" it!

It appears that the problem is a semantic one. The listed "bug" is
requesting that (x^2) be added to 1::DMP([x],INT) rather than
(x^2+1)::DMP([x],INT), which works.

==========================================================================
-> axiom
                        AXIOM Computer Algebra System 
              Version of Tuesday October 26, 2004 at 23:09:19 
-----------------------------------------------------------------------------
   Issue )copyright to view copyright notices.
   Issue )summary for a summary of useful system commands.
   Issue )quit to leave AXIOM and return to shell.
-----------------------------------------------------------------------------
 
(1) -> (x^2+1)::DMP([x],INT)

         2
   (1)  x  + 1
                         Type: DistributedMultivariatePolynomial([x],Integer)
==========================================================================


Now doing this:

==========================================================================
(2) -> 1::DMP([x],INT)
      

   (2)  1
                         Type: DistributedMultivariatePolynomial([x],Integer)
(3) -> %+x^2
 
   >> System error:
   Caught fatal error [memory may be damaged]

protected-symbol-warn called with (NIL)
==========================================================================

clearly fails but that's the color of a different duck and, clearly, is
still an outstanding bug.


>Another bug issue: The possibility of using axiom to demonstrate failures in
>IssueTracker is superb, I do agree. But caution: it is absolutely necessary to
>include a version number for each of those bugs, since, as soon as axiom is
>upgraded on MathAction, these bugs won't be reproducible there anymore!

IssueTracker? Did I miss a memo?

\start
Date: Mon, 27 Dec 2004 08:10:30 -0500
From: Tim Daly
To: list
Subject: hyperdoc

Is there a C programmer on this list with a good set of C debugging tools?
I'd like some help getting the axiom--hyperdoc--1 branch working. It is
segfaulting in the C code. It looks like a write to uninitialized memory.
The code is nearly complete but needs some cleanup work.

\start
Date: Mon, 27 Dec 2004 13:57:51 +0100
From: Martin Rubey
To: Tim Daly
Subject: Re: code release

root writes:
 > >Is it possible to "export" the list of bugs from savannah somehow?
 > 
 > By hand, I'd assume. Bug tracking has traditionally been done in the input
 > subdirectory. Several files there have bug fixes with listed dates as well
 > as some known bugs that are pre-NAG. Besides, these bugs need to be better
 > documented. I've been so busy making new bugs and killing them before they
 > get off my desk to concentrate on the outstanding bugs.
 > 
 > >And since I still didn't get an answer: what about bug #5977 ? Do you have
 > >a patch lying around somewhere. If not, we really should "reopen" it!
 > 
 > It appears that the problem is a semantic one. The listed "bug" is
 > requesting that (x^2) be added to 1::DMP([x],INT) rather than
 > (x^2+1)::DMP([x],INT), which works.

yes. but,
 > Now doing this:
 > 
 > ==========================================================================
 > (2) -> 1::DMP([x],INT)
 >       
 > 
 >    (2)  1
 >                          Type: DistributedMultivariatePolynomial([x],Integer)
 > (3) -> %+x^2
 >  
 >    >> System error:
 >    Caught fatal error [memory may be damaged]
 > 
 > protected-symbol-warn called with (NIL)
 > ==========================================================================
 > 
 > clearly fails but that's the color of a different duck and, clearly, is
 > still an outstanding bug.

YES, but it's clearly marked as "closed". I didn't know that
(x^2+1)::DMP([x],INT) didn't work once upon a time, but #5977 says that
x^2+1::DMP([x],INT) doesn't work. PLEASE reopen it! (I don't have permission on
savannah.)

 > >Another bug issue: The possibility of using axiom to demonstrate failures in
 > >IssueTracker is superb, I do agree. But caution: it is absolutely necessary to
 > >include a version number for each of those bugs, since, as soon as axiom is
 > >upgraded on MathAction, these bugs won't be reproducible there anymore!
 > 
 > IssueTracker? Did I miss a memo?

It seems so: Bill installed IssueTracker on MathAction, which might serve as a
replacement for the savannah bug list. You can look at it by pressing "issues"
at the top left in MathAction.

Martin.

PS: I have a slight problem presenting the CAISS logo on the "new" FrontPage at 

http://page.axiom-developer.org/zope/mathaction/SandBox

I'm not a web "designer". As soon as we have at least three sponsors, this
won't be a problem anymore, since we then can simply put the logos side by
side. But currently, it's very ugly :-(

\start
Date: Mon, 27 Dec 2004 08:48:29 -0500
From: Tim Daly
To: Martin Rubey
Subject: Re: code release

Martin,

Bug 5977 is reopened with additional comments.

\start
Date: Mon, 27 Dec 2004 09:21:32 -0500
From: William Sit
To: Tim Daly, Martin Rubey
Subject: Re: code release: Bug#5977

Martin and Tim:


(1) -> a:=1::DMP(['x],INT)

   (1)  1
               Type: DistributedMultivariatePolynomial([x],Integer)
(2) -> a::POLY INT

   >> System error:
   Caught fatal error [memory may be damaged]

protected-symbol-warn called with (NIL)
(2) -> variables(a)

   (2)  []
                                           Type: List OrderedVariableList [x]
(3) -> a::INT::POLY INT

   (3)  1
                                Type: Polynomial Integer

(4) -> 1::DMP([x],INT)::POLY INT


   >> System error:
   Caught fatal error [memory may be damaged]

protected-symbol-warn called with (NIL)

(5) -> 1::DMP([x],INT)::DMP([y],INT)

   (5)  1
               Type: DistributedMultivariatePolynomial([y],Integer)

and 

1::POLY INT :: DMP([x],INT) 
x::DMP([x],INT)::POLY INT
1::DMP([x,y],INT)::POLY INT 
1::EXPR INT:: POLY INT 
1::UP(x,INT)::POLY INT
 
and (surprise!) even
 
1::DMP([x],INT)::POLY FRAC INT

all worked!


This bug also exists in the NAG version, where the first (2) would give "Memory
access violation detected".  Two observations: (a) the coercion in (2), shows
the interpreter does not follow the two steps in (3); and (b) the problem is
specific to POLY INT. It may also have to do with the second (2), and my
suspicion is that it has to do with a combination of the interpreter, POLY, DMP,
INT, no variables, and may be POLYLIFT or MLIFT.

Tim: can you do a boot trace of (4) and compare that with any of the others that
work?

\start
Date: Mon, 27 Dec 2004 16:41:22 +0100
From: Martin Rubey
To: William Sit
Subject: Re: code release: Bug#5977

I looked at this a little bit further:

it might be that there is an error in mainVariable$SMP, but more likely, the
bug is earlier in the history. mainVariable$SMP is called from coerce$POLY,
interestingly without checking that the result of mainVariable might be
"failed". I added some debugging infos:

      mainVariable p ==
	 output("mainVariable1$SMP")$OutputPackage
         p case R => 
           output("mainVariable2$SMP")$OutputPackage
           output(p::R::OutputForm)$OutputPackage
           "failed"
	 output("mainVariable3$SMP")$OutputPackage
         res := p.v
	 output("mainVariable4$SMP")$OutputPackage
	 print(res)$Lisp
         p.v

Then we get

(65) -> 1::DMP([x],INT)::POLY INT

   coerce$POLY
   mainVariable1$SMP
   mainVariable3$SMP
   mainVariable4$SMP
 
   >> System error:
   Caught fatal error [memory may be damaged]

protected-symbol-warn called with (NIL)


(66) -> 1::DMP([x],FRAC INT)::POLY FRAC INT

   coerce$POLY
   mainVariable1$SMP
   mainVariable3$SMP
   mainVariable4$SMP
 LISP output:
1
   coerce4$POLY
   1
   coerce5$POLY
   coerce6$POLY
   (66)  0
                                            Type: Polynomial Fraction Integer
(67) ->  1::DMP([x],INT)::POLY FRAC INT
   Loading /home/rubey/axiom/mnt/linux/algebra/POLY2.o for package 
      PolynomialFunctions2 
   Loading /home/rubey/axiom/mnt/linux/algebra/INDE.o for domain 
      IndexedExponents 
   mainVariable1$SMP
   mainVariable3$SMP
   mainVariable4$SMP
 LISP output:
x
   mainVariable1$SMP
   mainVariable2$SMP
   1

   coerce$POLY
   (67)  1
                                            Type: Polynomial Fraction Integer

Note the output of (66)!

Is there a way to find out what exactly the variable p in mainVariable
contains?

\start
Date: Mon, 27 Dec 2004 08:18:45 -0800
From: Bob McElrath
To: Tim Daly
Subject: Re: hyperdoc

root [Tim Daly] wrote:
> Is there a C programmer on this list with a good set of C debugging tools?
> I'd like some help getting the axiom--hyperdoc--1 branch working. It is
> segfaulting in the C code. It looks like a write to uninitialized memory.
> The code is nearly complete but needs some cleanup work.

I'll see what I can do.  Can you point me to the code?

\start
Date: Mon, 27 Dec 2004 09:53:22 -0800 (PST)
From: Cliff Yapp
To: Tim Daly, Martin Rubey
Subject: Re: code release

> >Great. I suspect this will make most of the build troubles go
> >away. However, (just as a reminder) please call it BETA (or nothing
> >at all) until the proposed fixes are integrated.
> 
> Umm, I don't propose to call it anything. I leave that up to the
> director of marketing. I'm going to download, build, and test 
> axiom--main--1 on all the platforms I have available and, if it 
> passes, promote it to  savannah. Then I need to grab the savannah 
> copy and redo the testing to ensure I didn't make a mistake. 
> Following that we have to chase down all of the binaries and upgrade
> them. 

Oh, that reminds me.  Is there a way to have Axiom display a "version"
as well as a build date?  Remember in the case of Gentoo a user (or for
that matter anybody building their own cvs checkout) reporting a bug +
build date could be totally useless - their build date won't have
anything to do with the pre-compiled binaries or possibly even the cvs
checkout date.
 
\start
Date: Mon, 27 Dec 2004 13:44:50 -0500
From: Tim Daly
To: Bob McElrath
Subject: Re: hyperdoc

tla get axiom--hyperdoc--1 will get the code.
cd axiom--hyperdoc--1--*
export AXIOM=`pwd`/mnt/linux
make

......

hyperdoc then segfaults.

I have a highly modified version here with a lot of printf laying around.
I'll give you a few more hints about where it fails.
I'm on irc.freenode.net channel #axiom-developer if you have questions.

\start
Date: Mon, 27 Dec 2004 17:01:26 -0500
From: Tim Daly
To: list
Subject: axiom--main--1--patch-19

--patch-19

Add a VERSION variable to the top level Makefile environment variable.
This is intended to be displayed when the banner is displayed.

Removed execution privledges for FAQ

added Baldir Thomas, Mike Thomas, Constantine Frangos, Kostas Oikonomou,
Kathy Gerber, Meino Cramer to credits

(let me know if I've forgotten anyone)

\start
Date: Mon, 27 Dec 2004 17:20:09 -0500
From: Tim Daly
To: list
Subject: axiom--main--1--patch-20

--patch-20

remove zips/adviManual.dvi zips/advi-1.2.0.tar.gz zips/gcl-2.6.3.tgz 

\start
Date: Mon, 27 Dec 2004 17:52:04 -0500
From: Tim Daly
To: list
Subject: axiom--main--1--patch-21

--patch-21

tyop fixed
Makefile.pamphlet -> Makefile

\start
Date: Mon, 27 Dec 2004 18:20:03 -0500
From: Tim Daly
To: list
Subject: axiom--main--1--patch-22

--patch-22

The graphics build should not be tested at build time.
Most of the builds are automated and do not have access to an X server.

\start
Date: Mon, 27 Dec 2004 19:24:02 -0500
From: Tim Daly
To: list
Subject: axiom--main--1--patch-22

fix typo in src/interp/util.lisp.pamphlet causing unbalanced parens in
yearweek function

\start
Date: Tue, 28 Dec 2004 10:38:43 -0500
From: Bill Page
To: Martin Rubey
Subject: Savannah patches

Tim,

Please let me know when you are planning to finalize the
Jan 1, 2005 Savannah CVS. It would be good, I think it we could
include as many of these Savannah patches as possible in this
release. I have almost completed testing of the first four
patches below and I plan to update the axiom--main--1 archive
later today.

Martin,

I have been looking at the patches that you submitted some time
ago on Savannah. Thank you very much for taking the time to make
these corrections. Some of these are straight forward such as:

#2074:  Bug #4733 (rounding of negative numbers) [AS]
#3089:  bug #6357 sqrt(-1/abs(x))-1/sqrt(-abs(x))=>0 [A]
#3121:  [bugs #9057] product over product or sum fail [A]
#3349:  bug #10312 Problems raising a UTS to a negative integer power  [A]

I do have some questions about the status of some others. From
the comments it is not clear to me that the proposed patches are
complete:

#3127:  bug #9297 -- output misses parenthesis in COMBF [A]
#3148:  bug #9216 differentiating sums with respect to a bound is wrong [A]
#3161:  any? and every? should exit when the result is clear [A]

Also, you submitted these as direct patches to the .spad files.
Really you should be patching the .spad.pamphlet files. And it
would be **very desirable** if in the future you could also include
some new documentation in the .spad.pamphlet file describing the
problem and the nature of the change. Most of the documentation
is still missing for the algebra files, so if you learn something
new while analysing a problem, it would be great to capture this
and add and/or revise the documentation for future generations.

This one seems to have been anonymously submitted, but it looks
ok to me.

#3311:  bug #10069 overview: cot(0.0), csc(0.0), asec(0.0),
acsc(0.0),asech(0.0),acsch(0.0),cot(0.0),coth(0.0),acoth(0.0) [A]

Any comments?

\start
Date: Tue, 28 Dec 2004 13:47:59 -0500
From: Tim Daly
To: Bill Page
Subject: Re: Savannah patches

Bill,

re: january cvs

ok. let me know when you've done the commit.
i'm available on irc.freenode.net on #axiom-developer for questions.

\start
Date: Tue, 28 Dec 2004 20:42:51 +0100
From: Martin Rubey
To: Bill Page
Subject: Re: Savannah patches

Dear Bill,

Bill Page writes:
 > #2074:  Bug #4733 (rounding of negative numbers) [AS]
 > #3089:  bug #6357 sqrt(-1/abs(x))-1/sqrt(-abs(x))=>0 [A]
 > #3121:  [bugs #9057] product over product or sum fail [A]
 > #3349:  bug #10312 Problems raising a UTS to a negative integer power  [A]

What does [A] and [AS] mean?
 
 > I do have some questions about the status of some others. From
 > the comments it is not clear to me that the proposed patches are
 > complete:
 > 
 > #3127:  bug #9297 -- output misses parenthesis in COMBF [A]

the patch does the straightforward thing: it always adds parentheses around a
sum and a product. In certain cases, the parentheses might not be strictly
necessary, but with the patch the output is always mathematically correct. I'd
say that it could be a *future* project to improve output.

 > #3148:  bug #9216 differentiating sums with respect to a bound is wrong [A]

in my opinion correct beyond doubt.

 > #3161:  any? and every? should exit when the result is clear [A]

I don't have the time to look it up right now, whether the "mixed" behaviou
TREE would vanish with this patch or not. In any case, this "bug" will never
produce mathematically incorrect results. It will only waste cpu cycles. In
fact, I included the comment regarding TREE only to document that if there
would be code that depends on the "evaluate all" code, it wouldn't work with
TREE anyway, so it would be broken already. Bottom line: no danger. 

 > Also, you submitted these as direct patches to the .spad files.  Really you
 > should be patching the .spad.pamphlet files.

Yes. 100% correct.

 > And it would be **very desirable** if in the future you could also include
 > some new documentation in the .spad.pamphlet file describing the problem and
 > the nature of the change. Most of the documentation is still missing for the
 > algebra files, so if you learn something new while analysing a problem, it
 > would be great to capture this and add and/or revise the documentation for
 > future generations.

Absolutely right. I promise to deliver documentation before 3.0 i.e., before
February. (In fact, the reason was that I was waiting for pamphlet support on
mathaction... I had the feeling it would be easier to document then.)

 > This one seems to have been anonymously submitted, but it looks ok to me.
 > 
 > #3311:  bug #10069 overview: cot(0.0), csc(0.0), asec(0.0),
 > acsc(0.0),asech(0.0),acsch(0.0),cot(0.0),coth(0.0),acoth(0.0) [A]
 > 
I didn't look at that one.

Thanks for patching!

\start
Date: Tue, 28 Dec 2004 14:59:23 -0500
From: William Sit
To: Martin Rubey
Subject: Re: code release: Bug#5977

Martin wrote:

Thanks for investigating further.
 
> it might be that there is an error in mainVariable$SMP, but more likely, the
> bug is earlier in the history. mainVariable$SMP is called from coerce$POLY,
> interestingly without checking that the result of mainVariable might be
> "failed".

Shouldn't that mean coerce$POLY should be fixed to check the "failed" case?
Which coerce$POLY is that?

> (66) -> 1::DMP([x],FRAC INT)::POLY FRAC INT
> 
>    coerce$POLY
>    mainVariable1$SMP
>    mainVariable3$SMP
>    mainVariable4$SMP
>  LISP output:
> 1
>    coerce4$POLY
>    1
>    coerce5$POLY
>    coerce6$POLY
>    (66)  0
>                           Type: Polynomial Fraction Integer

Very interesting.
Of course, this is another (perhaps related, but perhaps not) bug that seems to
point to coerce$POLY. Another surprise (in the sense of tracing the bug):

1::DMP([x], FRAC INT)::POLY INT

returns 1 (correctly).

By (66), FRAC is involved in the bug as well.

> Is there a way to find out what exactly the variable p in mainVariable
> contains?
> 
use p$Rep  ? or trace boot.

Now p is declared in multpoly.spad as Union(R, VPoly).
So the code mainVariable p seems to be correct, but your debug info

> (65) -> 1::DMP([x],INT)::POLY INT
> 
>    coerce$POLY
>    mainVariable1$SMP
>    mainVariable3$SMP
>    mainVariable4$SMP
> 
>    >> System error:
>    Caught fatal error [memory may be damaged]
> 
> protected-symbol-warn called with (NIL)

suggests that when 1$DMP([x], INT) is passed on to coerce$(POLY INT) and then to
mainVariable$SMP as p, it is recognized as "case VPoly". So that must be where
the bug is, in coerce$(POLY INT).
I think p is correctly passed, based on:

> (67) ->  1::DMP([x],INT)::POLY FRAC INT
>    Loading /home/rubey/axiom/mnt/linux/algebra/POLY2.o for package
>       PolynomialFunctions2
>    Loading /home/rubey/axiom/mnt/linux/algebra/INDE.o for domain
>       IndexedExponents
>    mainVariable1$SMP
>    mainVariable3$SMP
>    mainVariable4$SMP
>  LISP output:
> x
>    mainVariable1$SMP
>    mainVariable2$SMP
>    1
> 
>    coerce$POLY
>    (67)  1

where mainVariable2$SMP is printed, and that coerce$(POLY FRAC INT) then handles
the case correctly.

The puzzle is that coerce$POLY is defined independent of R, but yet R affects
the correctness of the output. I would be surprised if 1$DMP([x],INT) is passed
correctly in one case but not the other because of the target POLY has different
parametric domains. It that were the case, the culpit would be the interpreter.
Unfortunately, I think trying testing this same bug in the compiler would not
work because these coercion statements are not specific enough for the compiler,
but it may be worth trying because of (66).

Martin, can you also post the debug code inserts for coerce$POLY?

\start
Date: Tue, 28 Dec 2004 19:07:57 -0500
From: Kostas Oikonomou
To: list
Subject: More on the Solaris 9 build

Here is my latest result with patch 17.  Any hints as to what is=
 wrong will be appreciated.

					Kostas

...
Loading /home/build/axiom--main--1--patch-17/obj/sol9gcc/interp/interop.o
start address -T cbe000 Finished loading /home/build/axiom--main--1--patc=
h-17/obj/sol9gcc/interp/interop.o
Loading /home/build/axiom--main--1--patch-17/obj/sol9gcc/interp/patches.o
start address -T 63aaa0 Finished loading /home/build/axiom--main--1--patc=
h-17/obj/sol9gcc/interp/patches.o
start address -T 539ec8    Using local database /home/build/axiom--main--=
1--patch-17/src/share/algebra/compress.daase..   Re-reading compress.daas=
e   Using local database /home/build/axiom--main--1--patch-17/src/share/a=
lgebra/interp.daase..   Re-reading interp.daase
    AXIOM initialization: interpreter
start address -T b45948    AXIOM initialization: database
    AXIOM initialization: constructors
    AXIOM initialization: history
                         AXIOM Computer Algebra System
              Version of Wednesday December 29, 2004 at 08:41:18
-------------------------------------------------------------------------=
----
    Issue )copyright to view copyright notices.
    Issue )summary for a summary of useful system commands.
    Issue )quit to leave AXIOM and return to shell.
-------------------------------------------------------------------------=
----

Error:  Lisps arglist maximum surpassed
Fast links are on: do (si::use-fast-links nil) for debugging
Error signalled by APPLY.
Broken at APPLY.  Type :H for Help.
BOOT>>make[3]: *** [/home/build/axiom--main--1--patch-17/obj/sol9gcc/bin/=
interpsys] Error 255
make[3]: Leaving directory `/home/build/axiom--main--1--patch-17/src/inte=
rp'
make[2]: *** [interpdir] Error 2
make[2]: Leaving directory `/home/build/axiom--main--1--patch-17/src'
make[1]: *** [srcdir] Error 2
make[1]: Leaving directory `/home/build/axiom--main--1--patch-17'
make: *** [all] Error 2
bash-2.05$

\start
Date: Tue, 28 Dec 2004 22:33:50 -0500
From: Bill Page
To: Tim Daly
Subject: axiom--windows--1--patch-8/src/input

Tim,

When I did a new windows build today, I noticed that it no
longer runs the input test files at all. Is this intentional?
The tla cat-log patch-8 only says: "The input directory needs
to occur after all of the other directories." Did you mean
by this to delay running the tests or is something broken?

BTW, I think the best way to run the tests in input might be
a separate 'make' step like this

  make test

Several open source packages that I have built recently have
had such an optional make step between the 'make' and the
'make install'. This would solve the problem with building
Axiom on systems without X-windows, since there could also
be an optional step like

  make test-graphics

\start
Date: Tue, 28 Dec 2004 23:22:02 -0500
From: Tim Daly
To: Kostas Oikonomou
Subject: Re: More on the Solaris 9 build

Kostas,

there have been several changes applied. we're up to --patch-23
which now builds cleanly.

tla update
make clean
make

\start
Date: Tue, 28 Dec 2004 23:24:17 -0500
From: Tim Daly
To: Bill Page
Subject: Re: axiom--windows--1--patch-8/src/input

in axiom--windows--1--patch-7/src/Makefile.pamphlet:

DIRS=bootdir interpdir sharedir algebradir etcdir clefdir docdir \
     graphdir smandir inputdir

so the input directory should run. The only way the directory might
not run is that it already exists and all of the *.output files exist.

\start
Date: Tue, 28 Dec 2004 23:26:43 -0500
From: Tim Daly
To: Bill Page
Subject: Re: axiom--windows--1--patch-8/src/input

re: make test

there is a partially implemented feature

make PART=

which will run any of the makefiles from the directories in the src subdir.
i haven't yet finished the propagation of this feature. once it exists
you can build any subdir, such as 

make PART=graph

and it will rebuild src/graph only. thus to run inputs you type:

make PART=input

we could, of course, bury this with syntactic sugar at the top level.

\start
Date: Tue, 28 Dec 2004 22:54:47 -0500
From: Bill Page
To: Tim Daly
Subject: RE: axiom--windows--1--patch-8/src/input

Tim,

I guess what happens is the build fails (as it always
has) at trying to build clef.

clef can not be easily made to run on windows and in any
case it is superfluous just as on linux because windows
effectively has it's own equivalent of readline.

I will try it again without clefdir, graphdir, and smandir
since at this point I don't think any of these will compile
under windows.

On Tuesday, December 28, 2004 11:24 PM you wrote:
> 
> in axiom--windows--1--patch-7/src/Makefile.pamphlet:
> 
> DIRS=bootdir interpdir sharedir algebradir etcdir clefdir docdir \
>      graphdir smandir inputdir
> 
> so the input directory should run. The only way the directory might
> not run is that it already exists and all of the *.output files exist.

\start
Date: Wed, 29 Dec 2004 01:25:47 -0500
From: Bill Page
To: Martin Rubey
Subject: RE: Savannah patches

On Tuesday, December 28, 2004 2:43 PM Martin Rubey wrote:
> 
> Bill Page writes:
>  > #2074:  Bug #4733 (rounding of negative numbers) [AS]
>  > #3089:  bug #6357 sqrt(-1/abs(x))-1/sqrt(-abs(x))=>0 [A]
>  > #3121:  [bugs #9057] product over product or sum fail [A]
>  > #3349:  bug #10312 Problems raising a UTS to a negative 
> integer power  [A]
> 
> What does [A] and [AS] mean?

[A] means assigned to me, [S] means submitted by me. This was
copied from my summary page on Savannah. Each developer can
maintain such a list if this wish.

>  
>  > I do have some questions about the status of some others. From
>  > the comments it is not clear to me that the proposed patches are
>  > complete:
>  > 
>  > #3127:  bug #9297 -- output misses parenthesis in COMBF [A]
> 
> the patch does the straightforward thing: it always adds 
> parentheses around a sum and a product. In certain cases,
> the parentheses might not be strictly necessary, but with the
> patch the output is always mathematically correct. I'd
> say that it could be a *future* project to improve output.
>

I am still not clear about this one. Are you saying that
the output is ambiguous in some cases because of missing
parenthesis but that internally the result is correct?
If so, then I think I would prefer to wait for someone to
come up with a general solution rather than to do now
what seems like a "quick-and-dirty fix". In my experience
quick-and-dirty has a habbit of becoming almost permanent.
I think one can see evidence of this having happened to
Axiom in the past.
 
>  > #3148:  bug #9216 differentiating sums with respect to a 
> bound is wrong [A]
> 
> in my opinion correct beyond doubt.

In the patch report you wrote:

"Mathematically axiom produces correct output now, however
I'm not sure whether my patch is best possible.

Maybe there should be a function D in OutputForm that displays
unevaluated differentiation. Also, I find it ugly to use the
raw %diff operator in COMBF. Furthermore, is it necessary to
substitute a dummy variable for the variable of differentiation?"

I am concerned that this is another case of a "quick fix" for
which we should consider a more general solution of the kind
that you suggest above.

My philosphy is something like this: While I agree that
mathematical correctness should have a very high priority
in Axiom, that correctness should always be achieved in the
most generally applicable manner as possible. Otherwise one
runs the risk of becoming trapped by many "little decisions"
that never let the "grand ideas" achieve their full potential.
I think this has already happened to most other computer
algebra systems.

> 
>  > #3161:  any? and every? should exit when the result is clear [A]
> 
> I don't have the time to look it up right now, whether the 
> "mixed" behaviour TREE would vanish with this patch or not.
> In any case, this "bug" will never produce mathematically
> incorrect results. It will only waste cpu cycles.

Can we be sure that functions applied during evaluating 'any?'
and 'every?' are not being executed for their side-effects?
I worry that changing the semantics here could have unexpected
effects in other places in Axiom where 'any?' and 'every?' are
used.

> In fact, I included the comment regarding TREE only to document 
> that if there would be code that depends on the "evaluate all"
> code, it wouldn't work with TREE anyway, so it would be broken
> already. Bottom line: no danger.

I am not convinced. I think this needs more analysis, i.e. look
at each case were 'any?' and 'every?' are actually used or else
we have to be prepared to do a lot of testing.

\start
Date: Wed, 29 Dec 2004 00:37:16 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [Axiom-mail] (new) complex numbers

On Wednesday, December 29, 2004 1:17 AM Bob McElrath wrote:
> 
> Andrea Bedini [Andrea Bedini] wrote:
> > Hi,
> > I'm just learning how to do some computations with Axiom,
> > but I've a problem with complex numbers.
> > 
> > Why this evalutate to zero ?
> > 
> > (199) -> A: Complex Polynomial Integer
> >                                                             
>        Type: Void
> > (200) -> A*conjugate A - A^2
> > 
> >    (200)  0
> 
> Definitely wrong.  It looks like the source of the problem is:
> 
> (18) -> conjugate(a)
> 
>    (18)  a
>                                Type: Complex Polynomial Integer
> 

Of course I agree that it is wrong. But what would you expect
the answer to be?

  conjugate(a)

could return unevaluated as just

  conjugate(a)

but then what should the Type: be? Is such an expression
still necessarily a Complex Polynomial Integer?

This is dangerously close to the discussion that we had some
months ago about the meaning of "indeterminants", objects
which have a type but no specific value. For example, I can
say

  A:Integer

but if I write

  A+1

If you answered "yes" to the idea that conjugate(a) is still
of type Complex Polynomial Integer, then surely A+1 is still
of type Integer is the same sense, but Axiom complains that
"A has not been given a value".

Perhaps evaluating the expression

  conjugate(a)

should also complain about the lack of a value?

--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomMail#msg002201c4ed70$cc43ec20$6501a8c0@Asus

\start
Date: Wed, 29 Dec 2004 00:47:32 -0600
From: MathAction (root)
To: MathAction
Subject: [Axiom-mail] complex numbers

seems to be a categorical error of some sort.

A: Complex Polynomial Integer

tells the system that 'A' is expected to have a value which is
Complex Polynomial Integer.

'conjugate' works on values, not potential values.

Thus, conjugate(A) has no meaning as 'A' has no value.
This should probably be an error.

If axiom could work with so that conjugate worked on the type
then axiom could work at some sort of an 'axiomatic' level
rather than a symbolic computation level. Perhaps when we join
forces with the ACL2 crowd we could state certain theorems and
have them applied in the absence of a value.

--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomMail#msg200412290728.iBT7S2m07603@localhost.localdomain

\start
Date: Wed, 29 Dec 2004 01:03:04 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [Axiom-mail] complex numbers

Tim,

On Wednesday, December 29, 2004 2:28 AM you wrote:
> 
> seems to be a categorical error of some sort.
> 
> A: Complex Polynomial Integer
> 
> tells the system that 'A' is expected to have a value which is
> Complex Polynomial Integer.
> 
> 'conjugate' works on values, not potential values.
> 
> Thus, conjugate(A) has no meaning as 'A' has no value.
> This should probably be an error.
> 
> If axiom could work with so that conjugate worked on the type
> then axiom could work at some sort of an 'axiomatic' level
> rather than a symbolic computation level. Perhaps when we join
> forces with the ACL2 crowd we could state certain theorems and
> have them applied in the absence of a value.
> 

I know that this is opening up the whole big subject again,
but I do think that Axiom is already "two-faced" about this.

Consider for example that we can write:

(7) -> A: Complex Polynomial Integer
                                         Type: Void
(8) -> B: Complex Polynomial Integer
                                         Type: Void
(9) -> A+B

   (9)  B + A
                               Type: Complex Polynomial Integer

Neither A or B "has a value" but Axiom has no trouble agreeing
that A+B is still of type Complex Polynomial Integer.

I do not see any essential difference between this and

(10) -> A:Integer
                                         Type: Void
(11) -> B:Integer
                                         Type: Void
(12) -> A+B

   A is declared as being in Integer but has not been given a value.

--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomMail#msg002301c4ed74$5ecbcba0$6501a8c0@Asus

\start
Date: Wed, 29 Dec 2004 03:15:57 -0500
From: Tim Daly
To: Bill Page
Subject: Re: [Axiom-mail] complex numbers
Cc: Andrea Bedini, Tim Daly, Bob McElrath

> On Wednesday, December 29, 2004 2:28 AM you wrote:
> > 
> > seems to be a categorical error of some sort.
> > 
> > A: Complex Polynomial Integer
> > 
> > tells the system that 'A' is expected to have a value which is
> > Complex Polynomial Integer.
> > 
> > 'conjugate' works on values, not potential values.
> > 
> > Thus, conjugate(A) has no meaning as 'A' has no value.
> > This should probably be an error.
> > 
> > If axiom could work with so that conjugate worked on the type
> > then axiom could work at some sort of an 'axiomatic' level
> > rather than a symbolic computation level. Perhaps when we join
> > forces with the ACL2 crowd we could state certain theorems and
> > have them applied in the absence of a value.
> > 
> 
> I know that this is opening up the whole big subject again,
> but I do think that Axiom is already "two-faced" about this.
> 
> Consider for example that we can write:
> 
> (7) -> A: Complex Polynomial Integer
>                                          Type: Void
> (8) -> B: Complex Polynomial Integer
>                                          Type: Void
> (9) -> A+B
> 
>    (9)  B + A
>                                Type: Complex Polynomial Integer
> 
> Neither A or B "has a value" but Axiom has no trouble agreeing
> that A+B is still of type Complex Polynomial Integer.
> 
> I do not see any essential difference between this and
> 
> (10) -> A:Integer
>                                          Type: Void
> (11) -> B:Integer
>                                          Type: Void
> (12) -> A+B
> 
>    A is declared as being in Integer but has not been given a value.
> 
> 

Clearly you're right and I agree with you.

The problem, as I see it, is that there are subtle degrees of meaning
that are easily stepped around when you work on paper but must be
clarified in computational mathematics.

A: Integer

might mean that 1) 'A' will hold a value which is an integer
under interpretation (1)

A+1 

is an error since 'A' has no value. But what does the type of
an unbound thing mean? Lisp assigns types to the values, not
the boxes. This is like labeling a box 'television'.

or perhaps that 2) 'A' is an indefinite object of type integer
under interpretation (2)

A+1

is another indeterminant integer, where '+' comes from Integer.

or perhaps that 3) 'A' obeys the laws applied to integers
under interpretation (3)

A+1

is a polynomial with 2 integers, representing a constant, where
'+' comes from Polynomial.

or perhaps that 4) 'A' is a symbol which hold integers
under interpretation (4)

A+1

is a polynomial in A with integer coefficients ignoring 'A's type
where '+' comes from Polynomial.

or perhaps that 5) 'A' is an element of a Ring and theorems can be applied
under interpretation (5)

A+1

is 'B', a new member of the Ring since '+' is a ring operator and both
'A' and '1' are ring elements. Ideally Axiom's types would be decorated
with axioms, like the ring axioms making reasoning about unbound but
typed objects possible. The '+' comes from the Category axioms of Integer.


The exact interpretation chosen appears to be dictated by the 
underlying code and is not the same everywhere.

Axiom is the product of many people, some of whom have chosen
different interpretations. Indeed, some of the interpretations
didn't exist before the computational aspects of mathematics
came into play.

There are quite a few areas of research that could be followed.
Indeed, working out the implications of the several meanings of 
'A' is a PhD topic, and a rather hard one at that. The issue 
heads off into questions of provisos, questions of reasoning with
theorems and axioms, etc.

Axiom's main strength has always been as a research platform where
it is possible to work out these ideas and reduce them to practice.

Unfortunately, research funding seems nowhere to be found.

\start
Date: Wed, 29 Dec 2004 01:36:10 -0600
From: MathAction (root)
To: MathAction
Subject: [Axiom-mail] complex numbers

> On Wednesday, December 29, 2004 2:28 AM you wrote:
> > 
> > seems to be a categorical error of some sort.
> > 
> > A: Complex Polynomial Integer
> > 
> > tells the system that 'A' is expected to have a value which is
> > Complex Polynomial Integer.
> > 
> > 'conjugate' works on values, not potential values.
> > 
> > Thus, conjugate(A) has no meaning as 'A' has no value.
> > This should probably be an error.
> > 
> > If axiom could work with so that conjugate worked on the type
> > then axiom could work at some sort of an 'axiomatic' level
> > rather than a symbolic computation level. Perhaps when we join
> > forces with the ACL2 crowd we could state certain theorems and
> > have them applied in the absence of a value.
> > 
> 
> I know that this is opening up the whole big subject again,
> but I do think that Axiom is already "two-faced" about this.
> 
> Consider for example that we can write:
> 
> (7) -> A: Complex Polynomial Integer
>                                          Type: Void
> (8) -> B: Complex Polynomial Integer
>                                          Type: Void
> (9) -> A+B
> 
>    (9)  B + A
>                                Type: Complex Polynomial Integer
> 
> Neither A or B "has a value" but Axiom has no trouble agreeing
> that A+B is still of type Complex Polynomial Integer.
> 
> I do not see any essential difference between this and
> 
> (10) -> A:Integer
>                                          Type: Void
> (11) -> B:Integer
>                                          Type: Void
> (12) -> A+B
> 
>    A is declared as being in Integer but has not been given a value.
> 
> 

Clearly you're right and I agree with you.

The problem, as I see it, is that there are subtle degrees of meaning
that are easily stepped around when you work on paper but must be
clarified in computational mathematics.

A: Integer

might mean that 1) 'A' will hold a value which is an integer
under interpretation (1)

A+1 

is an error since 'A' has no value. But what does the type of
an unbound thing mean? Lisp assigns types to the values, not
the boxes. This is like labeling a box 'television'.

or perhaps that 2) 'A' is an indefinite object of type integer
under interpretation (2)

A+1

is another indeterminant integer, where '+' comes from Integer.

or perhaps that 3) 'A' obeys the laws applied to integers
under interpretation (3)

A+1

is a polynomial with 2 integers, representing a constant, where
'+' comes from Polynomial.

or perhaps that 4) 'A' is a symbol which hold integers
under interpretation (4)

A+1

is a polynomial in A with integer coefficients ignoring 'A's type
where '+' comes from Polynomial.

or perhaps that 5) 'A' is an element of a Ring and theorems can be applied
under interpretation (5)

A+1

is 'B', a new member of the Ring since '+' is a ring operator and both
'A' and '1' are ring elements. Ideally Axiom's types would be decorated
with axioms, like the ring axioms making reasoning about unbound but
typed objects possible. The '+' comes from the Category axioms of Integer.


The exact interpretation chosen appears to be dictated by the 
underlying code and is not the same everywhere.

Axiom is the product of many people, some of whom have chosen
different interpretations. Indeed, some of the interpretations
didn't exist before the computational aspects of mathematics
came into play.

There are quite a few areas of research that could be followed.
Indeed, working out the implications of the several meanings of 
'A' is a PhD topic, and a rather hard one at that. The issue 
heads off into questions of provisos, questions of reasoning with
theorems and axioms, etc.

Axiom's main strength has always been as a research platform where
it is possible to work out these ideas and reduce them to practice.

Unfortunately, research funding seems nowhere to be found.

--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomMail#msg200412290815.iBT8FvS07646@localhost.localdomain

\start
Date: Wed, 29 Dec 2004 12:31:06 -0500
From: Tim Daly
To: Kostas Oikonomou
Subject: Re: More on the Solaris 9 build

> Thanks Tim.  When you say builds cleanly, you mean on linux?
> 
> > Kostas,
> >
> > there have been several changes applied. we're up to --patch-23
> > which now builds cleanly.
> >
> > tla update
> > make clean
> > make
> >
> > t
> Yes, on linux.

There are several patch-versions of axiom--main which are not
completely build-ready. The axiom--main branch is semi-stable.
I use it to build pre-savannah versions and there are a lot of
changes that go into it near the end of the month. In order to
guarantee that I've got a good build on axiom-main I repeat the
cycle:

do
 fix something
 build it
 tla commit to axiom-developer
 rm -rf axiom--main--1*
 tla get axiom--main--1
 build it
 test it
until done
if (end-of-month) and (stable)
 then promote to savannah CVS

This ensures that I'm not depending on local features but means
that axiom--main--1 might be unstable in various ways. 

By the way, please copy list as there are
other people on this list who know more than I do and can help.


\start
Date: Wed, 29 Dec 2004 10:11:53 -0800
From: Bob McElrath
To: Tim Daly, Andrea Bedini
Subject: Re: [Axiom-mail] complex numbers

root [Tim Daly] wrote:
> Clearly you're right and I agree with you.
> 
> The problem, as I see it, is that there are subtle degrees of meaning
> that are easily stepped around when you work on paper but must be
> clarified in computational mathematics.

Why cannot we allow *all*?  I expect I should be able to coerce 'A+1' to
an Integer, Polynomial Integer, Expression Integer, etc.  The default
seems to be Integer, which seems fine.

The error seems to be in the Polynomial domain:
    (16) -> c:Complex Integer           
                                                                       Type: Void
    (17) -> conjugate(c)     
     
       c is declared as being in Complex Integer but has not been given a 
          value.
    (17) -> c:Complex Polynomial Integer
                                                                       Type: Void
    (18) -> conjugate(c)

       (18)  c
                                                 Type: Complex Polynomial Integer

Adding the Polynomial to its domain causes this to go wrong...

    (19) -> c:Polynomial Complex Integer
                                                                       Type: Void
    (20) -> conjugate(c)
       There are 4 exposed and 1 unexposed library operations named 
          conjugate having 1 argument(s) but none was determined to be 
        ...

I'm surprised this doesn't work.  A Polynomial on a Ring is still a
member of that ring and should inherit its functions.  (in this case,
conjugate)  It also strikes me that Polynomial Complex Integer is the
proper type here, not Complex Polynomial Integer...clearly they are
inequivalent.

> A: Integer
> 
> might mean that 1) 'A' will hold a value which is an integer
> under interpretation (1)
> 
> A+1 
> 
> is an error since 'A' has no value. But what does the type of
> an unbound thing mean? Lisp assigns types to the values, not
> the boxes. This is like labeling a box 'television'.

This is the approach taken by Integer, Complex, and Float it seems.

> or perhaps that 2) 'A' is an indefinite object of type integer
> under interpretation (2)
> 
> A+1
> 
> is another indeterminant integer, where '+' comes from Integer.
> 
> or perhaps that 3) 'A' obeys the laws applied to integers
> under interpretation (3)
> 
> A+1
> 
> is a polynomial with 2 integers, representing a constant, where
> '+' comes from Polynomial.

I cannot seem to construct an example of type (3).  Given: c:Integer and
I want to construct a Polynomial Integer containing 'c', how would I do
it?

> or perhaps that 4) 'A' is a symbol which hold integers
> under interpretation (4)
> 
> A+1
> 
> is a polynomial in A with integer coefficients ignoring 'A's type
> where '+' comes from Polynomial.

The type of 'A' cannot be ignored since 'A+1' must Polynomial must have
a Field such as Integer in its constructor.

> or perhaps that 5) 'A' is an element of a Ring and theorems can be applied
> under interpretation (5)
> 
> A+1
> 
> is 'B', a new member of the Ring since '+' is a ring operator and both
> 'A' and '1' are ring elements. Ideally Axiom's types would be decorated
> with axioms, like the ring axioms making reasoning about unbound but
> typed objects possible. The '+' comes from the Category axioms of Integer.

Now this truly is a research project.  ;)

> The exact interpretation chosen appears to be dictated by the 
> underlying code and is not the same everywhere.
> 
> Axiom is the product of many people, some of whom have chosen
> different interpretations. Indeed, some of the interpretations
> didn't exist before the computational aspects of mathematics
> came into play.

I think this *must* be clarified, and a unifying set of assumptions be
applied across all domains.

> There are quite a few areas of research that could be followed.
> Indeed, working out the implications of the several meanings of 
> 'A' is a PhD topic, and a rather hard one at that. The issue 
> heads off into questions of provisos, questions of reasoning with
> theorems and axioms, etc.

This does not seem so hard, but maybe I am being naive.

\start
Date: Wed, 29 Dec 2004 12:12:54 -0600
From: MathAction (Bob McElrath)
To: MathAction
Subject: [Axiom-mail] complex numbers

root [Tim Daly] wrote:
> Clearly you're right and I agree with you.
> 
> The problem, as I see it, is that there are subtle degrees of meaning
> that are easily stepped around when you work on paper but must be
> clarified in computational mathematics.

Why cannot we allow *all*?  I expect I should be able to coerce 'A+1' to
an Integer, Polynomial Integer, Expression Integer, etc.  The default
seems to be Integer, which seems fine.

The error seems to be in the Polynomial domain:
    (16) -> c:Complex Integer           
                                                                       Type: Void
    (17) -> conjugate(c)     
     
       c is declared as being in Complex Integer but has not been given a 
          value.
    (17) -> c:Complex Polynomial Integer
                                                                       Type: Void
    (18) -> conjugate(c)

       (18)  c
                                                 Type: Complex Polynomial Integer

Adding the Polynomial to its domain causes this to go wrong...

    (19) -> c:Polynomial Complex Integer
                                                                       Type: Void
    (20) -> conjugate(c)
       There are 4 exposed and 1 unexposed library operations named 
          conjugate having 1 argument(s) but none was determined to be 
        ...

I'm surprised this doesn't work.  A Polynomial on a Ring is still a
member of that ring and should inherit its functions.  (in this case,
conjugate)  It also strikes me that Polynomial Complex Integer is the
proper type here, not Complex Polynomial Integer...clearly they are
inequivalent.

> A: Integer
> 
> might mean that 1) 'A' will hold a value which is an integer
> under interpretation (1)
> 
> A+1 
> 
> is an error since 'A' has no value. But what does the type of
> an unbound thing mean? Lisp assigns types to the values, not
> the boxes. This is like labeling a box 'television'.

This is the approach taken by Integer, Complex, and Float it seems.

> or perhaps that 2) 'A' is an indefinite object of type integer
> under interpretation (2)
> 
> A+1
> 
> is another indeterminant integer, where '+' comes from Integer.
> 
> or perhaps that 3) 'A' obeys the laws applied to integers
> under interpretation (3)
> 
> A+1
> 
> is a polynomial with 2 integers, representing a constant, where
> '+' comes from Polynomial.

I cannot seem to construct an example of type (3).  Given: c:Integer and
I want to construct a Polynomial Integer containing 'c', how would I do
it?

> or perhaps that 4) 'A' is a symbol which hold integers
> under interpretation (4)
> 
> A+1
> 
> is a polynomial in A with integer coefficients ignoring 'A's type
> where '+' comes from Polynomial.

The type of 'A' cannot be ignored since 'A+1' must Polynomial must have
a Field such as Integer in its constructor.

> or perhaps that 5) 'A' is an element of a Ring and theorems can be applied
> under interpretation (5)
> 
> A+1
> 
> is 'B', a new member of the Ring since '+' is a ring operator and both
> 'A' and '1' are ring elements. Ideally Axiom's types would be decorated
> with axioms, like the ring axioms making reasoning about unbound but
> typed objects possible. The '+' comes from the Category axioms of Integer.

Now this truly is a research project.  ;)

> The exact interpretation chosen appears to be dictated by the 
> underlying code and is not the same everywhere.
> 
> Axiom is the product of many people, some of whom have chosen
> different interpretations. Indeed, some of the interpretations
> didn't exist before the computational aspects of mathematics
> came into play.

I think this *must* be clarified, and a unifying set of assumptions be
applied across all domains.

> There are quite a few areas of research that could be followed.
> Indeed, working out the implications of the several meanings of 
> 'A' is a PhD topic, and a rather hard one at that. The issue 
> heads off into questions of provisos, questions of reasoning with
> theorems and axioms, etc.

This does not seem so hard, but maybe I am being naive.

--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomMail#msg20041229181153.GF6109@mcelrath.org

\start
Date: Wed, 29 Dec 2004 15:02:42 -0500
From: Bill Page
To: Tim Daly
Subject: RE: Savannah patches

Tim,

On Tuesday, December 28, 2004 1:48 PM you wrote:
> 
> re: january cvs
> 
> ok. let me know when you've done the commit.
> i'm available on irc.freenode.net on #axiom-developer for
> questions.
> 

Well, I have successfully done 5 of the patches and tested
them in both Linux and Windows. I did an update and commit
to axiom--windows--1 with no problem. But I am having a lot of
trouble with arch on my linux system. Right now I am doing
a complete rebuild of the modified axiom--main--1 sources. On
this system it will take about 18 hours to finish. I am quite
sure it will build ok, but I just want to be sure. Then I can
(finally) do the commit. If this is outside your time frame
for the Jan 1 Savannah release, then I guess you should just
proceed anyway and we can catch up in February.

The problems with axiom--main--1 started because perhaps I did
things in the wrong order and was nervous about doing the Axiom
build in the arch directory.

On Windows I did make the changes in the arch directory and
re-compiled Axiom and tested right there. The tla update and
tla commit worked fine and did not do anything crazy like
committing any of the non-source files. I worked like a charm.
Good.

But on the linux system I first copied of the arch directory
and made all of my changes and built Axiom in that copy over
the last couple of weeks. Then I was faced with the problem of
merging these changes with the repository on axiom-developer.

I had originally downloaded the axiom--windows--1 using the http
protocol. This would not have allowed me to do a commit, so I
had to find out how to change the protocol to sftp (easy but not
well documented) without downloading everything again. Then I
did a tla update of the original arch directory with no problem.

But the diff with my modified source tree showed a couple of
possible conflicts with changes you have made. So my first attempt
was to try to apply the 'tla update' to my copy of the original
arch directory containing the changes. tla is supposed to be able
to resolve simple conflicts, right? But for some reason the 'tla
update' on the copy seems to take *forever* and downloads several
large patch files more than once. It has timed out twice on some 
etwork problem or other.

So now what I have done is to re-apply all of my changes form
my modified copy of the original arch directory back on the
updated original directory itself. And since I never built
Axiom in that directory before, I decided that I had better
"bite the bullet" and do the re-build again here just to make
sure that I didn't miss anything.

>From now one I think I am going to keep in simple and trust
this commit stuff to work properly with just one arch directory!

\start
Date: Wed, 29 Dec 2004 18:12:20 -0500
From: Tim Daly
To: Bill Page
Subject: Re: Savannah patches

Bill,

I do all of my work in a separate copy. I generally do this to make
sure that I know what changes I've made and that I don't commit
non-working copies.

tla get axiom--something--1
   which gets the latest patch, lets call it patch-10. This is pristine

cp -pr axiom--something--1--patch-10 axiom
   which gives me a place to work
   NOTE THAT I DON'T WORK IN --patch-10 but in a copy

loop

  cd axiom
     do all my work in the copy, not the original

  diff -r --brief axiom--something--1--patch-10 axiom
     HAND PATCH the files that differ back into axiom--something--1--patch-10

     I hand patch so that I have to review each and every change.
     Sometimes I've made changes I dont' want to commit either because
     they are debugging (e.g. printf) or unrelated.

  rm -rf axiom
     remove the working copy

  cp -pr axiom--something--1--patch-10 axiom
     get a working copy with all my new patches

  cd axiom ; make
     rebuild the copy to make sure it works

until done

at this point axiom--something--1--patch-10 is the same as axiom 
and it has been tested. Now I can commit and move on:

cd axiom--something--1--patch-10
tla make-log
tla commit

rm -rf axiom--something--1--patch-10 
   remove --patch-10 because I've finished with it

tla get axiom--something--1 
   this is --patch-11 so I have the latest version

make
   and test to make sure I didn't commit garbage
   

assuming the tests work I can now use --patch-11 and fix the next problem

I've learned from past experience that 
  (a) I make mistakes and need to check myself a lot
  (b) I don't trust automated merge tools
  (c) I need to minimize commits that are broken

It is a tedious process but it works for me.

\start
Date: Wed, 29 Dec 2004 17:55:50 -0500
From: Bill Page
To: Tim Daly
Subject: RE: Savannah patches

Tim,

On Wednesday, December 29, 2004 6:12 PM you wrote:
> ...
> 
> It is a tedious process but it works for me.
> 

Your procedure is effectively what I have ended up doing by
default because once I made a copy of the arch directory,
the normal procedures no longer works efficently. But this
seems to me to be far less than optimal, painful and error
prone in it's own right. I think it is better to use the
tools the way they were designed to be used and if they
don't work, then I guess it's time to report a bug and/or
choose a new tool.

If doing development in Axiom is done it this painful sort
of way, then I fear that there may never be more than 1 & 1/2
developers ... :(

In contrast the changes I made to the Windows arch directory
where completely painless and the whole thing was done and
comitted in only a few hours.

BTW, I have never had this sort of problem using darcs. The
complexity of tla on top of everything else is daunting.

[just me complaining some more while I wait for the build to
complete ... ]

\start
Date: Wed, 29 Dec 2004 19:28:53 -0500
From: Tim Daly
To: Bill Page
Subject: Re: Savannah patches

ah, we differ in philosophy and will never agree.

you trust software and i don't.
you expect the tools to work and i don't.

it is possible to work directly in an arch directory
and there are a lot of commands, like tla changes, etc
to figure out what's new, old, different, to merge branches,
to version, etc. you found it to be pleasant and useful
in the axiom-windows branch. the more you play with it
the less you'll think it's hard to use or broken.

the problem with my method of working isn't a flaw in arch
but a fundamental distrust of software. i've spent my life
fixing broken software and i'm always pleasantly surprised
on those rare occasions when it works as advertised. 

> [just me complaining some more while I wait for the build to
> complete ... ]

'sok. that's what a mailing list is for :-)

\start
Date: Thu, 30 Dec 2004 04:51:37 -0500
From: Tim Daly
To: list
Subject: science commons
Cc: Barry Trager, Patrizia Gianni

We've discussed a "literate journal" idea on this list before
where you do something similar to pamphlets with code embedded
inside the paper. That would allow "drag and drop" of a paper
onto a running system and have the code compiled and docs added
dynamically.

Of course, people worry about the intellectual property issues.

There are two efforts of interest related to this:

Science Commons
http://science.creativecommons.org

and an effort to open up public funded research results

Enhanced Public Access to NIH Research Information
http://grants1.nih.gov/grants/guide/notice-files/NOT-OD-04-064.html

\start
Date: Thu, 30 Dec 2004 13:18:04 +0200
From: Vladimir Bondarenko
To: list
Subject: Happy New Year of 2005!

Hello all,

Let me wish happy, creative, healthy, prosperous, comfortable
New Year of 2005 to all grand enthusiasts the Axiom Developers!

Long live Axiom,

\start
Date: Thu, 30 Dec 2004 14:21:03 +0100
From: Martin Rubey
To: Bill Page
Subject: RE: Savannah patches

Dear Bill,

Bill Page wrote:

> >  > #3127:  bug #9297 -- output misses parenthesis in COMBF [A]
> > 
> > the patch does the straightforward thing: it always adds 
> > parentheses around a sum and a product. In certain cases,
> > the parentheses might not be strictly necessary, but with the
> > patch the output is always mathematically correct. I'd
> > say that it could be a *future* project to improve output.
> >
> 
> I am still not clear about this one. Are you saying that
> the output is ambiguous in some cases because of missing
> parenthesis but that internally the result is correct?

Internally, the result is correct, however, the output is not only ambiguous, but wrong in some cases.

> If so, then I think I would prefer to wait for someone to
> come up with a general solution rather than to do now
> what seems like a "quick-and-dirty fix".

The fix is not dirty. It is quick and simple. It is not that easy to come up with a really good version, but I'd say that wrong output is unacceptable.

> >  > #3148:  bug #9216 differentiating sums with respect to a 
> > bound is wrong [A]
> > 
> > in my opinion correct beyond doubt.
> 
> In the patch report you wrote:
> 
> "Mathematically axiom produces correct output now, however
> I'm not sure whether my patch is best possible.
> 
> Maybe there should be a function D in OutputForm that displays
> unevaluated differentiation. Also, I find it ugly to use the
> raw %diff operator in COMBF. Furthermore, is it necessary to
> substitute a dummy variable for the variable of differentiation?"
> 
> I am concerned that this is another case of a "quick fix" for
> which we should consider a more general solution of the kind
> that you suggest above.

In this case the situation is a tiny little bit different, since here also Axioms internal representation is wrong. Worse: the design of Axioms Algebra currently doesn't provide "unevaluated differentiation". Obviously, it was thought that anything can be differentiated. In fact, I'm almost sure that attempting to differentiate a sum by one of its bound should signal an error, because it is impossible to assign a mathematically correct meaning to it. In this sense, I'd suggest that we aim to reach consensus until end of January.

> >  > #3161:  any? and every? should exit when the result is clear [A]
> > 
> > I don't have the time to look it up right now, whether the 
> > "mixed" behaviour TREE would vanish with this patch or not.
> > In any case, this "bug" will never produce mathematically
> > incorrect results. It will only waste cpu cycles.
> 
> Can we be sure that functions applied during evaluating 'any?'
> and 'every?' are not being executed for their side-effects?
> I worry that changing the semantics here could have unexpected
> effects in other places in Axiom where 'any?' and 'every?' are
> used.
> 
> > In fact, I included the comment regarding TREE only to document 
> > that if there would be code that depends on the "evaluate all"
> > code, it wouldn't work with TREE anyway, so it would be broken
> > already. Bottom line: no danger.
> 
> I am not convinced. I think this needs more analysis, i.e. look
> at each case were 'any?' and 'every?' are actually used or else
> we have to be prepared to do a lot of testing.

I did some analysis and I'm quite sure that no code will be broken. However, this is a patch I won't push, since it won't produce incorrect results. 

\start
Date: Thu, 30 Dec 2004 14:42:05 +0100
From: Martin Rubey
To: William Sit
Subject: Re: code release: Bug#5977

Dear William, dear Tim,

William Sit wrote:

> Martin wrote:
> 
> Thanks for investigating further.
>  
> > it might be that there is an error in mainVariable$SMP, but more likely, the
> > bug is earlier in the history. mainVariable$SMP is called from coerce$POLY,
> > interestingly without checking that the result of mainVariable might be
> > "failed".
> 
> Shouldn't that mean coerce$POLY should be fixed to check the "failed" case?

Sorry, my mistake. coerce$POLY checks itself whether there is a variable or not...

> Which coerce$POLY is that?

the coerce operation in the POLY domain.

> > (66) -> 1::DMP([x],FRAC INT)::POLY FRAC INT
> > 
> >    coerce$POLY
> >    mainVariable1$SMP
> >    mainVariable3$SMP
> >    mainVariable4$SMP
> >  LISP output:
> > 1
> >    coerce4$POLY
> >    1
> >    coerce5$POLY
> >    coerce6$POLY
> >    (66)  0
> >                           Type: Polynomial Fraction Integer

> > Is there a way to find out what exactly the variable p in mainVariable
> > contains?
> > 
> use p$Rep  ? or trace boot.

I'm pretty sure that the coercion to from DMP to POLY fails, without signalling an error, just like you could always do a "pretend". This would also explain (66)

Note that it is not possible to coerce a DMP or a UP or anything the like to a POLY in compiled code! Unfortunately I don't know where these interpreter coercions are coded. In any case, I'm convinced that they *should* be coded in the Algebra, not in the interpreter. 

> Now p is declared in multpoly.spad as Union(R, VPoly).
> So the code mainVariable p seems to be correct, but your debug info
> 
> > (65) -> 1::DMP([x],INT)::POLY INT
> > 
> >    coerce$POLY
> >    mainVariable1$SMP
> >    mainVariable3$SMP
> >    mainVariable4$SMP
> > 
> >    >> System error:
> >    Caught fatal error [memory may be damaged]
> > 
> > protected-symbol-warn called with (NIL)
> 
> suggests that when 1$DMP([x], INT) is passed on to coerce$(POLY INT) and then to
> mainVariable$SMP as p, it is recognized as "case VPoly". So that must be where
> the bug is, in coerce$(POLY INT).

Note that coerce$POLY only coerces to OutputForm... No internal stuff done there. That's why I'm sure that it is an interpreter bug.

\start
Date: Thu, 30 Dec 2004 10:56:19 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [#8 (Savannah bug #9297) output misses some parenthesis] (new) 

The text mode output of Axiom appears to be incorrect,
although internally everything is correct, as can be seen
by the LaTeX formatted output.

\begin{axiom}
)set output algebra on
product(summation(i*j, i=a..b),j=c..d)
sum(operator(f)(i)+1,i=1..n)
sum(operator(f)(i)+1,i=1..n)^2
\end{axiom}

--
forwarded from http://page.axiom-developer.org/zope/mathaction/8SavannahBug9297OutputMissesSomeParenthesis#msg20041230105602-0600@page.axiom-developer.org

\start
Date: Thu, 30 Dec 2004 15:30:25 -0500
From: Tim Daly
To: list, axiom-main@nongnu.org
Subject: savannah cvs

Axiom 3.0 Beta sources are now in savannah.
You can tell that it is the 3.0 Beta because it prints this in the header:
    
    Axiom 3.0 Beta (January 2005)

The binaries are not yet up to date with the savannah sources.
I'll finish as many as the cpu cycles allow but I'll be away from
the internet for the weekend.

Bug fixes discussed recently are not in the release due to discussion
of the proper fixes. Graphics is there but not integrated. Hypertex is
not there but appears to be working locally. Both graphics and hypertex
will probably be integrated in the next monthly release (February 2005).

\start
Date: Thu, 30 Dec 2004 13:57:50 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [#8 (Savannah bug #9297) output misses some parenthesis] 


++added:
summation(i^2^(d-c+1),i=a..b)

??changed:
-sum(operator(f)(i)+1,i=1..n)^2
sum(operator(f)(i),i=1..n)+1
sum(operator(f)(i)+1,i=1..n)^3

??changed:
-
Expressions (1) and (2) above appear to be indistinquishable
in the native Axiom text mode output.

In expressions (3) and (4) the scope of the summation is
ambiguous in both the text mode and formatted outputs.

A proposed [patch to combfunc.spad] adds parenthesis to the
sum and product outputForm::

  ddprod l ==
  -      prod(summand(l)::O, third(l)::O = fourth(l)::O, fourth(rest l)::O)
  +      paren(prod(summand(l)::O, third(l)::O = fourth(l)::O, fourth(rest l)::O))
 
  ddsum l ==
  -      sum(summand(l)::O, third(l)::O = fourth(l)::O, fourth(rest l)::O)
  +      paren(sum(summand(l)::O, third(l)::O = fourth(l)::O, fourth(rest l)::O))



--
forwarded from http://page.axiom-developer.org/zope/mathaction/8SavannahBug9297OutputMissesSomeParenthesis#msg20041230135750-0600@page.axiom-developer.org

\start
Date: Thu, 30 Dec 2004 12:06:43 -0800 (PST)
From: Cliff Yapp
To: Tim Daly, list, axiom-main@nongnu.org
Subject: Re: savannah cvs

--- Tim Daly wrote:

> Axiom 3.0 Beta sources are now in savannah.
> You can tell that it is the 3.0 Beta because it prints this in the
> header:
>     
>     Axiom 3.0 Beta (January 2005)
> 
> The binaries are not yet up to date with the savannah sources.
> I'll finish as many as the cpu cycles allow but I'll be away from
> the internet for the weekend.

Excellent!  Thanks Tim (and all) for your hard work.  Is there an
"official" tarball of the 3.0 beta I can point the gentoo ebuild to? 
(Preferably one that doesn't fry your own box ;-).

\start
Date: Thu, 30 Dec 2004 18:27:26 -0500
From: Tim Daly
To: Cliff Yapp
Subject: Re: savannah cvs

A source tarball is available at:

http://axiom-developer.org/axiom-website/download.html

or using wget:

wget http://axiom.axiom-developer.org/axiom-website/DOWNLOADS/axiom.20041230.tgz

\start
Date: Thu, 30 Dec 2004 21:50:05 -0500
From: Kostas Oikonomou
To: list
Subject: Failure in Solaris 9 build, patch 23

Does anyone have a clue as to what is happening here?
Thanks.

				Kostas

...
Loading /home/build/axiom--main--1--patch-23/obj/sol9gcc/interp/patches.o
start address -T 78c408 Finished loading /home/build/axiom--main--1--patc=
h-23/obj/sol9gcc/interp/patches.o
start address -T 667480    Using local database /home/build/axiom--main--=
1--patch-23/src/share/algebra/compress.daase..   Re-reading compress.daas=
e   Using local database /home/build/axiom--main--1--patch-23/src/share/a=
lgebra/interp.daase..   Re-reading interp.daase
    AXIOM initialization: interpreter
start address -T b55dc0    AXIOM initialization: database
    AXIOM initialization: constructors
    AXIOM initialization: history
                         AXIOM Computer Algebra System
                    Version: Axiom 3.0 Beta (January 2005)
               Timestamp: Friday December 31, 2004 at 11:26:44
-------------------------------------------------------------------------=
----
    Issue )copyright to view copyright notices.
    Issue )summary for a summary of useful system commands.
    Issue )quit to leave AXIOM and return to shell.
-------------------------------------------------------------------------=
----


Error:  Lisps arglist maximum surpassed
Fast links are on: do (si::use-fast-links nil) for debugging
Error signalled by APPLY.
Broken at APPLY.  Type :H for Help.
BOOT>>make[3]: *** [/home/build/axiom--main--1--patch-23/obj/sol9gcc/bin/=
interpsys] Error 255
make[3]: Leaving directory `/home/build/axiom--main--1--patch-23/src/inte=
rp'
make[2]: *** [interpdir] Error 2
make[2]: Leaving directory `/home/build/axiom--main--1--patch-23/src'
make[1]: *** [srcdir] Error 2
make[1]: Leaving directory `/home/build/axiom--main--1--patch-23'

\start
Date: Thu, 30 Dec 2004 23:01:04 -0500
From: Tim Daly
To: Kostas Oikonomou
Subject: Re: Failure in Solaris 9 build, patch 23

Kostas,


> ...
> Loading /home/build/axiom--main--1--patch-23/obj/sol9gcc/interp/patches.o
> start address -T 78c408 Finished loading /home/build/axiom--main--1--patch-23/obj/sol9gcc/interp/patches.o
> start address -T 667480    Using local database /home/build/axiom--main--1--patch-23/src/share/algebra/compress.daase..   Re-reading compress.daase   Using local database /home/build/axiom--main--1--patch-23/src/share/algebra/interp.daase..   Re-reading interp.daase
>     AXIOM initialization: interpreter
> start address -T b55dc0    AXIOM initialization: database
>     AXIOM initialization: constructors
>     AXIOM initialization: history
>                          AXIOM Computer Algebra System
>                     Version: Axiom 3.0 Beta (January 2005)
>                Timestamp: Friday December 31, 2004 at 11:26:44
> -----------------------------------------------------------------------------
>     Issue )copyright to view copyright notices.
>     Issue )summary for a summary of useful system commands.
>     Issue )quit to leave AXIOM and return to shell.
> -----------------------------------------------------------------------------
> 
> 
> Error:  Lisps arglist maximum surpassed
> Fast links are on: do (si::use-fast-links nil) for debugging
> Error signalled by APPLY.
> Broken at APPLY.  Type :H for Help.
> BOOT>>make[3]: *** [/home/build/axiom--main--1--patch-23/obj/sol9gcc/bin/interpsys] Error 255
> make[3]: Leaving directory `/home/build/axiom--main--1--patch-23/src/interp'
> make[2]: *** [interpdir] Error 2
> make[2]: Leaving directory `/home/build/axiom--main--1--patch-23/src'
> make[1]: *** [srcdir] Error 2
> make[1]: Leaving directory `/home/build/axiom--main--1--patch-23'
> 

Many centuries ago, there used to be a problem in GCL about the number
of arguments that a compiled function could accept.


Error:  Lisps arglist maximum surpassed


In order to get around this problem there is a file called
src/interp/nocompil.lisp.pamphlet. I can't imagine how this
could ever be compiled as the makefile does not do it. The
file obj/sol9gcc/interp/nocompil.lsp should not have a
corresponding nocompil.o file. 

There is a function called |Join| which exceeds the GCL maximum.
I'm not sure why this shows up for you. 

\start
Date: Fri, 31 Dec 2004 05:01:52 -0500
From: Tim Daly
To: list
Subject: happy new year
Cc: Gilbert Baumslag

*,

Well, it's not merged yet and on linux only so far but ....

axiom


starts axiom and hypertex. from hypertex it is possible to go into
basic commands -> draw -> draw a curve 
and it pipes to the running axiom process and starts graphics.

in other words..... IT WORKS!

I'm hoping to get this cleaned up, automated, tested, and merged into main
before the February 2005 release.

Happy new year to one and all.

\start
Date: Fri, 31 Dec 2004 03:21:33 -0600
From: MathAction (root)
To: MathAction
Subject: [Axiom-mail] happy new year

*,

Well, it's not merged yet and on linux only so far but ....

axiom


starts axiom and hypertex. from hypertex it is possible to go into
basic commands -> draw -> draw a curve 
and it pipes to the running axiom process and starts graphics.

in other words..... IT WORKS!

I'm hoping to get this cleaned up, automated, tested, and merged into main
before the February 2005 release.

Happy new year to one and all.

\start
Date: Fri, 31 Dec 2004 09:51:12 -0500
From: Kostas Oikonomou
To: Tim Daly
Subject: Re: Failure in Solaris 9 build, patch 23

Tim,

I'm a little lost here :-) I checked that indeed there is no
obj/sol9gcc/interp/nocompil.o.  Other than that, I could send the
whole output of make, if it would be helpful.

					Kostas


On Thu, 30 Dec 2004 23:01:04 -0500, Tim Daly wrote:

> Kostas,
>
>
>> ...
>> Loading /home/build/axiom--main--1--patch-23/obj/sol9gcc/interp/patche=
s.o
>> start address -T 78c408 Finished loading /home/build/axiom--main--1--p=
atch-23/obj/sol9gcc/interp/patches.o
>> start address -T 667480    Using local database /home/build/axiom--mai=
n--1--patch-23/src/share/algebra/compress.daase..   Re-reading compress.d=
aase   Using local database /home/build/axiom--main--1--patch-23/src/shar=
e/algebra/interp.daase..   Re-reading interp.daase
>>     AXIOM initialization: interpreter
>> start address -T b55dc0    AXIOM initialization: database
>>     AXIOM initialization: constructors
>>     AXIOM initialization: history
>>                          AXIOM Computer Algebra System
>>                     Version: Axiom 3.0 Beta (January 2005)
>>                Timestamp: Friday December 31, 2004 at 11:26:44
>> ----------------------------------------------------------------------=
-------
>>     Issue )copyright to view copyright notices.
>>     Issue )summary for a summary of useful system commands.
>>     Issue )quit to leave AXIOM and return to shell.
>> ----------------------------------------------------------------------=
-------
>>
>>
>> Error:  Lisps arglist maximum surpassed
>> Fast links are on: do (si::use-fast-links nil) for debugging
>> Error signalled by APPLY.
>> Broken at APPLY.  Type :H for Help.
>> BOOT>>make[3]: *** [/home/build/axiom--main--1--patch-23/obj/sol9gcc/b=
in/interpsys] Error 255
>> make[3]: Leaving directory `/home/build/axiom--main--1--patch-23/src/i=
nterp'
>> make[2]: *** [interpdir] Error 2
>> make[2]: Leaving directory `/home/build/axiom--main--1--patch-23/src'
>> make[1]: *** [srcdir] Error 2
>> make[1]: Leaving directory `/home/build/axiom--main--1--patch-23'
>>
>
> Many centuries ago, there used to be a problem in GCL about the number
> of arguments that a compiled function could accept.
>
>
> Error:  Lisps arglist maximum surpassed
>
>
> In order to get around this problem there is a file called
> src/interp/nocompil.lisp.pamphlet. I can't imagine how this
> could ever be compiled as the makefile does not do it. The
> file obj/sol9gcc/interp/nocompil.lsp should not have a
> corresponding nocompil.o file.
>
> There is a function called |Join| which exceeds the GCL maximum.
> I'm not sure why this shows up for you.

\start
Date: Fri, 31 Dec 2004 17:32:12 -0500
From: Tim Daly
To: list
Subject: axiom--nyperdoc--1--patch-5

This version of the system builds. 
Once it builds you need only use the 'axiom' command to use both
hypertex and graphics.

I'll be away from contact until sunday evening.

Tim

=====================================================================
--patch 4

Summary: hypertex starts
Keywords: daly hypertex

20041231 tpd src/sman/sman.c.pamphlet remove debug, don't start nagman
20041231 tpd src/hyper/pages/util.ht remove share
20041231 tpd src/hyper/parse_aux.pamphlet comment out debugging code
20041231 tpd src/hyper/pages/util.ht remove share
20041231 tpd src/hyper/pages/ug11.pht remove share
20041231 tpd src/hyper/pages/ug10.pht remove share
20041231 tpd src/hyper/pages/ug08.pht remove share
20041231 tpd src/hyper/pages/ug07.pht remove share
20041231 tpd src/hyper/pages/ug01.pht remove share
20041231 tpd src/hyper/pages/ug00.ht remove share
20041231 tpd src/hyper/pages/ht.db complete rebuild with htadd
20041231 tpd src/hyper/pages/graphics.pht remove share
20041231 tpd src/hyper/pages/explot3d.pht remove share
20041231 tpd src/hyper/pages/explot2d.pht remove share
20041231 tpd src/hyper/pages/coverex.pht remove share
20041231 tpd src/hyper/pages/SEGBIND.pht remove share
20041231 tpd src/hyper/pages/HTXTryPage.ht remove share
20041231 tpd src/hyper/pages/HTXLinkPage6.ht remove share
20041231 tpd src/hyper/pages/HTXLinkPage5.ht remove share
20041231 tpd src/hyper/pages/HTXLinkPage4.ht remove share
20041231 tpd src/hyper/pages/HTXLinkPage3.ht remove share
20041231 tpd src/hyper/pages/HTXLinkPage2.ht remove share
20041231 tpd src/hyper/pages/HTXIntroPage3.ht remove share
20041231 tpd src/hyper/pages/HTXFormatPage8.ht remove share
20041231 tpd src/hyper/pages/HTXAdvPage5.ht remove share
20041231 tpd src/hyper/pages/HTXAdvPage3.ht remove share
20041231 tpd src/hyper/mem comment out debugging code
20041231 tpd src/hyper/lex add dumpToken function, comment debugging code
20041231 tpd src/hyper/initx comment out debugging code
20041231 tpd src/hyper/hyper comment out debugging code
20041231 tpd src/hyper/htadd comment out debugging code
20041231 tpd src/hyper/event comment out debugging code
20041231 tpd src/hyper/addfile comment out debugging code
20041231 tpd src/hyper/Makefile add pages section
20041231 tpd src/graph/Gdraws/Gfun.c change hardcoded pathnames to ps files
20041231 tpd src/etc/axiom rewritten
20041231 tpd src/Makefile rearrange DIRS, add mkdir -p to hyperdir

=====================================================================
--patch-5
Summary: add viewports files
Keywords: daly viewports

20041231 tpd src/hyper/viewports/* add files in subdirectories
\end{verbatim}
\eject
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\cleardoublepage
%\phantomsection
\addcontentsline{toc}{chapter}{Bibliography}
\bibliographystyle{axiom}
\bibliography{axiom}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\cleardoublepage
%\phantomsection
\addcontentsline{toc}{chapter}{Index}
\printindex
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\end{document}
