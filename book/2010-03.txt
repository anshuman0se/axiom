\documentclass{book}
%\newcommand{\VolumeName}{Volume 2: Axiom Users Guide}
%\input{bookheader.tex}
\pagenumbering{arabic}
\mainmatter
\setcounter{chapter}{0} % Chapter 1

\usepackage{makeidx}
\makeindex
\begin{document}
\begin{verbatim}
\start
Date: Wed, 03 Mar 2010 09:40:36 -0500
From: Tim Daly
To: list
Subject: Re: [sage-devel] Randomised testing against Mathematica

There are two test suites with validated results at
http://axiom-developer.org/axiom-website/CATS/

The CATS (Computer Algebra Test Suite) effort targets
the development of known-good answers that get run
against several systems. These "end result" suites test
large portions of the system. As they are tested against
published results they can be used by all systems.

The integration suite found several bugs in the published
results which are noted in the suite. It also found a bug
introduced by an improper patch to Axiom.

It would be generally useful if Sage developed known-good
test suites in other areas, say infinite sequences and series.
Perhaps such a suite would make a good GSOC effort with
several moderators from different systems.

I have done some more work toward a trigonometric test
suite. So far I have found that Mathematica and Maxima
tend to agree on branch cuts and Axiom and Maple tend
to agree on branch cuts. The choice is arbitrary but
it affects answers. I am having an internal debate about
whether to choose MMA/Maxima compatible answers just to
"regularize" the expected results users will see.

Standardized test suites give our users confidence that
we are generating known-good results for some (small)
range of expected inputs.

An academic-based effort (which Axiom is not) could
approach NIST for funding an effort to develop such
suites. NIST has a website (http://dlmf.nist.gov/)
Digital Library of Mathematical Functions. I proposed
developing Computer Algebra test suites for their
website but NIST does not fund independent open source
projects. Sage, however, could probably get continuous
funding to develop such suites which would benefit all
of the existing CAS efforts.

NSF might also be convinced since such test suites raise
the level of expected quality of answers without directly
competing against commercial efforts. I'd like to see a
CAS testing research lab that published standardized
answers to a lot of things we all end up debating, such
as branch cuts, sqrt-of-squares, foo^0, etc.

Tim Daly


Dr. David Kirkby wrote:
> Joshua Herman wrote:
>> Is there a mathematica test suite we could adapt or a standardized set
>> of tests we could use? Maybe we could take the 100 most often used
>> functions and make a test suite?
>
> I'm not aware of one. A Google found very little of any real use.
>
> I'm sure Wolfram Research have such test suites internally, but they 
> are not public. There is discussion of how they have an internal 
> version of Mathematica which runs very slowly, but tests things in 
> greater detail.
>
> http://reference.wolfram.com/mathematica/tutorial/TestingAndVerification.html 
>
>
> Of course, comparing 100 things is useful, but comparing millions of 
> them in the way I propose would more likely show up problems.
>
> I think we are all aware that it is best to test on the hardware you 
> are using to be as confident as possible that the results are right.
>
> Of course, Wolfram Research could supply a test suite to check 
> Mathematica on an end user's computer, but they do not do that. They 
> could even encrypt it, so users did not know what was wrong, but could 
> at least alert Wolfram Research.
>
> I'm aware of one bug in Mathematica that only affected old/slower 
> SPARC machines if Solaris was updated to Solaris 10. I suspect it 
> would have affected newer machines too, had they been heavily loaded. 
> (If I was sufficiently motivated, I would probably prove that, but I'm 
> not, so my hypothesis is unproven).
>
> It did not produce incorrect results, but pegged the CPU at 100% 
> forever if you computed something as simple as 1+1.) It was amazing 
> how that was solved between myself, Casper Dik a kernel engineer at 
> Sun and various other people on the Internet. It was Casper who 
> finally nailed the problem, after I posted the output of lsof, he 
> could see what Mathematica was doing.
>
> I've got a collection of a few Mathematica bugs, mainly affecting only 
> Solaris, although one affected at least one Linux distribution too.
>
> http://www.g8wrb.org/mathematica/
>
> One thing I know Mathematica does do, which Sage could do, is to 
> automatically generate bug report if it finds a problem. At the most 
> primitive level, that code might be
>
> if (x < 0)
>   function_less()
> else if (x == 0)
>   function_equal()
> else if (x > 0)
>   function_greater()
> else
>   function_error()
>
> If the error is generated, a URL is given, which you click and can 
> send a bug report to them. It lists the name of the file and line 
> number which generated the error. That's something that could be done 
> in Sage and might catch some bugs.
>
>
> Dave
>
>> ---- LOOK ITS A SIGNATURE CLICK IF YOU DARE---
>> http://www.google.com/profiles/zitterbewegung
>>
>>
>>
>>
>> On Wed, Mar 3, 2010 at 12:04 AM, David Kirkby 
>> <david.kirkby@onetel.net> wrote:
>>> Has anyone ever considered randomised testing of Sage against 
>>> Mathematica?
>>>
>>> As long as the result is either
>>>
>>> a) True or False
>>> b) An integer
>>>
>>> then comparison should be very easy. As a dead simple example,
>>>
>>> 1) Generate a large random number n.
>>> 2) Use is_prime(n) in Sage to determine if n is prime or composite.
>>> 3) Use PrimeQ[n] in Mathematica to see if n is prime or composite.
>>> 4) If Sage and Mathematica disagree, write it to a log file.
>>>
>>> Something a bit more complex.
>>>
>>> 1) Generating random equation f(x) - something that one could 
>>> integrate.
>>> 2) Generate generate random upper and lower limits, 'a' and 'b'
>>> 3) Perform a numerical integration of f(x) between between 'a' and 
>>> 'b' in Sage
>>> 4) Perform a numerical integration of f(x) between between 'a' and 'b'
>>> in Mathematica
>>> 5) Compare the outputs of the Sage and Mathematica
>>>
>>> A floating point number, would be more difficult to compare, as one
>>> would need to consider what is a reasonable level of difference.
>>>
>>> Comparing symbolic results directly would be a much more difficult
>>> task, and probably impossible without a huge effort, since you can
>>> often write an equation in several different ways which are equal, but
>>> a computer program could not easily be programmed to determine if they
>>> are equal.
>>>
>>> One could potentially let a computer crunch away all the time, looking
>>> for differences. Then when they are found, a human would had to
>>> investigate why the difference occurs.
>>>
>>> One could then add a trac item for "Mathematica bugs" There was once a
>>> push for a public list of Mathematica bugs. I got involved a bit with
>>> that, but it died a death and I became more interested in Sage.
>>>
>>> Some of you may know of Vladimir Bondarenko, who is a strange
>>> character who regularly used to publish Mathematica and Maple bugs he
>>> had found. In some discussions I've had with him, he was of the
>>> opinion that Wolfram Research took bug reports more seriously than
>>> Maplesoft. I've never worked out what technique he uses, but I believe
>>> is doing some randomised testing, though it is more sophisticated that
>>> what I'm suggesting above.
>>>
>>> There must be a big range of problem types where this is practical -
>>> and a much larger range where it is not.
>>>
>>> You could at the same also compare the time taken to execute the
>>> operation to find areas where Sage is much faster or slower than
>>> Mathematica.

\start
Date: Thu, 4 Mar 2010 16:01:55 -0500
From: Ted Kosan
To: list
Subject: Typo on the download page.

In the GIT section of the download page:

http://www.axiom-developer.org/axiom-website/download.html

I think that git-clone should be git clone.

\start
Date: Thu, 04 Mar 2010 16:22:05 -0500
From: Tim Daly
To: Ted Kosan
Subject: Re: Typo on the download page.

Fixed. Thanks.
I was an early adoption case for git and they used to have
all of the commands as git-command.

Ted Kosan wrote:
> In the GIT section of the download page:
>
> http://www.axiom-developer.org/axiom-website/download.html
>
> I think that git-clone should be git clone.

\start
Date: Thu, 4 Mar 2010 20:20:29 -0500
From: Ted Kosan
To: list
Subject: "Lisp initialization failed." error encountered while building Axiom.

I have obtained the latest version of Axiom from the git repository
and I am in the process of building it on Ubuntu 9.10.  I am following
the Ubuntu instructions on the download page.  During the build
process, I am receiving a "Cannot read address Lisp initialization
failed." error.  The part of the build log that contains the error is
included below.

Any thoughts on what the problem is?

<...>
gcc -o raw_pre_gcl
/home/tkosan/checkouts/axiom/obj/ubuntu/lib/cfuns-c.o
/home/tkosan/checkouts/axiom/obj/ubuntu/lib/sockio-c.o \
		-L.  -Wl,-Map raw_pre_gcl_map   -lpre_gcl -lm  -lc -lgclp
/home/tkosan/checkouts/axiom/obj/ubuntu/lib/libspad.a
cp init_pre_gcl.lsp foo
echo " (in-package \"USER\")(system:save-system \"saved_pre_gcl\")" >>foo
/home/tkosan/checkouts/axiom/lsp/gcl-2.6.8pre3/unixport/raw_pre_gcl
/home/tkosan/checkouts/axiom/lsp/gcl-2.6.8pre3/unixport/ -libdir
/home/tkosan/checkouts/axiom/lsp/gcl-2.6.8pre3/ < foo
GCL (GNU Common Lisp)  April 1994  524288 pages
Cannot read address
Lisp initialization failed.
rm raw_pre_gcl
make[4]: Leaving directory
`/home/tkosan/checkouts/axiom/lsp/gcl-2.6.8pre3/unixport'
(cd lsp; touch *.lsp ; make all)
make[4]: Entering directory `/home/tkosan/checkouts/axiom/lsp/gcl-2.6.8pre3/lsp'
make[4]: Leaving directory `/home/tkosan/checkouts/axiom/lsp/gcl-2.6.8pre3/lsp'
(cd cmpnew; touch *.lsp ; make all)
make[4]: Entering directory
`/home/tkosan/checkouts/axiom/lsp/gcl-2.6.8pre3/cmpnew'
make[4]: Leaving directory
`/home/tkosan/checkouts/axiom/lsp/gcl-2.6.8pre3/cmpnew'
[ "" == "" ] || (cd xgcl-2 && make LISP=../unixport/saved_pre_gcl)
[: 1: unexpected operator
make[4]: Entering directory
`/home/tkosan/checkouts/axiom/lsp/gcl-2.6.8pre3/xgcl-2'
make[4]: *** No rule to make target `../unixport/saved_pre_gcl',
needed by `objects'.  Stop.
make[4]: Leaving directory
`/home/tkosan/checkouts/axiom/lsp/gcl-2.6.8pre3/xgcl-2'
make[3]: *** [unixport/saved_gcl] Error 2
make[3]: Leaving directory `/home/tkosan/checkouts/axiom/lsp/gcl-2.6.8pre3'
/bin/sh: unixport/saved_gcl: not found
make[2]: *** [gcldir] Error 127
make[2]: Leaving directory `/home/tkosan/checkouts/axiom/lsp'
make[1]: *** [lspdir] Error 2
make[1]: Leaving directory `/home/tkosan/checkouts/axiom'
make: *** [all] Error 2
root@tkosan-laptop:/home/tkosan/checkouts/axiom#


root@tkosan-laptop:/home/tkosan/checkouts/axiom# echo $AXIOM
/home/tkosan/checkouts/axiom/mnt/ubuntu

root@tkosan-laptop:/home/tkosan/checkouts/axiom# echo $PATH
/home/tkosan/checkouts/axiom/mnt/ubuntu/bin:/home/tkosan/checkouts/PFC/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

\start
Date: Thu, 04 Mar 2010 21:31:22 -0500
From: Tim Daly
To: Ted Kosan
Subject: Re: "Lisp initialization failed." error encountered while building Axiom.

You probably have not turned off address randomization during build.
(faq 36,37): Try (as root):

echo 0 >/proc/sys/kernel/randomize_va_space
echo 0 >/proc/sys/kernel/exec-shield
make clean
make NOISE=

Ted Kosan wrote:
> I have obtained the latest version of Axiom from the git repository
> and I am in the process of building it on Ubuntu 9.10.  I am following
> the Ubuntu instructions on the download page.  During the build
> process, I am receiving a "Cannot read address Lisp initialization
> failed." error.  The part of the build log that contains the error is
> included below.
>
> Any thoughts on what the problem is?
>
> Thanks,
>
> Ted
>
>
> <...>
> gcc -o raw_pre_gcl
> /home/tkosan/checkouts/axiom/obj/ubuntu/lib/cfuns-c.o
> /home/tkosan/checkouts/axiom/obj/ubuntu/lib/sockio-c.o \
> 		-L.  -Wl,-Map raw_pre_gcl_map   -lpre_gcl -lm  -lc -lgclp
> /home/tkosan/checkouts/axiom/obj/ubuntu/lib/libspad.a
> cp init_pre_gcl.lsp foo
> echo " (in-package \"USER\")(system:save-system \"saved_pre_gcl\")" >>foo
> /home/tkosan/checkouts/axiom/lsp/gcl-2.6.8pre3/unixport/raw_pre_gcl
> /home/tkosan/checkouts/axiom/lsp/gcl-2.6.8pre3/unixport/ -libdir
> /home/tkosan/checkouts/axiom/lsp/gcl-2.6.8pre3/ < foo
> GCL (GNU Common Lisp)  April 1994  524288 pages
> Cannot read address
> Lisp initialization failed.
> rm raw_pre_gcl
> make[4]: Leaving directory
> `/home/tkosan/checkouts/axiom/lsp/gcl-2.6.8pre3/unixport'
> (cd lsp; touch *.lsp ; make all)
> make[4]: Entering directory `/home/tkosan/checkouts/axiom/lsp/gcl-2.6.8pre3/lsp'
> make[4]: Leaving directory `/home/tkosan/checkouts/axiom/lsp/gcl-2.6.8pre3/lsp'
> (cd cmpnew; touch *.lsp ; make all)
> make[4]: Entering directory
> `/home/tkosan/checkouts/axiom/lsp/gcl-2.6.8pre3/cmpnew'
> make[4]: Leaving directory
> `/home/tkosan/checkouts/axiom/lsp/gcl-2.6.8pre3/cmpnew'
> [ "" == "" ] || (cd xgcl-2 && make LISP=../unixport/saved_pre_gcl)
> [: 1: unexpected operator
> make[4]: Entering directory
> `/home/tkosan/checkouts/axiom/lsp/gcl-2.6.8pre3/xgcl-2'
> make[4]: *** No rule to make target `../unixport/saved_pre_gcl',
> needed by `objects'.  Stop.
> make[4]: Leaving directory
> `/home/tkosan/checkouts/axiom/lsp/gcl-2.6.8pre3/xgcl-2'
> make[3]: *** [unixport/saved_gcl] Error 2
> make[3]: Leaving directory `/home/tkosan/checkouts/axiom/lsp/gcl-2.6.8pre3'
> /bin/sh: unixport/saved_gcl: not found
> make[2]: *** [gcldir] Error 127
> make[2]: Leaving directory `/home/tkosan/checkouts/axiom/lsp'
> make[1]: *** [lspdir] Error 2
> make[1]: Leaving directory `/home/tkosan/checkouts/axiom'
> make: *** [all] Error 2
> root@tkosan-laptop:/home/tkosan/checkouts/axiom#
>
>
> root@tkosan-laptop:/home/tkosan/checkouts/axiom# echo $AXIOM
> /home/tkosan/checkouts/axiom/mnt/ubuntu
>
> root@tkosan-laptop:/home/tkosan/checkouts/axiom# echo $PATH
> /home/tkosan/checkouts/axiom/mnt/ubuntu/bin:/home/tkosan/checkouts/PFC/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin

\start
Date: Thu, 4 Mar 2010 22:33:44 -0500
From: Ted Kosan
To: list
Subject: Re: "Lisp initialization failed." error encountered while building Axiom.

Tim wrote:

> You probably have not turned off address randomization during build.
> (faq 36,37): Try (as root):
>
> echo 0 >/proc/sys/kernel/randomize_va_space
> echo 0 >/proc/sys/kernel/exec-shield
> make clean
> make NOISE=


In my original email I had forgotten to mention that I had executed
both of these lines multiple times:

  echo 0 >/proc/sys/kernel/randomize_va_space
  echo 0 >/proc/sys/kernel/exec-shield


However, I was using just make instead of

 make clean
 make NOISE=

when I used these, the build proceeded past the point where the error
was encountered with no problems.

\start
Date: Sat, 6 Mar 2010 14:45:50 -0500
From: Ted Kosan
To: list
Subject: The make process stops while processing a .pamphlet file.

I am building Axiom from axiom-jan2010-src.tgz  on an x86 system
running Ubuntu 9.10.  The make process is stopping while processing a
.pamphlet file.  I am using make NOISE= and the bottom part of the
terminal output is included below.

I had first tried making a version of Axiom which I checked out using
git and the make process was also stopping on a .pamphlet file
(although it was a different one).  Any thoughts on what I should do
to try to fix the problem?

Thanks,

Ted


<...>
Overfull \hbox (32.9956pt too wide) in paragraph at lines 377--377
[]\OT1/cmtt/m/n/9 odes := [D(x t,t) - x(t) - 2*y(t) = 0, D(x t,t,2) - 2*D(y t,t
) = 2*t - cos(2*t)][]

Overfull \hbox (4.64594pt too wide) in paragraph at lines 384--384
[]\OT1/cmtt/m/n/9 odes := [D(y1 x,x) = -1/(x*(x^2 + 1))*y1(x) + 1/(x^2*(x^2 + 1
))*y2(x)+1/x,[]
[10] [11] (./zimmer.input.aux)

LaTeX Warning: Label(s) may have changed. Rerun to get cross-references right.

 )
(see the transcript file for additional information)
Output written on zimmer.input.dvi (11 pages, 10556 bytes).
Transcript written on zimmer.input.log.
This is pdfTeXk, Version 3.141592-1.40.3 (Web2C 7.5.6)
 %&-line parsing enabled.
entering extended mode
(/home/tkosan/checkouts/axiom/src/input/zlindep.input.pamphlet
LaTeX2e <2005/12/01>
Babel <v3.8h> and hyphenation patterns for english, usenglishmax, dumylang, noh
yphenation, loaded.
(/usr/share/texmf-texlive/tex/latex/base/article.cls
Document Class: article 2005/09/16 v1.4f Standard LaTeX document class
(/usr/share/texmf-texlive/tex/latex/base/size10.clo)) (./axiom.sty
(/usr/share/texmf-texlive/tex/latex/tools/verbatim.sty))
No file zlindep.input.aux.
[1]
No file zlindep.input.toc.
[2] [3] [4] (./zlindep.input.aux)

LaTeX Warning: Label(s) may have changed. Rerun to get cross-references right.

 )
Output written on zlindep.input.dvi (4 pages, 1440 bytes).
Transcript written on zlindep.input.log.
make[1]: Leaving directory `/home/tkosan/checkouts/axiom'
root@tkosan-laptop:/home/tkosan/checkouts/axiom#

\start
Date: Sat, 06 Mar 2010 20:23:36 -0500
From: Tim Daly
To: Ted Kosan
Subject: Re: The make process stops while processing a .pamphlet file.

Ted,

My guess is that something fails earlier.
Look backward for "[make]: *" which should be the error.

Tim

Ted Kosan wrote:
> I am building Axiom from axiom-jan2010-src.tgz  on an x86 system
> running Ubuntu 9.10.  The make process is stopping while processing a
> .pamphlet file.  I am using make NOISE= and the bottom part of the
> terminal output is included below.
>
> I had first tried making a version of Axiom which I checked out using
> git and the make process was also stopping on a .pamphlet file
> (although it was a different one).  Any thoughts on what I should do
> to try to fix the problem?
>
> Thanks,
>
> Ted
>
>
> <...>
> Overfull \hbox (32.9956pt too wide) in paragraph at lines 377--377
> []\OT1/cmtt/m/n/9 odes := [D(x t,t) - x(t) - 2*y(t) = 0, D(x t,t,2) - 2*D(y t,t
> ) = 2*t - cos(2*t)][]
>
> Overfull \hbox (4.64594pt too wide) in paragraph at lines 384--384
> []\OT1/cmtt/m/n/9 odes := [D(y1 x,x) = -1/(x*(x^2 + 1))*y1(x) + 1/(x^2*(x^2 + 1
> ))*y2(x)+1/x,[]
> [10] [11] (./zimmer.input.aux)
>
> LaTeX Warning: Label(s) may have changed. Rerun to get cross-references right.
>
>  )
> (see the transcript file for additional information)
> Output written on zimmer.input.dvi (11 pages, 10556 bytes).
> Transcript written on zimmer.input.log.
> This is pdfTeXk, Version 3.141592-1.40.3 (Web2C 7.5.6)
>  %&-line parsing enabled.
> entering extended mode
> (/home/tkosan/checkouts/axiom/src/input/zlindep.input.pamphlet
> LaTeX2e <2005/12/01>
> Babel <v3.8h> and hyphenation patterns for english, usenglishmax, dumylang, noh
> yphenation, loaded.
> (/usr/share/texmf-texlive/tex/latex/base/article.cls
> Document Class: article 2005/09/16 v1.4f Standard LaTeX document class
> (/usr/share/texmf-texlive/tex/latex/base/size10.clo)) (./axiom.sty
> (/usr/share/texmf-texlive/tex/latex/tools/verbatim.sty))
> No file zlindep.input.aux.
> [1]
> No file zlindep.input.toc.
> [2] [3] [4] (./zlindep.input.aux)
>
> LaTeX Warning: Label(s) may have changed. Rerun to get cross-references right.
>
>  )
> Output written on zlindep.input.dvi (4 pages, 1440 bytes).
> Transcript written on zlindep.input.log.
> make[1]: Leaving directory `/home/tkosan/checkouts/axiom'
> root@tkosan-laptop:/home/tkosan/checkouts/axiom#

\start
Date: Mon, 8 Mar 2010 01:48:08 -0500
From: Ted Kosan
To: list
Subject: Testing if (72*a^3*b^5)^(1/2) is equivalent to	6*a*b^2*(2*a*b)^(1/2)

I have been experimenting with Axiom to see how it compares to other
computer algebra systems.

One of the things I tried testing was if Axiom could determine if
(72*a^3*b^5)^(1/2) was equivalent to 6*a*b^2*(2*a*b)^(1/2):

(2) -> (72*a^3*b^5)^(1/2) - 6*a*b^2*(2*a*b)^(1/2)

         +------+
         |   3 5        2 +----+
 (2)  \|72a b   - 6a b \|2a b


When I entered this expression into Wolfram Alpha, it returned 0 as a result.

Is Axiom capable of determining if (72*a^3*b^5)^(1/2) is equivalent to
6*a*b^2*(2*a*b)^(1/2) ?

\start
Date: Mon, 08 Mar 2010 02:31:32 -0500
From: Tim Daly
To: Ted Kosan
Subject: Re: Testing if (72*a^3*b^5)^(1/2) is equivalent to 6*a*b^2*(2*a*b)^(1/2)

Probably not. See:
http://www.apmaths.uwo.ca/~djeffrey/Offprints/AMAI.pdf

Ted Kosan wrote:
> I have been experimenting with Axiom to see how it compares to other
> computer algebra systems.
>
> One of the things I tried testing was if Axiom could determine if
> (72*a^3*b^5)^(1/2) was equivalent to 6*a*b^2*(2*a*b)^(1/2):
>
> (2) -> (72*a^3*b^5)^(1/2) - 6*a*b^2*(2*a*b)^(1/2)
>
>          +------+
>          |   3 5        2 +----+
>  (2)  \|72a b   - 6a b \|2a b
>
>
> When I entered this expression into Wolfram Alpha, it returned 0 as a result.
>
> Is Axiom capable of determining if (72*a^3*b^5)^(1/2) is equivalent to
> 6*a*b^2*(2*a*b)^(1/2) ?

\start
Date: Mon, 08 Mar 2010 03:05:10 -0500
From: William Sit
To: Ted Kosan
Subject: Re: Testing if (72*a^3*b^5)^(1/2) is equivalent to 6*a*b^2*(2*a*b)^(1/2)

Every "number" has two square roots. The expression may be 
zero and may not be zero, depending on which of the four 
possible interpretations you put on the square root.

An expression like the one given can be interpreted at 
various levels in Axiom. Each "square root" can be 
interpreted as an algebraic element in an extension of the 
field Q(a,b) , where a, b are two algebraically 
independent element over the field of rational numbers Q 
(defined by a minimal polynomial) and the difference would 
be another algebraic element. Or, one can view a,b as 
standing for two elements in some ordered ring R, and the 
square root is always taken to be the positive square 
root, in which case, (a^2)^(1/2) = a in R only when a > 0 
in R.

There is also a difference (no pun intended) between 
testing x = y and testing x-y=0. If x = sqrt(72a^3b^5) and 
y = 6ab^2sqrt(2ab), then the minimal polynomials of x and 
of y over say Q(a,b) are the same and as algebraic 
elements over Q(a,b), x and y may be considered "equal". 
However, if I am not mistaken, x-y will be algebraic of 
degree 4 and not equal to 0.

William

On Mon, 8 Mar 2010 01:48:08 -0500
  Ted Kosan wrote:
>I have been experimenting with Axiom to see how it 
>compares to other
>computer algebra systems.
>
>One of the things I tried testing was if Axiom could 
>determine if
>(72*a^3*b^5)^(1/2) was equivalent to 
>6*a*b^2*(2*a*b)^(1/2):
>
>(2) -> (72*a^3*b^5)^(1/2) - 6*a*b^2*(2*a*b)^(1/2)
>
>          +------+
>          |   3 5        2 +----+
>  (2)  \|72a b   - 6a b \|2a b
>
>
>When I entered this expression into Wolfram Alpha, it 
>returned 0 as a result.
>
>Is Axiom capable of determining if (72*a^3*b^5)^(1/2) is 
>equivalent to
>6*a*b^2*(2*a*b)^(1/2) ?

\start
Date: Mon, 08 Mar 2010 10:18:25 +0100
From: Martin Rubey
To: Ted Kosan
Subject: Re: Testing if (72*a^3*b^5)^(1/2) is equivalent to 6*a*b^2*(2*a*b)^(1/2)

> I have been experimenting with Axiom to see how it compares to other
> computer algebra systems.
>
> One of the things I tried testing was if Axiom could determine if
> (72*a^3*b^5)^(1/2) was equivalent to 6*a*b^2*(2*a*b)^(1/2):
>
> (2) -> (72*a^3*b^5)^(1/2) - 6*a*b^2*(2*a*b)^(1/2)
>
>          +------+
>          |   3 5        2 +----+
>  (2)  \|72a b   - 6a b \|2a b
>
>
> When I entered this expression into Wolfram Alpha, it returned 0 as a result.
>
> Is Axiom capable of determining if (72*a^3*b^5)^(1/2) is equivalent to
> 6*a*b^2*(2*a*b)^(1/2) ?

It should be.  At least FriCAS is:

(1) -> (72*a^3*b^5)^(1/2) - 6*a*b^2*(2*a*b)^(1/2)

         +------+
         |   3 5        2 +----+
   (1)  \|72a b   - 6a b \|2a b
                                                    Type: Expression(Integer)
(2) -> normalize %

   (2)  0
                                                    Type: Expression(Integer)

Of course, you have to be careful interpreting this result, see
William's answer!

\start
Date: Mon, 08 Mar 2010 12:37:25 +0100
From: Daniel Cordeiro
To: list
Subject: PASCO 2010: News and 2nd Call for Papers

(Please accept our apologies if you receive this message multiple times)

------------------------------------------------------------------------

                Parallel Symbolic Computation 2010 (PASCO 2010)

                    July 21-23, 2010 -- Grenoble, France

                         http://pasco2010.imag.fr/

                          Second Announcement and

                       C A L L   f o r   P A P E R S

News:
  - PASCO 2010 Programming contest
  - PASCO 2010 in cooperation with ACM

Overview:

    The International Workshop on Parallel and Symbolic Computation (PASCO)
    is a series of workshops dedicated to the promotion and advancement of
    parallel algorithms and software in all areas of symbolic mathematical
    computation. The pervasive ubiquity of parallel architectures and
    memory hierarchy has led to  the emergence of a new quest for parallel
    mathematical algorithms and software capable of exploiting the various
    levels of parallelism: from hardware acceleration technologies (multi-
    core and multi-processor system on chip, GPGPU, FPGA) to cluster and
    global computing platforms. To  push up the limits of symbolic and
    algebraic computations, beyond the optimization of the application
    itself, the effective use of a large number of  resources  --memory
    and general or specialized computing units-- is expected to enhance
    the performance multi-criteria objectives: time, energy consumption,
    resource usage, reliability. In this context, the design and the
    implementation of mathematical algorithms with  provable and adaptive
    performances is a major challenge.

    Earlier meetings in the PASCO series include PASCO'94 (Linz, Austria),
    PASCO'97 (Maui, U.S.A.), PASCO'07 (London, Canada).
    PASCO 2010 is affiliated with the  2010 International Symposium on
    Symbolic and Algebraic Computation (ISSAC) in Munich, Germany.
    Immediately prior to the ISSAC 2010 meeting, PASCO will be held in
    Grenoble, France.

    The  workshop  PASCO 2010 will be a three-day event  including  invited
    presentations and tutorials, contributed research papers and posters,
    and a programming contest.
    Specific topics include, but are not limited to:
    * Design and analysis of parallel algorithms for computer algebra
    * Practical parallel implementation of symbolic or symbolic-numeric
      algorithms
    * High-performance software tools and libraries for computer algebra
    * Applications of high-performance computer algebra
    * Distributed data-structures for computer algebra
    * Hardware acceleration technologies (multi-cores, GPUs, FPGAs) applied
      to computer algebra
    * Cache complexity and cache-oblivious algorithms for computer algebra
    * Compile-time and run-time techniques for automating optimization and
      platform adaptation of computer algebra algorithms

Call for Papers:

    The  conference  invites submission of papers presenting original
    research, either in the form of extended abstracts (2 pages) or
    full papers (up to 10 pages) in ACM format. As in previous years,
    PASCO 2010 will publish formal proceedings of the accepted papers.

    The PASCO 2010 Conference proceedings will be published by the
    Association for Computing Machinery (ACM) http://www.acm.org/ and
    will be made available in the ACM Digital Library.

Programming Contest:

    A programming contest will be organized during the PASCO 2010 meeting.
    Each participating team will be competing on one or more programming
    challenges proposed by the organizing committee and by the participants.
    Details can be found at the PASCO 2010 web site.

  Important Dates

    Paper submission deadline:               April 2 (Fri), 2010
    Programming Challenge proposal           April 2 (Fri), 2010
    Notification of acceptance:              May 10 (Mon), 2010
    (for papers and challenge proposals)
    Camera-ready version of paper due:       May 28 (Fri), 2010
    Intent of participation to the contest:  May 28 (Fri), 2010
    Tutorials and Workshop in Grenoble:      July 21-23 (Wed-Fri), 2010

Conference Chairs:

       Marc Moreno Maza (University of Western Ontario, Canada)
                         <moreno@csd.uwo.ca>
       Jean-Louis Roch (Grenoble University, France)
                        <jlroch@imag.fr


Local Arrangements Chairs:

       Jean-Guillaume Dumas (Grenoble University, France)
                        <jean-guillaume.dumas@imag.fr
       Thierry Gautier (INRIA Grenoble, France)
                        <thierry.gautier@imag.fr>
       Clement Pernet   (Grenoble University, France)
                       <clement.pernet@imag.fr>

Publicity Chair:

        Daniel Cordeiro  (Grenoble University, France)
                         <daniel.cordeiro@imag.fr>

Administration:

        Daniele Herzog (INRIA Grenoble, France)
                  <daniele.herzog@inrialpes.fr>
        Christian Seguy (CNRS, France)
                  <christian.seguy@imag.fr>
        Ahlem Zammit-Boubaker (INRIA Grenoble, France)
                  <ahlem.zammit-boubaker@inrialpes.fr>

Program Committee:

       Daniel Augot (INRIA Saclay, France)
       Jean-Claude Bajard (Montpellier II University, France)
       Olivier Beaumont (INRIA Bordeaux, France)
       Bruce Char (Drexel University, USA)
       Gene Cooperman (Northeastern University, USA)
       Gabriel Dos-Reis (Texas A&M University, USA)
       Jean-Christophe Dubacq (LIPN, University Paris 13, France)
       Jean-Guillaume Dumas (Grenoble University, France)
       Jean-Charles Faugere (INRIA - UPMC, France)
       Matteo Frigo (Axis Semiconductor, USA)
       Thierry Gautier (INRIA Grenoble, France)
       Pascal Giorgi (LIRMM, France)
       Stef Graillat (University Paris 6, France)
       Jeremy Johnson (Drexel University, USA)
       Erich Kaltofen (NCSU, USA)
       Herbert Kuchen (University of Muenster, Germany)
       Philippe Langlois  (University of Perpignan, France)
       Anton Leykin (Georgia Tech, USA)
       Gennadi Malaschonok (Tambov State University, Russia)
       Michael Monagan (Simon Fraiser University, Canada)
       Winfried Neun (Zuse Institute Berlin, Germany)
       Clement Pernet (Grenoble University, France)
       Nicolas Pinto (MIT, USA)
       Manuel Prieto-Matias (Complutense university of Madrid, Spain)
       Markus Pueschel (Carnegie Mellon University, USA)
       Nathalie Revol (INRIA - LIP, France)
       David Saunders (University of Delaware, USA)
       Eric Schost (University of Western Ontario, Canada)
       Wolfgang Schreiner (RISC, Austria)
       Arne Storjohann (University of Waterloo, Canada)
       Sivan Toledo (Tel-Aviv University, Israel)
       Gilles Villard (CNRS, France)
       Yuzhen Xie (University of Western Ontario, Canada)
       Kazuhiro Yokoyama (Rikkyo University, Japan)

Links:

    PASCO 2010  http://pasco2010.imag.fr/
    ISSAC 2010  http://www.issac-conference.org/2010/

    Submission  http://www.easychair.org/conferences/?conf=pasco2010



\start
Date: Mon, 08 Mar 2010 12:25:31 -0500
From: Eugene Surowitz
To: list
Subject: GCL sidebar entry for AXIOM

The sibebar entry for AXIOM at

    www.gnu.org/software/gcl/gcl.html

goes to

    http://www.nongnu.org/axiom

which results in a redirection page that sends the user to

    http://www.axiom-developer.org

which is as it should be.

Who maintains the page www.gnu.org/software/gcl/gcl.html ?

\start
Date: Thu, 11 Mar 2010 09:08:14 -0600
From: Gabriel Dos Reis
To: list
Subject: PLMMS 2010: Last Call for Papers

[Apologies for possible multiple postings.]

-------------------------------------------------------------------
                        CALL FOR PAPERS
-------------------------------------------------------------------
  In co-operation with ACM SIGSAM, the International Workshop on

  Programming Languages for Mechanized Mathematics Systems
  (PLMMS 2010)

  Part of CICM-2010, in CNAM, Paris, France; 8th of July 2010
-------------------------------------------------------------------


Important Dates
---------------

 * Abstract submission:        Fri 26 March 2010
 * Paper submission:           Fri 9 April 2010
 * Reviews sent to authors:    Mon 10 May 2010
 * Author's response deadline: Mon 17 May 2010
 * Notification of acceptance: Mon 24 May 2010
 * Camera ready copy due:      Mon 7 June 2010
 * Workshop:                   Thu 8 July 2010


Invited Speaker: Jacques Carette (McMaster University, Canada)


PLMMS Scope
-----------

The program committee welcomes submissions on programming language
issues related to all aspects of mechanised mathematics systems
(MMS). In particular:

 - Mathematical algorithms
 - Tactics and proof search
 - Proofs
 - Mathematical notation

Of particular interest are the dimensions of:

 - Expressiveness
 - Efficiency
 - Correctness
 - Understandability and Usability
 - Modularity and Extensibility
 - Design and implementation

Mechanised mathematics systems, whether stand-alone or embedded in
larger systems, include but are not limited to:

 - Dependent typed programming languages
 - Proof assistants
 - Computer algebra systems
 - Proof planning systems
 - Theorem proving systems
 - Theory formation systems

These issues have a very colourful history. Why are all the languages
of mainstream computer algebra systems untyped? (Not for lack of
trying: Axiom and Magma both enjoy type systems, although they have
not (yet) become mainstream.) Why are the (strongly typed) proof
assistants so much harder to use than a typical computer algebra
systems?  What forms of polymorphism exist in mathematics?  What forms
of dependent types may be used in mathematical modelling?  How can MMS
regain the upper hand on issues of "genericity" and "modularity"?
What are the biggest barriers when using more mainstream languages for
computer algebra systems, proof assistants or theorems provers?

Many programming language innovations appeared in either computer
algebra or proof systems first, before migrating into more mainstream
programming languages.  This workshop is an opportunity to present the
latest innovations in the design of MMS that may be relevant to future
programming languages, or conversely novel programming language
principles that improve upon the implementation and deployment of MMS.


Submission Details
------------------

Accepted papers will appear in the ACM Digital Library.

Papers should be submitted via the PLMMS 2010 easychair website:

http://www.easychair.org/conferences/?conf=plmms2010

Submissions must describe original unpublished work which is not been
submitted for publication elsewhere. At least one author of each
accepted paper is expected to attend PLMMS 2010 and present her or his
paper. Papers should be no more than 8 pages in length and are to be
submitted in PDF format. They must conform to the ACM SIGPLAN style
guidelines using 9-point font size (see
http://www.acm.org/sigs/sigplan/authorInformation.htm - this also
provides latex templates). Each submission must also adhere to
SIGPLAN's republication policy
(http://www.sigplan.org/republicationpolicy.htm). Papers will be
reviewed by at least three reviewers and the authors will have an
opportunity for rebuttal by the response deadline.


Links
-----

  * http://www.easychair.org/conferences/?conf=plmms2010
    abstract and paper submission webpage

  * ttp://www.acm.org/sigs/sigplan/authorInformation.htm
    submission style guide

  * http://www.sigplan.org/republicationpolicy.htm
    republication policy

  * http://dream.inf.ed.ac.uk/events/plmms-2010/
    the PLMMS 2010 web site

  * http://cicm2010.cnam.fr/
    the CICM 2010 conference web site


Program Committee
-----------------

 * Thorsten Altenkirch (University of Nottingham, UK)
 * Serge Autexier (DFKI, Germany)
 * David Delahaye (CNAM, Paris, France)
 * James Davenport [PC co-chair] (University of Bath, UK)
 * Lucas Dixon [PC co-chair] (University of Edinburgh, UK)
 * Gudmund Grov (University of Edinburgh, UK)
 * Ewen Maclean (University of Herriot Watt, UK)
 * Dale Miller (INRIA, France)
 * Gabriel Dos Reis (Texas A&M University, USA)
 * Carsten Schuermann (IT University of Copenhagen, Denmark)
 * Tim Sheard (Portland State University, USA)
 * Sergei Soloviev (IRIT, Toulouse, France)
 * Stephen Watt (The University of Western Ontario, Canada)
 * Makarius Wenzel (ITU Munich, Germany)
 * Freek Wiedijk (Radboud University Nijmegen, Netherlands)

\start
Date: Thu, 11 Mar 2010 12:30:43 -0500
From: Ted Kosan
To: list
Subject: "Object not found" errors on the axiom website.

The links on the axiom website are producing "Object not found" errors:

http://axiom-developer.org/axiom-website/

The links have been dead since at least yesterday.

\start
Date: Thu, 11 Mar 2010 14:09:19 -0500
From: Tim Daly
To: Ted Kosan
Subject: Re: "Object not found" errors on the axiom website.

visit http://axiom-developer.org
not http://axiom-developer.org/axiom-website

Ted Kosan wrote:
> The links on the axiom website are producing "Object not found" errors:
>
> http://axiom-developer.org/axiom-website/
>
> The links have been dead since at least yesterday.

\start
Date: Thu, 11 Mar 2010 14:48:49 -0500
From: Eugene Surowitz
To: list
Subject: CLiki GCL page

http://www.cliki.net/GCL

also has a problem with pointing to Axiom in the line:

"GCL is closely associated with the Maxima, ACL, ACL2, and axiom projects."

\start
Date: Mon, 15 Mar 2010 08:12:52 +0100
From: Joop Renes
To: list
Subject: failing make on ubuntu9.10

hi, attached is the response to make on my box, what am i doing wrong?
TIA
joop

--=-DaVc8FmOg4IU8I5XJNRR

13 making noweb
patching file modules.c
patching file Makefile
mnt.o: In function `emitfile':
mnt.c:(.text+0x3bf): warning: the use of `tmpnam' is dangerous, better use `mkstemp'
make[1]: [install-shell] Error 1 (ignored)
make[1]: [install-code] Error 1 (ignored)
texhash: /usr/local/share/texmf/ls-R: no write permission. Skipping...
texhash: /var/lib/texmf/ls-R-TEXMFMAIN: no write permission. Skipping...
texhash: /var/lib/texmf/ls-R-TEXLIVE: no write permission. Skipping...
texhash: /var/lib/texmf/ls-R: no write permission. Skipping...
texhash: Done.
make[1]: [install-elisp] Error 1 (ignored)
0 SPAD=/home/joop/Downloads/axiom/mnt/linux SYS=linux SPD=/home/joop/Downloads/axiom LSP=/home/joop/Downloads/axiom/lsp GCLDIR=/home/joop/Downloads/axiom/lsp/gcl-2.6.8pre3 SRC=/home/joop/Downloads/axiom/src INT=/home/joop/Downloads/axiom/int OBJ=/home/joop/Downloads/axiom/obj MNT=/home/joop/Downloads/axiom/mnt ZIPS=/home/joop/Downloads/axiom/zips TMP=/home/joop/Downloads/axiom/obj/tmp SPADBIN=/home/joop/Downloads/axiom/mnt/linux/bin INC=/home/joop/Downloads/axiom/src/include CCLBASE=/home/joop/Downloads/axiom/obj/linux/ccl/ccllisp PART=cprogs SUBPART=everything NOISE=-o /home/joop/Downloads/axiom/obj/tmp/trace GCLVERSION=gcl-2.6.8pre3 TANGLE=/home/joop/Downloads/axiom/mnt/linux/bin/lib/notangle VERSION=Axiom (March 2009) PATCH=patch DOCUMENT=/home/joop/Downloads/axiom/mnt/linux/bin/document WEAVE=/home/joop/Downloads/axiom/mnt/linux/bin/lib/noweave
10 copying /home/joop/Downloads/axiom/src/scripts to /home/joop/Downloads/axiom/mnt/linux/bin
1 making a linux system, PART=cprogs SUBPART=everything
2 Environment SPAD=/home/joop/Downloads/axiom/mnt/linux SYS=linux SPD=/home/joop/Downloads/axiom LSP=/home/joop/Downloads/axiom/lsp GCLDIR=/home/joop/Downloads/axiom/lsp/gcl-2.6.8pre3 SRC=/home/joop/Downloads/axiom/src INT=/home/joop/Downloads/axiom/int OBJ=/home/joop/Downloads/axiom/obj MNT=/home/joop/Downloads/axiom/mnt ZIPS=/home/joop/Downloads/axiom/zips TMP=/home/joop/Downloads/axiom/obj/tmp SPADBIN=/home/joop/Downloads/axiom/mnt/linux/bin INC=/home/joop/Downloads/axiom/src/include CCLBASE=/home/joop/Downloads/axiom/obj/linux/ccl/ccllisp PART=cprogs SUBPART=everything NOISE=-o /home/joop/Downloads/axiom/obj/tmp/trace GCLVERSION=gcl-2.6.8pre3 TANGLE=/home/joop/Downloads/axiom/mnt/linux/bin/lib/notangle VERSION=Axiom (March 2009) PATCH=patch DOCUMENT=/home/joop/Downloads/axiom/mnt/linux/bin/document WEAVE=/home/joop/Downloads/axiom/mnt/linux/bin/lib/noweave
eval: 1: /home/joop/Downloads/axiom/linux/bin/lib/markup: not found
eval: 1: /home/joop/Downloads/axiom/linux/bin/lib/nt: not found
make: *** [all] Error 2

--=-DaVc8FmOg4IU8I5XJNRR--

\start
Date: Wed, 17 Mar 2010 12:30:34 -0400
From: Eugene Surowitz
To: Eugene Surowitz
Subject: Re: [Gcl-devel] CLiki GCL page

The CLiki reference to Axiom has been corrected on the GCL page.
Cheers, Eugene Surowitz

Eugene Surowitz wrote:
> http://www.cliki.net/GCL
> 
> also has a problem with pointing to Axiom in the line:
> 
> "GCL is closely associated with the Maxima, ACL, ACL2, and axiom projects."

\start
Date: Wed, 17 Mar 2010 21:52:33 -0500
From: Tim Daly
To: Joop Renes
Subject: Re: failing make on ubuntu9.10

I have no idea what might be failing.
Did you set your PATH variable correctly?

cd axiom
export AXIOM=`pwd`/mnt/ubuntu
export PATH=$AXIOM/bin:$PATH
make clean
make NOISE=

(note that the `pwd` is using backquotes, not single-quotes)

If it still fails, send me the console log.

Tim

joop renes wrote:
> hi, attached is the response to make on my box, what am i doing wrong?
> TIA
> joop

\start
Date: Wed, 17 Mar 2010 21:53:38 -0500
From: Tim Daly
To: Eugene Surowitz
Subject: re: [Gcl-devel] CLiki GCL page

Thank you. -- Tim

Eugene Surowitz wrote:
> The CLiki reference to Axiom has been corrected on the GCL page.
> Cheers, Eugene Surowitz
>
> Eugene Surowitz wrote:
>> http://www.cliki.net/GCL
>>
>> also has a problem with pointing to Axiom in the line:
>>
>> "GCL is closely associated with the Maxima, ACL, ACL2, and axiom 
>> projects."

\start
Date: Tue, 23 Mar 2010 01:50:10 -0400
From: Ted Kosan
To: list
Subject: GSoC CAS-neutral test suite project

On Wed, 03 Mar 2010 06:40:49 -0800, Tim Daly
wrote to Re: [sage-devel] Randomised testing against
Mathematica

>There are two test suites with validated results at
>http://axiom-developer.org/axiom-website/CATS/
>
>The CATS (Computer Algebra Test Suite) effort targets
>the development of known-good answers that get run
>against several systems. These "end result" suites test
>large portions of the system. As they are tested against
>published results they can be used by all systems.
>
>The integration suite found several bugs in the published
>results which are noted in the suite. It also found a bug
>introduced by an improper patch to Axiom.
>
>It would be generally useful if Sage developed known-good
>test suites in other areas, say infinite sequences and series.
>Perhaps such a suite would make a good GSOC effort with
>several moderators from different systems.
>
>I have done some more work toward a trigonometric test
>suite. So far I have found that Mathematica and Maxima
>tend to agree on branch cuts and Axiom and Maple tend
>to agree on branch cuts. The choice is arbitrary but
>it affects answers. I am having an internal debate about
>whether to choose MMA/Maxima compatible answers just to
>"regularize" the expected results users will see.
>
>Standardized test suites give our users confidence that
>we are generating known-good results for some (small)
>range of expected inputs.
>
>An academic-based effort (which Axiom is not) could
>approach NIST for funding an effort to develop such
>suites. NIST has a website (http://dlmf.nist.gov/)
>Digital Library of Mathematical Functions. I proposed
>developing Computer Algebra test suites for their
>website but NIST does not fund independent open source
>projects. Sage, however, could probably get continuous
>funding to develop such suites which would benefit all
>of the existing CAS efforts.
>
>NSF might also be convinced since such test suites raise
>the level of expected quality of answers without directly
>competing against commercial efforts. I'd like to see a
>CAS testing research lab that published standardized
>answers to a lot of things we all end up debating, such
>as branch cuts, sqrt-of-squares, foo^0, etc.
>
>Tim Daly

MathPiper (http://mathpiper.org) is the CAS which is used by GeoGebra
(http://geogebra.org) and GeoGebra was recently accepted as a Google
Summer of Code project.  The GeoGebra project has invited the
MathPiper project (which I lead) to participate in their GSoC effort
and I immediately thought that your idea of a CAS-neutral test suite
would be a good project candidate.

Would you be interested in helping to locate and mentor a GSoC student
to work on a CAS-neutral test suite which is based on the ideas you
discussed in the above email?

\start
Date: Tue, 23 Mar 2010 02:55:54 -0500
From: Tim Daly
To: Ted Kosan
Subject: Re: GSoC CAS-neutral test suite project

Yes.

A trigonometry test suite would be interesting. I'm a member of
the Numerical Mathematics Consortium
(http://www.nmconsortium.org/index.aspx)
and they recently published a technical specification for trig functions.
(http://math.mit.edu/~numericalmath/nmc/index.php/Technical_Specification)

If you look at Appendix A you can see the table of branch-cut choices.
Since this consortium also includes companies such as Maple it would be
a good place to devote some "system independent" effort. It is on my "todo"
list to make a test suite based on this standard so I'd be happy to help
guide a student, even if someone else is the public lead.

In particular, just developing a test suite that would highlight the
branch cut choices made by a variety of systems would be very valuable.
I know that MMA and Maxima tend to agree and Axiom and Maple tend to
agree but we both make different choices.

In addition, we could poll the NMC for students. There are people in
the consortium with wide-ranging contacts, like Inria, Maplesoft,
National Instruments, etc.




Alternatively I think a test suite of sequences and series might be useful.
Or contact William Kahan about numerical library standards (e.g. BLAS? 
ATLAS?)
that might need standards. Richard Fateman is also a good contact as he is
one of the Maxima authors and well versed in things like floating point 
formats.
Stephen Watt is also another source of potential standards. James Davenport
is a lead on the OpenMath standards committee and could suggest potential
cross-platform standards.




Ted Kosan wrote:
> On Wed, 03 Mar 2010 06:40:49 -0800, Tim Daly
> wrote to Re: [sage-devel] Randomised testing against
> Mathematica
>
>   
>> There are two test suites with validated results at
>> http://axiom-developer.org/axiom-website/CATS/
>>
>> The CATS (Computer Algebra Test Suite) effort targets
>> the development of known-good answers that get run
>> against several systems. These "end result" suites test
>> large portions of the system. As they are tested against
>> published results they can be used by all systems.
>>
>> The integration suite found several bugs in the published
>> results which are noted in the suite. It also found a bug
>> introduced by an improper patch to Axiom.
>>
>> It would be generally useful if Sage developed known-good
>> test suites in other areas, say infinite sequences and series.
>> Perhaps such a suite would make a good GSOC effort with
>> several moderators from different systems.
>>
>> I have done some more work toward a trigonometric test
>> suite. So far I have found that Mathematica and Maxima
>> tend to agree on branch cuts and Axiom and Maple tend
>> to agree on branch cuts. The choice is arbitrary but
>> it affects answers. I am having an internal debate about
>> whether to choose MMA/Maxima compatible answers just to
>> "regularize" the expected results users will see.
>>
>> Standardized test suites give our users confidence that
>> we are generating known-good results for some (small)
>> range of expected inputs.
>>
>> An academic-based effort (which Axiom is not) could
>> approach NIST for funding an effort to develop such
>> suites. NIST has a website (http://dlmf.nist.gov/)
>> Digital Library of Mathematical Functions. I proposed
>> developing Computer Algebra test suites for their
>> website but NIST does not fund independent open source
>> projects. Sage, however, could probably get continuous
>> funding to develop such suites which would benefit all
>> of the existing CAS efforts.
>>
>> NSF might also be convinced since such test suites raise
>> the level of expected quality of answers without directly
>> competing against commercial efforts. I'd like to see a
>> CAS testing research lab that published standardized
>> answers to a lot of things we all end up debating, such
>> as branch cuts, sqrt-of-squares, foo^0, etc.
>>
>> Tim Daly
>>     
>
> MathPiper (http://mathpiper.org) is the CAS which is used by GeoGebra
> (http://geogebra.org) and GeoGebra was recently accepted as a Google
> Summer of Code project.  The GeoGebra project has invited the
> MathPiper project (which I lead) to participate in their GSoC effort
> and I immediately thought that your idea of a CAS-neutral test suite
> would be a good project candidate.
>
> Would you be interested in helping to locate and mentor a GSoC student
> to work on a CAS-neutral test suite which is based on the ideas you
> discussed in the above email?

\start
Date: Tue, 23 Mar 2010 09:22:11 +0100
From: Martin Rubey
To: Tim Daly
Subject: Re: GSoC CAS-neutral test suite project

Tim Daly writes:

> Yes.
>
>
> A trigonometry test suite would be interesting. I'm a member of
> the Numerical Mathematics Consortium
> (http://www.nmconsortium.org/index.aspx)
> and they recently published a technical specification for trig functions.
> (http://math.mit.edu/~numericalmath/nmc/index.php/Technical_Specification)
>
> If you look at Appendix A you can see the table of branch-cut choices.
> Since this consortium also includes companies such as Maple it would be
> a good place to devote some "system independent" effort. It is on my "todo"
> list to make a test suite based on this standard so I'd be happy to help
> guide a student, even if someone else is the public lead.
>
> In particular, just developing a test suite that would highlight the
> branch cut choices made by a variety of systems would be very valuable.
> I know that MMA and Maxima tend to agree and Axiom and Maple tend to
> agree but we both make different choices.

Note that there is also the HyperSpec for common lisp.

I did a tiny bit of work in that direction: look into
elemnum.input.pamphlet in fricas/src/input/.

http://fricas.svn.sourceforge.net/viewvc/fricas/trunk/src/input/elemnum.input.pamphlet

This was done using the fricas testing framework, but I'm sure it won't
be difficult to translate to any other framework.

\start
Date: Thu, 25 Mar 2010 18:51:25 -0400
From: Ted Kosan
To: list
Subject: Re: GSoC CAS-neutral test suite project

Tim wrote:

> <...>
> In addition, we could poll the NMC for students. There are people in
> the consortium with wide-ranging contacts, like Inria, Maplesoft,
> National Instruments, etc.
>
> <...>
>
> Or contact William Kahan about numerical library standards (e.g. BLAS?
> ATLAS?)
> that might need standards. Richard Fateman is also a good contact as he is
> one of the Maxima authors and well versed in things like floating point
> formats.
> Stephen Watt is also another source of potential standards. James Davenport
> is a lead on the OpenMath standards committee and could suggest potential
> cross-platform standards.

I talked with the GeoGebra developers and they very much liked the
idea of having one of their alloted GSoC student positions used for
working on a system independent CAS test suite (which MathPiper could
also use).  They were grateful that you agreed to participate in this
project as a mentor because of the exceptional amount of CAS
development experience you have.  GeoGebra has well over 100,000 users
and their website has around half a million visitors a month.
Therefore, they understand that a significant number of users will
benefit from this CAS test suite work. (As a side note, in the past
the GeoGebra developers have indicated that at some point in time they
will probably be interested in making a more capable open source CAS
than MathPiper available to their advanced users and I think Axiom
would be a good candidate for this).


Here is a link to the GeoGebra GSoC project idea page (the CAS test
suite project is listed at the bottom):

http://www.geogebra.org/trac/wiki/Gsoc2010


Here is a link to the GSoC website (which contains all of the
information about the GSoC program):

http://code.google.com/soc/


and here is a link to advice for mentors:

http://code.google.com/p/google-summer-of-code/wiki/AdviceforMentors


If you are still interested in being an official mentor for this
project, let me know and I will send you instructions which describe
how to apply as a mentor.


Here is the GSoC timeline:

http://socghop.appspot.com/document/show/gsoc_program/google/gsoc2010/timeline


Since the addition of this CAS test suite project to the GeoGebra
project list was a last-minute occurrence, we are on a tight schedule
for locating potential students and inviting other potential mentors
and/or advisors to participate.  The student application period begins
March 9th and ends April 9th and so we do not have very much time to
locate potential students.  The student stipend for this project is
$5000.  Google defines a student as "an individual enrolled in or
accepted into an accredited institution including (but not necessarily
limited to) colleges, universities, masters programs, PhD programs and
undergraduate programs."


Since I do not have very much experience in CAS test suite
development, what I would like to see happen is for you to take the
technical lead position in this project and for me to serve as your
assistant.  Here are the kind of tasks I see myself doing in this
project:

- Handle most of the GSoC paperwork.
- Act as a coordinator for other CAS projects which may want to
participate in this project.
- Maintain a project website.
- Help with developing the code which will be needed to communicate
with a wide range of computer algebra systems.
- etc.



Here are some project areas I see you being responsible for:

- Determining the requirements and scope of the project.
- Using your contacts in the CAS community to locate potential
students for this project.
- Using your contacts in the CAS community to locate people who may be
interested in participating in this project as a mentor or an advisor.
- Identifying other CAS projects that may be interested in
participating in this project that I can contact.



Anyway, these are my current thoughts on the project.  Feel free to
modify them as you see fit.

\start
Date: Mon, 29 Mar 2010 14:20:23 +0200
From: Daniel Cordeiro
To: list
Subject: PASCO 2010: Extended submission deadline

(Please accept our apologies if you receive this message multiple times) 

------------------------------------------------------------------------

               Parallel Symbolic Computation 2010 (PASCO 2010)

                   July 21-23, 2010 -- Grenoble, France

                        http://pasco2010.imag.fr/

                          Third Announcement and 

                      C A L L   f o r   P A P E R S

               *** Submission date extended to April 18 ***

Overview:

   The International Workshop on Parallel and Symbolic Computation (PASCO) 
   is a series of workshops dedicated to the promotion and advancement of
   parallel algorithms and software in all areas of symbolic mathematical 
   computation. The pervasive ubiquity of parallel architectures and 
   memory hierarchy has led to  the emergence of a new quest for parallel 
   mathematical algorithms and software capable of exploiting the various 
   levels of parallelism: from hardware acceleration technologies (multi-
   core and multi-processor system on chip, GPGPU, FPGA) to cluster and
   global computing platforms. To  push up the limits of symbolic and
   algebraic computations, beyond the optimization of the application
   itself, the effective use of a large number of  resources  --memory
   and general or specialized computing units-- is expected to enhance
   the performance multi-criteria objectives: time, energy consumption,
   resource usage, reliability. In this context, the design and the 
   implementation of mathematical algorithms with  provable and adaptive 
   performances is a major challenge.

   Earlier meetings in the PASCO series include PASCO'94 (Linz, Austria),
   PASCO'97 (Maui, U.S.A.), PASCO'07 (London, Canada).
   PASCO 2010 is affiliated with the  2010 International Symposium on 
   Symbolic and Algebraic Computation (ISSAC) in Munich, Germany.  
   Immediately prior to the ISSAC 2010 meeting, PASCO will be held in 
   Grenoble, France.

   The  workshop  PASCO 2010 will be a three-day event  including  invited
   presentations and tutorials, contributed research papers and posters,
   and a programming contest.
   Specific topics include, but are not limited to:
   * Design and analysis of parallel algorithms for computer algebra
   * Practical parallel implementation of symbolic or symbolic-numeric 
     algorithms
   * High-performance software tools and libraries for computer algebra
   * Applications of high-performance computer algebra
   * Distributed data-structures for computer algebra
   * Hardware acceleration technologies (multi-cores, GPUs, FPGAs) applied
     to computer algebra
   * Cache complexity and cache-oblivious algorithms for computer algebra
   * Compile-time and run-time techniques for automating optimization and
     platform adaptation of computer algebra algorithms

Call for Papers:

   The  conference  invites submission of papers presenting original 
   research, either in the form of extended abstracts (2 pages) or 
   full papers (up to 10 pages) in ACM format. As in previous years, 
   PASCO 2010 will publish formal proceedings of the accepted papers.
 
   The PASCO 2010 Conference proceedings will be published by the 
   Association for Computing Machinery (ACM) http://www.acm.org/ and
   will be made available in the ACM Digital Library.  The proceedings
   will also be distributed on CDs to the participants of the workshop.

Programming Contest:

   A programming contest will be organized during the PASCO 2010 meeting.
   Each participating team will be competing on one or more programming
   challenges proposed by the organizing committee and by the participants.
   Details can be found at the PASCO 2010 web site.

Important Dates: (extended w.r.t. previous calls for papers)

   Paper submission deadline:               April 18 (Sun), 2010
   Programming Challenge proposal           April 18 (Sun), 2010
   Notification of acceptance:              May 31 (Mon), 2010
   (for papers and challenge proposals)
   Camera-ready version of paper due:       June 13 (Sun), 2010
   Intent of participation to the contest:  June 13 (Sun), 2010
   Tutorials and Workshop in Grenoble:      July 21-23 (Wed-Fri), 2010

Conference Chairs:

      Marc Moreno Maza (University of Western Ontario, Canada)
                        <moreno@csd.uwo.ca>
      Jean-Louis Roch (Grenoble University, France)
                       <jlroch@imag.fr> 


Local Arrangements Chairs:

      Jean-Guillaume Dumas (Grenoble University, France)
                       <jean-guillaume.dumas@imag.fr>  
      Thierry Gautier (INRIA Grenoble, France)
                       <thierry.gautier@imag.fr>
      Clement Pernet   (Grenoble University, France)
                      <clement.pernet@imag.fr>

Publicity Chair:

       Daniel Cordeiro  (Grenoble University, France)
                        <daniel.cordeiro@imag.fr>

Administration:

       Daniele Herzog (INRIA Grenoble, France) 
                 <daniele.herzog@inrialpes.fr>
       Christian Seguy (CNRS, France)
                 <christian.seguy@imag.fr>
       Ahlem Zammit-Boubaker (INRIA Grenoble, France) 
                 <ahlem.zammit-boubaker@inrialpes.fr>

Program Committee:

      Daniel Augot (INRIA Saclay, France)
      Jean-Claude Bajard (Montpellier II University, France)
      Olivier Beaumont (INRIA Bordeaux, France)
      Bruce Char (Drexel University, USA)
      Gene Cooperman (Northeastern University, USA)
      Gabriel Dos-Reis (Texas A&M University, USA)
      Jean-Christophe Dubacq (LIPN, University Paris 13, France)
      Jean-Guillaume Dumas (Grenoble University, France)
      Jean-Charles Faugere (INRIA - UPMC, France)
      Matteo Frigo (Axis Semiconductor, USA)
      Thierry Gautier (INRIA Grenoble, France)
      Pascal Giorgi (LIRMM, France)
      Stef Graillat (University Paris 6, France)
      Jeremy Johnson (Drexel University, USA)
      Erich Kaltofen (NCSU, USA)
      Herbert Kuchen (University of Muenster, Germany)
      Philippe Langlois  (University of Perpignan, France)
      Anton Leykin (Georgia Tech, USA)
      Gennadi Malaschonok (Tambov State University, Russia)
      Michael Monagan (Simon Fraiser University, Canada)
      Winfried Neun (Zuse Institute Berlin, Germany)
      Clement Pernet (Grenoble University, France)
      Nicolas Pinto (MIT, USA)
      Manuel Prieto-Matias (Complutense university of Madrid, Spain)
      Markus Pueschel (Carnegie Mellon University, USA)
      Nathalie Revol (INRIA - LIP, France)
      David Saunders (University of Delaware, USA)
      Eric Schost (University of Western Ontario, Canada)
      Wolfgang Schreiner (RISC, Austria)
      Arne Storjohann (University of Waterloo, Canada)
      Sivan Toledo (Tel-Aviv University, Israel)
      Gilles Villard (CNRS, France)
      Yuzhen Xie (University of Western Ontario, Canada)
      Kazuhiro Yokoyama (Rikkyo University, Japan)

Links:

   PASCO 2010  http://pasco2010.imag.fr/
   ISSAC 2010  http://www.issac-conference.org/2010/

   Submission  http://www.easychair.org/conferences/?conf=pasco2010

\start
Date: Mon, 29 Mar 2010 18:53:23 -0500
From: Tim Daly
To: list
Subject: Axiom release - March 2010

Axiom has been released for March, 2010.

The source is at:
http://axiom-developer.org/axiom-website/download.html
as well as the Ubuntu binary. Other binaries are being built
and will be made available as they complete.

=======================================================================


March 2010 Release

This release concentrated on treeshaking more code into the Interpreter
volume. Support for )set break quit was added. Additional documentation
was added for branch cuts and clifford algebras. The first draft of a
new volume (10.5) on Numerics was added. An example of unicode was tested
to fulfill the long-term goal of unicode I/O support.

This release is an interim step in the process of merging the interpreter
source code into a single volume. Due to the size and complexity of the
task it will take several releases.

Three people were added to the credits list:
   John P. Fletcher <J.P.Fletcher@aston.ac.uk>
   Nathaniel Daly <nathaniel.daly@gmail.com
   Ted Kosan

The Axiom website was completely rewritten based on a new style css
provided by Nate. This change was also made to axiom-developer.com.

There is a new set option ")set break quit" per Ralf Hemmecke.
This will cause the interpreter to quit on failure. Documentation
was added to the books.

books/bookvol4 Axiom Developers Guide
   add )set break quit

books/bookvol5 Axiom Interpreter
   add )set break quit
   add support for IndexedBits
   begin documentation of macex
   merge and remove lisp files from src/interp
   remove non-common lisp macros
   rewrite to common lisp functions

books/bookvol7.1 Axiom Hyperdoc Pages
   add jan2010 what's new page
   books/ps/v71jan2010.eps added
   books/ps/v71releasenotes.eps updated for January 2010

books/bookvol8 Axiom Graphics
   redefine R1 in view3D for ARM processor

books/bookvol10 Axiom Algebra Implementation
   A new section on Elementary Functions branch cuts based on the
   Numerical Mathematics Consortium was added.

books/bookvol10.1 Axiom Algebra Theory
   A new chapter on the Clifford algebra was added.
   A quote on quaternions from Altman was added

books/bookvol10.3 Axiom Domains
   defstream function and KAFILE test bug fixed
   fix IndexedBits range error
   remove non-common lisp macros
   rewrite to common lisp functions

books/bookvol10.4 Axiom Packages
   add Ted Kosan to credits
   fix broken credit test

books/bookvol10.5 Axiom Numerics
   first draft of numerics volume

faq
   FAQ 51: How can I do unicode in xterm?

src/algebra/Makefile
   unit test IndexedBits

src/input/Makefile
   add monitortest
   remove redundant kafile.input

src/input/
   cachedf.input     fix tests for )set break quit
   kafile.input      redundant with KAFILE test, removed
   monitortest.input unit test monitor code
   pmint.input       add comments
   pmint.input       update pmint with code
   setcmd.input      add )set break quit
   textfile.input    --I out failing test
   unittest2.input   add Nate Daly to credits
   wester.input      reformat into regression test file

src/interp
    remove compat.lisp, cparse.lisp, intint.lisp, macex.lisp,
           monitor.lisp, pf2sex.lisp, ptrees.lisp, serror.lisp

    remove MAKESTRING macro from all files

    remove non common lisp macros

    remove unused functions

    g-error.lisp add )set break quit
    htcheck.lisp add READLINE from compat.lisp
    nci.lisp pick up functions from intint
    patches.lisp move global variables to bookvol5
    posit.lisp move position functions to bookvol5
    util.lisp move global variables to bookvol5
    varini.lisp pick up functions from intint
    vmlisp.lisp add )set break quit
    vmlisp.lisp fix )set break resume bug
    vmlisp.lisp remove some define-functions

zips
   utf-8-demo.txt added to demo utf-8 I/O

\start
Date: Tue, 30 Mar 2010 15:07:09 -0500
From: Tim Daly
To: list
Subject: Re: axiom source link

Ouch. My mistake. Sorry.
Good catch.

Tim

St=E8ve Tol=E9qu=E9 wrote:
> Hello,
>
> The March 2010 link incorrectly point to the March 2009 archive.
> Thank you for your work.
>  



\end{verbatim}
\eject
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\cleardoublepage
%\phantomsection
\addcontentsline{toc}{chapter}{Bibliography}
\bibliographystyle{axiom}
\bibliography{axiom}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\cleardoublepage
%\phantomsection
\addcontentsline{toc}{chapter}{Index}
\printindex
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\end{document}
