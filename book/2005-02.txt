\documentclass{book}
%\newcommand{\VolumeName}{Volume 2: Axiom Users Guide}
%\input{bookheader.tex}
\pagenumbering{arabic}
\mainmatter
\setcounter{chapter}{0} % Chapter 1

\usepackage{makeidx}
\makeindex
\begin{document}
\begin{verbatim}
\start
Date: Tue, 01 Feb 2005 09:01:44 -0500
From: Kostas Oikonomou
To: Martin Rubey
Subject: Re: [Axiom-mail] beginner question about sum(...)

Hello Martin,

I was thinking about this a bit more.  If  "a" is a positive integer, of =
course the sum
1/(k*(k+a)) is hypergeometric. And indeed Axiom evaluates it if you give =
"a" a positive
integral value.  Now wouldn't you expect that if you declared "a" to be a=
 positive integer
the summation would be evaluated?  It is not.  Instead Axiom says that "a=
" has not been
given a value.

A short while ago, Bill Page also posted a message about this general sit=
uation.  That if
you make a certain type declaration, you would expect Axiom to act accord=
ingly, but it
does not appear to do so.


> Dear Kostas,
>
> Kostas Oikonomou writes:
>  >
>  > But I was disappointed by the sum(1/k^2, k=3D1..n) example.  I saw that
>  > Gosper's method is implemented in sum.spad.pamphlet, but this (rather
>  > simple) sum needs symbolic manipulation of gamma and psi functions, which is
>  > not there.  More generally, special functions seem to be handled only
>  > numerically.  At least for my prospective use of Axiom, this points to a
>  > rather big "hole". And I wonder how many others of this sort there are.
>  >
>  > I also tried sum(1/(k*(k+a)), k=3D1..n).  That was also returned unevaluated,
>  > although Gosper's method should handle it.
>
> Why should Gosper's method handle it? As far as I can see the solution is not
> hypergeometric?

\start
Date: Tue, 01 Feb 2005 11:38:37 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [AxiomDownload] 


??changed:
-Pre-compiled binaries
SOURCE

  * "February 2005 sources:http://axiom.axiom-developer.org/axiom-website/DOWNLOADS/axiom-Feb2005-src.tgz

    This is a source tree for the axiom system. It represents the first "feature complete" version and 
    includes integrated graphics and a document browser.
    Unpack this tree in a directory such as /home

       1) cd /home

       2) tar -zxf axiom-Feb2005-src.tgz

       3) cd axiom

       4) ./configure <=== This will tell you how to set your AXIOM variable

       5) export AXIOM=`pwd`/mnt/linux <=== (might differ from 'linux')

       6) export PATH=\$AXIOM/bin:$PATH

       7) make

       8) axiom

PRE-COMPILED BINARIES

??changed:
-  - "Fedora Core 1 (binary)":http://axiom.axiom-developer.org/axiom-website/DOWNLOADS/axiom.fedora1.bin.20041109.tgz
-
-  - "Fedora Core 2 (binary)":http://axiom.axiom-developer.org/axiom-website/DOWNLOADS/axiom.fedora2.bin.20041109.tgz
-
-  - "Fedora Core 2, AMD 64 bit processor (binary)":http://axiom.axiom-developer.org/axiom-website/DOWNLOADS/axiom.fedora64.bin.20041110.tgz
  - "RedHat 9 (binary)":http://axiom.axiom-developer.org/axiom-website/DOWNLOADS/axiom-Feb2005-Redhat9-bin.tgz

       This is a binary tree for a Redhat 9 system. Unpack this tree in a directory such as /home

       1) cd /home

       2) tar -zxf axiom-Feb2005-Redhat9-bin.tgz

       3) cd axiom

       4) export AXIOM=`pwd`/mnt/linux

       5) export PATH=\$AXIOM/bin:$PATH

       6) axiom

  - "Fedora Core 1 (binary)":http://axiom.axiom-developer.org/axiom-website/DOWNLOADS/axiom-Feb2005-Fedora1-bin.tgz

       This is a binary tree for a Fedora Core 1 system. Unpack this tree in a directory such as /home

       1) cd /home

       2) tar -zxf axiom-Feb2005-Fedora1-bin.tgz

       3) cd axiom

       4) export AXIOM=`pwd`/mnt/linux

       5) export PATH=\$AXIOM/bin:$PATH

       6) axiom

  - "Fedora Core 3 (binary)":http://axiom.axiom-developer.org/axiom-website/DOWNLOADS/axiom-Feb2005-Fedora3-bin.tgz

       This is a binary tree for a Fedora Core 3 system. Unpack this tree in a directory such as /home

       1) cd /home

       2) tar -zxf axiom-Feb2005-Fedora3-bin.tgz

       3) cd axiom

       4) export AXIOM=`pwd`/mnt/fedora3 

       5) export PATH=\$AXIOM/bin:$PATH

       6) axiom
 

??changed:
-http://axiom.axiom-developer.org and look at the
-"[Developers]":http://arch.axiom-developer.org/index.html link.
http://arch.axiom-developer.org 

--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomDownload#msg20050201113837-0600@page.axiom-developer.org



\start
Date: Tue, 01 Feb 2005 12:28:42 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [AxiomDownload] 


??changed:
-  * "February 2005 sources:http://axiom.axiom-developer.org/axiom-website/DOWNLOADS/axiom-Feb2005-src.tgz
  * "February 2005 sources":http://axiom.axiom-developer.org/axiom-website/DOWNLOADS/axiom-Feb2005-src.tgz

??changed:
-    Unpack this tree in a directory such as /home
    Unpack this tree in a directory such as /home::

--removed:
-

--removed:
-

--removed:
-

--removed:
-

??changed:
-
-       6) export PATH=\$AXIOM/bin:$PATH
-
       6) export PATH=\$AXIOM/bin:\$PATH

--removed:
-

??changed:
-       This is a binary tree for a Redhat 9 system. Unpack this tree in a directory such as /home
-
-       1) cd /home
-
-       2) tar -zxf axiom-Feb2005-Redhat9-bin.tgz
-
-       3) cd axiom
-
-       4) export AXIOM=`pwd`/mnt/linux
-
-       5) export PATH=\$AXIOM/bin:$PATH
-
-       6) axiom
       This is a binary tree for a Redhat 9 system. Unpack this tree in a directory such as /home::

         1) cd /home
         2) tar -zxf axiom-Feb2005-Redhat9-bin.tgz
         3) cd axiom
         4) export AXIOM=`pwd`/mnt/linux
         5) export PATH=\$AXIOM/bin:\$PATH
         6) axiom

??changed:
-       This is a binary tree for a Fedora Core 1 system. Unpack this tree in a directory such as /home
-
-       1) cd /home
-
-       2) tar -zxf axiom-Feb2005-Fedora1-bin.tgz
-
-       3) cd axiom
-
-       4) export AXIOM=`pwd`/mnt/linux
-
-       5) export PATH=\$AXIOM/bin:$PATH
-
-       6) axiom
       This is a binary tree for a Fedora Core 1 system. Unpack this tree in a directory such as /home::

         1) cd /home
         2) tar -zxf axiom-Feb2005-Fedora1-bin.tgz
         3) cd axiom
         4) export AXIOM=`pwd`/mnt/linux
         5) export PATH=\$AXIOM/bin:\$PATH
         6) axiom

??changed:
-       This is a binary tree for a Fedora Core 3 system. Unpack this tree in a directory such as /home
-
-       1) cd /home
-
-       2) tar -zxf axiom-Feb2005-Fedora3-bin.tgz
-
-       3) cd axiom
-
-       4) export AXIOM=`pwd`/mnt/fedora3 
-
-       5) export PATH=\$AXIOM/bin:$PATH
-
-       6) axiom
- 
       This is a binary tree for a Fedora Core 3 system. Unpack this tree in a directory such as /home::

         1) cd /home
         2) tar -zxf axiom-Feb2005-Fedora3-bin.tgz
         3) cd axiom
         4) export AXIOM=`pwd`/mnt/fedora3 
         5) export PATH=\$AXIOM/bin:\$PATH
         6) axiom

--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomDownload#msg20050201122842-0600@page.axiom-developer.org



\start
Date: Tue, 1 Feb 2005 14:35:22 -0500
From: Bill Page
To: Vladimir Bondarenko
Subject: Re: AXIOM on-line simplest way ?

On 2005/01/31 Mon AM 12:27:48 EST Vladimir Bondarenko asked
>
> What is the simplest way to try AXIOM on line,
> say, tell it to calculate integrate(z, z=3D0..1) ?
> 
> I found this
> 
> http://page.axiom-developer.org/zope/mathaction/AxiomInterface2
> 
> but am still in doubt.
> 

What is your doubt?

You may edit this page to delete other experiments (if you wish)
and then add your own experiments. Click 'preview' to do the
calculation and see the result. If you think it is something
that you would like other=B4s to see, then click 'save' when you
are done.

Please let me know if you have other questions. Or if you have
some suggestions about how to organize this in a more user-
friendly manner.

Regards,
Bill Page




\start
Date: Tue, 1 Feb 2005 14:54:38 -0500
From: Bill Page
To: Vladimir Bondarenko
Subject: Re: Running AXIOM on Windows in a TeXmacs window ?

On 2005/01/30 Sun PM 10:55:25 EST Vladimir Bondarenko wrote:
> 
> Unexpectedly, I found the following
> 
> http://axiom.axiom-developer.org/axiom-website/screenshots.html
> 
> > Axiom is now running under Windows. This is a screenshot of Axiom
> > running on Windows in a TeXmacs window
> 
> Up to now, after installation AXIOM worked in a DOS-like mode.
> 

This is described on the MathAction site

http://page.axiom-developer.org/zope/mathaction/TeXmacs

and discussed extensively on the axiom-developer archives

http://lists.gnu.org/archive/html/axiom-developer

(search for texmacs)


> I have tried to run  tm_axiom.exe,  but this is not what I
> need. Running the Program menu's item brings the DOS interface.
>

tm_axiom.exe is the interface program between Axiom and TeXmacs.
It is intended only to be used by TeXmacs internally.
 
> How can I run AXIOM in a nice TeXmacs window?
> What I should install etc?
>

Just install TeXmacs. I recommend this version

  http://page.axiom-developer.org/wintexmacs-1.0.4.4.exe
 
mentioned on the above web page. It has a minor fix to the
axiom stylesheet to fix a small formatting error.

Regards,
Bill Page.




\start
Date: Tue, 1 Feb 2005 12:02:08 -0800
From: Bob McElrath
To: Bill Page
Subject: latexwiki update


--dDRMvlgZJXvWKvBx

Hi Bill, 

I have just finished a rather extensive rewrite of latexwiki, and want
to examine your patches again that add axiom and reduce functionality,
and see if I can integrate that quickly.

Where is your code located again, and is it up-to-date?

ZWiki 0.38 was released today, and I want to release latexwiki 0.38
tonight too.

Note: this rewrite does NOT include my new STX code, but improves
rendering speed (using dvipng -- 100x faster on large pages), allows
font-size scaling, and fixes a few bugs...

--
Cheers,
Bob McElrath [Univ. of California at Davis, Department of Physics]

    "Faith: Belief without evidence in what is told by one who speaks 
    without knowledge, of things without parallel." -- Ambrose Bierce


--dDRMvlgZJXvWKvBx

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.4 (GNU/Linux)

iD8DBQFB/+BAjwioWRGe9K0RAq3jAJ95aFzCmKuv3UoYro44b/dQ217nIQCg7IrR
bfrlS3idEBssSNTxmqvqbDc=L2TL
-----END PGP SIGNATURE-----

--dDRMvlgZJXvWKvBx--



\start
Date: Tue, 1 Feb 2005 23:15:19 +0200
From: Vladimir Bondarenko
To: Bill Page
Subject: Re[2]: Running AXIOM on Windows in a TeXmacs window

Hello William,

Much thanks for your help! I already downloaded TeXmacs and installed it.
Hmm... cannot run AXIOM from within the TeXmacs  8(

On Dec 18, 2004, you write in '[TeXmacs]'

WP> To start an Axiom session from within TeXmacs use the menu options
WP> -- **Insert/Session/Axiom**

I put TeXmacs not by default onto c: but onto d: . There is no menu option
"Insert/Session/Axiom", only

"Insert/Session/Scheme",
"Insert/Session/Maple",
"Insert/Session/Other"

Just in case, I have searched all the menus but found none mention about
Axiom. If I run the AXIOM after the TeXmacs installation, I again see the
good old AXIOM's DOS-like screen. How to fix this?

Thank you in advance.


Best wishes,

Vladimir Bondarenko



Tuesday, February 1, 2005, 9:54:38 PM, you write:

BP> On 2005/01/30 Sun PM 10:55:25 EST Vladimir Bondarenko wrote:
>> 
>> Unexpectedly, I found the following
>> 
>> http://axiom.axiom-developer.org/axiom-website/screenshots.html
>> 
>> > Axiom is now running under Windows. This is a screenshot of Axiom
>> > running on Windows in a TeXmacs window
>> 
>> Up to now, after installation AXIOM worked in a DOS-like mode.
>> 

BP> This is described on the MathAction site

BP> http://page.axiom-developer.org/zope/mathaction/TeXmacs

BP> and discussed extensively on the axiom-developer archives

BP> http://lists.gnu.org/archive/html/axiom-developer

BP> (search for texmacs)


>> I have tried to run  tm_axiom.exe,  but this is not what I
>> need. Running the Program menu's item brings the DOS interface.
>>

BP> tm_axiom.exe is the interface program between Axiom and TeXmacs.
BP> It is intended only to be used by TeXmacs internally.
 
>> How can I run AXIOM in a nice TeXmacs window?
>> What I should install etc?
>>

BP> Just install TeXmacs. I recommend this version

BP>   http://page.axiom-developer.org/wintexmacs-1.0.4.4.exe
 
BP> mentioned on the above web page. It has a minor fix to the
BP> axiom stylesheet to fix a small formatting error.

BP> Regards,
BP> Bill Page.


BP> __________ NOD32 1.940 (20041205) Information __________

BP> This message was checked by NOD32 antivirus system.
BP> http://www.nod32.com





Viva la Cyber Tester!

-- 
Vladimir Bondarenko

GEMM architect
Co-founder, CEO, Mathematical Director
Cyber Tester, LLC
13 Dekabristov Str, Simferopol
Crimea 95000, Ukraine
tel: +38-(0652)-447325
tel: +38-(0652)-230243
tel: +38-(0652)-523144
fax: +38-(0652)-510700

http://www.cybertester.com/
http://maple.bug-list.org/
http://www.CAS-testing.org/




\start
Date: Tue, 1 Feb 2005 14:18:51 -0800
From: Bob McElrath
To: Bill Page
Subject: zwiki/plone skins


--qjNfmADvan18RZcF

Simon Michael set up a zwiki/plone skin switcher on ubuntulinux.org.
(create an account and look in the preferences)

I know you were interested in this Bill...

    http://zwiki.org/HowToUseTheStandardSkinInPlone

--
Cheers,
Bob McElrath [Univ. of California at Davis, Department of Physics]

    "Faith: Belief without evidence in what is told by one who speaks 
    without knowledge, of things without parallel." -- Ambrose Bierce


--qjNfmADvan18RZcF

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.4 (GNU/Linux)

iD8DBQFCAABLjwioWRGe9K0RAsvpAJ9pIL1niG+qdSxTcWMN0Cr91u4IcwCdFKgS
0q4jjdiFuHc9R4q8T0xTIeI=khwy
-----END PGP SIGNATURE-----

--qjNfmADvan18RZcF--



\start
Date: Wed, 2 Feb 2005 10:08:44 +0100
From: Martin Rubey
To: Kostas Oikonomou
Subject: Re: [Axiom-mail] beginner question about sum(...)

Kostas Oikonomou writes:
 > Hello Martin,
 > 
 > I was thinking about this a bit more.  If "a" is a positive integer, of
 > course the sum 1/(k*(k+a)) is hypergeometric. And indeed Axiom evaluates it
 > if you give "a" a positive integral value.  Now wouldn't you expect that if
 > you declared "a" to be a positive integer the summation would be evaluated?
 > It is not.  Instead Axiom says that "a" has not been given a value.

This is correct. In fact, this is a good example: Gosper's algorithm cannot
work with "indefinite" values. It needs the value, not only the information
that "a" is an integer or whatever.

 > A short while ago, Bill Page also posted a message about this general
 > situation.  That if you make a certain type declaration, you would expect
 > Axiom to act accordingly, but it does not appear to do so.

No it does not, by design. Declaring "a" to be of type Integer tells axiom that
the memory slot "a" will contain an Integer, i.e. a number.

There is a proposal (on the WishList) to provide for domains like Indefinite
Integers, thus enabling assumptons in Mathematicas sense.

In fact, there has been done a lot of work already, but it appears that the
code is lost: I recently sent a mail to Christele.Faure@sophia.inria.fr,
James Davenport, Hanane.Naciri@sophia.inria.fr,
Manuel Bronstein but it was never answered.

------------------------------------------------------------------------------

If you happen to know how Mathematica, Maple or MuPad handle these sums, please
share your knowledge and add an appropriate entry on the WishList on
Mathaction.

If you happen to be mainly interested in hypergeometric sums, there is such an
entry already: porting Christian Krattenthalers Mathematica packages Hyp and
Hypq to Axiom. I think that this would not be too difficult, once you decided
on an appropriate design. Note that Krattenthalers package is quite
interactive, which is not Axioms style. On the other hand, hypergeometric
functions clearly form a domain, which is not Mathematicas style...

------------------------------------------------------------------------------

Concerning Mathematica versus Axiom: I don't think that Axiom can serve as a
replacement for Mathematica. However, maybe you can use Axiom for some tasks
(especially programming) and Mathematica for those Axiom cannot handle yet.

In some areas, I'd say that Axiom is superior to any of the available CAS, with
the exception of MuPad maybe. For me, the greatest advantage of Axiom is its
programming language, especially the Aldor dialect.

Martin




\start
Date: Wed, 02 Feb 2005 03:42:26 -0600
From: MathAction (??)
To: MathAction
Subject: [FrontPage] axiom on Knoppix and graphical facility

I had installed axiom (3.0 beta, Feb, 2005) on Knoppix Linux with TeXmacs and other plugin software. But the "draw()" seems not to work, for instance as insput the following within TeXmacs:

->draw(sin(x),x=0..1)
   Compiling function %D with type DoubleFloat -> DoubleFloat
   Graph data being transmitted to the viewport manager...
   AXIOM2D data being transmitted to the viewport manager...

   (1)  TwoDimensionalViewport: "sin x"
                                                 Type: TwoDimensionalViewport

But no picture was created. Does draw() still not work in this verion? Anyway, Axiom is excellent CAS and I will introduce this in my calculus class.
Thanks!
--
forwarded from http://page.axiom-developer.org/zope/mathaction/FrontPage#msg20050202034221-0600@page.axiom-developer.org



\start
Date: Wed, 02 Feb 2005 08:14:35 -0600
From: MathAction (Tim Daly)
To: MathAction
Subject: [FrontPage] who are you?

There is no identifying information in this post so I cannot help you directly.

I suspect the problem is that the axiom interface module is calling AXIOMsys
(the actual axiom interpreter) rather than the axiom shell script. The axiom
shell script starts the 'sman' (superman) process which starts AXIOMsys, the
hyperdoc browser, and the graphics connection. If you call AXIOMsys directly
then graphics will not work.

Please open a command terminal, set your AXIOM variable and PATH variable,
and type 'axiom'. Then retry the draw command. Please let me know if this
succeeds or fails and send a message to the list
mailing list.

Tim Daly

--
forwarded from http://page.axiom-developer.org/zope/mathaction/FrontPage#msg20050202081425-0600@page.axiom-developer.org



\start
Date: Wed, 2 Feb 2005 09:58:12 -0500
From: Tim Daly
To: list
Subject: [MathAction: [FrontPage] axiom	on Knoppix and graphical facility]

Who Are You?

There is no identifying information in this post so I cannot help you
directly.

I suspect the problem is that the axiom interface module is calling
AXIOMsys (the actual axiom interpreter) rather than the axiom shell
script. The axiom shell script starts the sman (superman) process
which starts AXIOMsys, the hyperdoc browser, and the graphics
connection. If you call AXIOMsys directly then graphics will not work.

Please open a command terminal, set your AXIOM variable and PATH
variable, and type axiom. Then retry the draw command. Please let me
know if this succeeds or fails and send a message to the
list mailing list.

Tim Daly

------- Start of forwarded message -------
> From: MathAction (??)
> To: MathAction
> Date: Wed, 02 Feb 2005 03:42:26 -0600
> Subject: [FrontPage] axiom on Knoppix and graphical
> 	facility
> 
> I had installed axiom (3.0 beta, Feb, 2005) on Knoppix Linux with
> TeXmacs and other plugin software. But the "draw()" seems not to work,
> for instance as insput the following within TeXmacs:
> 
> - ->draw(sin(x),x=0..1)
>    Compiling function %D with type DoubleFloat -> DoubleFloat
>    Graph data being transmitted to the viewport manager...
>    AXIOM2D data being transmitted to the viewport manager...
> 
>    (1)  TwoDimensionalViewport: "sin x"
>                                                  Type: TwoDimensionalViewport
> 
> But no picture was created. Does draw() still not work in this verion?
> Anyway, Axiom is excellent CAS and I will introduce this in my
> calculus class.  Thanks!
> - --
> forwarded from http://page.axiom-developer.org/zope/mathaction/FrontPage#msg20050202034221-0600@page.axiom-developer.org

------- End of forwarded message -------



\start
Date: Wed, 02 Feb 2005 09:14:12 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [MathCAD] (new) 

1/2+3/4
--
forwarded from http://page.axiom-developer.org/zope/mathaction/MathCAD#msg20050202091411-0600@page.axiom-developer.org



\start
Date: Wed, 02 Feb 2005 09:14:13 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [MathCAD] (new) 

1/2+3/4
--
forwarded from http://page.axiom-developer.org/zope/mathaction/MathCAD#msg20050202091412-0600@page.axiom-developer.org



\start
Date: Wed, 02 Feb 2005 09:53:56 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [AxiomInterface] 

    \begin{axiom}
    [1/2, 3/4, 2/3]
    \end{axiom}


--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomInterface#msg20050202095342-0600@page.axiom-developer.org



\start
Date: Wed, 2 Feb 2005 07:44:17 -0800
From: JCA
To: list
Subject: Axiom on Slackware, anyone?

   I have been trying to get Axiom built on Slackware 10 for a while
now, and the build process always breaks down, almost immediately,
when attempting to build GCL. Here are some relevant lines:

make[3]: Entering directory `/mnt/axiom/lsp/gcl-2.6.5'
rm -f bin/gcl xbin/gcl
MGCLDIR=`echo /mnt/axiom/lsp/gcl-2.6.5 | sed -e 'sX^\([a-z]\):X/\1Xg'` ; \
GCLDIR=`echo /mnt/axiom/lsp/gcl-2.6.5` ; \
make install-command "INSTALL_LIB_DIR=$GCLDIR" "prefix=$GCLDIR"
"BINDIR=$MGCLDIR/unixport"
make[4]: Entering directory `/mnt/axiom/lsp/gcl-2.6.5'
rm -f /mnt/axiom/lsp/gcl-2.6.5/bin/gcl
(echo '#!/bin/sh' ; \
echo exec /mnt/axiom/lsp/gcl-2.6.5/unixport/ \\ ; \
echo '   -dir' /mnt/axiom/lsp/gcl-2.6.5/unixport/ \\ ; \
echo '   -libdir' /mnt/axiom/lsp/gcl-2.6.5/ \\ ; \
echo '   -eval '\''(setq si::*allow-gzipped-file* t)'\' \\ ;\
! [ -d "" ] || echo '   -eval '\''(setq si::*tk-library* '\"\"')'\' \\;\
echo '     '\"\$@\" ) > /mnt/axiom/lsp/gcl-2.6.5/bin/gcl;
echo '#' other options: -load "/tmp/foo.o" -load "jo.lsp" -eval '"(joe
3)"' >> /mnt/axiom/lsp/gcl-2.6.5/bin/gcl
chmod a+x /mnt/axiom/lsp/gcl-2.6.5/bin/gcl
rm -f /mnt/axiom/lsp/gcl-2.6.5/bin/gclm.bat
if gcc --version | grep mingw >/dev/null 2>&1 ; then (echo '@SET cd='; \
 echo '@SET promp%prompt%'; \
 echo '@PROMPT SET cd'; \
 echo '@CALL>%temp%.\setdir.bat'; \
 echo '@'; \
 echo '% do not delete this line %'; \
 echo '@ECHO off'; \
 echo 'PROMPT %promp'; \
 echo 'FOR %%c IN (CALL DEL) DO %%c %temp%.\setdir.bat'; \
 echo 'set cwd=%cd%'; \
 echo 'set libdir=%cd%\..\lib\gcl-`cat majvers`.`cat minvers`'; \
 echo 'set unixportdir=%libdir%\unixport'; \
 echo 'path %cd%\..\mingw\bin;%PATH%'; \
 echo "start %unixportdir%\.exe -dir %unixportdir% -libdir %libdir%
-eval \"(setq si::*allow-gzipped-file* t)\" %1 %2 %3 %4 %5 %6 %7 %8
%9" ) > /mnt/axiom/lsp/gcl-2.6.5/bin/gclm.bat ; fi
rm -f /mnt/axiom/lsp/gcl-2.6.5/bin/gclfinal.bat
if gcc --version | grep -i mingw >/dev/null 2>&1 ; then (echo 'ECHO
path %1\mingw\bin;%PATH% > gcli.bat'; \
 echo "ECHO start %1\lib\gcl-`cat majvers`.`cat minvers`\unixport\.exe
-dir %1\lib\gcl-`cat majvers`.`cat minvers`\unixport -libdir
%1\lib\gcl-`cat majvers`.`cat minvers` -eval \"(setq
si::*allow-gzipped-file* t)\" %1 %2 %3 %4 %5 %6 %7 %8 %9 >> gcli.bat"
) > /mnt/axiom/lsp/gcl-2.6.5/bin/gclfinal.bat ; fi
make[4]: Leaving directory `/mnt/axiom/lsp/gcl-2.6.5'
(cd xbin ; cp ../bin/gcl .)
cd cmpnew && make gcl_collectfn.o
make[4]: Entering directory `/mnt/axiom/lsp/gcl-2.6.5/cmpnew'
../unixport/saved_pre_gcl ../unixport/ -compile gcl_collectfn.lsp
make[4]: ../unixport/saved_pre_gcl: Command not found
make[4]: *** [gcl_collectfn.o] Error 127
make[4]: Leaving directory `/mnt/axiom/lsp/gcl-2.6.5/cmpnew'
make[3]: *** [cmpnew/gcl_collectfn.o] Error 2
make[3]: Leaving directory `/mnt/axiom/lsp/gcl-2.6.5'
/bin/sh: line 1: unixport/saved_gcl: No such file or directory
make[2]: *** [gcldir] Error 127
make[2]: Leaving directory `/mnt/axiom/lsp'
make[1]: *** [lspdir] Error 2
make[1]: Leaving directory `/mnt/axiom'
make: *** [all] Error 2

   Not being very Lisp-savvy yet, I find myself stymied at this point.

   Anybody know how to fix this issue in Slackware?

\start
Date: Wed, 02 Feb 2005 09:55:52 -0600
From: MathAction (Humberto Ortiz Zuazaga)
To: MathAction
Subject: [Axiom-mail] Axiom meta questions.

I'm just starting with axiom, and I guess I have some questions. In
fact, I have questions about my questions.

I don't understand the proposed difference between the axiom-math and
axiom-mail lists. What kinds of questions should go on each?

I saw in axiom-math [1] that the developers would like us to add
questions and answers on mathaction, but again, there are a bunch of
different axiom portals, is there a set of guidelines for choosing what
kinds of content to place where?

[1] http://lists.gnu.org/archive/html/axiom-math/2004-12/msg00003.html

-- 
Humberto Ortiz Zuazaga
Programmer-Archaeologist
High Performance Computing facility
University of Puerto Rico
http://www.hpcf.upr.edu/~humberto/

--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomMail#msg20050202154859.6AE4B1D80A5@daleth



\start
Date: Wed, 02 Feb 2005 09:58:06 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [AxiomInterface] 

\begin{axiom}
draw(sin(x),x=0..1)
 \end{axiom}


--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomInterface#msg20050202095746-0600@page.axiom-developer.org



\start
Date: Wed, 2 Feb 2005 11:39:30 -0500
From: Tim Daly
To: list
Subject: [Iyad Ajwa: ECCAD'05: Call For	Participation and Posters]

fyi....


------- Start of forwarded message -------
Date: Wed, 02 Feb 2005 10:35:13 -0500
From: Iyad Ajwa
Subject: ECCAD'05: Call For Participation and Posters


Dear Colleagues,

You are invited to participate in The 2005 East Coast Computer Algebra
Day (ECCAD'2005) which will be held at Ashland University in Ashland,
Ohio, USA on Saturday, March 12, 2005. The original CFP is given below.


Please be reminded of the following:
1. The deadline to submit a poster abstract is February 25, 2005. Two
poster sessions will be held.
2. The deadline to submit a request for travel support is March 1,
2005. The conference will most likely be able to provide travel grants
to graduate students and junior faculty through an NSF grant that has
been submitted. Priority will be given to those who present posters.
3. The deadline to register is March 1, 2005. Please register online as
soon as possible using the link given below in the CFP. Your early
registration is truly appreciated. It will help us prepare properly for
the event.
4. The conference has rooms reserved at local hotels. Please see below
for codes to use to get the discounted rates and hotels contact
information.
5. Please consult with the CFP for additional important information.
Thank you and I am looking forward to your participation.

============================================
                          ECCAD 2005
The 12th Annual East Coast Computer Algebra Day
            CALL  FOR  PARTICIPATION
                
============================================
HOSTED BY: 
The Department of Mathematics and Computer Science
Ashland University
Ashland, Ohio, USA

DATE: March 12, 2005
CONFERENCE WEBSITE:   http://www.ashland.edu/~eccad 
CONFERNCE EMAIL:  eccad@ashland.edu 

=========================================
ECCAD, East Coast Computer Algebra Day, is an annual conference that
provides opportunities to learn and share new developments and to
present research results in the areas of symbolic and mathematical
computation. 

The 12th Annual East Coast Computer Algebra Day (ECCAD 2005) will be
held on Saturday, March 12, 2005. It will be hosted by the Department of
Mathematics and Computer Science at Ashland University in Ashland, Ohio,
USA. 

ECCAD 2005 will be in honor of Professor Bob Caviness's 65th birthday.
Bob Caviness is a Professor Emeritus (with a joint appointment in
Mathematical Sciences) and former Chair of the Department of Computer &
Information Sciences at the University of Delaware. His research
interests include the design and analysis of algebraic algorithms, in
particular, algorithmic decision procedures for integration in finite
terms and for computing closed form solutions of differential
equations.More recently he has turned to web-based technologies. He has
five Ph.D. and two M.S students. Professor Caviness has served in
various editorial capacities for the following jourmals: ACM
Transactions on Mathematical Software, ACM Computing Reviews,
CONSTRAINTS, the online e-commerce journal ACM SIGecom Exchanges, and
the Journal of Symbolic Computation. He served as Editor-in-Chief of the
latter journal for the period 1995-2000. He has also lectured widely and
served the profession in many other capacities. Happy Birthday, Bob! 

THEMES:
- - Algebraic Algorithms 
- - Symbolic-Numeric Computation 
- - Computer Algebra Systems 
- - Mathematical Communication 
- - Complexity of Algebraic Problems 
- - Symbolic and Numerical Linear Algebra 
- - Applications of Symbolic Computation 

INVITED SPEAKERS:
The following speakers have been confirmed. Titles and abstracts will
be announced on the Conference Website at http://www.ashland.edu/~eccad
once they become available.
1. Professor Bruno Buchberger - Johannes Kepler University, Linz,
Austria.
2. Professor Erich Kaltofen - North Carolina State University, Raleigh,
NC.
3. Professor David Saunders - University of Delaware, Newark, DE.
4. Professor Paul Wang - Kent State University, kent, OH.

REGISTRATION:
Online Registration is available on the Conference Website at
http://www.ashland.edu/~eccad. 

POSTER  SESSIONS:
Two poster sessions will be held at the conference. Participants are
invited to submit their posters by the submission deadline of February
25, 2005. Poster abstracts received before the submission deadline will
be included in The ECCAD'2005 Book of Abstracts which will be available
at the conference.

POSTER SUBMISSION:
Poster abstracts may be up to 2 pages long. The submission deadline is
February 25, 2005. To submit a poster, either use the Online
Registration Form (available on the Conference Website at
http://www.ashland.edu/~eccad) to provide the title and abstract of
your poster, or send the title and abstract of your poster by email to
eccad@ashland.edu 

TRAVEL SUPPORT:
Pending NSF support, the conference hopes to be able to provide limited
travel support for some participants to attend ECCAD'2005.  Graduate
students and junior faculty are particularly encouraged to apply.
Support may cover only partially travel expenses and lodging for up to
two nights.  There will be no stipends. Make sure the flight has a
flight number of a US carrier. If you plan to attend and apply for
support, please send your inquiry with an itemized estimate of your
expenses to eccad@ashland.edu. Please note that if your application is
approved and if funding is available, you will receive your
reimbursement after the conference. All applications for support are due
by March 1, 2005. Support is subject to successful funding. 

ACCOMMODATIONS:
Blocks of rooms have been reserved at two local hotels for participants
of ECCAD'2005. Deatiled Information are posted on the Conference Website
at http://www.ashland.edu/~eccad. 

ADVISORY COUNCIL:
- - Bruce Char - Drexel University, USA 
- - Erich Kaltofen - North Carolina State University, USA 
- - Ilias Kotsireas - Wilfrid Laurier University, CANADA 
- - David Saunders - University of Delaware, USA 
- - William Sit - The City College of the City University of New York,
USA 
- - Paul S. Wang - Kent State University, USA 
- - Stephen Watt - University of Western Ontario, CANADA 

ORGANIZER:
Iyad A. Ajwa
Department of Mathematics and Computer Science
Ashland University
Ashland, Ohio 44805, USA
+1 419.289.5798
"Iyad Ajwa" <iajwa@ashland.edu>

SPONSORS:
- - Ashland University
- - College of Arts and Sciences
- - Department of Mathematics and Computer Science
- - National Science Foundation

CONFERENCE CONTACT:
Iyad A. Ajwa
Department of Mathematics and Computer Science
Ashland University
Ashland, Ohio 44805
USA
Tel:     +1 419.289.5798
FAX:  +1 419.289.5791
"Iyad Ajwa" <iajwa@ashland.edu>
eccad@ashland.edu 

OTHER INFORMATION:
Previous ECCAD conference homepages can be consulted at:
http://www.cis.udel.edu/~saunders/eccad/. 


Iyad...

***********************************************************
Iyad A. Ajwa, Ph.D.
Associate Professor
Department of Mathematics and Computer Science
Ashland University
Ashland, OH 44805, USA
Phone: +1 419.289.5798
FAX:    +1 419.289.5791
www.ashland.edu/~iajwa/
***********************************************************
------- End of forwarded message -------



\start
Date: Wed, 02 Feb 2005 10:04:18 -0600
From: MathAction (root)
To: MathAction
Subject: [Iyad Ajwa: ECCAD'05: Call For Participation and Posters]

fyi....


------- Start of forwarded message -------

Dear Colleagues,

You are invited to participate in The 2005 East Coast Computer Algebra
Day (ECCAD'2005) which will be held at Ashland University in Ashland,
Ohio, USA on Saturday, March 12, 2005. The original CFP is given below.


Please be reminded of the following:
1. The deadline to submit a poster abstract is February 25, 2005. Two
poster sessions will be held.
2. The deadline to submit a request for travel support is March 1,
2005. The conference will most likely be able to provide travel grants
to graduate students and junior faculty through an NSF grant that has
been submitted. Priority will be given to those who present posters.
3. The deadline to register is March 1, 2005. Please register online as
soon as possible using the link given below in the CFP. Your early
registration is truly appreciated. It will help us prepare properly for
the event.
4. The conference has rooms reserved at local hotels. Please see below
for codes to use to get the discounted rates and hotels contact
information.
5. Please consult with the CFP for additional important information.
Thank you and I am looking forward to your participation.

============================================
                          ECCAD 2005
The 12th Annual East Coast Computer Algebra Day
            CALL  FOR  PARTICIPATION
                
============================================
HOSTED BY: 
The Department of Mathematics and Computer Science
Ashland University
Ashland, Ohio, USA

DATE: March 12, 2005
CONFERENCE WEBSITE:   http://www.ashland.edu/~eccad 
CONFERNCE EMAIL:  eccad@ashland.edu 

=========================================
ECCAD, East Coast Computer Algebra Day, is an annual conference that
provides opportunities to learn and share new developments and to
present research results in the areas of symbolic and mathematical
computation. 

The 12th Annual East Coast Computer Algebra Day (ECCAD 2005) will be
held on Saturday, March 12, 2005. It will be hosted by the Department of
Mathematics and Computer Science at Ashland University in Ashland, Ohio,
USA. 

ECCAD 2005 will be in honor of Professor Bob Caviness's 65th birthday.
Bob Caviness is a Professor Emeritus (with a joint appointment in
Mathematical Sciences) and former Chair of the Department of Computer &
Information Sciences at the University of Delaware. His research
interests include the design and analysis of algebraic algorithms, in
particular, algorithmic decision procedures for integration in finite
terms and for computing closed form solutions of differential
equations.More recently he has turned to web-based technologies. He has
five Ph.D. and two M.S students. Professor Caviness has served in
various editorial capacities for the following jourmals: ACM
Transactions on Mathematical Software, ACM Computing Reviews,
CONSTRAINTS, the online e-commerce journal ACM SIGecom Exchanges, and
the Journal of Symbolic Computation. He served as Editor-in-Chief of the
latter journal for the period 1995-2000. He has also lectured widely and
served the profession in many other capacities. Happy Birthday, Bob! 

THEMES:
- - Algebraic Algorithms 
- - Symbolic-Numeric Computation 
- - Computer Algebra Systems 
- - Mathematical Communication 
- - Complexity of Algebraic Problems 
- - Symbolic and Numerical Linear Algebra 
- - Applications of Symbolic Computation 

INVITED SPEAKERS:
The following speakers have been confirmed. Titles and abstracts will
be announced on the Conference Website at http://www.ashland.edu/~eccad
once they become available.
1. Professor Bruno Buchberger - Johannes Kepler University, Linz,
Austria.
2. Professor Erich Kaltofen - North Carolina State University, Raleigh,
NC.
3. Professor David Saunders - University of Delaware, Newark, DE.
4. Professor Paul Wang - Kent State University, kent, OH.

REGISTRATION:
Online Registration is available on the Conference Website at
http://www.ashland.edu/~eccad. 

POSTER  SESSIONS:
Two poster sessions will be held at the conference. Participants are
invited to submit their posters by the submission deadline of February
25, 2005. Poster abstracts received before the submission deadline will
be included in The ECCAD'2005 Book of Abstracts which will be available
at the conference.

POSTER SUBMISSION:
Poster abstracts may be up to 2 pages long. The submission deadline is
February 25, 2005. To submit a poster, either use the Online
Registration Form (available on the Conference Website at
http://www.ashland.edu/~eccad) to provide the title and abstract of
your poster, or send the title and abstract of your poster by email to
eccad@ashland.edu 

TRAVEL SUPPORT:
Pending NSF support, the conference hopes to be able to provide limited
travel support for some participants to attend ECCAD'2005.  Graduate
students and junior faculty are particularly encouraged to apply.
Support may cover only partially travel expenses and lodging for up to
two nights.  There will be no stipends. Make sure the flight has a
flight number of a US carrier. If you plan to attend and apply for
support, please send your inquiry with an itemized estimate of your
expenses to eccad@ashland.edu. Please note that if your application is
approved and if funding is available, you will receive your
reimbursement after the conference. All applications for support are due
by March 1, 2005. Support is subject to successful funding. 

ACCOMMODATIONS:
Blocks of rooms have been reserved at two local hotels for participants
of ECCAD'2005. Deatiled Information are posted on the Conference Website
at http://www.ashland.edu/~eccad. 

ADVISORY COUNCIL:
- - Bruce Char - Drexel University, USA 
- - Erich Kaltofen - North Carolina State University, USA 
- - Ilias Kotsireas - Wilfrid Laurier University, CANADA 
- - David Saunders - University of Delaware, USA 
- - William Sit - The City College of the City University of New York,
USA 
- - Paul S. Wang - Kent State University, USA 
- - Stephen Watt - University of Western Ontario, CANADA 

ORGANIZER:
Iyad A. Ajwa
Department of Mathematics and Computer Science
Ashland University
Ashland, Ohio 44805, USA
+1 419.289.5798
"Iyad Ajwa" <iajwa@ashland.edu>

SPONSORS:
- - Ashland University
- - College of Arts and Sciences
- - Department of Mathematics and Computer Science
- - National Science Foundation

CONFERENCE CONTACT:
Iyad A. Ajwa
Department of Mathematics and Computer Science
Ashland University
Ashland, Ohio 44805
USA
Tel:     +1 419.289.5798
FAX:  +1 419.289.5791
"Iyad Ajwa" <iajwa@ashland.edu>
eccad@ashland.edu 

OTHER INFORMATION:
Previous ECCAD conference homepages can be consulted at:
http://www.cis.udel.edu/~saunders/eccad/. 


Iyad...

***********************************************************
Iyad A. Ajwa, Ph.D.
Associate Professor
Department of Mathematics and Computer Science
Ashland University
Ashland, OH 44805, USA
Phone: +1 419.289.5798
FAX:    +1 419.289.5791
www.ashland.edu/~iajwa/
***********************************************************
------- End of forwarded message -------


_______________________________________________
Axiom-mail mailing list
Axiom-mail@nongnu.org
http://lists.nongnu.org/mailman/listinfo/axiom-mail

--
forwarded from http://page.axiom-developer.org/zope/mathaction/IajwaAshlandEduECCAD05CallForParticipationAndPosters#msg200502021639.j12GdUi15443@localhost.localdomain



\start
Date: Wed, 02 Feb 2005 11:08:20 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [ExamplePage] (new) 

A Quick Tutorial

  The line above is a heading

\begin{equation}
\alpha = \frac{\Gamma}{1+x^2}
\end{equation}

Example

  This is an example of an Axiom command

\begin{axiom}
integrate(1/sqrt(1-x**2),x)
D(sin(x),x)
\end{axiom}

--
forwarded from http://page.axiom-developer.org/zope/mathaction/ExamplePage#msg20050202110815-0600@page.axiom-developer.org



\start
Date: Thu, 3 Feb 2005 13:43:28 +0800
From: Chu-Ching Huang
To: list
Subject: draw work well within X-term

Hi Tim and others,

>I suspect the problem is that the axiom interface module is calling AXIOMsys
(the actual axiom >interpreter) rather than the axiom shell script. The axiom
shell script starts the sman (superman) >process which starts AXIOMsys, the
hyperdoc browser, and the graphics connection. If you call >AXIOMsys directly
then graphics will not work.

>Please open a command terminal, set your AXIOM variable and PATH variable,
and type axiom. Then >retry the draw command. Please let me know if this
succeeds or fails and send a message to the >list
mailing list.

You are right. "draw" works well within X-term but not within Texmacs. I will
release the Knoppix soon.

Thanks again

chu-ching huang



\start
Date: Thu, 03 Feb 2005 04:41:18 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [AxiomInterface] 


??changed:
-[1/2, 3/4, 2/3]
[1/2, 3/4, 5/6]

--removed:
-

--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomInterface#msg20050203044118-0600@page.axiom-developer.org



\start
Date: Thu, 03 Feb 2005 04:42:25 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [AxiomInterface] 


??changed:
-integrate(log(sin(x)),x=0..z)
integrate(log(sin(x)),x=0..%pi)

--removed:
-

--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomInterface#msg20050203044225-0600@page.axiom-developer.org



\start
Date: Thu, 03 Feb 2005 09:12:41 -0600
From: MathAction (kratt6)
To: MathAction
Subject: [AxiomDevelopment] 


??changed:
-<A name="bugsandpatches">Axiom "bugs":http://savannah.nongnu.org/bugs/?group=axiom and "patches":http://savannah.nongnu.org/patch/?group=axiom </A>
-
-  Sure you want to "fix":DebuggingAxiom one of these, don't you? Alternatively, you can browse through <A name="WesterCritique">
<A name="bugsandpatches">Axiom bugs and patches </A>

  Sure you want to "fix":DebuggingAxiom one of "these":IssueTracker, don't you? Alternatively, you can browse through <A name="WesterCritique">

--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomDevelopment#msg20050203091241-0600@page.axiom-developer.org



\start
Date: Thu, 03 Feb 2005 17:41:53 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [ExamplePage] 


??changed:
-\alpha = \frac{\Gamma}{1+x^2}
\alpha = \frac{\Gamma}{1+\sqrt{x^2}}

??changed:
-  This is an example of an Axiom command
  This is an example of an Axiom command. I can put text here



??changed:
-integrate(1/sqrt(1-x**2),x)
integrate(1/sqrt(1-x**2)*x,x)

--
forwarded from http://page.axiom-developer.org/zope/mathaction/ExamplePage#msg20050203174153-0600@page.axiom-developer.org



\start
Date: Fri, 04 Feb 2005 17:55:56 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [AxiomDownload] Latest TeXmacs, 1.0.4, 5, on Knoppix Linux and demos files 

Forwarded::

  From  Chu-Ching Huang  
  Date  2005/02/03 Thu PM 09:37:02 EST 

Hi all,

TeXmacs and CAS on bootable Linux, LiveZope_CAS_LAM2P-3.2 DVD, has been a
little update, for instance: TeXmacs-1.0.4.5, Axiom-3.0 beta (Feb 2005) and
R-2.0.1 etc. The demos files, including Calculus, Linear Algebra, Probability
and plugins examples, are put in the directory, /usr/local/demos/TeXmacs. The
download site is:

ftp://math.cgu.edu.tw/pub/KNOPPIX


--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomDownload#msg20050204175520-0600@page.axiom-developer.org



\start
Date: Sat, 5 Feb 2005 00:51:08 -0500
From: Tim Daly
To: Bill Page
Subject: fixed point algebra

Bill,

Is the fixed-point algebra in the --windows branch?

t



\start
Date: Sun, 06 Feb 2005 11:03:33 -0600
From: MathAction (Tim Daly)
To: MathAction
Subject: [#89 Typos in the full book] (new) 

page 19: s/will be carried/will be carried out/

page 33: s/excape/escape/
Did Dick drink "expresso"?

page 33: s/two plus symbols ``+''/two plus symbols ``++''

(In fact, that whole sentence fairly broken.  Three "+++" signs and two plus
symbols "+". ?!)


page 34: s/this doe not/this does not/

page 37: 
  s/functions that operator over lists/functions that operate over lists/ 
I guess?


page 41: s/the only save way/the only safe way/
I smell a German.

page 45: s/seen that repeatedly/seen that by repeatedly/




--
forwarded from http://page.axiom-developer.org/zope/mathaction/89TyposInTheFullBook#msg20050206110333-0600@page.axiom-developer.org



\start
Date: Sun, 06 Feb 2005 11:00:20 -0600
From: MathAction (Tim Daly)
To: MathAction
Subject: [#88 Draw does not work under TeXmacs] (new) 

I had installed axiom (3.0 beta, Feb, 2005) on Knoppix Linux with TeXmacs and other plugin software. But the "draw()" seems not to work, for instance as insput the following within TeXmacs:

->draw(sin(x),x=0..1)
   Compiling function %D with type DoubleFloat -> DoubleFloat
   Graph data being transmitted to the viewport manager...
   AXIOM2D data being transmitted to the viewport manager...

   (1)  TwoDimensionalViewport: "sin x"
                                                 Type: TwoDimensionalViewport

But no picture was created. Does draw() still not work in this verion? Anyway, Axiom is excellent CAS and I will introduce this in my calculus class.
Thanks!
--
forwarded from http://page.axiom-developer.org/zope/mathaction/88DrawDoesNotWorkUnderTeXmacs#msg20050206110018-0600@page.axiom-developer.org



\start
Date: Sun, 06 Feb 2005 11:01:41 -0600
From: MathAction (Tim Daly)
To: MathAction
Subject: [#88 Draw does not work under TeXmacs] 


??changed:
-I had installed axiom (3.0 beta, Feb, 2005) on Knoppix Linux with TeXmacs and other plugin software. But the "draw()" seems not to work, for instance as insput the following within TeXmacs:
I had installed axiom (3.0 beta, Feb, 2005) on Knoppix Linux with TeXmacs and other plugin software. 
But the "draw()" seems not to work, for instance as insput the following within TeXmacs:

??changed:
-But no picture was created. Does draw() still not work in this verion? Anyway, Axiom is excellent CAS and I will introduce this in my calculus class.
But no picture was created. Does draw() still not work in this verion? Anyway, Axiom is excellent CAS 
and I will introduce this in my calculus class.

--
forwarded from http://page.axiom-developer.org/zope/mathaction/88DrawDoesNotWorkUnderTeXmacs#msg20050206110141-0600@page.axiom-developer.org



\start
Date: Sun, 06 Feb 2005 11:46:55 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [AxiomProblems] 


++added:
- [numerical linear algebra]


--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomProblems#msg20050206114655-0600@page.axiom-developer.org



\start
Date: Sun, 06 Feb 2005 13:01:28 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [AxiomInterface] 

\begin{axiom} integrate(log(sin(x)),x=0..%pi); \end{axiom} 
--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomInterface#msg20050206130114-0600@page.axiom-developer.org



\start
Date: Sun, 06 Feb 2005 13:17:19 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [numerical linear algebra] (new) 

I'm new to Axiom, so maybe I'm doing things in a stupid way.

I want to get (estimates of) the eigenvalues of a 10x10 matrix of floats:

\begin{axiom}
m := matrix([[random()$Integer for i in 1..10] for j in 1..10]); sm := m + transpose(m); smf:Matrix Float := sm
\end{axiom}

The problem is: If I now call eigenvalues(smf) on the symmetric float matrix smf Axiom 3.0 Beta (February 2005) runs for a very long time (uncomment code if you want to try it):
\begin{axiom}
)set messages time on
-- eigenvalues(smf)
\end{axiom}

--
forwarded from http://page.axiom-developer.org/zope/mathaction/NumericalLinearAlgebra#msg20050206131708-0600@page.axiom-developer.org



\start
Date: Sun, 06 Feb 2005 18:18:47 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [numerical linear algebra] 


++added:
Try this::
\begin{axiom}
eigen:=eigenvalues(sm)
solve(rhs(eigen.1),15)
\end{axiom}

--
forwarded from http://page.axiom-developer.org/zope/mathaction/NumericalLinearAlgebra#msg20050206181847-0600@page.axiom-developer.org



\start
Date: Mon, 07 Feb 2005 10:42:36 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [numerical linear algebra] 


++added:

Thank you!  This helps, but doesn't answer everything.  Since interestingly:
\begin{axiom}
charpol := reduce(*, [ rhs(x) - lhs(x) for x in % ])
\end{axiom}
we cannot recover the characteristic polynomial from this solution: Even if a large number is passed to solve, accuracy does not increase.

--
forwarded from http://page.axiom-developer.org/zope/mathaction/NumericalLinearAlgebra#msg20050207104235-0600@page.axiom-developer.org



\start
Date: Mon, 7 Feb 2005 11:37:42 -0500
From: Bill Page
To: Tim Daly
Subject: RE: fixed point algebra

Tim,

What exactly do you mean by "the fixed-point algebra"?

See my reply to you of Tuesday, February 1 below.

I am back home in Canada after a busy week. There was a LOT
of interest in Axiom and MathAction in Mexico. I gave several
detailed presentations at both Cautitlan and at the main campus
of UNAM in Mexico City. There was a very positive response and
as a result it is a good possibility that Axiom might be
"officially recommended" by the university as an alternative
to Mathematica and Maple. They are also considering the use
of MathAction as a model to support online student access to
tutorials and mathematical tools.

One of my hosts while in Mexico, Jesus Cruz, has direct
resposiblity for establishing policies on the use of symbolic
mathematics for the whole of UNAM. He is a mathematical
theoretical physicist by training by now the Vice-director
of the Cautitlan campus. If travel funds are available it
might be a good strategy to invite him to the Axiom meeting in
April.

Regards,
Bill Page.

> -----Original Message-----
> From: root [mailto:Tim Daly] 
> Sent: Saturday, February 05, 2005 12:51 AM
> To: Bill Page
> Cc: list
> Subject: fixed point algebra
> 
> 
> Bill,
> 
> Is the fixed-point algebra in the --windows branch?
> 
> t


> -----Original Message-----
> From: Bill Page [mailto:Bill Page] 
> Sent: Tuesday, February 01, 2005 2:00 PM
> To: Tim Daly
> Subject: Re: bio and abstract
> 
> 
> Tim,
> 
> I am in Mexico this week and will be giving demos of Axiom and
> MathAction at a university here, so my email replies might be a
> little more iratic than usual ...
> 
> The --windows branch does not contain any changes to the algebra.
> I have not tried to implement the new bootstrap code that Steve
> setup a couple of weeks ago.
> 
> But the --windows branch does include a new script called
> 
>   fixedPoint
> 
> which automatically does an iterative fixed point build,
> ie. it repeats the build until the generated lisp no longer
> changes. That means building the algebra part of Axiom 3
> times.
> 
> Is that clear? Should I explain this a little more?
> 
> Regards,
> Bill Page
> 
> > 
> > From: Tim Daly
> > Date: 2005/01/31 Mon PM 11:19:18 EST
> > To: Bill Page
> > Subject: bio and abstract
> > 
> I'm compiling axiom for different systems.
> I'm going to change the download page at some point.
> 
> Does the --windows branch contain the correct fixed-point algebra?
> 
> t
>  
> 




\start
Date: Mon, 07 Feb 2005 10:52:47 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [numerical linear algebra] 


++added:

Thank you!  This helps, but doesn't answer everything.  Since interestingly:
\begin{axiom}
charpol := reduce(*, [ rhs(x) - lhs(x) for x in % ])
\end{axiom}
we cannot recover the characteristic polynomial from this solution: Even if a large number is passed to solve, accuracy does not increase.

--
forwarded from http://page.axiom-developer.org/zope/mathaction/NumericalLinearAlgebra#msg20050207105246-0600@page.axiom-developer.org



\start
Date: Mon, 07 Feb 2005 12:54:16 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [AxiomInterface] 


??changed:
-    !\begin{axiom}
    \\begin{axiom}

??changed:
-    \end{axiom}
    \\end{axiom}

??changed:
-\begin{axiom} integrate(log(sin(x)),x=0..%pi); \end{axiom} 
test
\begin{axiom}
integrate(log(sin(x)),x=0..%pi)
\end{axiom} 

--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomInterface#msg20050207125415-0600@page.axiom-developer.org



\start
Date: Tue, 08 Feb 2005 04:29:19 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [#90 coredump with infinite stream] (new) 

I understand that the following is not a smart thing to do.  Axiom should complain, but it just coredumps silently:
==primes:Stream Integer := generate(nextPrime, 2)
smallerThan(stream, n) == [ s for s in stream | s < n ]
smallerThan(primes, 100) -- Axiom 3.0 Beta coredumps
==Matthias
--
forwarded from http://page.axiom-developer.org/zope/mathaction/90CoredumpWithInfiniteStream#msg20050208041051-0600@page.axiom-developer.org



\start
Date: Tue, 08 Feb 2005 04:29:51 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [#92 coredump with infinite stream] (new) 

I understand that the following is not a smart thing to do.  Axiom should complain, but it just coredumps silently:
===
primes:Stream Integer := generate(nextPrime, 2)
smallerThan(stream, n) == [ s for s in stream | s < n ]
smallerThan(primes, 100) -- Axiom 3.0 Beta coredumps
===
Matthias
--
forwarded from http://page.axiom-developer.org/zope/mathaction/92CoredumpWithInfiniteStream#msg20050208042951-0600@page.axiom-developer.org



\start
Date: Tue, 08 Feb 2005 04:29:42 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [#91 coredump with infinite stream] (new) 

I understand that the following is not a smart thing to do.  Axiom should complain, but it just coredumps silently:
===
primes:Stream Integer := generate(nextPrime, 2)
smallerThan(stream, n) == [ s for s in stream | s < n ]
smallerThan(primes, 100) -- Axiom 3.0 Beta coredumps
===
Matthias
--
forwarded from http://page.axiom-developer.org/zope/mathaction/91CoredumpWithInfiniteStream#msg20050208042942-0600@page.axiom-developer.org



\start
Date: Tue, 08 Feb 2005 04:29:32 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [#90 coredump with infinite stream] (new) 

I understand that the following is not a smart thing to do.  Axiom should complain, but it just coredumps silently:
===
primes:Stream Integer := generate(nextPrime, 2)
smallerThan(stream, n) == [ s for s in stream | s < n ]
smallerThan(primes, 100) -- Axiom 3.0 Beta coredumps
===
Matthias
--
forwarded from http://page.axiom-developer.org/zope/mathaction/90CoredumpWithInfiniteStream#msg20050208042927-0600@page.axiom-developer.org



\start
Date: Tue, 08 Feb 2005 04:29:32 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [#90 coredump with infinite stream] (new) 

I understand that the following is not a smart thing to do.  Axiom should complain, but it just coredumps silently:
===
primes:Stream Integer := generate(nextPrime, 2)
smallerThan(stream, n) == [ s for s in stream | s < n ]
smallerThan(primes, 100) -- Axiom 3.0 Beta coredumps
===
Matthias
--
forwarded from http://page.axiom-developer.org/zope/mathaction/90CoredumpWithInfiniteStream#msg20050208042927-0600@page.axiom-developer.org



\start
Date: Tue, 08 Feb 2005 04:29:40 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [#91 coredump with infinite stream] (new) 

I understand that the following is not a smart thing to do.  Axiom should complain, but it just coredumps silently:
===
primes:Stream Integer := generate(nextPrime, 2)
smallerThan(stream, n) == [ s for s in stream | s < n ]
smallerThan(primes, 100) -- Axiom 3.0 Beta coredumps
===
Matthias
--
forwarded from http://page.axiom-developer.org/zope/mathaction/91CoredumpWithInfiniteStream#msg20050208042940-0600@page.axiom-developer.org



\start
Date: Tue, 08 Feb 2005 04:29:37 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [#91 coredump with infinite stream] (new) 

I understand that the following is not a smart thing to do.  Axiom should complain, but it just coredumps silently:
===
primes:Stream Integer := generate(nextPrime, 2)
smallerThan(stream, n) == [ s for s in stream | s < n ]
smallerThan(primes, 100) -- Axiom 3.0 Beta coredumps
===
Matthias
--
forwarded from http://page.axiom-developer.org/zope/mathaction/91CoredumpWithInfiniteStream#msg20050208042936-0600@page.axiom-developer.org



\start
Date: Tue, 08 Feb 2005 04:29:36 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [#91 coredump with infinite stream] (new) 

I understand that the following is not a smart thing to do.  Axiom should complain, but it just coredumps silently:
===
primes:Stream Integer := generate(nextPrime, 2)
smallerThan(stream, n) == [ s for s in stream | s < n ]
smallerThan(primes, 100) -- Axiom 3.0 Beta coredumps
===
Matthias
--
forwarded from http://page.axiom-developer.org/zope/mathaction/91CoredumpWithInfiniteStream#msg20050208042936-0600@page.axiom-developer.org



\start
Date: Tue, 08 Feb 2005 05:44:17 -0600
From: MathAction (Tim Daly)
To: MathAction
Subject: [#90 coredump with infinite stream] additional	information

The failure is unrelated to '100'. It fails with the value 5.
--
forwarded from http://page.axiom-developer.org/zope/mathaction/90CoredumpWithInfiniteStream#msg20050208054417-0600@page.axiom-developer.org



\start
Date: Tue, 08 Feb 2005 05:43:00 -0600
From: MathAction (Tim Daly)
To: MathAction
Subject: [#91 coredump with infinite stream] duplicate

Status: open => closed 

--
forwarded from http://page.axiom-developer.org/zope/mathaction/91CoredumpWithInfiniteStream#msg20050208054259-0600@page.axiom-developer.org



\start
Date: Tue, 08 Feb 2005 05:43:35 -0600
From: MathAction (Tim Daly)
To: MathAction
Subject: [#92 coredump with infinite stream] duplicate

Status: open => closed 

--
forwarded from http://page.axiom-developer.org/zope/mathaction/92CoredumpWithInfiniteStream#msg20050208054335-0600@page.axiom-developer.org



\start
Date: Tue, 08 Feb 2005 06:57:28 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [WishList] 


++added:

- Really good graphics/plotting/visualization.

  Graphics should be programmable, interactive, suitable for publication.  Mathematica gained much of its popularity because it was early to get the visualization right (almost, at least). 

--
forwarded from http://page.axiom-developer.org/zope/mathaction/WishList#msg20050208065728-0600@page.axiom-developer.org



\start
Date: Tue, 08 Feb 2005 14:31:22 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [TeXmacs] 


++added:



>From unknown Wed Feb 2 03:42:21 -0600 2005
From: 
Date: Wed, 02 Feb 2005 03:42:21 -0600
Subject: axiom on Knoppix and graphical facility

I had installed axiom (3.0 beta, Feb, 2005) on Knoppix Linux with TeXmacs and other plugin software. But the "draw()" seems not to work, for instance as insput the following within TeXmacs:

->draw(sin(x),x=0..1)
   Compiling function %D with type DoubleFloat -> DoubleFloat
   Graph data being transmitted to the viewport manager...
   AXIOM2D data being transmitted to the viewport manager...

   (1)  TwoDimensionalViewport: "sin x"
                                                 Type: TwoDimensionalViewport

But no picture was created. Does draw() still not work in this verion? Anyway, Axiom is excellent CAS and I will introduce this in my calculus class.
Thanks!

>From TimDaly Wed Feb 2 08:14:25 -0600 2005
From: Tim Daly
Date: Wed, 02 Feb 2005 08:14:25 -0600
Subject: who are you?

There is no identifying information in this post so I cannot help you directly.

I suspect the problem is that the axiom interface module is calling AXIOMsys
(the actual axiom interpreter) rather than the axiom shell script. The axiom
shell script starts the 'sman' (superman) process which starts AXIOMsys, the
hyperdoc browser, and the graphics connection. If you call AXIOMsys directly
then graphics will not work.

Please open a command terminal, set your AXIOM variable and PATH variable,
and type 'axiom'. Then retry the draw command. Please let me know if this
succeeds or fails and send a message to the list
mailing list.

Tim Daly


--
forwarded from http://page.axiom-developer.org/zope/mathaction/TeXmacs#msg20050208143122-0600@page.axiom-developer.org



\start
Date: Tue, 08 Feb 2005 15:23:32 -0600
From: MathAction (billpage)
To: MathAction
Subject: [TeXmacs] 


++added:



>From unknown Wed Feb 2 03:42:21 -0600 2005
From: 
Date: Wed, 02 Feb 2005 03:42:21 -0600
Subject: axiom on Knoppix and graphical facility

I had installed axiom (3.0 beta, Feb, 2005) on Knoppix Linux with TeXmacs and other plugin software. But the "draw()" seems not to work, for instance as insput the following within TeXmacs:

->draw(sin(x),x=0..1)
   Compiling function %D with type DoubleFloat -> DoubleFloat
   Graph data being transmitted to the viewport manager...
   AXIOM2D data being transmitted to the viewport manager...

   (1)  TwoDimensionalViewport: "sin x"
                                                 Type: TwoDimensionalViewport

But no picture was created. Does draw() still not work in this verion? Anyway, Axiom is excellent CAS and I will introduce this in my calculus class.
Thanks!

>From TimDaly Wed Feb 2 08:14:25 -0600 2005
From: Tim Daly
Date: Wed, 02 Feb 2005 08:14:25 -0600
Subject: who are you?

There is no identifying information in this post so I cannot help you directly.

I suspect the problem is that the axiom interface module is calling AXIOMsys
(the actual axiom interpreter) rather than the axiom shell script. The axiom
shell script starts the 'sman' (superman) process which starts AXIOMsys, the
hyperdoc browser, and the graphics connection. If you call AXIOMsys directly
then graphics will not work.

Please open a command terminal, set your AXIOM variable and PATH variable,
and type 'axiom'. Then retry the draw command. Please let me know if this
succeeds or fails and send a message to the list
mailing list.

Tim Daly


--
forwarded from http://page.axiom-developer.org/zope/mathaction/TeXmacs#msg20050208152332-0600@page.axiom-developer.org



\start
Date: Tue, 08 Feb 2005 15:20:18 -0600
From: MathAction (billpage)
To: MathAction
Subject: [FrontPage] 


--removed:
-From unknown Wed Feb 2 03:42:21 -0600 2005
-From: 
-Date: Wed, 02 Feb 2005 03:42:21 -0600
-Subject: axiom on Knoppix and graphical facility
-Message-ID: <20050202034221-0600@page.axiom-developer.org>
-
-I had installed axiom (3.0 beta, Feb, 2005) on Knoppix Linux with TeXmacs and other plugin software. But the "draw()" seems not to work, for instance as insput the following within TeXmacs:
-
-->draw(sin(x),x=0..1)
-   Compiling function %D with type DoubleFloat -> DoubleFloat
-   Graph data being transmitted to the viewport manager...
-   AXIOM2D data being transmitted to the viewport manager...
-
-   (1)  TwoDimensionalViewport: "sin x"
-                                                 Type: TwoDimensionalViewport
-
-But no picture was created. Does draw() still not work in this verion? Anyway, Axiom is excellent CAS and I will introduce this in my calculus class.
-Thanks!
-
-[20 more lines...]

--
forwarded from http://page.axiom-developer.org/zope/mathaction/FrontPage#msg20050208152018-0600@page.axiom-developer.org



\start
Date: Tue, 8 Feb 2005 20:47:55 -0500
From: Tim Daly
To: Tim Daly Jr
Subject: Re: "define-function"?!

btw, please copy list for most things.
you won't be the only person to be surprised by my crufty coding.

> Have you seen interp/hash.lisp?!
> 
> I quote:
> 
>      ;17.2 Accessing
> 
>      (defmacro HGET (table key &rest default)
>         `(gethash ,key ,table ,@default))
> 
> 
> Why, oh why?

because HGET is a VMLisp-ism and we had to run on the system
on both for a while. Plus HGET or hget appears in many places
in the sources. You're welcome to find all places it occurs
and make a mod to the code. There was great resistance to 
making this change at the time as it was not clear that common
lisp would survive but VMLisp surely would. :-)

we have to recode the system into ansi common lisp so we might
as well clean it up as we go.

> 
> One more typo in the book, btw:
> 
> page 60: s/the return statement leave/the return statement leaves/
> 
> I went to edit the bug you filed, but it looked like maybe somebody
> was horsing around with zope or something, so didn't succeed.

ok. when it comes back please make sure this gets recorded in
IssueTracker.

d




\start
Date: Tue, 8 Feb 2005 20:39:12 -0500
From: Tim Daly
To: list
Subject: Service Outage - IMPORTANT!!!]

PLEASE NOTE:

I buy the axiom-developer.org virtual machine service from Rose Hosting.
The axiom-developer.org machine will be down for a short while.
Please let me know if anything fails when they restart it.

Tim Daly


They sent me this note:


------- Start of forwarded message -------
Date: Tue, 8 Feb 2005 15:07:57 -0600
To: Tim Daly
From: helpdesk@rosehosting.com
Subject: Service Outage - IMPORTANT!!!

Dear Customer,

We will be doing a kernel upgrade on the 
server that hosts your virtual server later
today.

Therefore, we would like to inform you that
we will have to shut down your server for a
short period of time between 10 PM and 12 AM
Central Time today.

The outage should not last more than 20-30
minutes.

We apologize for the inconvenience and we
thank you for your understanding.

Helpdesk
RoseHosting.com

------- End of forwarded message -------



\start
Date: 09 Feb 2005 02:25:32 +0100
From: Tim Daly Jr
To: Tim Daly
Subject: Re: "define-function"?!


Tim Daly writes:

> btw, please copy list for most things.
> you won't be the only person to be surprised by my crufty coding.

That may be, but I wish you wouldn't copy the world on personal email.
You pasted the last one into the wiki, and copied the list on this
one.  I would not have done that with either email.  Please don't do
it again.

I'm not subscribed to axiom-developer because it's so noisy.  I check
it from time to time via nntp on the gmane server.  Do people really
want an email every time the wiki changes?!  Isn't that what RSS is
for?


-- 
-Tim





\start
Date: Tue, 8 Feb 2005 21:51:33 -0500
From: Bill Page
To: Tim Daly Jr
Subject: RSS feeds from MathAction

On Tuesday, February 08, 2005 8:26 PM Tim Daly Jr. wrote:
> ... 
> I'm not subscribed to axiom-developer because it's so noisy.
> I check it from time to time via nntp on the gmane server.  Do
> people really want an email every time the wiki changes?!

I am inclined to ask the same question, although you are the
first to complain. We decided to try this a few months ago.
Right now the MathAction wiki is configured to send all changes
and additons as email to the axiom-devel email list.  Maybe that
was not a good idea. We have the option of only sending email
notices when new pages or comments are added, ignoring all edits.

Or we can disconnect the wiki from the email list again, i.e.
return to the way it was originally, a few months ago. The wiki
can still manage it's own subscriptions if people do want to
receive all notices.

> Isn't that what RSS is for?
> 

Yes indeed. I wonder how many people are familiar with using
RSS?

MathAction is based on Zwiki. There are some experimental RSS
feeds available at

  http://zwiki.org/RSSDiscussion

It would only take a few minutes to implement one of these.
Tim, maybe you could test the feeds at

  http://zwiki.org/RSS

and then let me know which one of these works for you.

Regards,
Bill Page.




\start
Date: Wed, 9 Feb 2005 08:14:57 +0100
From: Martin Rubey
To: Bill Page
Subject: Re: RSS feeds from MathAction
Cc: Tim Daly Jr

I'd suggest that we simply move the experimental parts to SandBox. The other
pages are not changed that often, and when they are changed, I want them to
send a mail to axiom-developer indeed!

Another thing: Maybe FrontPage should not accept comments. But I'm not sure
about that one.

Martin



Bill Page writes:
 > On Tuesday, February 08, 2005 8:26 PM Tim Daly Jr. wrote:
 > > ... 
 > > I'm not subscribed to axiom-developer because it's so noisy.
 > > I check it from time to time via nntp on the gmane server.  Do
 > > people really want an email every time the wiki changes?!
 > 
 > I am inclined to ask the same question, although you are the
 > first to complain. We decided to try this a few months ago.
 > Right now the MathAction wiki is configured to send all changes
 > and additons as email to the axiom-devel email list.  Maybe that
 > was not a good idea. We have the option of only sending email
 > notices when new pages or comments are added, ignoring all edits.
 > 
 > Or we can disconnect the wiki from the email list again, i.e.
 > return to the way it was originally, a few months ago. The wiki
 > can still manage it's own subscriptions if people do want to
 > receive all notices.
 > 
 > > Isn't that what RSS is for?
 > > 
 > 
 > Yes indeed. I wonder how many people are familiar with using
 > RSS?
 > 
 > MathAction is based on Zwiki. There are some experimental RSS
 > feeds available at
 > 
 >   http://zwiki.org/RSSDiscussion
 > 
 > It would only take a few minutes to implement one of these.
 > Tim, maybe you could test the feeds at
 > 
 >   http://zwiki.org/RSS
 > 
 > and then let me know which one of these works for you.
 > 
 > Regards,
 > Bill Page.
 > 
 > 
 > 
 > _______________________________________________
 > Axiom-developer mailing list
 > list
 > http://lists.nongnu.org/mailman/listinfo/axiom-developer




\start
Date: Wed, 09 Feb 2005 05:25:46 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [#90 coredump with infinite stream] 


--removed:
-From TimDaly Tue Feb 8 05:44:17 -0600 2005
-From: Tim Daly
-Date: Tue, 08 Feb 2005 05:44:17 -0600
-Subject: additional information
-Message-ID: <20050208054417-0600@page.axiom-developer.org>
-

++added:

Tim

This is likely due to stack overflow (previously reported). The construct for smallerThan require Axiom to test EVERY element in the stream to see if s < n. There is no reason why Axiom should complain. Axiom is not designed to be able to figure out a general formula for the nth entry of the output stream for smallerThan whose signature is:
smallerThan: (Stream Integer, PositiveInteger)->Stream Integer

To do what you are trying to do, try this:

\begin{axiom}
primes:Stream Integer := generate(nextPrime, 2)
lessThan(stream, n) == filterWhile(s+->s<n, stream)
lessThan(primes, 5)
\end{axiom}

However, why should this give an error?
\begin{axiom}
entries primes
\end{axiom}

The expected result would be the first 11 (default stream length) entries.

--
forwarded from http://page.axiom-developer.org/zope/mathaction/90CoredumpWithInfiniteStream#msg20050209052545-0600@page.axiom-developer.org



\start
Date: Wed, 09 Feb 2005 07:04:51 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [#90 coredump with infinite stream] 

I understand that smallerThan in the original version does not work (I hoped it would return a stream as filterWhile does).  However, instead of coredumping silently (and taking the whole Axiom session with it), Axiom should say something like "stack limit reached in function suchandsuch" and return "failed" or something.
--
forwarded from http://page.axiom-developer.org/zope/mathaction/90CoredumpWithInfiniteStream#msg20050209070450-0600@page.axiom-developer.org



\start
Date: Wed, 09 Feb 2005 06:55:05 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [#90 coredump with infinite stream] 


++added:

\begin{verbatim}

++added:


??changed:
-
-This is likely due to stack overflow (previously reported). The construct for smallerThan require Axiom to test EVERY element in the stream to see if s < n. There is no reason why Axiom should complain. Axiom is not designed to be able to figure out a general formula for the nth entry of the output stream for smallerThan whose signature is:
-smallerThan: (Stream Integer, PositiveInteger)->Stream Integer
-
-To do what you are trying to do, try this:
\end{verbatim}

This is likely due to stack overflow (previously reported). The construct for smallerThan requires Axiom to test EVERY element in the stream to see if s < n. There is no reason why Axiom should complain. Axiom is not designed to be able to figure out a general formula for the nth entry of the output stream for smallerThan whose signature is:

\begin{verbatim}
smallerThan: (Stream Integer, PositiveInteger) -> Stream Integer
\end{verbatim}

To do what you are trying to do, do this:

??changed:
-primes:Stream Integer := generate(nextPrime, 2)
-lessThan(stream, n) == filterWhile(s+->s<n, stream)
-lessThan(primes, 5)
)clear all
p:Stream Integer := generate(nextPrime, 2)
filterWhile(s+->s<5, p)

??changed:
-entries primes
entries p

??changed:
-The expected result would be the first 11 (default stream length) entries.
The expected result would be the first 11 (default stream length) entries. And here is another problem:

\begin{axiom}
lessThan(n)==
  g(s)== (s < n)
  print(g(3))
  filterWhile(g, p)
lessThan(5)
\end{axiom}

The local function g is not compiled correctly because n is not passed to it. So it compiles as false for all input.  The same error occurs in the NAG version.
One  would then expect Axiom to go into an infinite loop if we use not(s$<$n). But Axiom is "smart enough" to know and creates the stream even though the answer is still wrong.

\begin{axiom}
lessTest(n)==
  g(s) == not(s < n)
  print(g 3)
  filterWhile(g, p)
lessTest(5)
\end{axiom}

\begin{axiom}
largerThan(st,n)==[s for s in st | not(s < n)]
largerThan(p,5)
\end{axiom}

This one below crashes, but not for the NAG version, which gives the correct answer.

\begin{axiom}
before(st, n)==filterWhile(s+-> s < n, st)
before(p,5)
\end{axiom}

And this also crashes (whereas it does NOT crash for NAG version, giving the correct answer).
\begin{axiom}
lessThan(n)==filterWhile(s+-> (s < n), p)
lessThan(5)
\end{axiom}

William

--
forwarded from http://page.axiom-developer.org/zope/mathaction/90CoredumpWithInfiniteStream#msg20050209065505-0600@page.axiom-developer.org



\start
Date: Wed, 09 Feb 2005 13:50:44 +0000
From: Martin Bravenboer
To: Bill Page
Subject: Re: [Stratego] New user introduction, a question about GraphXML2dot

Hi Bill,

First of all, sorry for not replying earlier. Some questions take some 
time ;) , which will become clear later.

> My interest in Stratego stems from the desire to find new high-
> level tools to help maintain and extend the Axiom algebra
> library. The initial goals are graphical visualization of the
> library structure, optimization of the system build process
> (which is complicated by cyclic dependencies (mutual recursion)
> between the modules), and possibly rewriting of selected modules
> from spad into Aldor.

Interesting!

> In some ways Aldor is similar to Haskell, therefore I am quite
> interested in how Stratego is being applied in that project.

What do you mean by 'that project'? The developers of Haskell compilers 
and interpreters (GHC, Hugs, Helium, EHC) are not using Stratego afaik.

> One of the things that lead me to Stratego happened to be a
> quick search for a simple tool to convert a large GraphXML file
> containing the Axiom algebra dependency graph into graphviz
> (dot) format, hence GraphXML2dot.

Are you sure that you are using GraphXML and not GraphML? GraphXML is 
not really in widespread use: it is even quite hard to find any 
documentation about it.

 > Of course since GraphXML2dot
> is one of the programs in the collection Stratego utilities,
> it turned out that this was not quite the "simple" tool that
> I was hoping for.

Indeed, it was. Graph-tools has been developed a few years ago when the 
first work on GraphXML was done, but GraphXML hasn't really been applied 
in the Stratego/XT project and the developers of graph-tools did not 
maintain the package anymore. In fact, graph-tools wasn't in usable 
state at all. For example, an installation of the strategoxt-utils was 
not even able to parse GraphXML.

I've updated the tool last night and it is now available in the latest 
unstable release (you also need a the latest unstable Stratego/XT for 
that: Stratego/XT 0.13 will not do).

http://catamaran.labs.cs.uu.nl/dist/stratego/strategoxt-utils-unstable-latest/
http://catamaran.labs.cs.uu.nl/dist/stratego/strategoxt-unstable-latest/

For an overview of all available distributions:
http://catamaran.labs.cs.uu.nl/dist/stratego/

The new tool is now called 'graphxml2dot' and implements the whole XML 
-> Dot pipeline, so it is very easy to invoke. You don't have to know 
about all the internal formats being used in Stratego/XT to use this 
tool. The tool is now also more XML compliant, since it uses an XML 
parser instead of a GraphXML syntax definition.

However, I have to warn you: it only implements a subset of GraphXML 
(basically just graphs, nodes and edges and some attributes) and 
therefore your input graph should not use the more fancy features of 
GraphXML. Fortunately, extending the implementation is very easy: the 
current conversion only takes about 100 lines of code. If you miss some 
feature, then I (or you self) should be able to add it very quickly.

I've also updates the GraphXML and graph-tools web pages:

    * http://www.strategoxt.org/Tools/GraphTools
    * http://www.program-transformation.org/Transform/GraphXML
      (there is now a direct link to a paper: all links where dead)

> So first, are such tutorials available? Could someone provide
> references?

Documentation is our weak spot. We are mostly working on academic papers 
and these are not really useful for more practical users. Therefore, we 
started working on a manual for using Stratego/XT in practice. It's 
still under heavy construction, but it is a start. For an overview of 
the available documentation see:

    * http://www.strategoxt.org/Stratego/StrategoDocumentation

> Second, I would be very interested in suggestions on how to go
> about using Stratego in a more relevant manner. For example,
> my understanding is that a necessary first step would be to
> formally define the syntax of the spad language and if the
> target is Aldor, then something similar is needed to generate
> Aldor code output. Any suggestions and references related to
> how to proceed with something like this would be very much
> appreciated.

You can use Stratego for transformation, compilation, analysis and much 
more (see 'applications' at the Stratego website for an overview). Of 
course I don't know the internal of your project, but indeed the usual 
starting place is to find or define a syntax for the language your using 
in SDF, the Syntax Definition Formalism. For large languages this can 
take quite some time, but fortunately SDF is such an attractive language 
for syntax definition that this time is well spend ;) .

An alternative is to use your existing tools. You probably already have 
a parser and the only requirement for using Stratego is that your 
programs are represented in the ATerm format. So, often the quickest way 
to start using Stratego in an existing project is to implement a 
converter that outputs an ATerm from your existing internal 
representation produced by the parser.

Feel free to ask more question about the options for using Stratego in 
your project. I will answer much quicker if you don't ask questions 
about tools that need to be fixed ;) .

Cheers,
-- 
Martin Bravenboer
---------------------------------------------------------------------
Center for Software Technology
Institute of Information and Computing Sciences
Utrecht University



\start
Date: Wed, 09 Feb 2005 10:16:31 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [AxiomInterface] 


??changed:
-[1/2, 3/4, 5/6]
[1/7, 3/4, 5/6]

--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomInterface#msg20050209101631-0600@page.axiom-developer.org



\start
Date: Wed, 9 Feb 2005 12:07:41 -0500
From: Jeff Muizelaar
To: list
Subject: [PATCH] remove k&r prototypes from Gfun.c


--i9LlY+UWpKt15+FH


--sdtB3X0nJg68CQEu

The attached patch does $subj.
I don't think there is any point in supporting compilers of that vintige
any more, and it removes clutter from the code.

-Jeff

--sdtB3X0nJg68CQEu

diff -ur axiom--main--1--patch-30/src/graph/Gdraws/Gfun.c.pamphlet working/src/graph/Gdraws/Gfun.c.pamphlet
--- axiom--main--1--patch-30/src/graph/Gdraws/Gfun.c.pamphlet	2005-02-01 12:52:15.000000000 -0500
+++ working/src/graph/Gdraws/Gfun.c.pamphlet	2005-02-01 16:02:07.000000000 -0500
@@ -69,13 +69,7 @@
  */
=20
 static void
-#ifndef _NO_PROTO
 filecopy(FILE * ifp, FILE * ofp)
-#else
-filecopy(ifp,ofp)
-FILE * ifp;
-FILE * ofp;
-#endif
 {
=20
   int c;
@@ -94,17 +88,10 @@
  */
=20
 int
-#ifndef _NO_PROTO
 PSCreateFile(
              int bWidth,            /* border width of picture frame */
              Window vw, Window tw,  /* viewWindow, and titleWindow */
              char *title)           /* title of picture to be drawn in tit=
le bar */
-#else
-PSCreateFile(bWidth,vw,tw,title)
-     int bWidth;
-     Window vw,tw;
-     char *title;
-#endif
 {
   FILE *ifp, *ofp, *fp;       /* input, output and temp file pointer */
   int i;                      /* index */
@@ -172,17 +159,10 @@
  */
=20
 int
-#ifndef _NO_PROTO
 Gdraws_drawFrame(
           int borderW,          /* border width */
           Window viewWindow, Window titleWindow,
           char *title)          /* title of picture */
-#else
-Gdraws_drawFrame(borderW,viewWindow,titleWindow,title)
-     int borderW;
-     Window viewWindow, titleWindow;
-     char *title;
-#endif
 {
   FILE *fp;
   XWindowAttributes vwInfo, twInfo;
@@ -220,15 +200,9 @@
 /* setDimension sets the dimension of the picture */
=20
 int
-#ifndef _NO_PROTO
 Gdraws_setDimension(
 		    Window viewWindow,=20
 		    Window titleWindow)
-#else
-Gdraws_setDimension(viewWindow,titleWindow)
-     Window viewWindow;
-     Window titleWindow;
-#endif
 {
   FILE *fp;
   XWindowAttributes vwInfo, twInfo;
@@ -281,21 +255,12 @@
  */
=20
 int
-#ifndef _NO_PROTO
 GDrawImageString(
                  GC gc,         /* graphics context */
                  Window wid,    /* window id */
                  int x, int y,
                  char *string,
                  int length, int dFlag)
-#else
-GDrawImageString(gc,wid,x,y,string,length,dFlag)
-     GC gc;         /* graphics context */
-     Window wid;    /* window id */
-     int x, y;
-     char *string;
-     int length,dFlag;
-#endif
 {
   int s;
=20
@@ -329,21 +294,12 @@
 /* Draws an arc; see XDrawArc */
=20
 int
-#ifndef _NO_PROTO
 GDrawArc(
          GC gc,                 /* graphics context */
          Window wid,            /* window id */
          int x, int y,
          unsigned int wdth, unsigned int hght,
          int ang1, int ang2, int dFlag)
-#else
-GDrawArc(gc,wid,x,y,wdth,hght,ang1,ang2,dFlag)
-     GC gc;                 /* graphics context */
-     Window wid;            /* window id */
-     int x,y;
-     unsigned int wdth,hght;
-     int ang1,ang2,dFlag;
-#endif
 {
   int s =3D 0;
=20
@@ -379,17 +335,10 @@
  */
=20
 int
-#ifndef _NO_PROTO
 GDrawLine(
           GC gc,                /* graphics context */
           Window wid,           /* window id */
           int x0, int y0, int x1, int y1, int dFlag)
-#else
-GDrawLine(gc,wid,x0,y0,x1,y1,dFlag)
-     GC gc;                /* graphics context */
-     Window wid;           /* window id */
-     int x0,y0,x1,y1,dFlag;
-#endif
 {
   int s =3D 0;
=20
@@ -430,20 +379,12 @@
  */
=20
 int
-#ifndef _NO_PROTO
 GDrawLines(
            GC gc,               /* graphics context */
            Window wid,          /* window id */
            XPoint * points,     /* points */
            int numberOfPoints, int mode, int dFlag)
                                 /* number of points, mode and display flag=
 */
-#else
-GDrawLines(gc,wid,points,numberOfPoints,mode,dFlag)
-     GC gc;               /* graphics context */
-     Window wid;          /* window id */
-     XPoint * points;     /* points */
-     int numberOfPoints,mode,dFlag; /* number of points, mode and display =
flag */
-#endif
 {
   int s =3D 0;
=20
@@ -488,17 +429,10 @@
  */
=20
 int
-#ifndef _NO_PROTO
 GDrawPoint(
            Window wid,          /* window id */
            GC gc,               /* graphics context */
            int x0, int y0, int dFlag)
-#else
-GDrawPoint(wid,gc,x0,y0,dFlag)
-     Window wid;          /* window id */
-     GC gc;               /* graphics context */
-     int x0,y0,dFlag;
-#endif
 {
   int s =3D 0;
=20
@@ -535,19 +469,11 @@
  */
=20
 int
-#ifndef _NO_PROTO
 GDrawRectangle(
                GC gc,
                Window windowId,
                short int x,short  int y,short  int width,short  int height,
                int dFlag)
-#else
-GDrawRectangle(gc,windowId,x,y,width,height,dFlag)
-     GC gc;
-     Window windowId;
-     short int x,y,width,height;
-     int dFlag;
-#endif
 {
   int s =3D 0;
=20
@@ -584,19 +510,11 @@
  */
=20
 int
-#ifndef _NO_PROTO
 GDraw3DButtonOut(
                  GC gc,
                  Window windowId,
                  short int x,short  int y,short  int width,short  int heig=
ht,
                  int dFlag)
-#else
-GDraw3DButtonOut(gc,windowId,x,y,width,height,dFlag)
-     GC gc;
-     Window windowId;
-     short int x,y,width,height;
-     int dFlag;
-#endif
 {
   /* draw regular rectangle */
=20
@@ -622,19 +540,11 @@
  */
=20
 int
-#ifndef _NO_PROTO
 GDraw3DButtonIn(
                 GC gc,
                 Window windowId,
                 short int x,short  int y,short  int width,short  int heigh=
t,
                 int dFlag)
-#else
-GDraw3DButtonIn(gc,windowId,x,y,width,height,dFlag)
-     GC gc;
-     Window windowId;
-     short int x,y,width,height;
-     int dFlag;
-#endif
 {
   /* draw regular rectangle */
=20
@@ -660,7 +570,6 @@
  */
=20
 int
-#ifndef _NO_PROTO
 GDrawPushButton(
                 Display * display,
                 GC gc1, GC gc2, GC gc3,
@@ -669,17 +578,6 @@
                 int isOn, char *text,
                 unsigned long buttonColor, unsigned long color,
                 int dFlag)
-#else
-GDrawPushButton(display,gc1,gc2,gc3,windowId,x,y,width,height,isOn,text,bu=
ttonColor,color,dFlag)
-     Display * display;
-     GC gc1,gc2,gc3;
-     Window windowId;
-     short int x,y,width,height;
-     int isOn;
-     char *text;
-     unsigned long buttonColor,color;
-     int dFlag;
-#endif
 {
   int len =3D strlen(text);
=20
@@ -708,21 +606,12 @@
  */
=20
 int
-#ifndef _NO_PROTO
 GDrawString(
             GC gc,              /* graphics context */
             Window wid,         /* window id */
             int x, int y,
             char *string,       /* string to be drawn */
             int length, int dFlag)
-#else
-GDrawString(gc,wid,x,y,string,length,dFlag)
-     GC gc;              /* graphics context */
-     Window wid;         /* window id */
-     int x, y;
-     char *string;       /* string to be drawn */
-     int length,dFlag;
-#endif
 {
   int s;
=20
@@ -760,21 +649,12 @@
  */
=20
 int
-#ifndef _NO_PROTO
 GFillArc(
          GC gc,                 /* graphics context */
          Window wid,            /* window id */
          int x, int y,
          unsigned int wdth, unsigned int hght,
          int ang1, int ang2, int dFlag)
-#else
-GFillArc(gc,wid,x,y,wdth,hght,ang1,ang2,dFlag)
-     GC gc;                 /* graphics context */
-     Window wid;            /* window id */
-     int x,y;
-     unsigned int wdth,hght;
-     int ang1, ang2, dFlag;
-#endif
 {
   int s =3D 0;
=20
@@ -812,11 +692,7 @@
  */
=20
 int
-#ifndef _NO_PROTO
 PSGlobalInit(void)
-#else
-PSGlobalInit()
-#endif
 {                               /* This needs to be called only once each
                                  * session. */
   char *tmp;
@@ -922,13 +798,7 @@
  */
=20
 int
-#ifndef _NO_PROTO
 PSInit(Window vw, Window tw)
-#else
-PSInit(vw,tw)
-     Window vw;=20
-     Window tw;
-#endif
 {
   if (!psInit) {
     /* must have PSGlobalInit() called before this */
@@ -968,19 +838,11 @@
  */
=20
 int
-#ifndef _NO_PROTO
 PSCreateContext(
                 GC gc,       /* graphics context */
                 char *C_gc,     /* GC name to be used as postscript variab=
le */
                 int lineWidth, int capStyle, int joinStyle,
                 float bg, float fg)
-#else
-PSCreateContext(gc,C_gc,lineWidth,capStyle,joinStyle,bg,fg)
-     GC gc;       /* graphics context */
-     char *C_gc;     /* GC name to be used as postscript variable */
-     int lineWidth,capStyle, joinStyle;
-     float bg,fg;
-#endif
 {
   FILE *fp;
   GCptr newGC, curGC;
@@ -1027,12 +889,7 @@
  */
=20
 char *
-#ifndef _NO_PROTO
 PSfindGC(GC gc)
-#else
-     PSfindGC(gc)
-     GC gc;
-#endif
 {
   GCptr curGC;
  =20
@@ -1053,17 +910,10 @@
  */
=20
 int
-#ifndef _NO_PROTO
 GSetForeground(
                GC gc,           /* graphics context */
                float color,     /* foreground color to be set */
                int dFlag)       /* display flag: PS, X,... */
-#else
-GSetForeground(gc,color,dFlag)
-     GC gc;           /* graphics context */
-     float color;     /* foreground color to be set */
-     int dFlag;       /* display flag: PS, X,... */
-#endif
 {
   int s =3D 0;
=20
@@ -1096,17 +946,10 @@
  */
=20
 int
-#ifndef _NO_PROTO
 GSetBackground(
                GC gc,           /* graphics context */
                float color,     /* background color to be set */
                int dFlag)       /* display flag: PS, X,... */
-#else
-GSetBackground(gc,color,dFlag)
-     GC gc;           /* graphics context */
-     float color;     /* background color to be set */
-     int dFlag;       /* display flag: PS, X,... */
-#endif
 {
   int s =3D 0;
=20
@@ -1141,17 +984,10 @@
  */
=20
 int
-#ifndef _NO_PROTO
 GSetLineAttributes(
                    GC gc,
                    int lineWidth, int lineStyle, int capStyle, int joinSty=
le,
                    int dFlag)
-#else
-GSetLineAttributes(gc,lineWidth,lineStyle,capStyle,joinStyle,dFlag)
-     GC gc;
-     int lineWidth,lineStyle,capStyle,joinStyle;
-     int dFlag;
-#endif
 {
   int s =3D 0;
  =20
@@ -1226,11 +1062,7 @@
  */
=20
 int
-#ifndef _NO_PROTO
 PSClose(void)
-#else
-PSClose()
-#endif
 {
   if (GChead !=3D NULL) {
=20
@@ -1255,14 +1087,7 @@
=20
=20
 int=20
-#ifdef _NO_PROTO
-centerX (viewGCx,theString,strlength,windowWidth)
-     GC viewGCx;
-     char *theString;
-     int strlength,windowWidth;
-#else
 centerX (GC viewGCx,char * theString,int strlength,int windowWidth)
-#endif
 {
   XFontStruct *fontStruct;
   GContext con;
@@ -1280,13 +1105,7 @@
=20
=20
 int=20
-#ifdef _NO_PROTO
-centerY (viewGCy,windowHeight)
-     GC viewGCy;
-     int windowHeight;
-#else
 centerY (GC viewGCy,int windowHeight)
-#endif
 {
=20
   XFontStruct *fontStruct;
@@ -1311,19 +1130,11 @@
  */
=20
 int
-#ifndef _NO_PROTO
 PSColorPolygon(
                float r, float g, float b,       /* red, green and blue col=
or
                                                  * components */
                XPoint * points,         /* vertices of polygon */
                int numberOfPoints)      /* number of points */
-#else
-PSColorPolygon(r,g,b,points,numberOfPoints)
-     float r,g,b;       /* red, green and blue color
-			 * components */
-     XPoint * points;         /* vertices of polygon */
-     int numberOfPoints;      /* number of points */
-#endif
 {
   int i =3D 0;
   FILE *fp;
@@ -1355,19 +1166,11 @@
  */
=20
 int
-#ifndef _NO_PROTO
 PSColorwOutline(
                 float r, float g, float b,      /* red, green and blue col=
or
                                                  * components */
                 XPoint * points,        /* vertices of polygon */
                 int numberOfPoints)     /* number of points */
-#else
-PSColorwOutline(r,g,b,points,numberOfPoints)
-     float r,g,b;      /* red, green and blue color
-			* components */
-     XPoint * points;        /* vertices of polygon */
-     int numberOfPoints;     /* number of points */
-#endif
 {
   int i =3D 0;
   FILE *fp;
@@ -1398,19 +1201,11 @@
  */
=20
 int
-#ifndef _NO_PROTO
 PSDrawColor(
             float r, float g, float b,  /* red, green and blue color
                                          * components */
             XPoint *points,             /* point list */
             int numberOfPoints)         /* vertex count and display flag (=
X, PS,...) */
-#else
-PSDrawColor(r,g,b,points,numberOfPoints)
-     float r, g, b;  /* red, green and blue color
-		      * components */
-     XPoint *points;             /* point list */
-     int numberOfPoints;         /* vertex count and display flag (X, PS,.=
=2E.) */
-#endif
 {
   int i =3D 0;
   FILE *fp;
@@ -1441,17 +1236,10 @@
  */
=20
 int
-#ifndef _NO_PROTO
 PSFillPolygon(
               GC gc,               /* graphics context */
               XPoint * points,      /* vertices of polygon */
               int numberOfPoints)   /* number of points */
-#else
-PSFillPolygon(gc,points,numberOfPoints)
-     GC gc;               /* graphics context */
-     XPoint * points;      /* vertices of polygon */
-     int numberOfPoints;   /* number of points */
-#endif
 {
   int i =3D 0;
   FILE *fp;
@@ -1481,19 +1269,11 @@
  */
=20
 int
-#ifndef _NO_PROTO
 PSFillwOutline(
                GC gc,           /* graphics context */
                XPoint * points, /* vertices of polygon */
                int numberOfPoints)
                                /* number of points */
-#else
-PSFillwOutline(gc,points,numberOfPoints)
-     GC gc;           /* graphics context */
-     XPoint * points; /* vertices of polygon */
-     int numberOfPoints;
-                               /* number of points */
-#endif
 {
   int i =3D 0;
   FILE *fp;
@@ -1518,36 +1298,20 @@
   return (fclose(fp));
 }
 static int=20
-#ifdef _NO_PROTO
-TrivEqual(s1,s2)
-     Window s1,s2;
-#else
 TrivEqual(Window s1,Window s2)
-#endif
 {
   return ( s1 =3D=3D s2);
 }
=20
 static int=20
-#ifdef _NO_PROTO
-TrivHash_code(s,size)
-     Window s;
-     int size;
-#else
 TrivHash_code(Window s,int size)
-#endif
 {
   return (s % size);
 }
=20
=20
 HashTable *
-#ifdef _NO_PROTO
-XCreateAssocTable(size)
-     int size;
-#else
 XCreateAssocTable(int size)
-#endif
 {
   HashTable * table;
   table =3D (HashTable *) malloc(sizeof(HashTable));
@@ -1556,41 +1320,19 @@
 }
=20
 void=20
-#ifdef _NO_PROTO
-XMakeAssoc(dsp,table,w,p)
-     Display * dsp;
-     HashTable *table;
-     Window w;
-     int * p;
-#else
 XMakeAssoc(Display * dsp, HashTable *table, Window w, int * p)
-#endif
 {
   hash_insert(table,(char *) p, (char *) w);
 }
=20
 int *
-#ifdef _NO_PROTO
-XLookUpAssoc(dsp,table,w)
-     Display * dsp;
-     HashTable *table;
-     Window w;
-#else
 XLookUpAssoc(Display * dsp, HashTable *table,Window w)
-#endif
 {
   return (int *) hash_find(table,(char *)w);
 }
=20
 void=20
-#ifdef _NO_PROTO
-XDeleteAssoc(dsp,table,w)
-     Display * dsp;
-     HashTable * table;=20
-     Window w;
-#else
 XDeleteAssoc(Display * dsp,HashTable * table, Window w)
-#endif
 {
   hash_delete(table,(char *) w);
 }

--sdtB3X0nJg68CQEu--

--i9LlY+UWpKt15+FH

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.5 (GNU/Linux)

iD8DBQFCCkNdU9pFgKMtQV0RAkgTAKConMWMdQr2GdFXS3trQAYv/NGrwwCfVTc1
SlghAdrVIhuiBa6erEvn6FQ=
=s8Ow
-----END PGP SIGNATURE-----

--i9LlY+UWpKt15+FH--



\start
Date: Wed, 09 Feb 2005 14:59:37 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [Axioms Community] 


??changed:
-Axiom Mailinglists and IRC Channel
-
-  Several ways to contact the community are available. There is an irc channel where developers can find other developers. It is:: 
Axiom Portal, E-mail lists and IRC Channel

  Several ways to contact the community are available.

The "Axiom Portal":http://page.axiom-developer.org/zope/Plone provides
a private online enviroment to which Axiom users can:

  * register and log-in

  * share files with other users

  * experiment with Axiom and Reduce online, either privately or share
    with other users

  * search, upload and download Axiom and Reduce bibliographies

  * view the calendar of events and submit new event notices

  * view and submit news items

  * subscribe to receive notices of new or changed pages

  * bookmark RSS news feeds on specific subjects.

There is an irc channel where developers can find other developers. It is:: 

??changed:
-  The mailinglists are:
- 
-  "axiom-math":http://mail.nongnu.org/mailman/listinfo/axiom-math ("archive":http://mail.nongnu.org/archive/html/axiom-math)
The mailinglists are:
 
"axiom-math":http://mail.nongnu.org/mailman/listinfo/axiom-math ("archive":http://mail.nongnu.org/archive/html/axiom-math)

??changed:
-  "axiom-mail":http://mail.nongnu.org/mailman/listinfo/axiom-mail ("archive":http://mail.nongnu.org/archive/html/axiom-mail)
"axiom-mail":http://mail.nongnu.org/mailman/listinfo/axiom-mail ("archive":http://mail.nongnu.org/archive/html/axiom-mail)

??changed:
-  "axiom-developer":http://mail.nongnu.org/mailman/listinfo/axiom-developer ("archive":http://mail.nongnu.org/archive/html/axiom-developer)
"axiom-developer":http://mail.nongnu.org/mailman/listinfo/axiom-developer ("archive":http://mail.nongnu.org/archive/html/axiom-developer)

??changed:
-  "axiom-legal":http://mail.nongnu.org/mailman/listinfo/axiom-legal ("archive":http://mail.nongnu.org/archive/html/axiom-legal)
"axiom-legal":http://mail.nongnu.org/mailman/listinfo/axiom-legal ("archive":http://mail.nongnu.org/archive/html/axiom-legal)

--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomsCommunity#msg20050209145937-0600@page.axiom-developer.org



\start
Date: Wed, 09 Feb 2005 18:23:36 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [Axioms Community] 


??changed:
-The "Axiom Portal":http://page.axiom-developer.org/zope/Plone provides
-a private online enviroment to which Axiom users can:
The "Axiom Portal":http://page.axiom-developer.org/zope/Plone is
a private online enviroment in which Axiom users can:

??changed:
-  * share files with other users
-
-  * experiment with Axiom and Reduce online, either privately or share
  * create a "home page" that identifies their interests

  * selectively share files with other users

  * "publish" documents to make them available to all users

  * comment on pages

  * experiment with Axiom and Reduce online, either privately or shared

--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomsCommunity#msg20050209182336-0600@page.axiom-developer.org



\start
Date: Thu, 10 Feb 2005 03:11:34 -0500
From: Bill Page
To: Bob McElrath
Subject: RE: latexwiki update

Bob,

I am sorry that I have been away on a "working vacation"
for the last 10 days and so did not have a chance to reply
sooner. I looked for latexwiki 0.38 on your web site tonight
but it seems that you have not yet posted this version.

You can pull my latest Axiom patches for latexwiki by

darcs pull http://page.axiom-developer.org/repository/latexwiki

as described here:

http://page.axiom-developer.org/repository.html

It is up to date and includes the tex line breaker code. The
script texbreaker.mak expects 'swig' to be installed, but all
it does is generate some wrapper files which I included in
the repository anyway, so I think you can just comment out
the call to swig if you don't have it.

I am currently setting up a new test zope instance at
axiom-developer.org based on the latest Python 2.4, Zope 2.7.4,
Plone 2.0.5 and ZWiki-0.38. Let me know when I can get your
new LatexWiki-0.38. If you haven't had time to integrate the
Axiom and Reduce stuff in a more intellegent manner, then
I can just re-patch 0.38 again to call Axiom and Reduce as
in the the previous versions.

Where can I find 'dvipng'? It does not seem to be part of the
tetex distribution that we have at axiom-developer.

Regards,
Bill Page.

> -----Original Message-----
> From: Bob McElrath [mailto:Bob McElrath]
> Sent: Tuesday, February 01, 2005 3:02 PM
> To: Bill Page
> Cc: list
> Subject: latexwiki update
> 
> 
> Hi Bill, 
> 
> I have just finished a rather extensive rewrite of latexwiki, and want
> to examine your patches again that add axiom and reduce functionality,
> and see if I can integrate that quickly.
> 
> Where is your code located again, and is it up-to-date?
> 
> ZWiki 0.38 was released today, and I want to release latexwiki 0.38
> tonight too.
> 
> Note: this rewrite does NOT include my new STX code, but improves
> rendering speed (using dvipng -- 100x faster on large pages), allows
> font-size scaling, and fixes a few bugs...
> 
> --
> Cheers,
> Bob McElrath [Univ. of California at Davis, Department of Physics]
> 
>     "Faith: Belief without evidence in what is told by one who speaks 
>     without knowledge, of things without parallel." -- Ambrose Bierce
> 
> 



\start
Date: Thu, 10 Feb 2005 10:34:53 +0200
From: Vladimir Bondarenko
To: list
Subject: ALL AXIOM bugs and non-trivial behaviors will be catalogized

Good Day,

Timothy Daly writes on Monday, January 31, 2005, 9:59:09 AM about
Vladimir Bondarenko's message titled 'AXIOM BUG: normalize(acos(2))
:: Complex Float:

ThD> Please file these on IssueTracker.
ThD> They are issues, which need to be tracked.

100% agree.

ThD> If they turn out to be bugs they won't get lost.
ThD> If not, the behavior will still be explained and added to the book.

I fully support your idea!

By several reasons, both Cyber Tester and I have a keen, long-term
interest in further AXIOM progress, and I give you my personal guarantee
that NOT a single bug or non-trivial, for a novice user, behaviors
reported by anyone in AXIOM-Developers correspondence or even reported
elsewhere on the Internet will be lost.

During the next 12 months to come, such stuff will be collected
together, in this or that form.

Given that I keep working painstakingly on several heterogeneous
projects, for me, immediate uploading all the AXIOM bug-related stuff
identified by the VM machine and me manually, mean a very time-consuming
task of uploading many hundreds links, part of them might be 'linearly
dependent' and as such would clog the IssueTracker, and could hamper
its using by the developers who want to fix these bugs.

Those few AXIOM bug manifestations you have already seen from my
messages, constitute just the tip of the tip of the iceberg.

This is why possibly I should send the Cyber Tester's long list of
AXIOM bug manifestations to AXIOM Developers mailing list for further
clarifications and discussion, for refining, for drilling down to the
very essence of the bug. And after such a preprocessing, catalogize
the quintessence.

This day, both the VM machine and me are tiros in AXIOM and without
a piece of massive help on part of the AXIOM connoisseurs we cannot
produce some really useful stuff which could push AXIOM (hopefully,
far) beyond the limits of modern computer algebra systems.

Thank you and all the AXIOM Developers for your patience and help.


Best wishes,

Vladimir Bondarenko

GEMM architect

http://www.cybertester.com/
http://maple.bug-list.org/
http://www.CAS-testing.org/




\start
Date: Thu, 10 Feb 2005 03:37:22 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [#93 Confusing amount of information on Axiom (beginner's issue)] (new) 

Hi,

As a user new to axiom I find the many different pages on the net dealing with axiom difficult: It takes a lot of surfing to learn which page is relevant.  Right now I saw

* http://page.axiom-developer.org/ (with quite unhelpful descriptions)
* http://page.axiom-developer.org/zope/Plone (seems mostly empty?)
* http://page.axiom-developer.org/zope/mathaction/FrontPage (this seems to be the best for getting started)

None of these pages is easily found by google (try "axiom cas"), they all seem somewhat related, but even after a few days it's not clear to me how they differ and what they really are about.

There should be *one* page containing the relevant introductory material (motivation, description, screenshots, tutorial, download) from a user's perspective (try "maxima cas" in google).  This also helps developers since attracting users is always good in an open source project.

A short term fix would be to put links to http://page.axiom-developer.org/zope/mathaction/FrontPage on the very top of every page and mark them as "for beginners".
--
forwarded from http://page.axiom-developer.org/zope/mathaction/93ConfusingAmountOfInformationOnAxiomBeginnersIssue#msg20050210033721-0600@page.axiom-developer.org



\start
Date: Thu, 10 Feb 2005 05:58:04 -0500
From: Bill Page
To: Bob McElrath
Subject: RE: zwiki/plone skins

On Tuesday, February 01, 2005 5:19 PM Bob McElrath wrote: 
> 
> Simon Michael set up a zwiki/plone skin switcher on
> ubuntulinux.org. (create an account and look in the
> preferences)
> 
>     http://zwiki.org/HowToUseTheStandardSkinInPlone
>
> I know you were interested in this Bill...

Oh yes indeed. That's pretty cool! The best of both
worlds ...

I have a new test website at:

  http://test.axiom-developer.org/mathaction

Switching from Wiki to Portal mode seems to work well.

Over the next few days I plan to migrate some of the old
test pages and some existing content from MathAction to
the new test site to see how well it works. Feel free to
play with this if you are so inclined.

Regards,
Bill Page.



\start
Date: Thu, 10 Feb 2005 05:37:51 -0600
From: MathAction (kratt6)
To: MathAction
Subject: [#93 Confusing amount of information on Axiom (beginner's issue)] 


--removed:
-anonymous writes:
- > Hi,
- > 
- > As a user new to axiom 
-

--removed:
-
- > I find the many different pages on the net dealing with axiom difficult: It
- > takes a lot of surfing to learn which page is relevant.  Right now I saw
- > 
- > * http://page.axiom-developer.org/ (with quite unhelpful descriptions)
- > * http://page.axiom-developer.org/zope/Plone (seems mostly empty?)
- > * http://page.axiom-developer.org/zope/mathaction/FrontPage (this seems to be the best for getting started)
- > 
- > None of these pages is easily found by google (try "axiom cas"), they all
- > seem somewhat related, but even after a few days it's not clear to me how
- > they differ and what they really are about.

??changed:
- 
- > There should be *one* page containing the relevant introductory material
- > (motivation, description, screenshots, tutorial, download) from a user's
- > perspective (try "maxima cas" in google).  This also helps developers since
- > attracting users is always good in an open source project.
-
-I agree, and I am promoting MathAction for this purpose. However, especially
-Bill Page thinks that Plone would be better suited in the long run. Time will
-tell.
I agree that there should be only one page, and I am promoting MathAction for 
this purpose. However, especially Bill Page thinks that Plone would be better 
suited in the long run. Time will tell.

--removed:
-

--
forwarded from http://page.axiom-developer.org/zope/mathaction/93ConfusingAmountOfInformationOnAxiomBeginnersIssue#msg20050210053751-0600@page.axiom-developer.org



\start
Date: Thu, 10 Feb 2005 05:36:35 -0600
From: MathAction (Martin Rubey)
To: MathAction
Subject: [#93 Confusing amount of information on Axiom (beginner's issue)]

anonymous writes:
 > Hi,
 > 
 > As a user new to axiom 

Welcome!

 > I find the many different pages on the net dealing with axiom difficult: It
 > takes a lot of surfing to learn which page is relevant.  Right now I saw
 > 
 > * http://page.axiom-developer.org/ (with quite unhelpful descriptions)
 > * http://page.axiom-developer.org/zope/Plone (seems mostly empty?)
 > * http://page.axiom-developer.org/zope/mathaction/FrontPage (this seems to be the best for getting started)
 > 
 > None of these pages is easily found by google (try "axiom cas"), they all
 > seem somewhat related, but even after a few days it's not clear to me how
 > they differ and what they really are about.

This is quite strange. MathAction is the seventh hit on google for just
"axiom", and "axiom computer algebra system" finds axiom on savannah as first
hit.

 
 > There should be *one* page containing the relevant introductory material
 > (motivation, description, screenshots, tutorial, download) from a user's
 > perspective (try "maxima cas" in google).  This also helps developers since
 > attracting users is always good in an open source project.

I agree, and I am promoting MathAction for this purpose. However, especially
Bill Page thinks that Plone would be better suited in the long run. Time will
tell.

Martin

PS: when using MathAction, PLEASE identify yourself. THis has to be done only
once, the rest is cookiemagic.

--
forwarded from http://page.axiom-developer.org/zope/mathaction/93ConfusingAmountOfInformationOnAxiomBeginnersIssue#msg16907.18040.367490.580826@seam101.local



\start
Date: Thu, 10 Feb 2005 05:44:24 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [#93 Confusing amount of information on Axiom	(beginner's issue)] axiom cas

Using a common abbreviation like 'cas' in a google search is probably not a good idea. Unfortunately 'axiom' also is a fairly common word (much more common than 'maxima') however the mathaction web site (definitely the best place to get started) was number 7 on the list when I tried the search and the page description seemed pretty clear to me.

If you are wondering what http://page.axiom-developer.org/zope/Plone is about, I recently added some explanation at AxiomsCommunity.

I will see what I can do to add a few more "helpful" descriptions to http://page.axiom-developer.org in the next few days.

Thanks for the comments.
--
forwarded from http://page.axiom-developer.org/zope/mathaction/93ConfusingAmountOfInformationOnAxiomBeginnersIssue#msg20050210054423-0600@page.axiom-developer.org



\start
Date: Thu, 10 Feb 2005 05:47:18 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [#93 Confusing amount of information on Axiom (beginner's issue)] 


??changed:
-PS: when using MathAction, PLEASE identify yourself. THis has to be done only
PS: when using MathAction, PLEASE identify yourself. This has to be done only

??changed:
-From unknown Thu Feb 10 05:44:23 -0600 2005
-From: 
>From billpage Thu Feb 10 05:44:23 -0600 2005
From: Bill Page

--
forwarded from http://page.axiom-developer.org/zope/mathaction/93ConfusingAmountOfInformationOnAxiomBeginnersIssue#msg20050210054718-0600@page.axiom-developer.org



\start
Date: Thu, 10 Feb 2005 06:12:05 -0600
From: MathAction (kratt6)
To: MathAction
Subject: [#37 )co aldor file does not work] Final bits and pieces

Dear Tim! 

I saw that you integrated Peters patches for Aldor support from within
Axiom. However, some issues remain:

* You forgot to integrate his patch for foam_l.lisp.pamphlet which Peter sent
  to axiom-developer. Hence, calling a function compiled with Aldor twice in
  Axiom fails.

* You did not rename the files in
  axiom--main--1--patch-30/lsp/ccl/src/axbase/compiler/lib/ 
  to have the pamphlet extension. Also, they say 

  \usepackage{../../../../../src/scripts/tex/axiom}

  but should say

  \usepackage{../../../../../../src/scripts/tex/axiom}

  (it would be even better to say just \usepackage{axiom} and let configure set
  the TEXINPUTS variable correspondingly, I guess.)

  among these files, runtime.lsp and axextend.lsp should be compiled and

* when axiom is installed, be copied into the directory

  ~/axiom/mnt/linux/compiler/lib

  Also, 

  ~/axiom/mnt/linux/compiler/bin

  should contain a link to the aldor compiler. The best thing is probably to
  include the file axiomxl as follows:

#!/bin/sh
#
# A script to ease the pain of migration.
echo "           ************************************************"
echo "           *** axiomxl is obsolete: use 'aldor' instead ***"
echo "           ************************************************"
echo ""
aldor $*

  Finally, the axiom.as file is missing from the distribution and should be
  copied to an appropriate place when Axiom gets installed. Don't know where
  this would be, however. It seems that aldor expects it in its include
  directory...

Martin


--
forwarded from http://page.axiom-developer.org/zope/mathaction/37CoAldorFileDoesNotWork#msg20050210061204-0600@page.axiom-developer.org



\start
Date: Thu, 10 Feb 2005 08:10:57 -0600
From: MathAction (anonyme)
To: MathAction
Subject: [#95 TeX output misses parenthesis in FACTORED] (nouveau) 

Note the missing parenthesis in TeX output:

\begin{axiom}
  )set output tex on
  -(x^2+1)::Factored POLY INT
\end{axiom}
--
forwarded from http://page.axiom-developer.org/zope/mathaction/95TeXOutputMissesParenthesisInFACTORED#msg20050210081055-0600@page.axiom-developer.org



\start
Date: Thu, 10 Feb 2005 08:10:48 -0600
From: MathAction (anonyme)
To: MathAction
Subject: [#94 TeX output misses parenthesis in FACTORED] (nouveau) 

Note the missing parenthesis in TeX output:

\begin{axiom}
  )set output tex on
  -(x^2+1)::Factored POLY INT
\end{axiom}
--
forwarded from http://page.axiom-developer.org/zope/mathaction/94TeXOutputMissesParenthesisInFACTORED#msg20050210081042-0600@page.axiom-developer.org



\start
Date: Thu, 10 Feb 2005 08:13:19 -0600
From: MathAction (anonyme)
To: MathAction
Subject: [#94 TeX output misses parenthesis in FACTORED] same as #95

Status: open => closed 

--
forwarded from http://page.axiom-developer.org/zope/mathaction/94TeXOutputMissesParenthesisInFACTORED#msg20050210081319-0600@page.axiom-developer.org



\start
Date: Thu, 10 Feb 2005 08:16:49 -0600
From: MathAction (anonyme)
To: MathAction
Subject: [#95 TeX output misses parenthesis in FACTORED] 


??changed:
-  )set output tex on
-  -(x^2+1)::Factored POLY INT
)set output algebra on
factor(-x^2-1)

--
forwarded from http://page.axiom-developer.org/zope/mathaction/95TeXOutputMissesParenthesisInFACTORED#msg20050210081649-0600@page.axiom-developer.org



\start
Date: Thu, 10 Feb 2005 08:36:00 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [#95 TeX output misses parenthesis in FACTORED] 

The result of the commands::

  )set output algebra on
  factor(-x^2-1)

is::

              2
     (1)  - (x  + 1)
  $$
  -{{x \sp 2}+1}
  \leqno(1)
  $$

        Type: Factored Polynomial Integer

So, yes you are correct that MathAction is not presenting the 'algebra'
output correctly. The TeX output however is missing parenthesis. It
should be

\begin{equation}
-(x^2+1)
\end{equation}
--
forwarded from http://page.axiom-developer.org/zope/mathaction/95TeXOutputMissesParenthesisInFACTORED#msg20050210083555-0600@page.axiom-developer.org



\start
Date: Thu, 10 Feb 2005 08:17:21 -0600
From: MathAction (anonyme)
To: MathAction
Subject: [#95 TeX output misses parenthesis in FACTORED] 

the missing square is a MathAction bug, it seems...
--
forwarded from http://page.axiom-developer.org/zope/mathaction/95TeXOutputMissesParenthesisInFACTORED#msg20050210081721-0600@page.axiom-developer.org



\start
Date: Thu, 10 Feb 2005 08:53:24 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [#95 TeX output misses parenthesis in FACTORED] 


??changed:
-is::
-
is:<pre>

??changed:
-     (1)  - (x  + 1)
-  $$
  (1)     - (x  + 1)

  \$\$

??changed:
-  $$
  \$\$

++added:
</pre>

--
forwarded from http://page.axiom-developer.org/zope/mathaction/95TeXOutputMissesParenthesisInFACTORED#msg20050210085324-0600@page.axiom-developer.org



\start
Date: Thu, 10 Feb 2005 10:00:34 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [AxiomInterface2] test

\begin{axiom}
2^100
\end{axiom}

--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomInterface2#msg20050210100033-0600@page.axiom-developer.org



\start
Date: Thu, 10 Feb 2005 10:02:06 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [AxiomInterface2] test

\begin{axiom}
integrate(x^2,x=0..1)
\end{axiom}

--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomInterface2#msg20050210100205-0600@page.axiom-developer.org



\start
Date: Thu, 10 Feb 2005 09:56:28 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [AxiomInterface] test

\begin{axiom}
[1,2,3,4]
\end{axiom}

--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomInterface#msg20050210095615-0600@page.axiom-developer.org



\start
Date: Thu, 10 Feb 2005 10:54:11 -0500
From: Bill Page
To: William Sit
Subject: RE: mathaction security

On Wednesday, February 09, 2005 4:33 AM William Sit wrote:
> 
> I do not mean to exclude anyone. However, I do not want to 
> plant any idea into someone's head outside the group that
> the site is not secure, if indeed it is not.

There are several ways in which the current axiom-developer.org
site is not "secure" - some of these ways are by design (because
it is intended to be an open interactive system) and some are
due to financial and resource constraints. I think that the
current situation amounts to an "acceptible risk", in that
sense. In my opinion in general, trying to control knowledge
is not the right way to manage risk. By now there are already
many thousands of people out there who could inflict damage
on this system if they wanted too. But I think that for the
forseeable future we can continue to promote an environment
where no one wants to do this. Perhaps I am naive?

> Also, this is not related to Axiom.

You are right. But I think most Axiom developers do care
about how the project is managed and the tools that we
have available to help.

> > There are however several aspects of the design of
> > MathAction that helps to protect against malicious use.
> > One of these things is that no one (except the
> > administrator - me) can actually delete pages and a
> > complete history of all changes (diffs) is maintained
> > by the system. If necessary it is possible to "undo"
> > all the changes that someone might make to a page.
> 
> That's good (that only you can delete pages). However, it
> is still a lot of work to reconstruct pages from diffs.

Actually Zope makes reconstructing pages VERY EASY. In the
Zope management interface there is an 'Undo' option for
each page. If you click 'Undo' you are presented with a
list of changes and checkboxes to indicate which changes
you want to reverse. Then all one needs to do is click
'Undo Selected Changes' and presto, the page is back to
the way it was.

> 
> > > Do we have an incremental backup of the site?
> > 
> > Backup is something that we need to think more about. The
> > short answer is "no".
> > 
> ... 
> Do you mean the backup is just storing another copy on the 
> server?

Yes.

> Is it not possible to zip the entire site and download it off
> the server?

Yes. Right now the tar gzip'd contents of the MathAction site
(not including the programs) is about 260 Mb. -a large download
over the Internet but not unmanagable. The problem is only that
we do not have another machine dedicated for the purpose and
we do not have any regular (automatic) procedures in place to
do it.

> 
> > In general as we depend on more this site, I agree that we
> > need to spend more effort on it - including more money for
> > a faster (dedicated?) server and associated backup services
> > etc. But money is one thing that the Axiom Foundation has
> > not yet succeeded in attracking.
> 
> What would be an estimate of the cost involved? I would be 
> willing to share some of the cost.

I think Tim is paying somewhere in the neighborhood of $80
per month of the current shared virtual server at RoseHosting.
I expect that for about $20 more, RoseHosting could probably
provide a reasonable regular backup service. But someone (Tim?)
will have to make inquirys about this.

> Like Tim, I do not support the idea of compensating open source
> programmers (not that they do not deserve monetary rewards, 
> but that they deserve far more than contributions to Axiom
> Foundation can pay them, and administration would be quite
> difficult and a diversion of the time for the awards committee),
> and for some other different reasons, I have not contributed
> to the Axiom Foundation.

One of the goals of the Axiom Foundation was also to support
the maintenance and operation of the axiom-developer web site.
The concept of a "bounty" for programmers just seemed like
a "sexy" idea that is working for some other open source
projects. But, sadly even though the access rate to the
MathAction website is now more than 2,000 users per month
and the Windows version of Axiom has been downloaded many
more thousands of times, we still do not seem to be able
to attract donations. The total collected so far is only
about $450.

> > ... 
> > > However, it may be better to just add this feature
> > > "quietly."
> > 
> > I don't see any way to "add" (i.e. actually take away)
> > features "quietly". Why do you feel there is any need to
> > do it "quietly"?
> 
> By "quietly" I simply mean that the administrator (you) put 
> up a login button next to the edit button. I do not see any
> need to have this discussed openly,just like you designed
> the layout for MathAction without any discussion, and you
> did a fantastic job.

But then there were no users of the site, now there are
thousands of accesses per day. The original design was easy -
although at various times I did try to discuss it openly on
the Axiom Developer email list. (See email archives.)

> But if you feel strongly that requiring a login is taking
> away this "open" feature of Wiki, I can understand that. I 
> like the open feature too, but I do not think requiring a
> login diminishes that openness that much. It can be made
> much like ftp anonymous login: use the email address as
> password.

I suppose ... but already I am involved in so many different
web sites that require login that I am not really able to
manage different user ids, passwords etc. I do end up using
the same id in most cases, so in the end it is just a hassle
and still not really secure. I expect many people are in the
same situation.

Anyway, thanks to some new innovations of the people who
developed the ZWiki program on which MathAction is based,
we seem to have a new option to consider. It is now possible
to implement a mixed Wiki/Portal system that provides an
easily controllable range of user authentication and open
access. I have a test version of this system installed at

  http://test.axiom-developer.org/mathaction

If you have some time and a machine that reliably accessed
the Internet, I would be very interested in your opinions
about this new approach.

> 
> > Pity. I think your input into MathAction would be very
> > valuable.
> 
> Thanks. When I get the problem fixed, I'll certainly 
> participate more on MathAction.
> 

Great.

Regards,
Bill Page.



\start
Date: Thu, 10 Feb 2005 10:06:32 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [AxiomInterface] test

\begin{axiom}
2**100
\end{axiom}

--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomInterface#msg20050210100628-0600@page.axiom-developer.org



\start
Date: Thu, 10 Feb 2005 09:57:22 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [AxiomInterface] test

\begin{axiom}
integrate(sin(x),x)
\end{axiom}

--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomInterface#msg20050210095719-0600@page.axiom-developer.org



\start
Date: Thu, 10 Feb 2005 10:52:54 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [#96 problem with "no text] 


??changed:
-
This happens very often. Someone new user always enters an axiom commmad
in a comment with no preceeding text. Then a bug in MathAction causes the
command to not be recognized as a command.

--
forwarded from http://page.axiom-developer.org/zope/mathaction/96ProblemWithNoText#msg20050210105254-0600@page.axiom-developer.org



\start
Date: Thu, 10 Feb 2005 10:52:54 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [#96 no text before Axiom command in comment]	(renamed)

This page was renamed from #96 problem with "no text to #96 no text before Axiom command in comment.

--
forwarded from http://page.axiom-developer.org/zope/mathaction/96NoTextBeforeAxiomCommandInComment#msg20050210105254-0600@page.axiom-developer.org



\start
Date: Thu, 10 Feb 2005 09:02:35 -0800 (PST)
From: Cliff Yapp
To: list
Subject: Style of Mathaction webpages

First off, I just want to say this is idle talk on my part and I am
deeply impressed with the work that has been done on making Axiom
usable via the web.  These are just speculative thoughts with no
knowledge of the power or limitations of the tools being used.

The style of the webpages currently is very basic, which is good for
less capable browsers but has (IMHO) a sort of "dated" feel to it. 
There was at some point in the past a different style I saw, but it has
been admittedly too long since I followed this in detail.

What I'm wondering is, with most people using "modern" browsers
nowadays, would it be possible to have the webpages use a "math
notebook" like style?  (Using css, xhtml, etc.)  What I'm thinking is
that in essence people could create a Mathaction page, work in an
environment like Emacs or TeXmacs (insofar as web page limitations
allow), create a printable "math worksheet", and then be able to save a
local copy which could be reloaded to Mathaction at some point in the
future (should the one on the server be erased for whatever reason.) 
Essentially, it would be the next logical step from the current
capabilities - have not just a place to do calculations but be able to
generate a presentable, printable math document for inclusion in
reports, homework, whatever.  (Again, within the limits of the web.)

Is that in line with the goals of Mathaction?  I guess what I described
is more of a "CAS web GUI" than a collaborative web site, so it might
not be of interest, but I thought I'd just throw it out there and see
what the real gurus thought.

CY


		
__________________________________ 
Do you Yahoo!? 
Yahoo! Mail - 250MB free storage. Do more. Manage less. 
http://info.mail.yahoo.com/mail_250



\start
Date: Thu, 10 Feb 2005 10:50:54 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [AxiomInterface] problem with "no text" before	command

This happens very often. Someone new user always enters an axiom commmad
with no preceeding text. Then a bug in MathAction causes the command to
not be recognized as a command.
--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomInterface#msg20050210105054-0600@page.axiom-developer.org



\start
Date: Thu, 10 Feb 2005 10:47:51 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [AxiomInterface] 


++added:
Each command

++added:
must be

++added:
proceeded by some text

--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomInterface#msg20050210104751-0600@page.axiom-developer.org



\start
Date: Thu, 10 Feb 2005 10:53:15 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [#96 no text before Axiom command in comment]	property change

Category: Axiom Compiler => MathAction 
Severity: normal => serious 

--
forwarded from http://page.axiom-developer.org/zope/mathaction/96NoTextBeforeAxiomCommandInComment#msg20050210105315-0600@page.axiom-developer.org



\start
Date: Thu, 10 Feb 2005 08:47:40 -0800 (PST)
From: Cliff Yapp
To: list
Subject: Axiom Mathaction output emails

This is just really a minor nitpick, but is there some way to prevent
so many emails with "minor" changes from being generated for
Mathaction?  I like getting the discussions forwarded to the list, but
it's not very convenient to get an email every time a minor change like
THe -> The is made, or an example is tried by someone to see how the
equation input works.  So I have two questions/suggestions, one
possibly impractical and one possibly less so:

a)  Could the email output be changed for Mathaction so that, instead
of email after email, there is one "digest" email that is sent out each
day that contains all the "minor" changes, and have more substantial
changes be sent as individual emails?  That way, we can still see all
the changes but the "minor" ones are easier to ignore if we don't need
to check them out.  I know the definition of "minor" is not simple and
maybe not even possible, but perhaps some sort of workable definition
could be found?

b)  Can there be a "scratchpad" area where people can input test
expressions without those equations being sent to the list, except
perhaps again as a "digest" email?  That way, we could see what
equations people are trying, what mistakes are being made, but not have
them mixed in with normal developer traffic.

Sorry if this is a non-issue, or impractical.  Just thought I'd see if
anyone else has had similar thoughts.

CY


		
__________________________________ 
Do you Yahoo!? 
Read only the mail you want - Yahoo! Mail SpamGuard. 
http://promotions.yahoo.com/new_mail 



\start
Date: Thu, 10 Feb 2005 13:57:07 -0500
From: Bill Page
To: Cliff Yapp
Subject: RE: Axiom Mathaction output emails

On Thursday, February 10, 2005 11:48 AM C Y wrote:

> ... 
> a)  Could the email output be changed for Mathaction so that,
> instead of email after email, there is one "digest" email that
> is sent out each day that contains all the "minor" changes, and
> have more substantial changes be sent as individual emails?
> That way, we can still see all the changes but the "minor" ones
> are easier to ignore if we don't need to check them out.  I know
> the definition of "minor" is not simple and maybe not even
> possible, but perhaps some sort of workable definition could
> be found?

As you say, I don't know how to separate minor from more
substantial changes and right now we do not have a separate
email list just for MathAction notices (but we could). However
it is possible to choose to receive a once-a-day "digest" from
the axiom-developer email list. Click the link:

http://lists.nongnu.org/mailman/options/axiom-developer

You must give you email address and the password that you
choose when you first subscribed to the axiom-developer email
list. Click 'Log in". Then you can change your settings by
"Set Digest Mode - On" and then finally "Submit my changes".

> 
> b)  Can there be a "scratchpad" area where people can input
> test expressions without those equations being sent to the
> list, except perhaps again as a "digest" email?  That way,
> we could see what equations people are trying, what mistakes
> are being made, but not have them mixed in with normal developer
> traffic.
>

I have set the mailout_policy property to None for the page

http://page.axiom-developer.org/zope/mathaction/SandBox

I think that this will prevent all edits and comments to this
page from generating email notices. If this works (the ZWiki
documentation is a little unclear), then we can point first-time
users who want to experiment to this page.

Thanks for the questions.

Regards,
Bill Page.



\start
Date: Thu, 10 Feb 2005 21:35:30 +0200
From: Vladimir Bondarenko
To: list
Subject: [Q] Function for testing for a part of the output?

Good Day,

Say, I have  D(sin(z)^2, z) and the output is  2cos(z)sin(z)

What is the easiest way to see, if the output has sin(z) ?
Say, something like

-> present?(sin(z), D(sin(z)^2, z))
true


Thank you for your help in advance.


Best wishes,

Vladimir Bondarenko




\start
Date: Thu, 10 Feb 2005 15:09:14 -0500
From: Bill Page
To: Vladimir Bondarenko
Subject: RE: [Q] Function for testing for a part of the output?

On Thursday,  February 10, 2005 2:36 PM Vladimir Bondarenko asked:
> 
> Say, I have  D(sin(z)^2, z) and the output is  2cos(z)sin(z)
> 
> What is the easiest way to see, if the output has sin(z) ?
> Say, something like
> 
> -> present?(sin(z), D(sin(z)^2, z))
> true
>

How about:

   member?(cos(z),kernels(D(sin(z)^2,z)))

Regards,
Bill Page.



\start
Date: Thu, 10 Feb 2005 13:58:22 -0800 (PST)
From: Vladimir Bondarenko
To: Bill Page
Subject: Re[2]: [Q] Function for testing for a part of the output?

Good Day,
 
William Page writes on Thursday, February 10, 2005, 10:09:14 PM:
 
PB> How about:
PB>    member?(cos(z),kernels(D(sin(z)^2,z)))

Much thanks! Especially, for your speedy answer, bis dat qui
cito dat.
 
Please help also about the following where I have tried several
variations but without result

-> member?(integrate,kernels(integrate(erf(z)*sin(z)^2,z)))
 
   false

 
while I'd like to have a test1 working like this

 
-> test1(integrate, integrate(erf(z)*sin(z)^2,z))
 
  true  -- Currently, AXIOM cannot get this integral and
         -- returns it unevaluated

and

-> test2(%%, integrate(1/(a+z^5), z))
   true  -- Currently, AXIOM returns the terms like  %%ID1

Let me thank you cordially for your valuable help in advance .

 
Best wishes,
 
Vladimir Bondarenko



		
---------------------------------
Do you Yahoo!?
 Yahoo! Search presents - Jib Jab's 'Second Term'
--0-441081298-1108072702=:39834

<DIV>
<DIV>Good Day,</DIV>
<DIV>&nbsp;</DIV>
<DIV>William Page&nbsp;writes on Thursday, February 10, 2005, 10:09:14 PM:</DIV>
<DIV>&nbsp;</DIV>
<DIV>PB&gt; How about:</DIV>
<DIV>PB&gt;&nbsp;&nbsp;&nbsp; member?(cos(z),kernels(D(sin(z)^2,z)))</DIV>
<DIV><BR>Much thanks! Especially, for your speedy answer, bis dat qui<BR>cito dat.</DIV>
<DIV>&nbsp;</DIV>
<DIV>Please help also about the following where I have tried several<BR>variations but without result</DIV>
<DIV><BR>-&gt; member?(integrate,kernels(integrate(erf(z)*sin(z)^2,z)))</DIV>
<DIV>&nbsp;</DIV>
<DIV>&nbsp;&nbsp; false</DIV>
<DIV><BR>&nbsp;</DIV>
<DIV>while I'd like to have a test1 working like this</DIV>
<DIV><BR>&nbsp;</DIV>
<DIV>-&gt; test1(integrate, integrate(erf(z)*sin(z)^2,z))</DIV>
<DIV>&nbsp;</DIV>
<DIV>&nbsp; true&nbsp; -- Currently, AXIOM cannot get this integral and<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -- returns it unevaluated</DIV>
<DIV><BR>and</DIV>
<DIV><BR>-&gt; test2(%%, integrate(1/(a+z^5), z))</DIV>
<DIV>&nbsp;&nbsp; true&nbsp; -- Currently, AXIOM returns the terms like&nbsp; %%ID1</DIV>
<DIV><BR>Let me&nbsp;thank you cordially&nbsp;for your valuable help in advance .</DIV>
<DIV><BR>&nbsp;</DIV>
<DIV>Best wishes,</DIV>
<DIV>&nbsp;</DIV>
<DIV>Vladimir Bondarenko<BR></DIV></DIV><p>
		<hr size=1>Do you Yahoo!?<br> 
Yahoo! Search presents - <a href="http://us.rd.yahoo.com/evt=30648/*http://movies.yahoo.com/movies/feature/jibjabinaugural.html">Jib Jab's 'Second Term'</a>
--0-441081298-1108072702=:39834--



\start
Date: Thu, 10 Feb 2005 17:38:27 -0500
From: Tim Daly
To: Bill Page
Subject: Re: Axiom Mathaction output emails

Bill,

We can create a mathaction mailing list easily.

t



\start
Date: Thu, 10 Feb 2005 17:28:23 -0500
From: Bill Page
To: Tim Daly
Subject: RE: Axiom Mathaction output emails

On Thursday, February 10, 2005 5:38 PM Tim Daly wrote:
> 
> We can create a mathaction mailing list easily.
> 

Yes, true. But I don't see the point since MathAction itself
allows direct subscriptions by users which is the same thing
as creating a mailing list.

What Martin Rubey and I decided to do was to subscribe the
axiom-developer email list itself to the MathAction wiki. That
is effectively the same as subscribing everyone on the axiom-
developer email list to the wiki. I think the main reason we decided
to do this was to attempt to increase the number of people using
the wiki - to encourage them to use the IssueTracker and other
features so that bugs and useful information would not be lost
in the email "waste basket".

In retrospect this seems a little "heavy handed" to me since
many (most) people on the email list did not ask to be part
of the wiki. This is what I am beginning to think was not such
a great idea since it sometimes generates too much noise on
the email list and may actually be "scaring" some people away.

But on the other hand we do now have at least some interaction
going on via the wiki which is where we want it to be. The main
thing is that it seemed awkward to have two places (the email
list and the wiki) to subscribe and interact.

Regards,
Bill Page.



\start
Date: Thu, 10 Feb 2005 17:48:04 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [AxiomInterface] Paradox Part2:

Volume under that curve:
\begin{axiom}
integrate(%pi*((1/x)^2), x=1..%plusInfinity)
\end{axiom}

Curve has an infinite area...but a finite volume (I think I did this correctly)!
--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomInterface#msg20050210174759-0600@page.axiom-developer.org



\start
Date: Thu, 10 Feb 2005 17:46:08 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [AxiomInterface] Mathematical Paradox?

Area under the curve:
\begin{axiom}
integrate(1/x,x=1..%plusInfinity)
\end{axiom}
--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomInterface#msg20050210174557-0600@page.axiom-developer.org



\start
Date: Thu, 10 Feb 2005 20:21:18 -0500
From: Bill Page
To: Vladimir Bondarenko
Subject: RE: Re[2]: [Q] Function for testing for a part of the  output?

On Thursday, February 10, 2005 4:58 PM Vladimir Bondarenko wrote:[

> Please help also about the following where I have tried
> several variations but without result
> 
> -> member?(integrate,kernels(integrate(erf(z)*sin(z)^2,z)))
>
>   false

Try this:

  is?(integrate(erf(z)*sin(z)^2,z),integral)

which tests that the first expression is a kernel with
the operator integral.

> while I'd like to have a test1 working like this
> 
> -> test1(integrate, integrate(erf(z)*sin(z)^2,z))
>
>  true  -- Currently, AXIOM cannot get this integral and
>         -- returns it unevaluated

Perhaps this is a little more accurate:

  not empty? [i for i in kernels integrate(erf(z)*sin(z)^2,z)
    | is?(i,integral)]

which will be true if at least one integral remains.

> and
> 
> -> test2(%%, integrate(1/(a+z^5), z))
>    true  -- Currently, AXIOM returns the terms like  %%ID1

  not empty? [i for i in kernels integrate(1/(a+z^5), z)
    | is?(i,rootOf)]

> Let me thank you cordially for your valuable help in advance.

Of course you are most welcome!

Regards,
Bill Page.



\start
Date: Fri, 11 Feb 2005 01:29:35 -0500
From: Bill Page
To: Cliff Yapp
Subject: RE: Style of Mathaction webpages

On Thursday, February 10, 2005 12:03 PM C Y wrote:
> ...
> What I'm wondering is, with most people using "modern" browsers
> nowadays, would it be possible to have the webpages use a "math
> notebook" like style?  (Using css, xhtml, etc.)

Can you give some examples of what you mean by "math notebook"
style? Are you thinking of something like quick access to multiple
pages via "tabs"? (The Firefox browser does this rather well.)
I think the color-scheme that we use on MathAction now makes it
seem less like a notebook. Originally, Axiom commands were not
highlighted in color and the background was a plain white.

> What I'm thinking is that in essence people could create a
> Mathaction page, work in an environment like Emacs or TeXmacs
> (insofar as web page limitations allow),

This is possible now using Emacs as an external editor. There
is a little "pencil" icon that appears on each page. If your
workstation is properly configured, clicking the icon starts
Emacs with the text content of the page. After editing the
contents, closing the edit session automatically updates
the MathAction page. This kind of interaction might also be
possible using TeXmacs (I haven't tried it yet.)

Unfortunately integration of the local use of Axiom (via
Emacs or TeXmacs for example) with the web page content is
not is straight forward as one might like. The format of
the Axiom commands that are used in each system/editor is
slightly different. E.g. MathAction uses the \begin{axiom}
\end{axiom} command delimiters and TeXmacs formats the
contents of an Axiom Session in it's own way. Still it is
possible to move between these systems with a few simple
mechanical changes to the text.

> create a printable "math worksheet", and then be able to
> save a local copy which could be reloaded to Mathaction at
> some point in the future (should the one on the server be
> erased for whatever reason.)

What you are talking about here really sounds a lot like
the Doyen idea that Tim Daly has been promoting.

http://page.axiom-developer.org/zope/mathaction/Doyen

In this model, single-user MathAction-style interfaces are
duplicated on the desktop. It uses the same browser technology
and web server components as MathAction itself, except that
the web components are configured only for local host access.
Provided the workstation is fast enough and has enough memory,
say about a 2.4 GHz. processor with 512 Mb ram, then performance
of the graphical interface can be quite a lot faster than when
accessing MathAction over the Internet.

One user who is subscribed to this list, Peter Wurmli, has
already configured a workstation in this manner. I also have
an older machine, 277 MHz with 512 Mb ram, running Debian
which I used to experiment with the MathAction interface
in "stand-alone" mode.

To make the transfer of pages containing mathematics and Axiom
calculations between workstation and MathAction web site a
little faster and easier, it is desirable to have more
intelligent network protocols for uploading and downloading
pages.

In Doyen it is also planned to implement web-based interfaces
for many more of the available open-source scientific tools
(such as those available on the Knoppix CD/DVD). Doyen/MathAction
then serves as a standard interface to these diverse packages.

> Essentially, it would be the next logical step from the
> current capabilities - have not just a place to do calculations
> but be able to generate a presentable, printable math document
> for inclusion in reports, homework, whatever.  (Again, within
> the limits of the web.)

I think it is possible to do a quite reasonable job of document
formatting over the web. Printing is still an issue with the
Firefox and Netscape browsers (due to a problem in the support
of transparent png format image files), however Microsoft
Explorer can print these pages properly.

> 
> Is that in line with the goals of Mathaction?  I guess what I 
> described is more of a "CAS web GUI" than a collaborative web
> site, so it might not be of interest, but I thought I'd just
> throw it out there and see what the real gurus thought.
> 

Yes.

I think you ideas are very good. I would like to make a web-
based, easy to install stand-alone version of the MathAction
interface available on Windows (as an alternative to TeXmacs).
Doing this requires solving a some simple compatibility problems
between the linux and windows versions of the ZWiki and Axiom
software.

Regards,
Bill Page.



\start
Date: Fri, 11 Feb 2005 01:02:29 -0600
From: MathAction (billpage)
To: MathAction
Subject: [FrontPage] 


??changed:
-- Learn more [about Axiom] or more [about MathAction]
-
-- Try "Axiom online":AxiomInterface, "download Axiom":AxiomDownload or
- Learn more [about Axiom],  more [about MathAction] or more
  "about Reduce":ReduceWiki

- Try "Axiom online":SandBox, "download Axiom":AxiomDownload or

??changed:
-- Chose an optional [User Interface] such as TeXmacs or Emacs
- Chose an optional [User Interface] such as TeXmacs or Emacs. You can
  install this AxiomInterface for desktop use

--
forwarded from http://page.axiom-developer.org/zope/mathaction/FrontPage#msg20050211010229-0600@page.axiom-developer.org



\start
Date: Fri, 11 Feb 2005 02:41:57 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [AxiomProblems] Pattern Matching

Subject: 
              [Q] Function for testing for a part of the output?
         Date: 
              Thu, 10 Feb 2005 21:35:30 +0200
        From: 
              Vladimir Bondarenko
 Organization: 
              Cyber Tester, LLC
           To: 
              list




Good Day,

Say, I have  D(sin(z)^2, z) and the output is  2cos(z)sin(z)

What is the easiest way to see, if the output has sin(z) ?
Say, something like

-> present?(sin(z), D(sin(z)^2, z))
true


--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomProblems#msg20050211024156-0600@page.axiom-developer.org



\start
Date: Fri, 11 Feb 2005 04:12:06 -0500
From: William Sit
To: Vladimir Bondarenko
Subject: Re: [Q] Function for testing for a part of the	output?

Vladimir Bondarenko wrote:

> Say, I have  D(sin(z)^2, z) and the output is  2cos(z)sin(z)
> 
> What is the easiest way to see, if the output has sin(z) ?
> Say, something like
> 
> -> present?(sin(z), D(sin(z)^2, z))
> true

member?(sin(z), isTimes(D(sin(z)^2,z))
  true

Of course this is not general, that is, it would be nice to have a parser that
returns the list of operators and atomic operands (in a nested tree, perhaps
lisp style) when an expression is given and then flattened. Using PATTERN
facilities, it is possible to do some fairly general parsing. In a way
reminscent of Mathematica, unfortunately, parsing depends on the functions
called, rather than the mathematics: that is, one must have a priori knowledge
of the form of the expression (in Mathematica, given by FullForm): sin(z)sin(z)
is different from sin(z)^2.

William



\start
Date: Fri, 11 Feb 2005 10:11:48 +0100
From: Martin Rubey
To: Bill Page
Subject: RE: Axiom Mathaction output emails

Page, Bill writes:
 > I have set the mailout_policy property to None for the page
 > 
 > http://page.axiom-developer.org/zope/mathaction/SandBox
 > 
 > I think that this will prevent all edits and comments to this
 > page from generating email notices. If this works (the ZWiki
 > documentation is a little unclear), then we can point first-time
 > users who want to experiment to this page.

Yes, it does work, and yes, PLEASE redirect AxiomInterface and AxiomInterface2
to SandBox (or simply set their mailout_policy property to None as well)

Martin




\start
Date: Fri, 11 Feb 2005 05:54:55 -0500
From: William Sit
To: Bill Page
Subject: Re: [Q] Function for testing for a partof the	output?

Bill's solution of course is mathematically sound if what one is looking for is
a kernel, and is preferrable. However, if one really wants to check some strings
embedded, then the following would work:

match?("*sss*",tex(ooo::TEX).1,char("*"))

where sss is what you are searching for (perhaps "texified", like \%\% for %%),
and ooo is the output of a computation. One advantage is we do not have to know
the structure of the output and so can be applied uniformly to all outputs.

There seems to be a bug with match (without the ?), which is supposed to return
the index if the string match succeeds. But

match("*to*","yorktown",char("*"))
  
   >> System error:
   Wildcard must be a character

protected-symbol-warn called with (NIL)

Also, the interpreter will not coerce "*" to a character.

William
---

"Page, Bill" wrote:
> On Thursday, February 10, 2005 4:58 PM Vladimir Bondarenko wrote:[
> 
> > Please help also about the following where I have tried
> > several variations but without result
> >
> > -> member?(integrate,kernels(integrate(erf(z)*sin(z)^2,z)))
> >
> >   false
> 
> Try this:
> 
>   is?(integrate(erf(z)*sin(z)^2,z),integral)
> 
> which tests that the first expression is a kernel with
> the operator integral.
> 
> > while I'd like to have a test1 working like this
> >
> > -> test1(integrate, integrate(erf(z)*sin(z)^2,z))
> >
> >  true  -- Currently, AXIOM cannot get this integral and
> >         -- returns it unevaluated
> 
> Perhaps this is a little more accurate:
> 
>   not empty? [i for i in kernels integrate(erf(z)*sin(z)^2,z)
>     | is?(i,integral)]
> 
> which will be true if at least one integral remains.
> 
> > and
> >
> > -> test2(%%, integrate(1/(a+z^5), z))
> >    true  -- Currently, AXIOM returns the terms like  %%ID1
> 
>   not empty? [i for i in kernels integrate(1/(a+z^5), z)
>     | is?(i,rootOf)]
> 
> > Let me thank you cordially for your valuable help in advance.
> 
> Of course you are most welcome!
> 
> Regards,
> Bill Page.



\start
Date: Fri, 11 Feb 2005 05:05:26 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [#97 match not working] 


++added:
match?("*to*","yorktown",char("*"))

--removed:
-match?("*to*","yorktown",char("*"))

--
forwarded from http://page.axiom-developer.org/zope/mathaction/97MatchNotWorking#msg20050211050526-0600@page.axiom-developer.org



\start
Date: Fri, 11 Feb 2005 05:03:50 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [#97 match not working] (new) 

The hyperdoc documentation gives this example,

\begin{verbatim}
match("*to*","yorktown","*")
\end{verbatim}

and says that it would return 5. But the interpreter will not coerce "*" to a character, and even if manually converted, a system error occurs. However, match? works.

\begin{axiom}
match("*to*","yorktown","*")
match("*to*","yorktown",char("*"))
match?("*to*","yorktown",char("*"))
\end{axiom}

William
--
forwarded from http://page.axiom-developer.org/zope/mathaction/97MatchNotWorking#msg20050211050343-0600@page.axiom-developer.org



\start
Date: Fri, 11 Feb 2005 06:43:14 -0500
From: William Sit
To: Bill Page
Subject: Re: Axiom Mathaction output emails

"Page, Bill" wrote:
> 
> On Thursday, February 10, 2005 5:38 PM Tim Daly wrote:
> >
> > We can create a mathaction mailing list easily.
> >
> 
> Yes, true. But I don't see the point since MathAction itself
> allows direct subscriptions by users which is the same thing
> as creating a mailing list.
> 
> What Martin Rubey and I decided to do was to subscribe the
> axiom-developer email list itself to the MathAction wiki. That
> is effectively the same as subscribing everyone on the axiom-
> developer email list to the wiki. I think the main reason we decided
> to do this was to attempt to increase the number of people using
> the wiki - to encourage them to use the IssueTracker and other
> features so that bugs and useful information would not be lost
> in the email "waste basket".

I think if the Wiki interface is more friendly, it would attract more people to
use. I would propose to add (if possible) the following for each page that is
editable by anyone:

(1) A new page (for new bug report, for example, or new issues) button
(2) A preview button before submitting a new page (right now, in Issuetracker,
the add issue button does not allow preview. This would create more mailing for
any subsequent edits.
(3) A separate "mail" button, separate from the "save" button, so a user has
control of whether to mail it or not (as if using email). So minor edit would
not be mailed.
(4) A login button to record users. (I registered, actually to the test version
of Wiki/Portal, but any changes I made still says anonymous: btw, once I
registered, I can submit changes! I don't know if that is what, at least for
now, solved my earlier problem when I was not able to; or maybe it was the
recent upgrade at the server end).

Also, add a page on the etiquette of using Wiki (this can evolve as people
continue using it).


> In retrospect this seems a little "heavy handed" to me since
> many (most) people on the email list did not ask to be part
> of the wiki. This is what I am beginning to think was not such
> a great idea since it sometimes generates too much noise on
> the email list and may actually be "scaring" some people away.

I think the S/N is definitely a problem. But a lot of the bug reporting can
(should?) directly go to IssueTracker and emailed while testers trying out Axiom
need not email their pages unless they have questions.
 
> But on the other hand we do now have at least some interaction
> going on via the wiki which is where we want it to be. The main
> thing is that it seemed awkward to have two places (the email
> list and the wiki) to subscribe and interact.

For anything that involves pieces of Axiom code, Wiki is far better, because we
do not have to cut and paste the outputs. For other discussions, especially
system type or patches, email is preferrable. Also, in email, sometimes we can,
and often do, discuss several related issues; with Wiki, a separate page should
be set up if other new problems arise. I think forwarding MathAction page
changes or new pages selectively should be doable. 

William



\start
Date: Fri, 11 Feb 2005 07:22:52 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [#87 solve(x + 1.1, 0.001) fails] 


??changed:
-There are 20 exposed and 3 unexposed library operations named solve
-having 2 argument(s) but none was determined to be applicable.
-Use HyperDoc Browse, or issue
-)display op solve
-to learn more about the available operations. Perhaps
-package-calling the operation or using coercions on the arguments
-will allow you to apply the operation.
-
-
\begin{axiom}
solve(x+1.1,0.001)
\end{axiom}

As with any software, one must learn the correct syntax of commands.  For some unknown reason, Axiom does not have a solve function with signature:

{\tt solve: (Polynomial Float, Float) -> List Equation Polynomial Float}. 
However, it has 

{\tt solve: Polynomial Float->List Equation Fraction Polynomial Float}

and {\tt solve: (Polynomial Fraction Integer, Float) -> List Equation Polynomial Float)}.

\begin{axiom}
solve(x+1.1)
solve(x+11/10,0.1)
solve(x+ 11/10,0.0001)
solve(x+11/10,0.0000000000000000001)
\end{axiom}

One should be careful interpreting these results.  The second one solves it to 5 binary digit accuracy (closest binary to 0.1 (decimal) is 1/16+1/32 = 0.09375) hence the answer is not {\tt -1.1}. A similar loss happens in the third one. To obtain {\tt -1.1} as the solution, one needs much higher accuracy, as in the fourth one (that is the minimum needed).

--
forwarded from http://page.axiom-developer.org/zope/mathaction/87SolveX110001Fails#msg20050211072252-0600@page.axiom-developer.org



\start
Date: Fri, 11 Feb 2005 07:25:14 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [#87 solve(x + 1.1, 0.001) fails] Not a bug. 

Severity: normal => minor 
Status: open => closed 

--
forwarded from http://page.axiom-developer.org/zope/mathaction/87SolveX110001Fails#msg20050211072514-0600@page.axiom-developer.org



\start
Date: Fri, 11 Feb 2005 08:05:55 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [numerical linear algebra] 


++added:

Why would you expect to be able to recover the characteristic polynomial?  There is always round off error for finite precision arithmetic. For integer approximations, it would be worse.
The command {\tt solve: (Polynomial Fraction Integer, PositiveInteger)->List Equation Polynomial Integer}
solves the equation over the integers, so it is {\it not} accurate. For example:

\begin{axiom}
solve(x+11/10,3)
ev:= solve(rhs(eigen.1),1.0*10^(-50))
cp:= reduce(*, [rhs(x)-lhs(x) for x in ev])
\end{axiom}

--
forwarded from http://page.axiom-developer.org/zope/mathaction/NumericalLinearAlgebra#msg20050211080555-0600@page.axiom-developer.org



\start
Date: Fri, 11 Feb 2005 16:56:14 +0200
From: Vladimir Bondarenko
To: list
Subject: [Q] How to classify  # integrate(log(%i+z^2),	z)  -> 2  ?

Good Day,

My question is should this be interpreted as a bug or as a feature?

===> Case 1.

"When real parameters are present, the form of the integral can
depend on the signs of some expressions. Rather than query the
user or make sign assumptions, Axiom answers.

integrate(1/(x**2 + a),x)" etc


-> # integrate(log(a+z^2), z)     -- understandable, a feature


However, we see also


===> Case 2.

-> integrate(log(%i+z^2), z)

                  +-----+    2
     +-----+    z\|- 4%i  + z  - %i            2
    \|- 4%i log(-------------------) + 2z log(z  + %i) - 4z
                       2
                      z  + %i
   [-------------------------------------------------------,
                               2
                                 +---+
           2          +---+     \|4%i
    z log(z  + %i) - \|4%i atan(------) - 2z]
                                  2z

                                  
and all is OK for both of them


-> D(integrate(log(%i+z^2), z)[[1]],z)

          2
     log(z  + %i)

-> D(integrate(log(%i+z^2), z)[[2]],z)

          2
     log(z  + %i)


But why the user really needs 2 forms of the same answer?

So, how to classify this?


Much thanks for clarification in advance.


Best wishes,

Vladimir




\start
Date: Fri, 11 Feb 2005 09:14:29 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [LatexTemplate] 


++added:
\def\atan{\mathop{\rm atan}\nolimits}

--
forwarded from http://page.axiom-developer.org/zope/mathaction/LatexTemplate#msg20050211091429-0600@page.axiom-developer.org



\start
Date: Fri, 11 Feb 2005 12:59:28 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [AboutMathAction] 


??changed:
-**Welcome to MathAction - The Interactive Mathematical Web!** 
-
-You can comment on the content or "edit":ExternalEdit these pages but please
Welcome to !MathAction - The Interactive Mathematical Web!

  MathAction is a wiki with support for LaTeX and computer algebra.
It is the main web site supporting the development of the open source
version of Axiom.

!MathAction
works both stand-alone and as part of the AxiomPortal.

Web Site

  The !MathAction development home page is -- http://page.axiom-developer.org

  The Axiom Portal is at -- http://page.axiom-developer.org/zope/Plone

  This web site is -- http://page.axiom-developer.org/zope/mathaction

  The test and development version of !MathAction is -- http://test.axiom-developer.org

How it Works

  You can comment on the content or "edit":ExternalEdit these pages but please

??changed:
-The software used in MathAction is based on the LatexWiki extension
!MathAction Software

  The software used in MathAction is based on the LatexWiki extension

??changed:
-Zope: is an "integrated application development environment"
"Zope":http://www.zope.org is an "integrated application development environment"

??changed:
-ZWiki and Plone are two of quite a large number of
ZWiki and "Plone":http://www.plone.org are two of quite a large number of

??changed:
-Let's try defining these tools one more time:
Tools

  Let's try defining these tools one more time:

--
forwarded from http://page.axiom-developer.org/zope/mathaction/AboutMathAction#msg20050211125927-0600@page.axiom-developer.org



\start
Date: Sat, 12 Feb 2005 09:03:19 -0600
From: MathAction (Kostas Oikonomou)
To: MathAction
Subject: [#87 solve(x + 1.1, 0.001) fails] [#87 solve(x + 1.1, 0.001) fails]


\begin{axiom}
solve(x+1.1,0.001)
\end{axiom}

> As with any software, one must learn the correct syntax of commands.  For someunknown reason, Axiom does not have a solve function with signature:

> {\tt solve: (Polynomial Float, Float) -> List Equation Polynomial Float}.However, it has

> {\tt solve: Polynomial Float->List Equation Fraction Polynomial Float}


I'm confused.  Perhaps that's because I expect Axiom to behave like other similar software,
but what is the meaning of

solve: Polynomial Float->List Equation Fraction Polynomial Float

when we're trying to solve an equation with real coefficients?  Doesn't an accuracy need
to be specified?  (and there doesn't seem to be a default).

Also, while solve(x+1.1) "works", so to speak, solve(x^2 - 1.234) returns a warning.

Very bewildering to a beginning user!

My impression, from looking at the algebra library, is that Axiom does not appear to handle
(i.e. solve) polynomials with real coefficients.  It produces them as results, but doesn't accept
them as inputs. Is  this basically correct?

					Kostas

--
forwarded from http://page.axiom-developer.org/zope/mathaction/87SolveX110001Fails#msgopsl3ao4d515d6f0@mail.research.att.com



\start
Date: Sat, 12 Feb 2005 13:07:56 -0600
From: MathAction (Martin Rubey)
To: MathAction
Subject: [#87 solve(x + 1.1, 0.001) fails] [#87 solve(x + 1.1, 0.001) fails] [#87 solve(x + 1.1, 0.001) fails]

I think the idea is to convert your Polynomial Float into a Polynomial Fraction
Integer and then use solve (POLY FRAC INT, FLOAT) -> result.

Martin

--
forwarded from http://page.axiom-developer.org/zope/mathaction/87SolveX110001Fails#msg16910.21321.128939.923703@seam101.local



\start
Date: Sat, 12 Feb 2005 21:46:05 +0200
From: Vladimir Bondarenko
To: list
Subject: [Q] How to classify radicalSolve(z^(1/1)=1) ->	"There are..." ?

Good Day,

Should the behaviour (C) be interpreted as a bug or as a feature?

.......................................................................

(A) -> radicalSolve(z^1=1)

       [z= 1]

.......................................................................

(B) -> solve(z^1=1)

       [z= 1]


    -> solve(z^(1/1)=1)

       [z= 1]

.......................................................................
       
but

.......................................................................

(C) -> radicalSolve(z^(1/1)=1)

   There are 4 exposed and 0 unexposed library operations named
      radicalSolve having 1 argument(s) but none was determined to be
      applicable. Use HyperDoc Browse, or issue
                          )display op radicalSolve
      to learn more about the available operations. Perhaps
      package-calling the operation or using coercions on the arguments
      will allow you to apply the operation.

   Cannot find a definition or applicable library operation named
      radicalSolve with argument type(s)
                         Equation Expression Integer

      Perhaps you should use "@" to indicate the required return type,
      or "$" to specify which version of the function you need.


.......................................................................

The same with

radicalSolve(z^(2/2)=1)
radicalSolve(z^(3/3)=1)
radicalSolve(z^(4/4)=1)
radicalSolve(z^(5/5)=1)  etc
      

Much thanks in advance for the help.


Best wishes,

Vladimir Bondarenko




\start
Date: Sat, 12 Feb 2005 15:27:04 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [AxiomInterface] Drawing a function

\begin{axiom}
draw( sin(x), x=0..2*%pi )
\end{axiom}
--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomInterface#msg20050212152654-0600@page.axiom-developer.org



\start
Date: Sat, 12 Feb 2005 15:53:23 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [AxiomInterface] 


++added:
This does not work yet on MathAction. It does work in the most
recent linux version.

--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomInterface#msg20050212155323-0600@page.axiom-developer.org



\start
Date: Sat, 12 Feb 2005 17:18:03 -0500
From: Bill Page
To: Vladimir Bondarenko
Subject: RE: [Q] How to classify radicalSolve(z^(1/1)=1)->"There are..." ?

On Saturday, February 12, 2005 2:46 PM Vladimir Bondarenko wrote:

> Should the behaviour (C) be interpreted as a bug or as a feature?
> ...
> 
> (C) -> radicalSolve(z^(1/1)=1)
> 
>    There are 4 exposed and 0 unexposed library operations named
>       radicalSolve having 1 argument(s) but none was determined to be
>       applicable. Use HyperDoc Browse, or issue
>                           )display op radicalSolve
>       to learn more about the available operations. Perhaps
>       package-calling the operation or using coercions on the 
>       arguments will allow you to apply the operation.
> 
>    Cannot find a definition or applicable library operation named
>       radicalSolve with argument type(s)
>                          Equation Expression Integer
> 
>       Perhaps you should use "@" to indicate the required return
>       type, or "$" to specify which version of the function you
>       need.
> 

If you do what Axiom tells you to do

)display op radicalSolve

You will see that radicalSolve expects something of type
'Equation Fraction Polynomial <something>' as input. But
z^(1/1)=1 is of type 'Equation Expression Integer', presumably
because 1/1 is of type 'Fraction Integer'.

If you can grok that the value of 1/1 is the unit (denoted by 1)
of the domain Fraction Integer, then the idea that z^(1/1) is
not a polynomial is not so hard and then the fact that radicalSolve
complains might be considered a "feature".

If you want you can write an explicit conversion

(C) -> radicalSolve((z^(1/1)=1)::Equation Polynomial Integer)

One might argue that the interpreter could perform such a
conversion automatically but as far as I know at present it only
performs coercions that it knows to be correct based on types, not
values. Converting 'Fraction Integer' to 'Integer' is not possible
in general but converting <something> to Fraction <something>
is often possible.

Regards,
Bill Page.




\start
Date: Sat, 12 Feb 2005 16:56:56 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [#89 Typos in the full book] another typo

page 60: s/the return statement leave/the return statement leaves/


--
forwarded from http://page.axiom-developer.org/zope/mathaction/89TyposInTheFullBook#msg20050212165656-0600@page.axiom-developer.org



\start
Date: Sun, 13 Feb 2005 02:09:12 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [#87 solve(x + 1.1, 0.001) fails] reply and experimenting with new format


++added:
{\tt [Kostas Oikonomou &lt;opsl3ao4d515d6f0@mail.research.att.com> wrote:]}


++added:
{\tt [William Sit &lt;William Sit> replied:]}


??changed:
-One should be careful interpreting these results.  The second one solves it to 5 binary digit accuracy (closest binary to 0.1 (decimal) is 1/16+1/32 = 0.09375) hence the answer is not {\tt -1.1}. A similar loss happens in the third one. To obtain {\tt -1.1} as the solution, one needs much higher accuracy, as in the fourth one (that is the minimum needed).
-
-From unknown Fri Feb 11 07:25:14 -0600 2005
-From: 
-Date: Fri, 11 Feb 2005 07:25:14 -0600
-Subject: Not a bug. 
-Message-ID: <20050211072514-0600@page.axiom-developer.org>
-
-Severity: normal => minor 
-Status: open => closed 
-
-
-From KostasOikonomou Sat Feb 12 09:03:08 -0600 2005
-From: Kostas Oikonomou
-Date: Sat, 12 Feb 2005 09:03:08 -0600
-Subject: [#87 solve(x + 1.1, 0.001) fails]
-Message-ID: <opsl3ao4d515d6f0@mail.research.att.com>
-
-
-[9 more lines...]
One should be careful interpreting these results.  The second one solves it to 5 binary digit accuracy (closest binary to {\tt 0.1} (decimal) is {\tt 1/16+1/32 = 0.09375}) hence the answer is not {\tt -1.1}. A similar loss happens in the third one. To obtain {\tt -1.1} as the solution, one needs much higher accuracy, as in the fourth one (that is the minimum needed).


{\tt [[Kostas Oikonomou Sat Feb 12 09:03:08 -0600 2005 replied:]]}

++added:
{\tt [[William Sit replied:]]}

Of course, yes. However, there is a dilemma: when you give Axiom an equation with floating point coefficients, should Axiom "solve" this algebraically, as if Float is just like any other domain, or numerically, giving Float a special treatment? Since Axiom algorithms are categorical, rather than writing two separate algorithms, Axiom solves, if possible, algebraically (that is, exactly) and gives numerical answers as options when the precision parameter is given. This choice does not work well with equations over Float because Float does not have some of the algebraic properties as Fraction Integer or Fraction Complex Integer (such as factorization or GCD), which is why there is a warning in solve(x^2-1.234). The package is numsolve.spad and you see that these restrictions are well documented. So the above signature is really not meant to be used at the moment. A similar situation occurs, for example factor(1.23) is legal, but is really useless. Axiom does not use a mechanis!
m to exclude specific domains from a category. It adopts an "include" philosophy but let things fail with warning or error. If you look into numsolve.spad, you will find that the innerSolve1 algorithm {\it implementation} is restricted. (So if later someone finds a way to implement a solve algorithm over Float, that would be just fine).

So a lot of Axiom failures are not bugs, but by design. One way to improve the user interface would seem to be to automatically lifting a polynomial over Float to one over Fraction Integer. A moment's reflection would convince you this is not always possible (for example, sqrt(2) or pi are technically both belong to Float (model for real numbers), but of course, in reality, every floating point number is a rational number. Such a lifting package would have to take into consideration the precision to convert some symbolic constants to a decimal approximation and then convert that to an exact rational number. However, even this would not create satisfactory results because we know the sensitivity of solutions of polynomial equations to small changes of its coefficients. Wilkinson has this example 
\begin{equation*}
f(x) = (x+1)(x+2) \cdots (x+20) = x^20 + 210 x^19 + \cdots + 20! = 0
\end{equation*}
where a change of the coefficient 210 by $2^{-23} \approx 1.2 \times 10^{-7}$ would turn the root $-20$ to $-20.8$ and five pairs of zeros to complex roots. So if we want numerically accurate solutions, we should use a robust numerical library. I believe this is not yet available in Axiom (the NAG version allowed interface with its Fortran libraries, at extra costs).

If we are really (no pun intended) only using truely floating point coefficients, then it can easily be converted to Fraction Integer, but one has to beware that the algorithm would take a very long time because exact arithmetic with large integer coefficients are expensive.

{\tt [[Kostas Oikonomou wrote:]]}


++added:
\begin{axiom}
solve(x^2 - 1.234)
\end{axiom}

??changed:
-					Kostas
-
-
-From MartinRubey Sat Feb 12 13:07:55 -0600 2005
-From: Martin Rubey
-Date: Sat, 12 Feb 2005 13:07:55 -0600
-Subject: [#87 solve(x + 1.1,	0.001) fails] [#87 solve(x + 1.1, 0.001) fails]
-Message-ID: <16910.21321.128939.923703@seam101.local>
-In-Reply-To: <opsl3ao4d515d6f0@mail.research.att.com>
{\tt [[Martin Rubey Sat Feb 12 13:07:55 -0600 2005 &lt;opsl3ao4d515d6f0@mail.research.att.com> wrote:]]}

??changed:
-Martin
-
{\tt [[William Sit wrote:]]}

Yes, as explained above. Algebraic methods do not work well with Float. 
			


--
forwarded from http://page.axiom-developer.org/zope/mathaction/87SolveX110001Fails#msg20050213020912-0600@page.axiom-developer.org



\start
Date: Sun, 13 Feb 2005 02:52:46 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [#87 solve(x + 1.1, 0.001) fails] LaTeX not working


??changed:
-solve: Polynomial Float->List Equation Fraction Polynomial Float
'solve: Polynomial Float->List Equation Fraction Polynomial Float'

??changed:
-Of course, yes. However, there is a dilemma: when you give Axiom an equation with floating point coefficients, should Axiom "solve" this algebraically, as if Float is just like any other domain, or numerically, giving Float a special treatment? Since Axiom algorithms are categorical, rather than writing two separate algorithms, Axiom solves, if possible, algebraically (that is, exactly) and gives numerical answers as options when the precision parameter is given. This choice does not work well with equations over Float because Float does not have some of the algebraic properties as Fraction Integer or Fraction Complex Integer (such as factorization or GCD), which is why there is a warning in solve(x^2-1.234). The package is numsolve.spad and you see that these restrictions are well documented. So the above signature is really not meant to be used at the moment. A similar situation occurs, for example factor(1.23) is legal, but is really useless. Axiom does not use a mechani!
sm to exclude specific domains from a category. It adopts an "include" philosophy but let things fail with warning or error. If you look into numsolve.spad, you will find that the innerSolve1 algorithm {\it implementation} is restricted. (So if later someone finds a way to implement a solve algorithm over Float, that would be just fine).
-
-So a lot of Axiom failures are not bugs, but by design. One way to improve the user interface would seem to be to automatically lifting a polynomial over Float to one over Fraction Integer. A moment's reflection would convince you this is not always possible (for example, sqrt(2) or pi are technically both belong to Float (model for real numbers), but of course, in reality, every floating point number is a rational number. Such a lifting package would have to take into consideration the precision to convert some symbolic constants to a decimal approximation and then convert that to an exact rational number. However, even this would not create satisfactory results because we know the sensitivity of solutions of polynomial equations to small changes of its coefficients. Wilkinson has this example 
-\begin{equation*}
-f(x) = (x+1)(x+2) \cdots (x+20) = x^20 + 210 x^19 + \cdots + 20! = 0
-\end{equation*}
-where a change of the coefficient 210 by $2^{-23} \approx 1.2 \times 10^{-7}$ would turn the root $-20$ to $-20.8$ and five pairs of zeros to complex roots. So if we want numerically accurate solutions, we should use a robust numerical library. I believe this is not yet available in Axiom (the NAG version allowed interface with its Fortran libraries, at extra costs).
Of course, yes. However, there is a dilemma: when you give Axiom an equation with floating point coefficients, should Axiom "solve" this algebraically, as if 'Float' is just like any other domain, or numerically, giving 'Float' a special treatment? Since Axiom algorithms are categorical, rather than writing two separate algorithms, Axiom solves, if possible, algebraically (that is, exactly) and gives numerical answers as options when the precision parameter is given. This choice does not work well with equations over 'Float' because 'Float' does not have some of the algebraic properties as 'Fraction Integer' or 'Fraction Complex Integer' (such as factorization or GCD), which is why there is a warning in 'solve(x^2-1.234)'. The package is numsolve.spad and you see that these restrictions are well documented. So the above signature is really not meant to be used at the moment. A similar situation occurs, for example 'factor(1.23)' is legal, but is really useless. Axiom does no!
t use a mechanism to exclude specific domains from a category. It adopts an "include" philosophy but let things fail with warning or error. If you look into numsolve.spad, you will find that the 'innerSolve1' algorithm {\it implementation} is restricted. (So if later someone finds a way to implement a 'solve' algorithm over 'Float', that would be just fine).

So a lot of Axiom failures are not bugs, but by design. One way to improve the user interface would seem to be to automatically lifting a polynomial over 'Float' to one over 'Fraction Integer'. A moment's reflection would convince you this is not always possible (for example, 'sqrt(2)' or '%pi' are technically both belong to 'Float' (model for real numbers), but of course, in reality, every floating point number is a rational number. Such a lifting package would have to take into consideration the precision to convert some symbolic constants to a decimal approximation and then convert that to an exact rational number. However, even this would not create satisfactory results because we know the sensitivity of solutions of polynomial equations to small changes of its coefficients. Wilkinson has this example
 

<center>
f(x) = (x+1)(x+2) ... (x+20) = x<SUP>20</SUP> + 210 x<SUP>19</SUP> + ... + 20! = 0
</center>


where a change of the coefficient 210 by 2<SUP>-23</SUP> (approximately 1.2 &times; 10<SUP>-7</SUP>) would turn the root -20 to -20.8 and five pairs of zeros to complex roots. (This perturbed equation will take a *very long* time in Axiom, will not be solved exactly by Mathematica, but is trivially solved *numerically* in Mathematica).



So if we want numerically accurate solutions, we should use a robust numerical library. I believe this is not yet available in Axiom (the NAG version allowed interface with its Fortran libraries, at extra costs).

--
forwarded from http://page.axiom-developer.org/zope/mathaction/87SolveX110001Fails#msg20050213025246-0600@page.axiom-developer.org



\start
Date: Sun, 13 Feb 2005 04:13:58 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [#87 solve(x + 1.1, 0.001) fails] LaTeX not working


++added:


??changed:
-Of course, yes. However, there is a dilemma: when you give Axiom an equation with floating point coefficients, should Axiom "solve" this algebraically, as if 'Float' is just like any other domain, or numerically, giving 'Float' a special treatment? Since Axiom algorithms are categorical, rather than writing two separate algorithms, Axiom solves, if possible, algebraically (that is, exactly) and gives numerical answers as options when the precision parameter is given. This choice does not work well with equations over 'Float' because 'Float' does not have some of the algebraic properties as 'Fraction Integer' or 'Fraction Complex Integer' (such as factorization or GCD), which is why there is a warning in 'solve(x^2-1.234)'. The package is numsolve.spad and you see that these restrictions are well documented. So the above signature is really not meant to be used at the moment. A similar situation occurs, for example 'factor(1.23)' is legal, but is really useless. Axiom does n!
ot use a mechanism to exclude specific domains from a category. It adopts an "include" philosophy but let things fail with warning or error. If you look into numsolve.spad, you will find that the 'innerSolve1' algorithm {\it implementation} is restricted. (So if later someone finds a way to implement a 'solve' algorithm over 'Float', that would be just fine).
-
-So a lot of Axiom failures are not bugs, but by design. One way to improve the user interface would seem to be to automatically lifting a polynomial over 'Float' to one over 'Fraction Integer'. A moment's reflection would convince you this is not always possible (for example, 'sqrt(2)' or '%pi' are technically both belong to 'Float' (model for real numbers), but of course, in reality, every floating point number is a rational number. Such a lifting package would have to take into consideration the precision to convert some symbolic constants to a decimal approximation and then convert that to an exact rational number. However, even this would not create satisfactory results because we know the sensitivity of solutions of polynomial equations to small changes of its coefficients. Wilkinson has this example
- 
-
-<center>
-f(x) = (x+1)(x+2) ... (x+20) = x<SUP>20</SUP> + 210 x<SUP>19</SUP> + ... + 20! = 0
-</center>
-
-
-where a change of the coefficient 210 by 2<SUP>-23</SUP> (approximately 1.2 &times; 10<SUP>-7</SUP>) would turn the root -20 to -20.8 and five pairs of zeros to complex roots. (This perturbed equation will take a *very long* time in Axiom, will not be solved exactly by Mathematica, but is trivially solved *numerically* in Mathematica).
-
-
-
-So if we want numerically accurate solutions, we should use a robust numerical library. I believe this is not yet available in Axiom (the NAG version allowed interface with its Fortran libraries, at extra costs).
-
-If we are really (no pun intended) only using truely floating point coefficients, then it can easily be converted to Fraction Integer, but one has to beware that the algorithm would take a very long time because exact arithmetic with large integer coefficients are expensive.
-
-{\tt [[Kostas Oikonomou wrote:]]}
-[1 more lines...]
Of course, yes. However, there is a dilemma: when you give Axiom an equation with floating point coefficients, should Axiom "solve" this symbolically, as if 'Float' is just like any other domain, or numerically, giving 'Float' a special treatment? Since Axiom algorithms are categorical, rather than writing two separate algorithms, Axiom solves, if possible, exactly and gives numerical answers as options when the precision parameter is given. This choice does not work well with equations over 'Float' because 'Float' does not have some of the algebraic properties as 'Fraction Integer' or 'Fraction Complex Integer' (such as factorization or GCD), which is why there is a warning in 'solve(x^2-1.234)'. 


++added:
The package is numsolve.spad and you see that these restrictions are well documented. So the above signature is really not meant to be used at the moment. A similar situation occurs, for example 'factor(1.23)' is legal, but is really useless. Axiom does not use a mechanism to exclude specific domains from a category. It adopts an "include" philosophy but let things fail with warning or error. If you look into numsolve.spad, you will find that the 'innerSolve1' algorithm *implementation* is restricted. (So if later someone finds a way to implement a 'solve' algorithm over 'Float', that would be just fine).

So a lot of Axiom failures are not bugs, but by design. One way to improve the user interface would seem to be to automatically lifting a polynomial over 'Float' to one over 'Fraction Integer'. A moment's reflection would convince you this is not always possible (for example, 'sqrt(2)' or '%pi' technically both belong to 'Float' (model for real numbers)), but of course, in reality, every (finite precision) floating point number is a rational number. Such a lifting package would have to take into consideration the precision to convert some symbolic constants to their decimal approximations and then convert them to exact rational numbers. However, even this would not create satisfactory results because we know the sensitivity of solutions of polynomial equations to small changes of its coefficients. Wilkinson has this example
 

<center>
*f*(*x*) = (*x*+1)(*x*+2) ... (*x*+20) = *x*<SUP>20</SUP> + 210 *x*<SUP>19</SUP> + ... + 20! = 0
</center>


where a change of the coefficient 210 by 2<SUP>&minus;23</SUP> (approximately 1.2 &times; 10<SUP>&minus;7</SUP>) would turn the root &minus;20 to &minus;20.8 and five pairs of zeros to complex roots. (This perturbed equation will take a *very long* time in Axiom, will not be solved exactly by Mathematica, but is easily solved *numerically* in Mathematica).



So if we want numerically accurate solutions, we should use a robust numerical library. I believe this is not yet available in Axiom (the NAG version allowed interface with its Fortran libraries, at extra costs).

If we are really (no pun intended) only using truely floating point coefficients, then it can easily be converted to Fraction Integer, but one has to beware that the algorithm would take a very long time because exact arithmetic with large integer coefficients are expensive.

{\tt [[Kostas Oikonomou wrote:]]}

Also, while 'solve(x+1.1)' "works", so to speak, 'solve(x^2 - 1.234)' returns a warning.


??changed:
-{\tt [[Martin Rubey Sat Feb 12 13:07:55 -0600 2005 &lt;opsl3ao4d515d6f0@mail.research.att.com> wrote:]]}
-
-I think the idea is to convert your Polynomial Float into a Polynomial Fraction
-Integer and then use solve (POLY FRAC INT, FLOAT) -> result.
{\tt [[Martin Rubey Sat Feb 12 13:07:55 -0600 2005 &lt;Martin Rubey> wrote:]]}

I think the idea is to convert your 'Polynomial Float' into a 'Polynomial Fraction
Integer' and then use 'solve (POLY FRAC INT, FLOAT) -> ... ' to get results.

??changed:
-Yes, as explained above. Algebraic methods do not work well with Float. 
-			
-
Yes, as explained above. Symbolic methods do not work well with 'Float'. 
			


--
forwarded from http://page.axiom-developer.org/zope/mathaction/87SolveX110001Fails#msg20050213041358-0600@page.axiom-developer.org



\start
Date: Sun, 13 Feb 2005 06:10:14 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [Derive] (new) 

<P>1+2</P>
<P>&nbsp;</P>
--
forwarded from http://page.axiom-developer.org/zope/mathaction/Derive#msg20050213061014-0600@page.axiom-developer.org



\start
Date: Sun, 13 Feb 2005 06:10:16 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [Derive] (new) 

<P>1+2</P>
<P>&nbsp;</P>
--
forwarded from http://page.axiom-developer.org/zope/mathaction/Derive#msg20050213061016-0600@page.axiom-developer.org



\start
Date: Sun, 13 Feb 2005 07:44:54 -0600
From: MathAction (Tim Daly)
To: MathAction
Subject:  [#89 Typos in the full book] fixed 19, 33, 33, 34, 37, 41, 45, 60

Status: open => pending (next release) 

--
forwarded from http://page.axiom-developer.org/zope/mathaction/89TyposInTheFullBook#msg20050213074453-0600@page.axiom-developer.org



\start
Date: Sun, 13 Feb 2005 08:00:19 -0600
From: MathAction (Tim Daly)
To: MathAction
Subject: [#61 cot(0.0), csc(0.0), asec(0.0), acsc(0.0),	asech(0.0), acsch(0.0), cot(0.0), coth(0.0), acoth(0.0] property change

Status: pending (next release) => open 

--
forwarded from http://page.axiom-developer.org/zope/mathaction/61Cot00Csc00Asec00Acsc00Asech00Acsch00Cot00Coth00Acoth00#msg20050213080019-0600@page.axiom-developer.org



\start
Date: Sun, 13 Feb 2005 07:55:04 -0600
From: MathAction (Tim Daly)
To: MathAction
Subject: [#49 GCL argument list too long] property change

Status: pending (next release) => closed 

--
forwarded from http://page.axiom-developer.org/zope/mathaction/49GCLArgumentListTooLong#msg20050213075504-0600@page.axiom-developer.org



\start
Date: Sun, 13 Feb 2005 07:56:12 -0600
From: MathAction (Tim Daly)
To: MathAction
Subject: [#61 cot(0.0), csc(0.0), asec(0.0), acsc(0.0),	asech(0.0), acsch(0.0), cot(0.0), coth(0.0), acoth(0.0] (renamed)

This page was renamed from #61 cot(0.0), csc(0.0), asec(0.0), acsc(0.0), asech(0.0), acsch(0.0), cot(0.0), coth(0.0), acoth(0.0) to #61 cot(0.0), csc(0.0), asec(0.0), acsc(0.0), asech(0.0), acsch(0.0), cot(0.0), coth(0.0), acoth(0.0.

--
forwarded from http://page.axiom-developer.org/zope/mathaction/61Cot00Csc00Asec00Acsc00Asech00Acsch00Cot00Coth00Acoth00#msg20050213075612-0600@page.axiom-developer.org



\start
Date: Sun, 13 Feb 2005 12:01:50 -0600
From: MathAction (Tim Daly)
To: MathAction
Subject: [#61 cot(0.0), csc(0.0), asec(0.0), acsc(0.0),	asech(0.0), acsch(0.0), cot(0.0), coth(0.0), acoth(0.0] property change

Status: open => closed 

--
forwarded from http://page.axiom-developer.org/zope/mathaction/61Cot00Csc00Asec00Acsc00Asech00Acsch00Cot00Coth00Acoth00#msg20050213120150-0600@page.axiom-developer.org



\start
Date: Sun, 13 Feb 2005 12:32:49 -0600
From: MathAction (Tim Daly)
To: MathAction
Subject: [#77 protected-symbol-warn called with (NIL)] #+:ccl protected-symbol-warn msg

Status: open => pending (next release) 

--
forwarded from http://page.axiom-developer.org/zope/mathaction/77ProtectedSymbolWarnCalledWithNIL#msg20050213123249-0600@page.axiom-developer.org



\start
Date: Sun, 13 Feb 2005 15:38:20 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [SquareMatrix] (new) 

a b 
ab

--
forwarded from http://page.axiom-developer.org/zope/mathaction/SquareMatrix#msg20050213153820-0600@page.axiom-developer.org



\start
Date: Sun, 13 Feb 2005 20:02:09 -0500
From: Martin Snelgrove
To: list
Subject: axiom for Darwin? (BSD in Mac OS)

I tried downloading and compiling Axiom for my Mac (OS X 10.3.8). uname 
-s gives "Darwin", and the
configure script balks. It says to send you-all a note. Herewith.

For fun, I tried lying to it that I was running Linux. I have a bunch 
of "Fink" software, which gives a fair bit
of Linux compatibility, so this sometimes works out. Not this time: in 
particular

/Users/snelgar/downloads/axiom/int/lib/fnct_key.c: In function 
`handle_function_key':
/Users/snelgar/downloads/axiom/int/lib/fnct_key.c:342: error: `SIGCLD' 
undeclared (first use in this function)
/Users/snelgar/downloads/axiom/int/lib/fnct_key.c:342: error: (Each 
undeclared identifier is reported only once
/Users/snelgar/downloads/axiom/int/lib/fnct_key.c:342: error: for each 
function it appears in.)
make[3]: *** [/Users/snelgar/downloads/axiom/obj/linux/lib/fnct_key.o] 
Error 1

Any hope?

	regards
		Martin Snelgrove




\start
Date: Sun, 13 Feb 2005 21:44:41 -0500
From: Tim Daly
To: Martin Snelgrove, Pierre Doucy, Charles Miller
Subject: Re: axiom for Darwin? (BSD in Mac OS)

Martin Snelgrove,

Actually you want to try telling it the truth :-)

The top level level Makefile looks at the last portion of the AXIOM
shell variable to try to set up for the target system. You told it
you were using 'linux' but should say 'MACOSX'.
In your case you might want to try:

export AXIOM=`pwd`/mnt/MACOSX
export PATH=$AXIOM/bin:$PATH
make

Likely this will still fail but much further along.
There are two people on this list, Chuck Miller and Pierre Doucy,
who are also interested in the MAC OSX port.

The SIGCLD issue has to do with the C defined variable called
PLF (in the top level Makefile.pamphlet) which has the value
PLF=MACOSXplatform
for a MAC OSX build. MAC OSX is a BSD system and certain 
incompatibilities arise.

Please try this, save the console output, and let me (and the
rest of the list) know how it fails. I don't have a MAC so I'm
working blind.


As to the configure script issue I'll add the "Darwin" string
to try to give hints about the AXIOM variable setting.

The configure script really doesn't do anything because there
is no obvious way to set a shell variable from a shell script
and have the change be permanent. So it just gives you advice.

Tim





\start
Date: Sun, 13 Feb 2005 20:27:12 -0600
From: MathAction (Tim Daly)
To: MathAction
Subject: [#98 configure script does not handle MAC OSX "Darwin"] (new) 

configure script does not handle MAC OSX "Darwin"
--
forwarded from http://page.axiom-developer.org/zope/mathaction/98ConfigureScriptDoesNotHandleMACOSXDarwin#msg20050213202711-0600@page.axiom-developer.org



\start
Date: Sun, 13 Feb 2005 23:12:15 -0500
From: Bill Page
To: Vladimir Bondarenko
Subject: RE: [Q] How to classify  # integrate(log(%i+z^2), z)  -> 2  ?

On Friday, February 11, 2005 9:56 AM Vladimir Bondarenko wrote:
> ... 
> ===> Case 2.
> 
> -> integrate(log(%i+z^2), z)
> 
>                   +-----+    2
>      +-----+    z\|- 4%i  + z  - %i            2
>     \|- 4%i log(-------------------) + 2z log(z  + %i) - 4z
>                        2
>                       z  + %i
>    [-------------------------------------------------------,
>                                2
>                                  +---+
>            2          +---+     \|4%i
>     z log(z  + %i) - \|4%i atan(------) - 2z]
>                                   2z
> ... 
> But why the user really needs 2 forms of the same answer?
> 

I think you should report it as a bug.

Regards,
Bill Page.




\start
Date: Mon, 14 Feb 2005 01:19:43 -0500
From: Tim Daly
To: Martin Snelgrove
Subject: MAC OSX port
Cc: Charles Miller

Martin,

It appears from the warning messages that there are incomplete include files.
The message:

bsdsignal.c:68: warning: implicit declaration of function `sigaction'

implies that there was no declaration of the 'sigaction' function. The
declarations are normally in include files and sigaction is fundamental
so it would come from a system include file. From your environment strings
I can see the options for the CCFLAGS and it appears that the include
files are all found but they don't seem to declare sigaction.

Please try the following and send the output:

cd /Users/snelgar/downloads/axiom/int/lib
gcc -E -Wall -D_GNU_SOURCE -DMACOSXplatform -I/usr/X11/include -I/usr/include/sys bsdsignal.c

The -E flag run the preprocessor and inline all of the include files.
If sigaction is not declared then we have to figure out where the MAC
would hide the declaration.

Does Fink have a special directory which has include files?
If so, grep for sigaction and let me know what files contain it.

Tim




\start
Date: Mon, 14 Feb 2005 00:24:30 -0500
From: Martin Snelgrove
To: Tim Daly
Subject: Re: axiom for Darwin? (BSD in Mac OS)
Cc: Charles Miller


--Apple-Mail-8--945032340
	charset=US-ASCII;
	format=flowed

Thanks for the quick & detailed response.

I cleaned out the axiom directory completely and recharged from the 
tarfile, then set up the AXIOM and PATH vars
as per your note. I ran make with sudo, because it had been fooling 
around with stuff in /sw/bin. which is where the
Fink project puts the fake Linux stuff. I've attached the console 
output. As you say, it now gets much further. It now
blows up in axiom/int/lib/wct.c, complaining 6 times at line 301": 
error: dereferencing pointer to incomplete type".

My C is lousy, but "int/lib/wct.c:299: warning: assignment makes 
pointer from integer without a cast" worried me,
and /usr/include/time.h looked to me like struct tm was just fine, 
thanks. I've also attached said /usr/include/time.h
in the hope that it will make sense to someone who knows what's going 
on.

Feel free to use me as an e-mail-driven compile engine, given that 
you're without Mac access.

	regards
		martin s.


--Apple-Mail-8--945032340
	x-unix-mode=0644;
	name="temp"
	filename=temp

axiom $ sudo make
13 making noweb
patching file modules.c
patching file Makefile
make[1]: [install-shell] Error 1 (ignored)
make[1]: [install-code] Error 1 (ignored)
make[1]: [install-elisp] Error 1 (ignored)
0 SPAD=/Users/snelgar/downloads/axiom/mnt/MACOSX SYS=MACOSX SPD=/Users/snelgar/downloads/axiom LSP=/Users/snelgar/downloads/axiom/lsp GCLDIR=/Users/snelgar/downloads/axiom/lsp/gcl-2.6.5 SRC=/Users/snelgar/downloads/axiom/src INT=/Users/snelgar/downloads/axiom/int OBJ=/Users/snelgar/downloads/axiom/obj MNT=/Users/snelgar/downloads/axiom/mnt ZIPS=/Users/snelgar/downloads/axiom/zips TMP=/Users/snelgar/downloads/axiom/obj/tmp SPADBIN=/Users/snelgar/downloads/axiom/mnt/MACOSX/bin INC=/Users/snelgar/downloads/axiom/src/include CCLBASE=/Users/snelgar/downloads/axiom/obj/MACOSX/ccl/ccllisp PART=cprogs SUBPART=everything NOISE=-o /Users/snelgar/downloads/axiom/obj/tmp/trace GCLVERSION=gcl-2.6.5 TANGLE=/Users/snelgar/downloads/axiom/mnt/MACOSX/bin/lib/notangle VERSION=Axiom 3.0 Beta (February 2005) PATCH=patch
10 copying /Users/snelgar/downloads/axiom/src/scripts to /Users/snelgar/downloads/axiom/mnt/MACOSX/bin
1 making a MACOSX system, PART=cprogs SUBPART=everything
2 Environment SPAD=/Users/snelgar/downloads/axiom/mnt/MACOSX SYS=MACOSX SPD=/Users/snelgar/downloads/axiom LSP=/Users/snelgar/downloads/axiom/lsp GCLDIR=/Users/snelgar/downloads/axiom/lsp/gcl-2.6.5 SRC=/Users/snelgar/downloads/axiom/src INT=/Users/snelgar/downloads/axiom/int OBJ=/Users/snelgar/downloads/axiom/obj MNT=/Users/snelgar/downloads/axiom/mnt ZIPS=/Users/snelgar/downloads/axiom/zips TMP=/Users/snelgar/downloads/axiom/obj/tmp SPADBIN=/Users/snelgar/downloads/axiom/mnt/MACOSX/bin INC=/Users/snelgar/downloads/axiom/src/include CCLBASE=/Users/snelgar/downloads/axiom/obj/MACOSX/ccl/ccllisp PART=cprogs SUBPART=everything NOISE=-o /Users/snelgar/downloads/axiom/obj/tmp/trace GCLVERSION=gcl-2.6.5 TANGLE=/Users/snelgar/downloads/axiom/mnt/MACOSX/bin/lib/notangle VERSION=Axiom 3.0 Beta (February 2005) PATCH=patch
This is TeX, Version 3.14159 (Web2C 7.4.5)
(./Makefile.tex
LaTeX2e <2001/06/01>
Babel <v3.7h> and hyphenation patterns for american, french, german, ngerman, n
ohyphenation, loaded.
(/sw/share/texmf/tex/latex/base/article.cls
Document Class: article 2001/04/21 v1.4e Standard LaTeX document class
(/sw/share/texmf/tex/latex/base/size10.clo)) (./src/scripts/tex/axiom.sty)
No file Makefile.aux.
[1]
No file Makefile.toc.
[2] [3] [4]
Overfull \hbox (13.60118pt too wide) in paragraph at lines 88--94
\OT1/cmr/m/n/10 im-age is com-piled. This is done by touch-ing a file called \O
T1/cmtt/m/n/10 ${MNT}/${SYS}/timestamp
[5]
Overfull \hbox (31.95659pt too wide) in paragraph at lines 134--137
[]\OT1/cmr/m/n/10 Also, there is a file gen-er-ated dur-ing the GCL build calle
d \OT1/cmtt/m/n/10 lsp/sys-proclaims.lisp
[6] [7]
Overfull \hbox (6.74693pt too wide) in paragraph at lines 261--261
[] \OT1/cmtt/m/n/10 (all | lib | install | lisp | interp | comp | graph | hyper
 | clef[] 

Overfull \hbox (19.79607pt too wide) in paragraph at lines 270--273
\OT1/cmr/m/n/10 The in-stall di-rec-tory can be any-where. By de-fault it will 
in-stall in \OT1/cmtt/m/n/10 /usr/local/axiom
[8] [9] [10]
Overfull \hbox (48.74657pt too wide) in paragraph at lines 417--417
[]        \OT1/cmtt/m/n/10 ( for i in `find . -name "*.lsp"` ; do echo $$i ; to
uch $$i ; done)[] 
[11]
Overfull \hbox (53.99652pt too wide) in paragraph at lines 417--417
[]        \OT1/cmtt/m/n/10 ( for i in `find . -name "*.lisp"` ; do echo $$i ; t
ouch $$i ; done)[] 
[12] [13] [14]
Overfull \hbox (14.47112pt too wide) in paragraph at lines 571--576
\OT1/cmr/m/n/10 brary \OT1/cmtt/m/n/10 libXpm.a \OT1/cmr/m/n/10 (used by the gr
aph-ics rou-tines) lives in \OT1/cmtt/m/n/10 /usr/X11R6/bin/libXpm.a\OT1/cmr/m/
n/10 .
[15] [16]
Overfull \hbox (111.72151pt too wide) in paragraph at lines 630--632
[]\OT1/cmr/m/n/10 which means that Ax-iom will look for the boot-strap database
 files in \OT1/cmtt/m/n/10 ${SRC}/share/algebra/*.daase\OT1/cmr/m/n/10 . 
[17] [18] [19] [20] [21] [22] [23] [24] [25]
Overfull \hbox (36.13765pt too wide) in paragraph at lines 1008--1011
\OT1/cmr/m/n/10 First we add \OT1/cmtt/m/n/10 --enable-debug \OT1/cmr/m/n/10 fo
r test-ing and sec-ond we re-moved \OT1/cmtt/m/n/10 --enable-statsysbfd\OT1/cmr
/m/n/10 . 
[26] [27] [28]
Overfull \hbox (131.24886pt too wide) in paragraph at lines 1138--1138
 []\OT1/cmtt/m/n/10 GCLOPTS="--enable-vssize=65536*2 --enable-locbfd --disable-
dynsysbfd --disable-statsysbfd --enable-maxpage=128*1024"[]  
[29] [30] [31] [32]
Overfull \hbox (131.24886pt too wide) in paragraph at lines 1236--1236
 []\OT1/cmtt/m/n/10 GCLOPTS="--enable-vssize=65536*2 --enable-locbfd --disable-
dynsysbfd --disable-statsysbfd --enable-maxpage=128*1024"[]  
[33] [34] [35] [36]
Overfull \hbox (131.24886pt too wide) in paragraph at lines 1379--1379
 []\OT1/cmtt/m/n/10 GCLOPTS="--enable-vssize=65536*2 --enable-locbfd --disable-
dynsysbfd --disable-statsysbfd --enable-maxpage=128*1024"[]  
[37] [38] [39] [40] [41] [42] [43] [44] [45] [46] [47] [48] [49]
(./Makefile.aux)

LaTeX Warning: Label(s) may have changed. Rerun to get cross-references right.

 )
(see the transcript file for additional information)
Output written on Makefile.dvi (49 pages, 73996 bytes).
Transcript written on Makefile.log.
This is TeX, Version 3.14159 (Web2C 7.4.5)
(./Makefile.tex
LaTeX2e <2001/06/01>
Babel <v3.7h> and hyphenation patterns for american, french, german, ngerman, n
ohyphenation, loaded.
(/sw/share/texmf/tex/latex/base/article.cls
Document Class: article 2001/04/21 v1.4e Standard LaTeX document class
(/sw/share/texmf/tex/latex/base/size10.clo)) (./src/scripts/tex/axiom.sty)
(./Makefile.aux) [1] (./Makefile.toc [2]) [3] [4] [5]
Overfull \hbox (13.60118pt too wide) in paragraph at lines 88--94
\OT1/cmr/m/n/10 im-age is com-piled. This is done by touch-ing a file called \O
T1/cmtt/m/n/10 ${MNT}/${SYS}/timestamp
[6]
Overfull \hbox (31.95659pt too wide) in paragraph at lines 134--137
[]\OT1/cmr/m/n/10 Also, there is a file gen-er-ated dur-ing the GCL build calle
d \OT1/cmtt/m/n/10 lsp/sys-proclaims.lisp
[7] [8]
Overfull \hbox (6.74693pt too wide) in paragraph at lines 261--261
[] \OT1/cmtt/m/n/10 (all | lib | install | lisp | interp | comp | graph | hyper
 | clef[] 

Overfull \hbox (19.79607pt too wide) in paragraph at lines 270--273
\OT1/cmr/m/n/10 The in-stall di-rec-tory can be any-where. By de-fault it will 
in-stall in \OT1/cmtt/m/n/10 /usr/local/axiom
[9] [10] [11]
Overfull \hbox (48.74657pt too wide) in paragraph at lines 417--417
[]        \OT1/cmtt/m/n/10 ( for i in `find . -name "*.lsp"` ; do echo $$i ; to
uch $$i ; done)[] 
[12]
Overfull \hbox (53.99652pt too wide) in paragraph at lines 417--417
[]        \OT1/cmtt/m/n/10 ( for i in `find . -name "*.lisp"` ; do echo $$i ; t
ouch $$i ; done)[] 
[13] [14] [15]
Overfull \hbox (14.47112pt too wide) in paragraph at lines 571--576
\OT1/cmr/m/n/10 brary \OT1/cmtt/m/n/10 libXpm.a \OT1/cmr/m/n/10 (used by the gr
aph-ics rou-tines) lives in \OT1/cmtt/m/n/10 /usr/X11R6/bin/libXpm.a\OT1/cmr/m/
n/10 .
[16] [17]
Overfull \hbox (111.72151pt too wide) in paragraph at lines 630--632
[]\OT1/cmr/m/n/10 which means that Ax-iom will look for the boot-strap database
 files in \OT1/cmtt/m/n/10 ${SRC}/share/algebra/*.daase\OT1/cmr/m/n/10 . 
[18] [19] [20] [21] [22] [23] [24] [25] [26]
Overfull \hbox (36.13765pt too wide) in paragraph at lines 1008--1011
\OT1/cmr/m/n/10 First we add \OT1/cmtt/m/n/10 --enable-debug \OT1/cmr/m/n/10 fo
r test-ing and sec-ond we re-moved \OT1/cmtt/m/n/10 --enable-statsysbfd\OT1/cmr
/m/n/10 . 
[27] [28] [29]
Overfull \hbox (131.24886pt too wide) in paragraph at lines 1138--1138
 []\OT1/cmtt/m/n/10 GCLOPTS="--enable-vssize=65536*2 --enable-locbfd --disable-
dynsysbfd --disable-statsysbfd --enable-maxpage=128*1024"[]  
[30] [31] [32] [33]
Overfull \hbox (131.24886pt too wide) in paragraph at lines 1236--1236
 []\OT1/cmtt/m/n/10 GCLOPTS="--enable-vssize=65536*2 --enable-locbfd --disable-
dynsysbfd --disable-statsysbfd --enable-maxpage=128*1024"[]  
[34] [35] [36] [37]
Overfull \hbox (131.24886pt too wide) in paragraph at lines 1379--1379
 []\OT1/cmtt/m/n/10 GCLOPTS="--enable-vssize=65536*2 --enable-locbfd --disable-
dynsysbfd --disable-statsysbfd --enable-maxpage=128*1024"[]  
[38] [39] [40] [41] [42] [43] [44] [45] [46] [47] [48] [49] [50]
(./Makefile.aux) )
(see the transcript file for additional information)
Output written on Makefile.dvi (50 pages, 96980 bytes).
Transcript written on Makefile.log.
11 checking directory structure
12 Environment: PLF=MACOSXplatform CCF=-O2 -fno-strength-reduce -Wall -D_GNU_SOURCE -DMACOSXplatform -I/usr/X11/include -I/usr/include/sys LDF=-L/usr/X11R6/lib CC=gcc AWK=awk RANLIB=ranlib TOUCH=touch TAR=tar AXIOMXLROOT=/Users/snelgar/downloads/axiom/mnt/MACOSX/compiler O=o BYE=bye LISP=lsp DAASE=/Users/snelgar/downloads/axiom/src/share XLIB=/usr/X11R6/lib GCLOPTS=--enable-vssize=65536*2 --enable-statsysbfd --enable-maxpage=128*1024 SRCDIRS=bootdir interpdir sharedir algebradir etcdir clefdir docdir graphdir smandir hyperdir inputdir  PATCH=patch
16 making /Users/snelgar/downloads/axiom/src/Makefile from /Users/snelgar/downloads/axiom/src/Makefile.pamphlet
18 making /Users/snelgar/downloads/axiom/src
2 making /Users/snelgar/downloads/axiom/src/scripts/Makefile from /Users/snelgar/downloads/axiom/src/scripts/Makefile.pamphlet
1 making /Users/snelgar/downloads/axiom/src/scripts
1 making /Users/snelgar/downloads/axiom/src/scripts
18 making /Users/snelgar/downloads/axiom/src/lib/Makefile from /Users/snelgar/downloads/axiom/src/lib/Makefile.pamphlet
17 making /Users/snelgar/downloads/axiom/src/lib
1 making /Users/snelgar/downloads/axiom/int/lib/bsdsignal.c from /Users/snelgar/downloads/axiom/src/lib/bsdsignal.c.pamphlet
2 making /Users/snelgar/downloads/axiom/obj/MACOSX/lib/bsdsignal.o from /Users/snelgar/downloads/axiom/int/lib/bsdsignal.c
/Users/snelgar/downloads/axiom/int/lib/bsdsignal.c: In function `bsdSignal':
/Users/snelgar/downloads/axiom/int/lib/bsdsignal.c:68: warning: implicit declaration of function `sigaction'
9 making /Users/snelgar/downloads/axiom/int/lib/cursor.c from /Users/snelgar/downloads/axiom/src/lib/cursor.c.pamphlet
10 making /Users/snelgar/downloads/axiom/obj/MACOSX/lib/cursor.o from /Users/snelgar/downloads/axiom/int/lib/cursor.c
13 making /Users/snelgar/downloads/axiom/int/lib/edin.c from /Users/snelgar/downloads/axiom/src/lib/edin.c.pamphlet
14 making /Users/snelgar/downloads/axiom/obj/MACOSX/lib/edin.o from /Users/snelgar/downloads/axiom/int/lib/edin.c
/Users/snelgar/downloads/axiom/int/lib/edin.c: In function `do_reading':
/Users/snelgar/downloads/axiom/int/lib/edin.c:161: warning: implicit declaration of function `read'
/Users/snelgar/downloads/axiom/int/lib/edin.c:421: warning: implicit declaration of function `write'
17 making /Users/snelgar/downloads/axiom/int/lib/fnct_key.c from /Users/snelgar/downloads/axiom/src/lib/fnct_key.c.pamphlet
18 making /Users/snelgar/downloads/axiom/obj/MACOSX/lib/fnct_key.o from /Users/snelgar/downloads/axiom/int/lib/fnct_key.c
/Users/snelgar/downloads/axiom/int/lib/fnct_key.c: In function `set_editor_key':
/Users/snelgar/downloads/axiom/int/lib/fnct_key.c:86: warning: implicit declaration of function `getpid'
/Users/snelgar/downloads/axiom/int/lib/fnct_key.c: In function `get_key':
/Users/snelgar/downloads/axiom/int/lib/fnct_key.c:196: warning: implicit declaration of function `read'
/Users/snelgar/downloads/axiom/int/lib/fnct_key.c: In function `handle_function_key':
/Users/snelgar/downloads/axiom/int/lib/fnct_key.c:325: warning: implicit declaration of function `access'
/Users/snelgar/downloads/axiom/int/lib/fnct_key.c:327: warning: implicit declaration of function `write'
/Users/snelgar/downloads/axiom/int/lib/fnct_key.c:329: warning: implicit declaration of function `close'
/Users/snelgar/downloads/axiom/int/lib/fnct_key.c:344: warning: implicit declaration of function `fork'
/Users/snelgar/downloads/axiom/int/lib/fnct_key.c:349: warning: implicit declaration of function `execlp'
21 making /Users/snelgar/downloads/axiom/int/lib/halloc.c from /Users/snelgar/downloads/axiom/src/lib/halloc.c.pamphlet
22 making /Users/snelgar/downloads/axiom/obj/MACOSX/lib/halloc.o from /Users/snelgar/downloads/axiom/int/lib/halloc.c
29 making /Users/snelgar/downloads/axiom/int/lib/openpty.c from /Users/snelgar/downloads/axiom/src/lib/openpty.c.pamphlet
30 making /Users/snelgar/downloads/axiom/obj/MACOSX/lib/openpty.o from /Users/snelgar/downloads/axiom/int/lib/openpty.c
33 making /Users/snelgar/downloads/axiom/int/lib/pixmap.c from /Users/snelgar/downloads/axiom/src/lib/pixmap.c.pamphlet
34 making /Users/snelgar/downloads/axiom/obj/MACOSX/lib/pixmap.o from /Users/snelgar/downloads/axiom/int/lib/pixmap.c
/Users/snelgar/downloads/axiom/int/lib/pixmap.c: In function `write_pixmap_file':
/Users/snelgar/downloads/axiom/int/lib/pixmap.c:347: warning: unused variable `attr'
/Users/snelgar/downloads/axiom/int/lib/pixmap.c:348: warning: unused variable `xireturn'
37 making /Users/snelgar/downloads/axiom/int/lib/prt.c from /Users/snelgar/downloads/axiom/src/lib/prt.c.pamphlet
38 making /Users/snelgar/downloads/axiom/obj/MACOSX/lib/prt.o from /Users/snelgar/downloads/axiom/int/lib/prt.c
41 making /Users/snelgar/downloads/axiom/int/lib/sockio-c.c from /Users/snelgar/downloads/axiom/src/lib/sockio-c.c.pamphlet
42 making /Users/snelgar/downloads/axiom/obj/MACOSX/lib/sockio-c.o from /Users/snelgar/downloads/axiom/int/lib/sockio-c.c
/Users/snelgar/downloads/axiom/int/lib/sockio-c.c: In function `sread':
/Users/snelgar/downloads/axiom/int/lib/sockio-c.c:151: warning: implicit declaration of function `read'
/Users/snelgar/downloads/axiom/int/lib/sockio-c.c:156: warning: implicit declaration of function `close'
/Users/snelgar/downloads/axiom/int/lib/sockio-c.c: In function `swrite':
/Users/snelgar/downloads/axiom/int/lib/sockio-c.c:184: warning: implicit declaration of function `write'
/Users/snelgar/downloads/axiom/int/lib/sockio-c.c: In function `sselect':
/Users/snelgar/downloads/axiom/int/lib/sockio-c.c:215: warning: implicit declaration of function `select'
/Users/snelgar/downloads/axiom/int/lib/sockio-c.c: In function `send_signal':
/Users/snelgar/downloads/axiom/int/lib/sockio-c.c:822: warning: implicit declaration of function `kill'
/Users/snelgar/downloads/axiom/int/lib/sockio-c.c: In function `connect_to_local_server_new':
/Users/snelgar/downloads/axiom/int/lib/sockio-c.c:907: warning: implicit declaration of function `sleep'
/Users/snelgar/downloads/axiom/int/lib/sockio-c.c:915: warning: implicit declaration of function `getpid'
/Users/snelgar/downloads/axiom/int/lib/sockio-c.c: In function `connect_to_local_server':
/Users/snelgar/downloads/axiom/int/lib/sockio-c.c:933: warning: `code' might be used uninitialized in this function
/Users/snelgar/downloads/axiom/int/lib/sockio-c.c: In function `close_socket':
/Users/snelgar/downloads/axiom/int/lib/sockio-c.c:1063: warning: implicit declaration of function `unlink'
/Users/snelgar/downloads/axiom/int/lib/sockio-c.c: In function `redirect_stdio':
/Users/snelgar/downloads/axiom/int/lib/sockio-c.c:1253: warning: implicit declaration of function `dup2'
45 making /Users/snelgar/downloads/axiom/int/lib/spadcolors.c from /Users/snelgar/downloads/axiom/src/lib/spadcolors.c.pamphlet
46 making /Users/snelgar/downloads/axiom/obj/MACOSX/lib/spadcolors.o from /Users/snelgar/downloads/axiom/int/lib/spadcolors.c
49 making /Users/snelgar/downloads/axiom/int/lib/util.c from /Users/snelgar/downloads/axiom/src/lib/util.c.pamphlet
50 making /Users/snelgar/downloads/axiom/obj/MACOSX/lib/util.o from /Users/snelgar/downloads/axiom/int/lib/util.c
/Users/snelgar/downloads/axiom/int/lib/util.c: In function `checker':
/Users/snelgar/downloads/axiom/int/lib/util.c:63: warning: implicit declaration of function `getpid'
53 making /Users/snelgar/downloads/axiom/int/lib/wct.c from /Users/snelgar/downloads/axiom/src/lib/wct.c.pamphlet
54 making /Users/snelgar/downloads/axiom/obj/MACOSX/lib/wct.o from /Users/snelgar/downloads/axiom/int/lib/wct.c
/Users/snelgar/downloads/axiom/int/lib/wct.c: In function `skim1Wct':
/Users/snelgar/downloads/axiom/int/lib/wct.c:274: warning: int format, different type arg (arg 3)
/Users/snelgar/downloads/axiom/int/lib/wct.c: In function `printTime':
/Users/snelgar/downloads/axiom/int/lib/wct.c:299: warning: implicit declaration of function `localtime'
/Users/snelgar/downloads/axiom/int/lib/wct.c:299: warning: assignment makes pointer from integer without a cast
/Users/snelgar/downloads/axiom/int/lib/wct.c:301: error: dereferencing pointer to incomplete type
/Users/snelgar/downloads/axiom/int/lib/wct.c:301: error: dereferencing pointer to incomplete type
/Users/snelgar/downloads/axiom/int/lib/wct.c:301: error: dereferencing pointer to incomplete type
/Users/snelgar/downloads/axiom/int/lib/wct.c:302: error: dereferencing pointer to incomplete type
/Users/snelgar/downloads/axiom/int/lib/wct.c:302: error: dereferencing pointer to incomplete type
/Users/snelgar/downloads/axiom/int/lib/wct.c:302: error: dereferencing pointer to incomplete type
/Users/snelgar/downloads/axiom/int/lib/wct.c: In function `reread1Wct':
/Users/snelgar/downloads/axiom/int/lib/wct.c:385: warning: implicit declaration of function `read'
make[3]: *** [/Users/snelgar/downloads/axiom/obj/MACOSX/lib/wct.o] Error 1
make[2]: *** [libdir] Error 2
make[1]: *** [srcsetup] Error 2
make: *** [all] Error 2

--Apple-Mail-8--945032340
	charset=US-ASCII;
	format=flowed



--Apple-Mail-8--945032340
	x-unix-mode=0444;
	name="time.h"
	filename=time.h

/*
 * Copyright (c) 2000 Apple Computer, Inc. All rights reserved.
 *
 * @APPLE_LICENSE_HEADER_START@
 * 
 * This file contains Original Code and/or Modifications of Original Code
 * as defined in and that are subject to the Apple Public Source License
 * Version 2.0 (the 'License'). You may not use this file except in
 * compliance with the License. Please obtain a copy of the License at
 * http://www.opensource.apple.com/apsl/ and read it before using this
 * file.
 * 
 * The Original Code and all software distributed under the License are
 * distributed on an 'AS IS' basis, WITHOUT WARRANTY OF ANY KIND, EITHER
 * EXPRESS OR IMPLIED, AND APPLE HEREBY DISCLAIMS ALL SUCH WARRANTIES,
 * INCLUDING WITHOUT LIMITATION, ANY WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE, QUIET ENJOYMENT OR NON-INFRINGEMENT.
 * Please see the License for the specific language governing rights and
 * limitations under the License.
 * 
 * @APPLE_LICENSE_HEADER_END@
 */
/*
 * Copyright (c) 1989, 1993
 *	The Regents of the University of California.  All rights reserved.
 * (c) UNIX System Laboratories, Inc.
 * All or some portions of this file are derived from material licensed
 * to the University of California by American Telephone and Telegraph
 * Co. or Unix System Laboratories, Inc. and are reproduced herein with
 * the permission of UNIX System Laboratories, Inc.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@(#)time.h	8.3 (Berkeley) 1/21/94
 */

#ifndef _TIME_H_
#define	_TIME_H_

#include <machine/ansi.h>

#ifndef	NULL
#define	NULL	0
#endif

#ifndef	_BSD_CLOCK_T_DEFINED_
#define _BSD_CLOCK_T_DEFINED_
typedef	_BSD_CLOCK_T_	clock_t;
#endif

#ifndef	_BSD_TIME_T_DEFINED_
#define	_BSD_TIME_T_DEFINED_
typedef	_BSD_TIME_T_	time_t;
#endif

#ifndef	_BSD_SIZE_T_DEFINED_
#define	_BSD_SIZE_T_DEFINED_
typedef	_BSD_SIZE_T_	size_t;
#endif

#ifndef _TIMESPEC_DECLARED           
#define _TIMESPEC_DECLARED
struct timespec {
        time_t  tv_sec;         /* seconds */
        long    tv_nsec;        /* and nanoseconds */  
};
#endif

struct tm {
	int	tm_sec;		/* seconds after the minute [0-60] */
	int	tm_min;		/* minutes after the hour [0-59] */
	int	tm_hour;	/* hours since midnight [0-23] */
	int	tm_mday;	/* day of the month [1-31] */
	int	tm_mon;		/* months since January [0-11] */
	int	tm_year;	/* years since 1900 */
	int	tm_wday;	/* days since Sunday [0-6] */
	int	tm_yday;	/* days since January 1 [0-365] */
	int	tm_isdst;	/* Daylight Savings Time flag */
	long	tm_gmtoff;	/* offset from CUT in seconds */
	char	*tm_zone;	/* timezone abbreviation */
};

#include <machine/limits.h>	/* Include file containing CLK_TCK. */

#define CLOCKS_PER_SEC  (CLK_TCK)

#include <sys/cdefs.h>

#ifndef _ANSI_SOURCE
extern char *tzname[];
#endif

__BEGIN_DECLS
char *asctime(const struct tm *);
clock_t clock(void);
char *ctime(const time_t *);
double difftime(time_t, time_t);
struct tm *gmtime(const time_t *);
struct tm *localtime(const time_t *);
time_t mktime(struct tm *);
size_t strftime(char *, size_t, const char *, const struct tm *);
time_t time(time_t *);

#ifndef _ANSI_SOURCE
void tzset(void);
#endif /* not ANSI */

#if !defined(_ANSI_SOURCE) && !defined(_POSIX_SOURCE)
char *asctime_r(const struct tm *, char *);
char *ctime_r(const time_t *, char *);
struct tm *gmtime_r(const time_t *, struct tm *);
struct tm *localtime_r(const time_t *, struct tm *);
time_t posix2time(time_t);
char *strptime(const char *, const char *, struct tm *);
char *timezone(int, int);
void tzsetwall(void);
time_t time2posix(time_t);
time_t timelocal(struct tm * const);
time_t timegm(struct tm * const);
#endif /* neither ANSI nor POSIX */

#if !defined(_ANSI_SOURCE)
int nanosleep(const struct timespec *, struct timespec *);
#endif
__END_DECLS

#endif /* !_TIME_H_ */

--Apple-Mail-8--945032340
	charset=US-ASCII;
	format=flowed


On Feb 13, 2005, at 21.44, root wrote:

> Martin Snelgrove,
>
> Actually you want to try telling it the truth :-)
>
> The top level level Makefile looks at the last portion of the AXIOM
> shell variable to try to set up for the target system. You told it
> you were using 'linux' but should say 'MACOSX'.
> In your case you might want to try:
>
> export AXIOM=`pwd`/mnt/MACOSX
> export PATH=$AXIOM/bin:$PATH
> make
>
> Likely this will still fail but much further along.
> There are two people on this list, Chuck Miller and Pierre Doucy,
> who are also interested in the MAC OSX port.
>
> The SIGCLD issue has to do with the C defined variable called
> PLF (in the top level Makefile.pamphlet) which has the value
> PLF=MACOSXplatform
> for a MAC OSX build. MAC OSX is a BSD system and certain
> incompatibilities arise.
>
> Please try this, save the console output, and let me (and the
> rest of the list) know how it fails. I don't have a MAC so I'm
> working blind.
>
>
> As to the configure script issue I'll add the "Darwin" string
> to try to give hints about the AXIOM variable setting.
>
> The configure script really doesn't do anything because there
> is no obvious way to set a shell variable from a shell script
> and have the change be permanent. So it just gives you advice.
>
> Tim
>
>

--Apple-Mail-8--945032340--




\start
Date: Mon, 14 Feb 2005 09:16:03 -0500
From: William Sit
To: Bill Page
Subject: Re: [Q] How to classify  # integrate(log(%i+z^2), z)  -> 2  ?


Bill Page wrote:
> 
> On Friday, February 11, 2005 9:56 AM Vladimir Bondarenko wrote:
> > ...
> > ===> Case 2.
> >
> > -> integrate(log(%i+z^2), z)
> >
> >                   +-----+    2
> >      +-----+    z\|- 4%i  + z  - %i            2
> >     \|- 4%i log(-------------------) + 2z log(z  + %i) - 4z
> >                        2
> >                       z  + %i
> >    [-------------------------------------------------------,
> >                                2
> >                                  +---+
> >            2          +---+     \|4%i
> >     z log(z  + %i) - \|4%i atan(------) - 2z]
> >                                   2z
> > ...
> > But why the user really needs 2 forms of the same answer?
> >
> 
> I think you should report it as a bug.
> 
I'm not sure, because you can use

(4) -> complexIntegrate(log(%i+z^2),z)

   (4)
                    +-----+
        +-----+    \|- 4%i  + 2z            2
       \|- 4%i log(-------------) + 2z log(z  + %i)
                         2
     +
                        +-----+
          +-----+    - \|- 4%i  + 2z
       - \|- 4%i log(---------------) - 4z
                            2
  /
     2
                            Type: Expression Complex Integer

to obtain one form. Using integrate when the integrand involves complex values
and ask for real forms does not sound correct. Axiom may (I am not sure) have
interpreted %i as a parameter with no special property.

A comparison with a parameter to replace %i shows the form of the answers in
both cases (integrate or complexIntegrate) are the same.

(5) -> complexIntegrate(log(a+z^2),z)

   (5)
               +----+                       +----+
    +----+    \|- 4a  + 2z     +----+    - \|- 4a  + 2z            2
   \|- 4a log(------------) - \|- 4a log(--------------) + 2z log(z  + a) - 4z
                    2                           2
   ---------------------------------------------------------------------------
                                        2
                                                     Type: Expression Integer
(6) -> integrate(log(a+z^2),z)

   (6)
                 +---+    2
     +---+    2z\|- a  + z  - a           2
   [\|- a log(-----------------) + z log(z  + a) - 2z,
                     2
                    z  + a
                 +-+
        +-+     \|a            2
    - 2\|a atan(----) + z log(z  + a) - 2z]
                  z
                                     Type: Union(List Expression Integer,...)



William



\start
Date: Mon, 14 Feb 2005 18:15:28 +0200
From: Vladimir Bondarenko
To: William Sit
Subject: Re[2]: [Q] How to classify # integrate(log(%i+z^2), z)   -> 2  ?

Hi,

Monday, February 14, 2005, 4:16:03 PM, you write:

WS> Axiom may (I am not sure) have interpreted %i as a parameter
WS> with no special property.

If it is the case, this is certainly a bug as %i has a special,
a unique meaning in AXIOM, isn't is so?

-> #integrate(log(%i+z^2), z)
2

mean that in fact the user would have 2 identical answers,
and if we ask AXIOM to calculate

-> 2*3

we sure do not expect to see

[6,6]

but rather

6

?

Even more, if these 2 answers returned by AXIOM for
integrate(log(%i+z^2), z) are NOT identical, it is
obviously a math bug. The must be the same (but maybe
of different form).


Best,

Vladimir



WS> Bill Page wrote:
>> 
>> On Friday, February 11, 2005 9:56 AM Vladimir Bondarenko wrote:
>> > ...
>> > ===> Case 2.
>> >
>> > -> integrate(log(%i+z^2), z)
>> >
>> >                   +-----+    2
>> >      +-----+    z\|- 4%i  + z  - %i            2
>> >     \|- 4%i log(-------------------) + 2z log(z  + %i) - 4z
>> >                        2
>> >                       z  + %i
>> >    [-------------------------------------------------------,
>> >                                2
>> >                                  +---+
>> >            2          +---+     \|4%i
>> >     z log(z  + %i) - \|4%i atan(------) - 2z]
>> >                                   2z
>> > ...
>> > But why the user really needs 2 forms of the same answer?
>> >
>> 
>> I think you should report it as a bug.
>> 
WS> I'm not sure, because you can use

(4) ->> complexIntegrate(log(%i+z^2),z)

WS>    (4)
WS>                     +-----+
WS>         +-----+    \|- 4%i  + 2z            2
WS>        \|- 4%i log(-------------) + 2z log(z  + %i)
WS>                          2
WS>      +
WS>                         +-----+
WS>           +-----+    - \|- 4%i  + 2z
WS>        - \|- 4%i log(---------------) - 4z
WS>                             2
WS>   /
WS>      2
WS>                             Type: Expression Complex Integer

WS> to obtain one form. Using integrate when the integrand involves complex values
WS> and ask for real forms does not sound correct. Axiom may (I am not sure) have
WS> interpreted %i as a parameter with no special property.

WS> A comparison with a parameter to replace %i shows the form of the answers in
WS> both cases (integrate or complexIntegrate) are the same.

(5) ->> complexIntegrate(log(a+z^2),z)

WS>    (5)
WS>                +----+                       +----+
WS>     +----+    \|- 4a  + 2z     +----+    - \|- 4a  + 2z            2
WS>    \|- 4a log(------------) - \|- 4a log(--------------) + 2z log(z  + a) - 4z
WS>                     2                           2
WS>    ---------------------------------------------------------------------------
WS>                                         2
WS>                                                      Type: Expression Integer
(6) ->> integrate(log(a+z^2),z)

WS>    (6)
WS>                  +---+    2
WS>      +---+    2z\|- a  + z  - a           2
WS>    [\|- a log(-----------------) + z log(z  + a) - 2z,
WS>                      2
WS>                     z  + a
WS>                  +-+
WS>         +-+     \|a            2
WS>     - 2\|a atan(----) + z log(z  + a) - 2z]
WS>                   z
WS>                                      Type: Union(List Expression Integer,...)



Viva la Cyber Tester!

-- 
Vladimir Bondarenko

GEMM architect
Co-founder, CEO, Mathematical Director
Cyber Tester, LLC
13 Dekabristov Str, Simferopol
Crimea 95000, Ukraine
tel: +38-(0652)-447325
tel: +38-(0652)-230243
tel: +38-(0652)-523144
fax: +38-(0652)-510700

http://www.cybertester.com/
http://maple.bug-list.org/
http://www.CAS-testing.org/




\start
Date: Mon, 14 Feb 2005 12:23:32 -0500
From: Bill Page
To: William Sit
Subject: RE: [Q] How to classify  # integrate(log(%i+z^2), z)   -> 2  ?

On Monday, February 14, 2005 9:16 AM William Sit wrote:
>
>
> Bill Page wrote:
> >
> > On Friday, February 11, 2005 9:56 AM Vladimir Bondarenko wrote:
> > > ...
> > > ===> Case 2.
> > >
> > > -> integrate(log(%i+z^2), z)
> > > ...
> > > But why the user really needs 2 forms of the same answer?
> > >
> >
> > I think you should report it as a bug.
> >
> I'm not sure, because you can use
>
> (4) -> complexIntegrate(log(%i+z^2),z)
> ...
> to obtain one form.

That is true, but it is a different problem and it doesn't make
the first result correct (returning two equivalent expressions).
To me, this is still a bug - although admittedly not a very serious
bug since Axiom only claims to "return all possible values" - not
that these answers would necessarily all be unique.

> Using integrate when the integrand involves complex values and
> ask for real forms does not sound correct.

I don't understand your objection. The expression `log(%i+z^2)'
does not contain any parameters. It makes perfectly good sense
to me to integrate this complex-valued function over the real
line z. I don't think that using `integrate' is "asking for real
forms". What are "real forms"? The expressions returned by Axiom
for both `integrate' and `complexIntegrate' can involve complex
quantities and both (implicitly) assume that the variable of
integration is real-valued.

[Aside: Here is yet another place where it would be desirable
if Axiom implemented the notion of typed variables instead of
just symbols.]

The Axiom Book has the following to say about integration (page
110):

"When real parameters are present, the form of the integral can
depend on the signs of some expressions. Rather than query the user
or make sign assumptions, Axiom returns all possible answers.
...
The integrate operation generally assumes that all parameters are
real. The only exception is when the integrand has complex valued
quantities.

If the parameter is complex instead of real, then the notion of
sign is undefined and there is a unique answer. You can request
this answer by "prepending" the word "complex" to the command name
..."

So the issue has to do only with assumptions about parameters.

Page 370:

"The package FunctionSpaceIntegration provides the top-level
integration operation, integrate, for integrating **real-valued
elementary functions**."

Since `log(%i+z^2)' is of type 'Expression Complex Integer' it
might be considered a bug that there is an `integrate' function
with the signature

)di op integrate

[7] (D2,Symbol) -> Union(D2,List D2) from FunctionSpaceIntegration(
         D4,D2)
         if D4 has Join(EuclideanDomain,OrderedSet,
         CharacteristicZero,RetractableTo Integer,
         LinearlyExplicitRingOver Integer) and D2 has Join(
         TranscendentalFunctionCategory,PrimitiveFunctionCategory,
         AlgebraicallyClosedFunctionSpace D4)

--------

Since Expression Complex Integer apparently has the required
properties and the intepreter chooses this function

(11) -> integrate(%% 10,z)

 Function Selection for integrate
      Arguments: (EXPR COMPLEX INT,VARIABLE z)

 [1]  signature:   (EXPR COMPLEX INT,SYMBOL) -> Union(
                       EXPR COMPLEX INT,
                       LIST EXPR COMPLEX INT)
      implemented: slot (Union (Expression (Complex (Integer)))
        (List (Expression (Complex (Integer)))))
        (Expression (Complex (Integer)))(Symbol) from
          FSINT(COMPLEX INT,EXPR COMPLEX INT)

---------

In contrast

(12) -> complexIntegrate(%% 10,z)

 Function Selection for complexIntegrate
      Arguments: (EXPR COMPLEX INT,VARIABLE z)

 [1]  signature:   (EXPR COMPLEX INT,SYMBOL) -> EXPR COMPLEX INT
      implemented: slot (Expression (Complex (Integer)))
        (Expression (Complex (Integer)))(Symbol) from
          FSCINT(COMPLEX INT,EXPR COMPLEX INT)

-----------

It is not clear to me what exactly is the intended difference
between the domains FSINT(COMPLEX INT,EXPR COMPLEX INT) and
FSCINT(COMPLEX INT,EXPR COMPLEX INT).

Further on page 372 the Book says:

"If the parameters and the variables of integration can be
complex numbers rather than real, then the notion of sign is
not defined. In this case all the possible answers can be
expressed as one complex function. To get that function, rather
than a list of real functions, use complexIntegrate, ..."

I think the reference to "variables of integration" must be
incorrect here, otherwise we would be talking about contour
integrals, residuals, etc. and that seems like a very different
subject - one that unfortunately Axiom doesn't seem to address :(

> Axiom may (I am not sure) have interpreted %i as a parameter
> with no special property.

If that is true, then surely that is a bug. Right?

Regards,
Bill Page.





\start
Date: 14 Feb 2005 13:03:24 -0500
From: Camm Maguire
To: Tim Daly
Subject: Re: Axiom on Fedora Core 3

Greetings!  I'd be appreciative if anyone can post a note indicating
whether FC3 problems persist, and if so, include all logs.

Take care,


Tim Daly writes:

> I'm burning a set of Fedora Core 3 CDs as I write this.
> I'm going to set up one of my local machines as FC3 and try the build here.
> 
> Tim
> 
> 
> _______________________________________________
> Axiom-developer mailing list
> list
> http://lists.nongnu.org/mailman/listinfo/axiom-developer
> 
> 
> 

-- 
Camm Maguire			     			Camm Maguire
==========================================================================
"The earth is but one country, and mankind its citizens."  --  Baha'u'llah



\start
Date: 14 Feb 2005 13:08:29 -0500
From: Camm Maguire
To: Tim Daly
Subject: Re: Graphics and Axiom (was Re: touchgraph, hypertex,
Cc: Kostas Oikonomou

Greetings!

Tim Daly writes:

> > > Using TK for at least hypertex sounds like a great idea to me. 
> > > Hypertex as it is looks definitely dated. Will the TK version be 
> > > available to the Unix Axiom also?
> > 
> > Correct me if I'm wrong Tim, but you're using this library to interface
> > with tk from lisp, correct?
> > 
> > http://www.peter-herth.de/ltk/
> > 
> > If so, it looks like ltk currently works on Linux and OSX already. 
> > Windows will probably (as usual) be the tricky part?
> 
> There is no such thing as a simple job.
> 
> There are several 'tricky' parts since I'm not a TK user. For example,
> I have yet to figure out how to put an image in a window. Trivial things
> like that take a while to figure out.
> 
> Yes, that is the package I'm using. Currently it uses facilities that
> are not yet available in gcl so I'm using clisp. Either GCL will 
> eventually support the defclass, etc or I'll rewrite ltk to stop
> using defclass.
> 

If you can post as much detail regarding the GCL/ltk probs, I'll try
to take a look.  Though I still don't see what is wrong with
Schelter's original gcl-tk, lisp portability issues aside.

Take care,

> It works on linux and windows, runs on clisp, and lives in a separate
> process so it hardly matters which lisp is used (that being the point).
> 
> Tim
> 
> 
> _______________________________________________
> Axiom-developer mailing list
> list
> http://lists.nongnu.org/mailman/listinfo/axiom-developer
> 
> 
> 

-- 
Camm Maguire			     			Camm Maguire
==========================================================================
"The earth is but one country, and mankind its citizens."  --  Baha'u'llah



\start
Date: 14 Feb 2005 13:10:47 -0500
From: Camm Maguire
To: Bill Page
Subject: Re: GCL 2.6.6 does not build Axiom on Windows

Greetings!  Now that the Feb. release is out, would greatly appreciate
someone with Windows chasing down the relevant diff between 2.6.6 and
working 2.6.5 w/ patches.

Take care,

Bill Page writes:

> Camm,
> 
> You will recall that some of the fixes included in GCL 2.6.6
> were motivated by patches that Mike Thomas made to 2.6.5 in
> order to build Axiom on windows. I think that one of your
> goals of releasing 2.6.6 was so that the GCL source used to
> build Axiom on both linux and windows would be the same.
> Unfortunately it seems that we have not quite reached that
> state yet.
> 
> Being optimistic, I added GCL 2.6.6 to the Axiom build in
> the usual way (added zips/gcl-2.6.6.tgz, new GCL 2.6.6 stanza
> in lsp/Makefile.pamphlet, and change GCLVERSION in Makefile).
> The build proceeds normally all the way to the beginning of
> the algebra compiles but fails on the first spad file with
> the message:
> 
>    Caught fatal error [memory may be damaged]
> 
> The current Axiom build on Windows does succeed with the original
> patches supplied by Mike Thomas when applied to GCL-2.6.5.
> 
> Given limited resources and the current set of priorities for
> the next scheduled release of Axiom (February), Tim Daly has
> indicated that it probably wont be until at least the March
> release before we can try again to merge the linux and windows
> builds. But in the mean time, if someone with more experience
> than me with GCL on Windows has the time to take a closer look
> at this, please let me know and I will try to help.
> 
> Regards,
> Bill Page.
> 
> ----------
> 
> Here's the output of the compile step:
> 
>                         AXIOM Computer Algebra System 
>               Version of Thursday January 20, 2005 at 02:09:19 
> ----------------------------------------------------------------------------
> -
>    Issue )copyright to view copyright notices.
>    Issue )summary for a summary of useful system commands.
>    Issue )quit to leave AXIOM and return to shell.
> ----------------------------------------------------------------------------
> -
>  
>    Using local database
> C:/msys/1.0/home/Administrator/axiom--windows--1/src/share/algebra/compress.
> daase..   Using local database
> C:/msys/1.0/home/Administrator/axiom--windows--1/src/share/algebra/interp.da
> ase..
>    Using local database
> C:/msys/1.0/home/Administrator/axiom--windows--1/src/share/algebra/operation
> .daase..
>    Using local database
> C:/msys/1.0/home/Administrator/axiom--windows--1/src/share/algebra/category.
> daase..
>    Using local database
> C:/msys/1.0/home/Administrator/axiom--windows--1/src/share/algebra/browse.da
> ase..
> (1) ->    Loading
> C:/msys/1.0/home/Administrator/axiom--windows--1/mnt/windows/autoload/apply.
>    Loading
> C:/msys/1.0/home/Administrator/axiom--windows--1/mnt/windows/autoload/c-doc.
>    Loading
> C:/msys/1.0/home/Administrator/axiom--windows--1/mnt/windows/autoload/c-util
> .
>    Loading
> C:/msys/1.0/home/Administrator/axiom--windows--1/mnt/windows/autoload/profil
> e.
>    Loading
> C:/msys/1.0/home/Administrator/axiom--windows--1/mnt/windows/autoload/catego
> ry.
>    Loading
> C:/msys/1.0/home/Administrator/axiom--windows--1/mnt/windows/autoload/compil
> er.
>    Loading
> C:/msys/1.0/home/Administrator/axiom--windows--1/mnt/windows/autoload/define
> .
>    Loading
> C:/msys/1.0/home/Administrator/axiom--windows--1/mnt/windows/autoload/functo
> r.
>    Loading
> C:/msys/1.0/home/Administrator/axiom--windows--1/mnt/windows/autoload/info.
>    Loading
> C:/msys/1.0/home/Administrator/axiom--windows--1/mnt/windows/autoload/iterat
> or.
>    Loading
> C:/msys/1.0/home/Administrator/axiom--windows--1/mnt/windows/autoload/modema
> p.
>    Loading
> C:/msys/1.0/home/Administrator/axiom--windows--1/mnt/windows/autoload/nrunco
> mp.
>    Loading
> C:/msys/1.0/home/Administrator/axiom--windows--1/mnt/windows/autoload/packag
> e.
>    Loading
> C:/msys/1.0/home/Administrator/axiom--windows--1/mnt/windows/autoload/htchec
> k.
>    Loading
> C:/msys/1.0/home/Administrator/axiom--windows--1/mnt/windows/autoload/xrunco
> mp.
>    Compiling AXIOM source code from file 
>       C:/msys/1.0/home/Administrator/axiom--windows--1/int/algebra/AHYP.spad
>       using old system compiler.
>    Loading
> C:/msys/1.0/home/Administrator/axiom--windows--1/mnt/windows/autoload/parsin
> g.
>    Loading
> C:/msys/1.0/home/Administrator/axiom--windows--1/mnt/windows/autoload/bootle
> x.
>    Loading
> C:/msys/1.0/home/Administrator/axiom--windows--1/mnt/windows/autoload/def.
>    Loading
> C:/msys/1.0/home/Administrator/axiom--windows--1/mnt/windows/autoload/fnewme
> ta.
>    Loading
> C:/msys/1.0/home/Administrator/axiom--windows--1/mnt/windows/autoload/metale
> x.
>    Loading
> C:/msys/1.0/home/Administrator/axiom--windows--1/mnt/windows/autoload/metame
> ta.
>    Loading
> C:/msys/1.0/home/Administrator/axiom--windows--1/mnt/windows/autoload/parse.
>    Loading
> C:/msys/1.0/home/Administrator/axiom--windows--1/mnt/windows/autoload/postpa
> r.
>    Loading
> C:/msys/1.0/home/Administrator/axiom--windows--1/mnt/windows/autoload/postpr
> op.
>    Loading
> C:/msys/1.0/home/Administrator/axiom--windows--1/mnt/windows/autoload/prepar
> se.
>    AHYP abbreviates category ArcHyperbolicFunctionCategory 
> ------------------------------------------------------------------------
>    initializing NRLIB AHYP for ArcHyperbolicFunctionCategory 
>  
>    >> System error:
>    Caught fatal error [memory may be damaged]
> 
> protected-symbol-warn called with (NIL)
> (1) -> 
> 
> 
> 
> 

-- 
Camm Maguire			     			Camm Maguire
==========================================================================
"The earth is but one country, and mankind its citizens."  --  Baha'u'llah



\start
Date: Mon, 14 Feb 2005 16:48:06 -0500
From: Bill Page
To: Tim Daly
Subject: RE: Service Outage - IMPORTANT!!!]

Tim,

I almost hesitate to say this but ... it seems to me that
maybe the recent upgrade to the axiom-developer virtual
server has significantly improved the performance of the
system. I noticed that the system was up and down (rebooted?)
quite a bit on Thursday - Saturday but I didn't mention it
because I know these things can take more time to sort out
then the system manager ever wants to admit... 

Today however it seems solid and fast.

Or did you actually purchase some higher bandwidth?

Regards,
Bill Page.

> -----Original Message-----
> From: 
> axiom-developer-bounces+bill.page1=sympatico.ca@nongnu.org 
> .org] On Behalf Of root
> Sent: Tuesday, February 08, 2005 8:39 PM
> To: list
> Subject: Service Outage - IMPORTANT!!!]
> 
> 
> PLEASE NOTE:
> 
> I buy the axiom-developer.org virtual machine service from 
> Rose Hosting. The axiom-developer.org machine will be down
> for a short while.
> Please let me know if anything fails when they restart it.
> 
> Tim Daly
> 
> 
> They sent me this note:
> 
> 
> ------- Start of forwarded message -------
> Date: Tue, 8 Feb 2005 15:07:57 -0600
> To: Tim Daly
> From: helpdesk@rosehosting.com
> Subject: Service Outage - IMPORTANT!!!
> 
> Dear Customer,
> 
> We will be doing a kernel upgrade on the 
> server that hosts your virtual server later
> today.
> 
> Therefore, we would like to inform you that
> we will have to shut down your server for a
> short period of time between 10 PM and 12 AM
> Central Time today.
> 
> The outage should not last more than 20-30
> minutes.
> 
> We apologize for the inconvenience and we
> thank you for your understanding.
> 
> Helpdesk
> RoseHosting.com
> 
> ------- End of forwarded message -------
> 




\start
Date: Mon, 14 Feb 2005 19:11:15 -0500
From: Martin Snelgrove
To: Tim Daly
Subject: Re: MAC OSX port
Cc: Charles Miller


--Apple-Mail-1--877426757
	charset=US-ASCII;
	delsp=yes;
	format=flowed

Tim,

I'll split my response into a couple of mails, to reduce my own  
confusion. Here's the result of looking around in my
Mac 10.3.8 +Fink + darwinports for sigaction in includes. Next mail  
runs the requested compile.

sigaction appears in /usr/include/signal.h and also  
/usr/include/sys/signal.h (which have the Apple&BSD license stuff at  
the top):
I'll paste in extracts in the general area below. Re Fink, I didn't  
find it in grepping  /sw/include/*.h, and there is no /sw/include/sys.

I see -I/usr/include/sys but not -I/usr/include in the transcript file.

As to Fink; first off I should point out that there's also the  
"darwinports.org" project, which I believe puts things in /opt. Here's
a clip of me looking for signal.h in both /opt and /sw:

include $ find /opt -name signal.h
include $ find /sw -name signal.h
/sw/lib/gcc/powerpc-apple-darwin7.7.0/3.4.3/include/sys/signal.h
/sw/src/g77-3.4-20031015-2/darwin/gcc/include/sys/signal.h
/sw/src/g77-3.4-20031015-2/gcc-3.4-20031015/gcc/fixinc/tests/base/sys/ 
signal.h
/sw/src/g77-3.4-20031015-2/gcc-3.4-20031015/libstdc++-v3/include/ 
c_compatibility/signal.h

which I interpret to mean that the Fink gcc and g77 compilers have  
their own ideas about signal.h, or don't trust Apple.

	regards
		ws

here's the head of /usr/include/signal.h after the comments:

#ifndef _USER_SIGNAL_H
#define _USER_SIGNAL_H

#include <sys/types.h>
#include <sys/cdefs.h>
#include <sys/signal.h>

#if !defined(_ANSI_SOURCE) && !defined(_POSIX_SOURCE)
extern __const char *__const sys_signame[NSIG];
extern __const char *__const sys_siglist[NSIG];
#endif

__BEGIN_DECLS
int     raise(int);
#ifndef _ANSI_SOURCE
int     kill(pid_t, int);
int     sigaction(int, const struct sigaction *, struct sigaction *);

--------------------- CUT -------------------------------

and here's the piece in /usr/include/sys/signal.h

/* union for signal handlers */
union __sigaction_u {
         void    (*__sa_handler)(int);
         void    (*__sa_sigaction)(int, struct __siginfo *,
                        void *);
};

/* Signal vector template for Kernel user boundary */
struct  __sigaction {
         union __sigaction_u __sigaction_u;  /* signal handler */
         void    (*sa_tramp)(void *, int, int, siginfo_t *, void *);
         sigset_t sa_mask;               /* signal mask to apply */
         int     sa_flags;               /* see signal options below */
};

/*
  * Signal vector "template" used in sigaction call.
  */
struct  sigaction {
         union __sigaction_u __sigaction_u;  /* signal handler */
         sigset_t sa_mask;               /* signal mask to apply */
         int     sa_flags;               /* see signal options below */
};
/* if SA_SIGINFO is set, sa_sigaction is to be used instead of  
sa_handler. */
#define sa_handler      __sigaction_u.__sa_handler
#define sa_sigaction    __sigaction_u.__sa_sigaction



On Feb 14, 2005, at 01.19, root wrote:

> Martin,
>
> It appears from the warning messages that there are incomplete include  
> files.
> The message:
>
> bsdsignal.c:68: warning: implicit declaration of function `sigaction'
>
> implies that there was no declaration of the 'sigaction' function. The
> declarations are normally in include files and sigaction is fundamental
> so it would come from a system include file. From your environment  
> strings
> I can see the options for the CCFLAGS and it appears that the include
> files are all found but they don't seem to declare sigaction.
>
> Please try the following and send the output:
>
> cd /Users/snelgar/downloads/axiom/int/lib
> gcc -E -Wall -D_GNU_SOURCE -DMACOSXplatform -I/usr/X11/include  
> -I/usr/include/sys bsdsignal.c
>
> The -E flag run the preprocessor and inline all of the include files.
> If sigaction is not declared then we have to figure out where the MAC
> would hide the declaration.
>
> Does Fink have a special directory which has include files?
> If so, grep for sigaction and let me know what files contain it.
>
> Tim
>

--Apple-Mail-1--877426757
	charset=US-ASCII

Tim,


I'll split my response into a couple of mails, to reduce my own
confusion. Here's the result of looking around in my

Mac 10.3.8 +Fink + darwinports for sigaction in includes. Next mail
runs the requested compile.


sigaction appears in /usr/include/signal.h and also
/usr/include/sys/signal.h (which have the Apple&BSD license stuff at
the top): 

I'll paste in extracts in the general area below. Re Fink, I didn't
find it in grepping  /sw/include/*.h, and there is no /sw/include/sys.


I see -I/usr/include/sys but not -I/usr/include in the transcript file.


As to Fink; first off I should point out that there's also the
"darwinports.org" project, which I believe puts things in /opt. Here's

a clip of me looking for signal.h in both /opt and /sw:


include $ find /opt -name signal.h

include $ find /sw -name signal.h

/sw/lib/gcc/powerpc-apple-darwin7.7.0/3.4.3/include/sys/signal.h

/sw/src/g77-3.4-20031015-2/darwin/gcc/include/sys/signal.h

/sw/src/g77-3.4-20031015-2/gcc-3.4-20031015/gcc/fixinc/tests/base/sys/signal.h

/sw/src/g77-3.4-20031015-2/gcc-3.4-20031015/libstdc++-v3/include/c_compatibility/signal.h


which I interpret to mean that the Fink gcc and g77 compilers have
their own ideas about signal.h, or don't trust Apple.


	regards

		ws


<bold>here's the head of /usr/include/signal.h after the comments:</bold>


#ifndef _USER_SIGNAL_H

#define _USER_SIGNAL_H


#include <<sys/types.h>

#include <<sys/cdefs.h>

#include <<sys/signal.h>


#if !defined(_ANSI_SOURCE) && !defined(_POSIX_SOURCE)

extern __const char *__const sys_signame[NSIG];

extern __const char *__const sys_siglist[NSIG];

#endif


__BEGIN_DECLS

int     raise(int);

#ifndef _ANSI_SOURCE

int     kill(pid_t, int);

int     sigaction(int, const struct sigaction *, struct sigaction *);


<bold>--------------------- CUT -------------------------------


and here's the piece in /usr/include/sys/signal.h</bold>


/* union for signal handlers */

union __sigaction_u {

        void    (*__sa_handler)(int);

        void    (*__sa_sigaction)(int, struct __siginfo *,

                       void *);

};


/* Signal vector template for Kernel user boundary */

struct  __sigaction {

        union __sigaction_u __sigaction_u;  /* signal handler */

        void    (*sa_tramp)(void *, int, int, siginfo_t *, void *);

        sigset_t sa_mask;               /* signal mask to apply */

        int     sa_flags;               /* see signal options below */

};


/*

 * Signal vector "template" used in sigaction call.

 */

struct  sigaction {

        union __sigaction_u __sigaction_u;  /* signal handler */

        sigset_t sa_mask;               /* signal mask to apply */

        int     sa_flags;               /* see signal options below */

};

/* if SA_SIGINFO is set, sa_sigaction is to be used instead of
sa_handler. */

#define sa_handler      __sigaction_u.__sa_handler

#define sa_sigaction    __sigaction_u.__sa_sigaction




On Feb 14, 2005, at 01.19, root wrote:


<excerpt>Martin,


It appears from the warning messages that there are incomplete include
files.

The message:


bsdsignal.c:68: warning: implicit declaration of function `sigaction'


implies that there was no declaration of the 'sigaction' function. The

declarations are normally in include files and sigaction is fundamental

so it would come from a system include file. From your environment
strings

I can see the options for the CCFLAGS and it appears that the include

files are all found but they don't seem to declare sigaction.


Please try the following and send the output:


cd /Users/snelgar/downloads/axiom/int/lib

gcc -E -Wall -D_GNU_SOURCE -DMACOSXplatform -I/usr/X11/include
-I/usr/include/sys bsdsignal.c


The -E flag run the preprocessor and inline all of the include files.

If sigaction is not declared then we have to figure out where the MAC

would hide the declaration.


Does Fink have a special directory which has include files?

If so, grep for sigaction and let me know what files contain it.


Tim


</excerpt>
--Apple-Mail-1--877426757--




\start
Date: Mon, 14 Feb 2005 18:35:04 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [#99 x^1 abc[y] should be a syntax error] (new) 

The axiom command:
\begin{axiom}
x^1 abc[y]
\end{axiom}

does not produce any syntax error while
\begin{axiom}
x abc[y]
\end{axiom}

does produce an error message.

It seems that '1 abc[y]' is parsed as something unusual
\begin{axiom}
1 abc[y]
\end{axiom}

What is 'Type: UnivariatePolynomial(*01abc y,Integer)'?

--
forwarded from http://page.axiom-developer.org/zope/mathaction/99X1AbcYShouldBeASyntaxError#msg20050214183454-0600@page.axiom-developer.org



\start
Date: Mon, 14 Feb 2005 19:18:22 -0500
From: Martin Snelgrove
To: Tim Daly
Subject: Re: MAC OSX port
Cc: Charles Miller

Tim;

Appended below please find the second half of my response, with the 
compile: looks to me like it's finding struct sigaction from 
/usr/include/sys

	regards
		ws

P.S. let me know if I should be "attach"ing files like these rather 
than inlining them, or whether I'm polluting too many inboxes.

On Feb 14, 2005, at 01.19, root wrote:

> Please try the following and send the output:
>
> cd /Users/snelgar/downloads/axiom/int/lib
> gcc -E -Wall -D_GNU_SOURCE -DMACOSXplatform -I/usr/X11/include 
> -I/usr/include/sys bsdsignal.c
>
> The -E flag run the preprocessor and inline all of the include files.
> If sigaction is not declared then we have to figure out where the MAC
> would hide the declaration.
>



lib $ gcc -E -Wall -D_GNU_SOURCE -DMACOSXplatform -I/usr/X11/include 
-I/usr/include/sys bsdsignal.c
# 1 "bsdsignal.c"
#pragma GCC set_debug_pwd "/Users/snelgar/downloads/axiom/int/lib"
# 1 "<built-in>"
# 1 "<command line>"
# 1 "bsdsignal.c"
bsdsignal.c:34:22: useproto.h: No such file or directory
bsdsignal.c:35:23: bsdsignal.h: No such file or directory
# 37 "bsdsignal.c"
# 1 "/usr/include/sys/signal.h" 1
# 66 "/usr/include/sys/signal.h"
# 1 "/usr/include/sys/appleapiopts.h" 1 3 4
# 67 "/usr/include/sys/signal.h" 2





# 1 "/usr/include/machine/signal.h" 1 3 4
# 27 "/usr/include/machine/signal.h" 3 4
# 1 "/usr/include/ppc/signal.h" 1 3 4
# 32 "/usr/include/ppc/signal.h" 3 4
typedef int sig_atomic_t;
# 50 "/usr/include/ppc/signal.h" 3 4
typedef enum {
         REGS_SAVED_NONE,
         REGS_SAVED_CALLER,


         REGS_SAVED_ALL
} regs_saved_t;
# 66 "/usr/include/ppc/signal.h" 3 4
struct sigcontext {
     int sc_onstack;
     int sc_mask;
         int sc_ir;
     int sc_psw;
     int sc_sp;
         void *sc_regs;
};
# 28 "/usr/include/machine/signal.h" 2 3 4
# 73 "/usr/include/sys/signal.h" 2
# 134 "/usr/include/sys/signal.h"
# 1 "/usr/include/sys/types.h" 1 3 4
# 69 "/usr/include/sys/types.h" 3 4
# 1 "/usr/include/sys/cdefs.h" 1 3 4
# 70 "/usr/include/sys/types.h" 2 3 4


# 1 "/usr/include/machine/types.h" 1 3 4
# 30 "/usr/include/machine/types.h" 3 4
# 1 "/usr/include/ppc/types.h" 1 3 4
# 69 "/usr/include/ppc/types.h" 3 4
typedef signed char int8_t;
typedef unsigned char u_int8_t;
typedef short int16_t;
typedef unsigned short u_int16_t;
typedef int int32_t;
typedef unsigned int u_int32_t;
typedef long long int64_t;
typedef unsigned long long u_int64_t;

typedef int32_t register_t;

typedef long int intptr_t;
typedef unsigned long int uintptr_t;
# 31 "/usr/include/machine/types.h" 2 3 4
# 73 "/usr/include/sys/types.h" 2 3 4

# 1 "/usr/include/machine/ansi.h" 1 3 4
# 33 "/usr/include/machine/ansi.h" 3 4
# 1 "/usr/include/ppc/ansi.h" 1 3 4
# 93 "/usr/include/ppc/ansi.h" 3 4
typedef union {
         char __mbstate8[128];
         long long _mbstateL;
} __mbstate_t;
# 34 "/usr/include/machine/ansi.h" 2 3 4
# 75 "/usr/include/sys/types.h" 2 3 4
# 1 "/usr/include/machine/endian.h" 1 3 4
# 30 "/usr/include/machine/endian.h" 3 4
# 1 "/usr/include/ppc/endian.h" 1 3 4
# 81 "/usr/include/ppc/endian.h" 3 4

unsigned long htonl (unsigned long);
unsigned short htons (unsigned short);
unsigned long ntohl (unsigned long);
unsigned short ntohs (unsigned short);

# 31 "/usr/include/machine/endian.h" 2 3 4
# 76 "/usr/include/sys/types.h" 2 3 4


typedef unsigned char u_char;
typedef unsigned short u_short;
typedef unsigned int u_int;
typedef unsigned long u_long;
typedef unsigned short ushort;
typedef unsigned int uint;


typedef u_int64_t u_quad_t;
typedef int64_t quad_t;
typedef quad_t * qaddr_t;

typedef char * caddr_t;
typedef int32_t daddr_t;
typedef int32_t dev_t;
typedef u_int32_t fixpt_t;
typedef u_int32_t gid_t;
typedef u_int32_t in_addr_t;
typedef u_int16_t in_port_t;
typedef u_int32_t ino_t;
typedef long key_t;
typedef u_int16_t mode_t;
typedef u_int16_t nlink_t;
typedef quad_t off_t;
typedef int32_t pid_t;
typedef quad_t rlim_t;
typedef int32_t segsz_t;
typedef int32_t swblk_t;
typedef u_int32_t uid_t;
typedef u_int32_t useconds_t;
# 118 "/usr/include/sys/types.h" 3 4
typedef unsigned long clock_t;




typedef long unsigned int size_t;




typedef int ssize_t;




typedef long time_t;
# 147 "/usr/include/sys/types.h" 3 4
typedef int32_t fd_mask;






typedef struct fd_set {
         fd_mask fds_bits[(((1024) + (((sizeof(fd_mask) * 8)) - 1)) / 
((sizeof(fd_mask) * 8)))];
} fd_set;
# 183 "/usr/include/sys/types.h" 3 4
struct _pthread_handler_rec
{
         void (*routine)(void *);
         void *arg;
         struct _pthread_handler_rec *next;
};
# 203 "/usr/include/sys/types.h" 3 4
typedef struct _opaque_pthread_t { long sig; struct 
_pthread_handler_rec *cleanup_stack; char opaque[596];} *pthread_t;

typedef struct _opaque_pthread_attr_t { long sig; char opaque[36]; } 
pthread_attr_t;

typedef struct _opaque_pthread_mutexattr_t { long sig; char opaque[8]; 
} pthread_mutexattr_t;

typedef struct _opaque_pthread_mutex_t { long sig; char opaque[40]; } 
pthread_mutex_t;

typedef struct _opaque_pthread_condattr_t { long sig; char opaque[4]; } 
pthread_condattr_t;

typedef struct _opaque_pthread_cond_t { long sig; char opaque[24]; } 
pthread_cond_t;

typedef struct _opaque_pthread_rwlockattr_t { long sig; char 
opaque[12]; } pthread_rwlockattr_t;

typedef struct _opaque_pthread_rwlock_t { long sig; char opaque[124]; } 
pthread_rwlock_t;

typedef struct { long sig; char opaque[4]; } pthread_once_t;



typedef unsigned long pthread_key_t;
# 135 "/usr/include/sys/signal.h" 2

typedef unsigned int sigset_t;

union sigval {

         int sigval_int;
         void *sigval_ptr;
};







struct sigevent {
         int sigev_notify;
         int sigev_signo;
         union sigval sigev_value;
         void (*sigev_notify_function)(union sigval);
         pthread_attr_t *sigev_notify_attributes;
};

typedef struct __siginfo {
         int si_signo;
         int si_errno;
         int si_code;
         int si_pid;
         unsigned int si_uid;
         int si_status;
         void *si_addr;
         union sigval si_value;
         long si_band;
         unsigned int pad[7];
} siginfo_t;
# 218 "/usr/include/sys/signal.h"
union __sigaction_u {
         void (*__sa_handler)(int);
         void (*__sa_sigaction)(int, struct __siginfo *,
                        void *);
};


struct __sigaction {
         union __sigaction_u __sigaction_u;
         void (*sa_tramp)(void *, int, int, siginfo_t *, void *);
         sigset_t sa_mask;
         int sa_flags;
};




struct sigaction {
         union __sigaction_u __sigaction_u;
         sigset_t sa_mask;
         int sa_flags;
};
# 275 "/usr/include/sys/signal.h"
typedef void (*sig_t) (int);




struct sigaltstack {
         char *ss_sp;
         int ss_size;
         int ss_flags;
};

typedef struct sigaltstack stack_t;
# 297 "/usr/include/sys/signal.h"
struct sigvec {
         void (*sv_handler)(int);
         int sv_mask;
         int sv_flags;
};
# 315 "/usr/include/sys/signal.h"
struct sigstack {
         char *ss_sp;
         int ss_onstack;
};
# 348 "/usr/include/sys/signal.h"

void (*signal (int, void (*) (int))) (int);

# 38 "bsdsignal.c" 2
bsdsignal.c:38:24: bsdsignal.H1: No such file or directory



SignalHandlerFunc






bsdSignal(int sig,SignalHandlerFunc action,int restartSystemCall)

{


   struct sigaction in,out;
   in.__sigaction_u.__sa_handler = action;


   if(restartSystemCall) in.sa_flags = 0x0002;
   else in.sa_flags = 0;
# 68 "bsdsignal.c"
   return (sigaction(sig, &in, &out) ? (SignalHandlerFunc) -1 :
           (SignalHandlerFunc) out.__sigaction_u.__sa_handler);




}
lib $




\start
Date: Mon, 14 Feb 2005 20:08:25 -0500
From: Tim Daly
To: Bill Page
Subject: Re: Service Outage - IMPORTANT!!!]

If I purchased additional bandwith I'll know at the next billing cycle :-)

I believe they upgraded to a 2.6 kernel so that might affect the tasking.

t



\start
Date: Mon, 14 Feb 2005 20:07:07 -0500
From: Tim Daly
To: Camm Maguire
Subject: Re: Axiom on Fedora Core 3

Camm,

The FC3 problems have been solved.

Tim



\start
Date: Mon, 14 Feb 2005 18:50:35 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [#99 x^1 abc[y] should be a syntax error] 


??changed:
-It seems that '1 abc[y]' is parsed as something unusual
It seems that '1 abc![y]' is parsed as something unusual

--
forwarded from http://page.axiom-developer.org/zope/mathaction/99X1AbcYShouldBeASyntaxError#msg20050214185035-0600@page.axiom-developer.org



\start
Date: Tue, 15 Feb 2005 13:41:04 +1000
From: Mike Thomas
To: Camm Maguire, Bill Page
Subject: RE: [Gcl-devel] Re: GCL 2.6.6 does not build Axiom on Windows

This is a multi-part message in MIME format.

------=_NextPart_000_019E_01C51363.FE752FB0
	charset="us-ascii"

Hi Camm/Bill.

| Greetings!  Now that the Feb. release is out, would greatly appreciate
| someone with Windows chasing down the relevant diff between 2.6.6 and
| working 2.6.5 w/ patches.

See attached file.  Much of the stuff is irrelevant to Windows - bfd, elf,
Debian changelog, so it just requires someone with a Windows Axiom
development setup who is in the mood for a some deconstructive rebuilds.

The code I diffed 2.6.6 against is from late December - the last time I
built Axiom.  I don't see myself going into this for several weeks at least.

Cheers

Mike Thomas.

------=_NextPart_000_019E_01C51363.FE752FB0
	name="2.6.6-2.6.5patched.diff"
	filename="2.6.6-2.6.5patched.diff"

diff -r -b axiom--windows--1--patch-1.old/lsp/gcl-2.6.5/acconfig.h =
/c/lang/source/gcl/gcl-2.6.6-cltl1/acconfig.h=0A=
252a253=0A=
> #undef HZ=0A=
diff -r -b axiom--windows--1--patch-1.old/lsp/gcl-2.6.5/bin/gclfinal.bat =
/c/lang/source/gcl/gcl-2.6.6-cltl1/bin/gclfinal.bat=0A=
2c2=0A=
< ECHO start %1\lib\gcl-2.6.5\unixport\saved_gcl.exe -dir =
%1\lib\gcl-2.6.5\unixport -libdir %1\lib\gcl-2.6.5 -eval "(setq =
si::*allow-gzipped-file* t)" %1 %2 %3 %4 %5 %6 %7 %8 %9 >> gcli.bat=0A=
---=0A=
> ECHO start %1\lib\gcl-2.6.6\unixport\saved_gcl.exe -dir =
%1\lib\gcl-2.6.6\unixport -libdir %1\lib\gcl-2.6.6 -eval "(setq =
si::*allow-gzipped-file* t)" %1 %2 %3 %4 %5 %6 %7 %8 %9 >> gcli.bat=0A=
diff -r -b =
axiom--windows--1--patch-1.old/lsp/gcl-2.6.5/cmpnew/gcl_cmpcall.lsp =
/c/lang/source/gcl/gcl-2.6.6-cltl1/cmpnew/gcl_cmpcall.lsp=0A=
267,269c267=0A=
< ; 20031022000 tpd we don't need to know this=0A=
< ;      (cmpnote "Tail-recursive call of ~s was replaced by iteration." =
fname)=0A=
<       )=0A=
---=0A=
>       (cmpnote "Tail-recursive call of ~s was replaced by iteration." =
fname))=0A=
diff -r -b =
axiom--windows--1--patch-1.old/lsp/gcl-2.6.5/cmpnew/gcl_cmpflet.lsp =
/c/lang/source/gcl/gcl-2.6.6-cltl1/cmpnew/gcl_cmpflet.lsp=0A=
393,396c393,394=0A=
< ; 20031022000 tpd we don't need to know this=0A=
< ;    (cmpnote "Tail-recursive call of ~s was replaced by iteration."=0A=
< ;             (fun-name (car fd)))=0A=
<     )=0A=
---=0A=
>     (cmpnote "Tail-recursive call of ~s was replaced by iteration."
>              (fun-name (car fd))))
diff -r -b =
axiom--windows--1--patch-1.old/lsp/gcl-2.6.5/cmpnew/gcl_cmpmain.lsp =
/c/lang/source/gcl/gcl-2.6.6-cltl1/cmpnew/gcl_cmpmain.lsp=0A=
550c550=0A=
<       (format nil "~a -I~a ~a ~a -c -w ~a -o ~a"=0A=
---=0A=
>       (format nil "~a -I~a ~a ~a -c -w ~s -o ~s"=0A=
563c563=0A=
<    (format nil  "~a -I~a ~a ~a -c '~a' -o '~a' ~a"=0A=
---=0A=
>    (format nil  "~a -I~a ~a ~a -c ~s -o ~s ~a"=0A=
829c829=0A=
< 	     #+gnu-ld (format nil "-Wl,-Map ~a" (namestring map))=0A=
---=0A=
> 	     #+gnu-ld (format nil "-Wl,-Map ~a" (namestring map)) #-gnu-ld ""=0A=
diff -r -b axiom--windows--1--patch-1.old/lsp/gcl-2.6.5/configure.in =
/c/lang/source/gcl/gcl-2.6.6-cltl1/configure.in=0A=
237c237=0A=
< 	 PROCESSOR_FLAGS=3D"-mcpu=3Di386 -march=3Di386 "=0A=
---=0A=
> 	 PROCESSOR_FLAGS=3D"-march=3Di386 "=0A=
548a549,568=0A=
> =0A=
> # sysconf=0A=
> =0A=
> AC_CHECK_HEADER(unistd.h,=0A=
> 	AC_CHECK_LIB(c,sysconf,=0A=
> 		AC_MSG_CHECKING("for _SC_CLK_TCK")=0A=
> 		AC_TRY_RUN([#include <unistd.h>=0A=
> 		            #include <stdio.h>=0A=
> 		            int=0A=
> 			    main() {=0A=
> 			   	FILE *fp=3Dfopen("conftest1","w");=0A=
> 				fprintf(fp,"%lu\n",sysconf(_SC_CLK_TCK));=0A=
> 				fclose(fp);=0A=
> 			        return 0;=0A=
> 			    }],=0A=
> 			    hz=3D`cat conftest1`=0A=
> 			    AC_DEFINE_UNQUOTED(HZ,$hz)=0A=
> 			    ,hz=3D0,hz=3D0)=0A=
> 	        AC_MSG_RESULT($hz)))=0A=
> =0A=
diff -r -b axiom--windows--1--patch-1.old/lsp/gcl-2.6.5/debian/changelog =
/c/lang/source/gcl/gcl-2.6.6-cltl1/debian/changelog=0A=
0a1,28=0A=
> gcl (2.6.6-1) unstable; urgency=3Dhigh=0A=
> =0A=
>   * New upstream release=0A=
>   * Allow .data section to be first in executable, as on solaris.  Also=0A=
>     allow for new bfd section size semantics=0A=
>   * Don't try to write map file when not using GNU ld.  Also allow=0A=
>     compile-file to process pathnames with whitespace on Windows=0A=
>   * Fix corner case fixnum arithmetic on 64bit machines=0A=
>   * Rework gmp_wrappers semantics for older gcc=0A=
>   * Explicitly mprotect loaded code pages PROT_EXEC on x86 Linux, as =
FC3=0A=
>     now requires it.=0A=
>   * lisp-implementation-version is GCL=0A=
>   * Reader extension patch allowing for foo::(bar foobar) semantics=0A=
>   * a shell script variable fix in "unixport/makefile" for MSYS=0A=
>   * __MINGW32__ malloc initialisation fix in "o/alloc.c"=0A=
>   * Windows file/directory fixes in "o/unixfsys.c"=0A=
>   * MinGW32 -march in configure - removes deprecation warnings=0A=
>   * MinGW32 directory fix - "o/mingfile.c".=0A=
>   * Allow for sysconf to determine clock granularity at compile time to=0A=
>     fix time errors on the Itanium=0A=
>   * Disable SGC on macosx until the sgc/save problem can be fixed.=0A=
>   * Fix fixnum print bug on 64bit=0A=
>   * Fix nil types in room report=0A=
>   * 64bit fixes to fixnum_add and fixnum_sub=0A=
>   * Fix Mac SGC/save bug, at least in part=0A=
> =0A=
>  -- Camm Maguire  Sun, 16 Jan 2005 02:28:50 +0000=0A=
> =0A=
Binary files axiom--windows--1--patch-1.old/lsp/gcl-2.6.5/foo.exe and =
/c/lang/source/gcl/gcl-2.6.6-cltl1/foo.exe differ=0A=
diff -r -b axiom--windows--1--patch-1.old/lsp/gcl-2.6.5/h/386-linux.h =
/c/lang/source/gcl/gcl-2.6.6-cltl1/h/386-linux.h=0A=
43a44,58=0A=
> =0A=
> =0A=
> #ifdef IN_SFASL=0A=
> #include <sys/mman.h>=0A=
> #define CLEAR_CACHE {\=0A=
>    void *p,*pe; \=0A=
>    p=3D(void *)((unsigned long)memory->cfd.cfd_start & ~(PAGESIZE-1)); =
\=0A=
>    pe=3D(void *)((unsigned =
long)(memory->cfd.cfd_start+memory->cfd.cfd_size) & ~(PAGESIZE-1)) + =
PAGESIZE-1; \=0A=
>    if (mprotect(p,pe-p,PROT_READ|PROT_WRITE|PROT_EXEC)) {\=0A=
>      fprintf(stderr,"%p %p\n",p,pe);\=0A=
>      perror("");\=0A=
>      FEerror("Cannot mprotect", 0);\=0A=
>    }\=0A=
> }=0A=
> #endif=0A=
diff -r -b axiom--windows--1--patch-1.old/lsp/gcl-2.6.5/h/gclincl.h.in =
/c/lang/source/gcl/gcl-2.6.6-cltl1/h/gclincl.h.in=0A=
206a207=0A=
> #undef HZ=0A=
diff -r -b axiom--windows--1--patch-1.old/lsp/gcl-2.6.5/h/gmp_wrappers.h =
/c/lang/source/gcl/gcl-2.6.6-cltl1/h/gmp_wrappers.h=0A=
99d98=0A=
<            Join(RD_,rt_);\=0A=
100a100=0A=
>            Join(RD_,rt_);\=0A=
diff -r -b axiom--windows--1--patch-1.old/lsp/gcl-2.6.5/h/linux.defs =
/c/lang/source/gcl/gcl-2.6.6-cltl1/h/linux.defs=0A=
11,14d10=0A=
< # 20031022000 tpd link Axiom's code into the image=0A=
< EXTRAS =3D ${OBJ}/${SYS}/lib/cfuns-c.o ${OBJ}/${SYS}/lib/sockio-c.o=0A=
< OFLAG =3D -O=0A=
< =0A=
diff -r -b axiom--windows--1--patch-1.old/lsp/gcl-2.6.5/h/mingw.defs =
/c/lang/source/gcl/gcl-2.6.6-cltl1/h/mingw.defs=0A=
23c23=0A=
< EXTRAS       =3D ${ODIR}/mingwin.o ${ODIR}/mingfile.o =
${OBJ}/${SYS}/lib/cfuns-c.o ${OBJ}/${SYS}/lib/sockio-c.o=0A=
---=0A=
> EXTRAS       =3D ${ODIR}/mingwin.o ${ODIR}/mingfile.o=0A=
diff -r -b axiom--windows--1--patch-1.old/lsp/gcl-2.6.5/h/mp.h =
/c/lang/source/gcl/gcl-2.6.6-cltl1/h/mp.h=0A=
63a64,65=0A=
> #define ineg(a_) (sizeof(a_)=3D=3Dsizeof(unsigned) ? (unsigned)-(a_) : =
(unsigned long)-(a_))=0A=
> =0A=
65c67=0A=
< #define addsi(u,a,b) (a >=3D 0 ?  mpz_add_ui(u,b,a) : =
mpz_sub_ui(u,b,-a))=0A=
---=0A=
> #define addsi(u,a,b) (a >=3D 0 ?  mpz_add_ui(u,b,a) : =
mpz_sub_ui(u,b,ineg(a)))=0A=
74c76=0A=
< #define subis(u,a,b) (b >=3D 0 ?  mpz_sub_ui(u,a,b) : =
mpz_add_ui(u,a,-b))=0A=
---=0A=
> #define subis(u,a,b) (b >=3D 0 ?  mpz_sub_ui(u,a,b) : =
mpz_add_ui(u,a,ineg(b)))=0A=
76c78=0A=
< #define shifti(u,a,w) (w>=3D0 ? mpz_mul_2exp(u,a,w) : =
mpz_fdiv_q_2exp(u,MP(x),-w))=0A=
---=0A=
> #define shifti(u,a,w) (w>=3D0 ? mpz_mul_2exp(u,a,w) : =
mpz_fdiv_q_2exp(u,MP(x),ineg(w)))=0A=
diff -r -b =
axiom--windows--1--patch-1.old/lsp/gcl-2.6.5/h/powerpc-macosx.h =
/c/lang/source/gcl/gcl-2.6.6-cltl1/h/powerpc-macosx.h=0A=
114c114,115=0A=
< #define SGC=0A=
---=0A=
> /* until the sgc/save problem can be fixed.  20050114 CM*/=0A=
> /* #define SGC */=0A=
diff -r -b axiom--windows--1--patch-1.old/lsp/gcl-2.6.5/h/protoize.h =
/c/lang/source/gcl/gcl-2.6.6-cltl1/h/protoize.h=0A=
331,332c331,332=0A=
< /* num_arith.c:31:OF */ extern object fixnum_add (int i, int j); /* =
(i, j) int i; int j; */=0A=
< /* num_arith.c:48:OF */ extern object fixnum_sub (int i, int j); /* =
(i, j) int i; int j; */=0A=
---=0A=
> /* num_arith.c:31:OF */ extern object fixnum_add (fixnum i, fixnum j); =
/* (i, j) int i; int j; */=0A=
> /* num_arith.c:48:OF */ extern object fixnum_sub (fixnum i, fixnum j); =
/* (i, j) int i; int j; */=0A=
diff -r -b =
axiom--windows--1--patch-1.old/lsp/gcl-2.6.5/lsp/gcl_autoload.lsp =
/c/lang/source/gcl/gcl-2.6.6-cltl1/lsp/gcl_autoload.lsp=0A=
69c69=0A=
< (defun lisp-implementation-type () "Kyoto Common Lisp")=0A=
---=0A=
> (defun lisp-implementation-type () "GNU Common Lisp (GCL)")=0A=
238a239=0A=
> ;; FIXME  This has to come straight from enum.h. CM 20050114=0A=
245c246=0A=
<           cfun cclosure sfun gfun cfdata spice fat-string ))=0A=
---=0A=
>           cfun cclosure sfun gfun vfun afun closure cfdata spice))=0A=
diff -r -b axiom--windows--1--patch-1.old/lsp/gcl-2.6.5/minvers =
/c/lang/source/gcl/gcl-2.6.6-cltl1/minvers=0A=
1c1=0A=
< 6.5=0A=
---=0A=
> 6.6=0A=
diff -r -b axiom--windows--1--patch-1.old/lsp/gcl-2.6.5/o/alloc.c =
/c/lang/source/gcl/gcl-2.6.6-cltl1/o/alloc.c=0A=
826a827,835=0A=
> /* FIXME this is a work-around for the special MacOSX memory=0A=
>    initialization sequence, which sets heap_end, traditionally=0A=
>    initialized in gcl_init_alloc.  Mac and windows have non-std=0A=
>    sbrk-emulating memory subsystems, and their internals need to be=0A=
>    homogenized and integrated into the traditional unix sequence for=0A=
>    simplicity.  set_maxpage is overloaded, and the positioning of its=0A=
>    call is too fragile.  20050115 CM*/=0A=
> static int gcl_alloc_initialized;=0A=
> =0A=
835c844=0A=
<   if (heap_end) {=0A=
---=0A=
>   if (gcl_alloc_initialized) {=0A=
857d865=0A=
<   static int initialized;=0A=
863,864c871=0A=
<   if (initialized) return;=0A=
<   initialized=3D1;=0A=
---=0A=
>   if (gcl_alloc_initialized) return;=0A=
987a995=0A=
>   gcl_alloc_initialized=3D1;=0A=
diff -r -b axiom--windows--1--patch-1.old/lsp/gcl-2.6.5/o/num_arith.c =
/c/lang/source/gcl/gcl-2.6.6-cltl1/o/num_arith.c=0A=
33c33=0A=
< object fixnum_add(int i, int j)=0A=
---=0A=
> object fixnum_add(fixnum i, fixnum j)=0A=
49c49=0A=
< object fixnum_sub(int i, int j)=0A=
---=0A=
> object fixnum_sub(fixnum i, fixnum j)=0A=
diff -r -b axiom--windows--1--patch-1.old/lsp/gcl-2.6.5/o/print.d =
/c/lang/source/gcl/gcl-2.6.6-cltl1/o/print.d=0A=
619a620,621=0A=
> 		/*FIXME 64*/=0A=
> 		fixnum i;=0A=
diff -r -b axiom--windows--1--patch-1.old/lsp/gcl-2.6.5/o/read.d =
/c/lang/source/gcl/gcl-2.6.6-cltl1/o/read.d=0A=
394a395,399=0A=
> =0A=
> /* FIXME What should this be? Apparently no reliable way to use value =
stack */ =0A=
> #define MAX_PACKAGE_STACK 1024=0A=
> static object P0[MAX_PACKAGE_STACK],*PP0=3DP0,LP;=0A=
> =0A=
430a436,448=0A=
> 	if (c->ch.ch_code =3D=3D '(') { /* Loose package extension */=0A=
> 	  LP=3DLP || PP0=3D=3DP0 ? LP : PP0[-1]; /* push loose packages into =
nested lists */=0A=
> 	  if (LP) {=0A=
> 	    if (PP0-P0>=3DMAX_PACKAGE_STACK)=0A=
> 	      FEerror("Too many nested package specifiers",0);=0A=
> 	    *PP0++=3DLP;=0A=
> 	    LP=3DNULL;=0A=
> 	  }=0A=
> 	} else if (LP)=0A=
> 	    FEerror("Loose package prefix must be followed by a list",0);=0A=
> 	if (c->ch.ch_code=3D=3D')' && PP0>P0) PP0--; /* regardless of error =
behavior, =0A=
> 						    will pop stack to beginning as parens=0A=
> 						    must match before the reader starts */=0A=
502c520,526=0A=
< 		} else if (a =3D=3D cat_whitespace || a =3D=3D cat_terminating)=0A=
---=0A=
> 		} else if (a =3D=3D cat_terminating) {=0A=
> 			break;=0A=
>         	} else if (a =3D=3D cat_whitespace) {=0A=
> 		  /* skip all whitespace after trailing colon if no escape seen */=0A=
> 		  if (colon+colon_type=3D=3Dlength && !escape_flag)=0A=
> 		    goto K;=0A=
> 		  else=0A=
503a528=0A=
> 		}=0A=
589a615,623=0A=
> 	/* loose package is an empty token following a non-beginning =0A=
> 	   colon with no escape, to allow for ||*/=0A=
> 	if (!token->st.st_fillp && colon && !escape_flag) {=0A=
> 	  LP=3Dp;=0A=
> 	  goto BEGIN;=0A=
> 	}=0A=
> 	/* unless package specified for this symbol, use loose package if =
present */=0A=
> 	if (PP0>P0 && !colon_type)=0A=
> 	  p=3DPP0[-1];=0A=
631a666,668=0A=
> 			else if (PP0>P0) PP0--; /* should be the only other place=0A=
>  						   outside of read_object where=0A=
> 					           closing parens are read */=0A=
diff -r -b axiom--windows--1--patch-1.old/lsp/gcl-2.6.5/o/sfaslbfd.c =
/c/lang/source/gcl/gcl-2.6.6-cltl1/o/sfaslbfd.c=0A=
266c266=0A=
<     current+=3Ds->_raw_size;=0A=
---=0A=
>     current+=3Dbfd_section_size(b,s);=0A=
291c291=0A=
<     m+=3Ds->_raw_size;=0A=
---=0A=
>     m+=3Dbfd_section_size(b,s);=0A=
309c309=0A=
<       init_address=3Dq[u]->value;=0A=
---=0A=
>       =
init_address=3Dq[u]->value+(q[u]->section->output_section->vma-(unsigned =
long)memory->cfd.cfd_start);=0A=
346a347,348=0A=
>      unsigned long ss=3Dbfd_section_size(b,s);=0A=
> =0A=
356c358=0A=
<      memcpy((void *)(unsigned =
long)s->output_section->vma,v,s->_raw_size);=0A=
---=0A=
>      memcpy((void *)(unsigned long)s->output_section->vma,v,ss);=0A=
358a361=0A=
> =0A=
diff -r -b axiom--windows--1--patch-1.old/lsp/gcl-2.6.5/o/sfaslelf.c =
/c/lang/source/gcl/gcl-2.6.6-cltl1/o/sfaslelf.c=0A=
136,142c136,141=0A=
< static void *=0A=
< round_up(address,n)=0A=
<      unsigned int address,n;=0A=
< {=0A=
<  return  (void *)((address + n -1) & ~(n-1)) ;=0A=
< }=0A=
< #define ROUND_UP(a,b) round_up(a,b) =0A=
---=0A=
> /* static void * */=0A=
> /* round_up(unsigned long address,unsigned long n) { */=0A=
> /* { */=0A=
> /*  return  (void *)((address + n -1) & ~(n-1)) ; */=0A=
> /* } */=0A=
> #define ROUND_UP(_addr,_ps) ((void *)(((unsigned long)_addr + =
(unsigned long)_ps -1) & ~((unsigned long)_ps-1)))=0A=
312,314c311,314=0A=
<      int j=3D0;=0A=
<      for (j=3D1 ; j <  file_h->e_shnum ; j++)=0A=
<        {=0A=
---=0A=
>      int j;=0A=
> =0A=
>      for (j=3D1 ; j <  file_h->e_shnum ; j++) {=0A=
> =0A=
318,320c318,324=0A=
< 	     (SECTION_H(shp->sh_info).sh_flags & SHF_ALLOC))=0A=
< 	   {=0A=
< 	     int index_to_relocate =3D shp->sh_info;=0A=
---=0A=
> 	     (SECTION_H(shp->sh_info).sh_flags & SHF_ALLOC) =0A=
> 	     && (SECTION_H(shp->sh_info).sh_type =3D=3D SHT_PROGBITS=0A=
> 		|| SECTION_H(shp->sh_info).sh_type =3D=3D SHT_NOBITS)) {=0A=
> =0A=
> 	   int k;=0A=
> 	   char *rel =3D (char *) base +   shp->sh_offset;=0A=
> =0A=
323,332c327=0A=
< 	     the_start =3D start_address + section[index_to_relocate].start;=0A=
< 	   }=0A=
< /*  	 else if (shp->sh_type =3D=3D SHT_REL */=0A=
< /*  	     && (SECTION_H(shp->sh_info).sh_flags & SHF_ALLOC)) */=0A=
< /*  	   { */=0A=
< /*  	     int index_to_relocate =3D shp->sh_info; */=0A=
< /*  	     if (symtab_index !=3D shp->sh_link) */=0A=
< /*  	       FEerror("unexpected symbol table used"); */=0A=
< /*  	     the_start =3D start_address + =
section[index_to_relocate].start; */=0A=
< /*  	   } */=0A=
---=0A=
> 	   the_start =3D start_address + section[shp->sh_info].start;=0A=
334,347d328=0A=
< 	 else if ( (shp->sh_type =3D=3D SHT_REL) || (shp->sh_type =3D=3D =
SHT_RELA) )=0A=
< 	   {  if (/* get_section_number(".rel.stab") =3D=3D j || */=0A=
< 		  /* Newer gcc uses these section name -- CMM 20040224*/=0A=
< 		  !strncmp(section_names+SECTION_H(j).sh_name,".rel.debug",10) ||=0A=
< 		  /* old in for backward compatibility */=0A=
< 		  !strcmp(section_names+SECTION_H(j).sh_name,".rel.stab"))=0A=
< 	         continue;=0A=
< 	     FEerror("unknown rel type",0);=0A=
< 	   }=0A=
< 	 else=0A=
< 	   continue;=0A=
< 	 {=0A=
< 	   int k=3D0;=0A=
< 	   char *rel =3D (char *) base +   shp->sh_offset;=0A=
349a331=0A=
> =0A=
350a333=0A=
> =0A=
351a335=0A=
> =0A=
695c679=0A=
< 			   SECTION_H(sym->st_shndx).sh_type);=0A=
---=0A=
> 			   (int)SECTION_H(sym->st_shndx).sh_type);=0A=
711c695=0A=
< 		  *init_address_ptr =3D sym->st_value;=0A=
---=0A=
> 		  *init_address_ptr =3D sym->st_value+section[sym->st_shndx].start;=0A=
diff -r -b axiom--windows--1--patch-1.old/lsp/gcl-2.6.5/o/sfasli.c =
/c/lang/source/gcl/gcl-2.6.6-cltl1/o/sfasli.c=0A=
121c121=0A=
<     snprintf(tmpfile1,sizeof(tmpfile1),"rsym%d",getpid());=0A=
---=0A=
>     snprintf(tmpfile1,sizeof(tmpfile1),"rsym%d",(int)getpid());=0A=
diff -r -b axiom--windows--1--patch-1.old/lsp/gcl-2.6.5/o/unixtime.c =
/c/lang/source/gcl/gcl-2.6.6-cltl1/o/unixtime.c=0A=
39a40=0A=
> =0A=
41c42,43=0A=
< #define HZ 60=0A=
---=0A=
> /* #define HZ 60 */=0A=
> #define HZ 100=0A=
44c46,47=0A=
< #define HZ1 (HZ > 100 ? 100 : HZ)=0A=
---=0A=
> /* #define HZ1 (HZ > 100 ? 100 : HZ) */=0A=
> #define HZ1 HZ=0A=
diff -r -b =
axiom--windows--1--patch-1.old/lsp/gcl-2.6.5/unixport/init_gcl.lsp.in =
/c/lang/source/gcl/gcl-2.6.6-cltl1/unixport/init_gcl.lsp.in=0A=
87,88c87,88=0A=
< 	 ((si::get-command-arg "-f")))=0A=
< ;	 (t (format t si::*system-banner*)))=0A=
---=0A=
> 	 ((si::get-command-arg "-f"))=0A=
> 	 (t (format t si::*system-banner*)))=0A=
diff -r -b =
axiom--windows--1--patch-1.old/lsp/gcl-2.6.5/unixport/makefile =
/c/lang/source/gcl/gcl-2.6.6-cltl1/unixport/makefile=0A=
17,18c17=0A=
< # 20031022000 tpd link axiom's C library code.=0A=
< LD_LIBS_POST=3D$(LIBS) $(LIBC) -lgclp ${OBJ}/${SYS}/lib/libspad.a =
$(LAST_FILE)=0A=
---=0A=
> LD_LIBS_POST=3D$(LIBS) $(LIBC) -lgclp $(LAST_FILE)=0A=

------=_NextPart_000_019E_01C51363.FE752FB0--





\start
Date: Tue, 15 Feb 2005 09:22:11 -0500
From: William Sit
To: Bill Page
Subject: Re: [Q] How to classify  # integrate(log(%i+z^2), z)   -> 2  ?

Hi Bill and Vladimir:

It turns out, as usual, there is no such thing as a simple explanation. 

================ Equality of Functions =======================

[WS] I'm not sure, because you can use

 (4) -> complexIntegrate(log(%i+z^2),z)
 ...
 to obtain one form.

[BP] 
> That is true, but it is a different problem and it doesn't make
> the first result correct (returning two equivalent expressions).
> To me, this is still a bug - although admittedly not a very serious
> bug since Axiom only claims to "return all possible values" - not
> that these answers would necessarily all be unique.

[VB]
> 
> -> #integrate(log(%i+z^2), z)
> 2
> 
> mean that in fact the user would have 2 identical answers,
> and if we ask AXIOM to calculate
> [snipped]
> Even more, if these 2 answers returned by AXIOM for
> integrate(log(%i+z^2), z) are NOT identical, it is
> obviously a math bug. The must be the same (but maybe
> of different form).

As functions, the two results returned are NOT identical in the sense that the
domains (if division by 0 is not allowed) are different. If division by 0 is
allowed (by evaluating via some limit process), then they would be identical
(but Axiom or any other system cannot be expected to automatically perform this
type of verification without further user instruction or code, and this should
be on a "wish list", not a "bug list"). Even assuming that these two results are
identical as mathematical functions, this brings us to the question of what does
"identical" or "equality" mean in symbolic computation. Do we have an algorithm,
given two expressions in EXPR INT or EXPR COMPLEX INT (or even more generally
EXPR whatever), to say that they are mathematically equivalent as functions?
(isn't this undecidable?)

================== Scope of "integrate" ======================

[WS] 
 Using integrate when the integrand involves complex values and
 ask for real forms does not sound correct.

[BP]
> I don't understand your objection. The expression `log(%i+z^2)'
> does not contain any parameters. It makes perfectly good sense
> to me to integrate this complex-valued function over the real
> line z. I don't think that using `integrate' is "asking for real
> forms". What are "real forms"? The expressions returned by Axiom
> for both `integrate' and `complexIntegrate' can involve complex
> quantities and both (implicitly) assume that the variable of
> integration is real-valued.

My mistake ("real form"). Sorry. I believe the operation integrate is for
anti-derivative only, not to do what you want (which as you recognized
encroaches on contour integration).

========= Differences between "integrate" and "complexIntegrate" ====

[BP]
> The Axiom Book has the following to say about integration (page
> 110):
> 
> "When real parameters are present, the form of the integral can
> depend on the signs of some expressions. Rather than query the user
> or make sign assumptions, Axiom returns all possible answers.

I wish the sign assumptions are given and associated with the possible answers.
However, I also have some idea why this is not done (see below). 

> The integrate operation generally assumes that all parameters are
> real. The only exception is when the integrand has complex valued
> quantities.
> 
> If the parameter is complex instead of real, then the notion of
> sign is undefined and there is a unique answer. You can request
> this answer by "prepending" the word "complex" to the command name
> ..."
> 
> So the issue has to do only with assumptions about parameters.

No, two different algorithms may be involved here. For example, using
"integrate(log((a+%i)*(a-%i)+z^2,z)" Axiom is "smart enough" to return only one
branch, realizing that a^2+1 is always positive when a is assumed real. However,
as if to emphasize the difference between "integrate" (over EXPR COMPLEX INT)
and "complexIntegrate", the "integrate" routine "simplifies" sqrt(-1) to %i, but
the "complexIntegrate" routine does not! In other words, the answer in
"integrate" looks more "complex", and the answer in "complexIntegrate", more
"real". The two answers are also different in structure besides this but are
obviously mathematically the same (certainly for real parameter a, and even for
complex parameter a). I am not sure if the difference is due to lack of
sophistication in simplification or not (simplification is NOT a simple problem,
requiring the notion of canonical form).

(19) -> integrate(log((a+%i)*(a-%i)+z^2),z)

   (19)
                        +------+
      +------+          | 2         2    2
      | 2         2%i z\|a  + 1  + z  - a  - 1           2    2
   %i\|a  + 1 log(----------------------------) + z log(z  + a  + 1) - 2z
                            2    2
                           z  + a  + 1
                                  Type: Union(Expression Complex Integer,...)
(20) -> complexIntegrate(log((a+%i)*(a-%i)+z^2),z)

   (20)
                        +---------+                            +---------+
        +---------+     |    2               +---------+       |    2
        |    2         \|- 4a  - 4  + 2z     |    2         - \|- 4a  - 4  + 2z
       \|- 4a  - 4 log(-----------------) - \|- 4a  - 4 log(-------------------)

                               2                                     2
     +
               2    2
       2z log(z  + a  + 1) - 4z
  /
     2
                                             Type: Expression Complex Integer


=========== Should "integrate" over EXPR COMPLEX INT be allowed ======== 
[BP]
> Page 370:
> 
> "The package FunctionSpaceIntegration provides the top-level
> integration operation, integrate, for integrating **real-valued
> elementary functions**."
> 
> Since `log(%i+z^2)' is of type 'Expression Complex Integer' it
> might be considered a bug that there is an `integrate' function
> with the signature
> [snipped]
> [1]  signature:   (EXPR COMPLEX INT,SYMBOL) -> Union(
>                        EXPR COMPLEX INT,
>                        LIST EXPR COMPLEX INT)

Maybe. But the above example shows that there are situations where one may want
to allow that, because it is not always easy to know (especially in a chain of
computation) that an intermediate result fed to "integrate" is a "real-valued
elementary function" or not.

========= Differences between "integrate" and "complexIntegrate" ====
 

> ---------
> 
> In contrast
> 
> (12) -> complexIntegrate(%% 10,z)
> 
>  Function Selection for complexIntegrate
>       Arguments: (EXPR COMPLEX INT,VARIABLE z)
> 
>  [1]  signature:   (EXPR COMPLEX INT,SYMBOL) -> EXPR COMPLEX INT
>       implemented: slot (Expression (Complex (Integer)))
>         (Expression (Complex (Integer)))(Symbol) from
>           FSCINT(COMPLEX INT,EXPR COMPLEX INT)
> 
> -----------
> It is not clear to me what exactly is the intended difference
> between the domains FSINT(COMPLEX INT,EXPR COMPLEX INT) and
> FSCINT(COMPLEX INT,EXPR COMPLEX INT).

I think the reason for two different integration routines is to provide more
information when the integrand involves a real parameter.

========== Documentation ================

> Further on page 372 the Book says:
> 
> "If the parameters and the variables of integration can be
> complex numbers rather than real, then the notion of sign is
> not defined. In this case all the possible answers can be
> expressed as one complex function. To get that function, rather
> than a list of real functions, use complexIntegrate, ..."
> 
> I think the reference to "variables of integration" must be
> incorrect here, otherwise we would be talking about contour
> integrals, residuals, etc. and that seems like a very different
> subject - one that unfortunately Axiom doesn't seem to address :(

In these packages, I believe the only meaning for "integrate" is
anti-differentiation, so it makes perfectly good sense to say the dummy variable
is real or complex.

===== Should %i be treated as a parameter (symbol) in "integrate" ==============

The interpreter selection, in the integration discussed, over EXPR COMPLEX INT,
must be from the signature [7] you gave, resulting in [1] above:

> )di op integrate
> 
> [7] (D2,Symbol) -> Union(D2,List D2) from FunctionSpaceIntegration(
>          D4,D2)
>          if D4 has Join(EuclideanDomain,OrderedSet,
>          CharacteristicZero,RetractableTo Integer,
>          LinearlyExplicitRingOver Integer) and D2 has Join(
>          TranscendentalFunctionCategory,PrimitiveFunctionCategory,
>          AlgebraicallyClosedFunctionSpace D4)

Since the algorithm is categorical, the algorithm for integration will NOT (AND
SHOULD NOT) be aware of special properties of %i (or ANY particular element
other than 0 and 1 in the ground domain). ONLY the COMPLEX INT domain knows,
which will simplify %i^2 to -1, and the effect on the integration algorithm
depends on WHEN this simplification is done, not just limited to pre-processing
and post-processing. For example, 

(24) -> integrate(log((a^2+1)+z^2),z)

                           +------+
             +------+      | 2
             | 2          \|a  + 1            2    2
   (24)  - 2\|a  + 1 atan(---------) + z log(z  + a  + 1) - 2z
                              z
                                          Type: Union(Expression Integer,...)

gave yet a third form of the same integral (compare to (19), (20) above). This
third form suggests that the simplification of (a+%i)(a-%i) to a^2+1 is not done
at preprocessing time but within the integration routine.

When you perform an integration of a complex-valued function in a real variable,
it is reasonable to regard the complex constants as parameters during the
integration process unless such integration is outlawed to begin with (but see
above for one reason not to outlaw it). One would treat complex constants the
same way when differentiating with respect to a real variable. 

At what point the underlying domain simplifies a computation and how it does it
may affect the form of the answer. This is nothing new, especially for
elementary functions and special functions, which are involved in many
identities.

On the other hand, complexIntegrate SHOULD be aware of the property of %i, and
it does. The package that implements complexIntegrate is 
FunctionSpaceComplexIntegration (FSCINT) as given in [1] above.

========== Is this a bug? How to fix it? Alternatives? ==========


[WS]
 Axiom may (I am not sure) have interpreted %i as a parameter
 with no special property.
[BP] 
> If that is true, then surely that is a bug. Right?
[VB]
> If it is the case, this is certainly a bug as %i has a special,
> a unique meaning in AXIOM, isn't is so?

Not necessarily, as discussed above under "Should %i be ...".

If you consider this a bug, how would you fix it? 

To really understand how the branching occurs in "integrate", one will have to
study the integration algorithm (a very complicated procedure). I don't have the
time (nor competence) to do this, so let us consider a plausible and simplified
scenario for the sake of argument. If as the documentation says, "the notion of
sign is not defined" for COMPLEX INT, one may wish the algorithm to have failed 
when it does something like "if f > 0".  However, "failed" would be equivalent
to "outlawing" it, so let's see if we can "fix" it.

Scenario: Assume that f has been simplified. The "integrate" routine performs a
query to see if there is a function > (or related functions like sign) for the
domain containing the expression f and if yes, it performs branching based on
the result of the sign of f. Otherwise, make a declarative (proviso) that f > 0,
and continue based on that assumption and a similar one for f < 0, resulting in
two branches, say.

This would explain why we have two branches over COMPLEX INT (when %i is
involved) or POLY INT (when there is a real-valued parameter), and only one over
INT (when neither %i nor a parameter is involved).  Under this scenario, the
two-branch result would be unavoidable in "integrate(log(%i+z^2),z)" over
COMPLEX INT. If, as I wish, the returned list had provided info on the
declarative assumptions, we would have known the assumptions, even if it would
not make sense, like %i > 0 (this may be the reason for not giving the
assumptions; the generality may give meaningless conditions, while the answers
still make sense). The true scenario is probably not that simple. 

But in any case, to fix this, you will need to examine every instance in the
code for "integrate" where branching based on parts of the integrand may occur
and then handle the special cases (%i is only one, any complex constant may
appear in the integrand). 

So why not simply use complexIntegrate?

I think this is NOT a bug. 

As a possible alternative, you may want to write a simple package to convert
integrate to complexIntegrate WHENEVER the integrand is COMPLEX INT---but
beware.  Axiom has no reason to prevent the instantiation of 

integrate: EXPR COMPLEX INT ->Union(List EXPR COMPLEX INT, EXPR COMPLEX INT). 

To write the conversion, you have to intercept that. Moreover, there may be
situations when you DON'T want to do that, when the branches are really
different, for example, in integrate(log(%i+a+z),z) where a is real. 

So in the end, it is better that the user be aware (and as you pointed out, this
is documented) of the difference between integrate and complexIntegrate and use
each appropriately.

====== The Consequence of the Categorical Nature of Algorithms =======

The fact that algorithms are categorical in Axiom is the reason for some other
"strange" behaviors. I have written on this problem (about Axiom being inclusive
and not exclusive) in

[#87 solve(x + 1.1, 0.001) fails] reply and experimenting with
         new format

Often, what is needed is OTHER algorithms to handle the situation (here
complexIntegrate, and contour integration perhaps, and in the case of
solve(x+1.1,0.001), a numerical solver). 

William



\start
Date: 15 Feb 2005 09:39:06 -0500
From: Camm Maguire
To: Mike Thomas
Subject: Re: [Gcl-devel] Re: GCL 2.6.6 does not build Axiom on Windows

Thanks, Mike!  Bill, might you have a few moments to try to spot the
relevant patch?  I'd like to get stock GCL completely axiom/windows
ready. 

Take care,

Mike Thomas writes:

> Hi Camm/Bill.
> 
> | Greetings!  Now that the Feb. release is out, would greatly appreciate
> | someone with Windows chasing down the relevant diff between 2.6.6 and
> | working 2.6.5 w/ patches.
> 
> See attached file.  Much of the stuff is irrelevant to Windows - bfd, elf,
> Debian changelog, so it just requires someone with a Windows Axiom
> development setup who is in the mood for a some deconstructive rebuilds.
> 
> The code I diffed 2.6.6 against is from late December - the last time I
> built Axiom.  I don't see myself going into this for several weeks at least.
> 
> Cheers
> 
> Mike Thomas.
> 

-- 
Camm Maguire			     			Camm Maguire
==========================================================================
"The earth is but one country, and mankind its citizens."  --  Baha'u'llah



\start
Date: 15 Feb 2005 12:41:15 -0500
From: Camm Maguire
To: list
Subject: Archive file naming request

Greetings!  Could we please either rename the source tarballs on the
download site, or establish a symbolic link, following the syntax
below:

axiom-YYYYMMDD-src.tgz

This would both enable a (for example Debian) package version name
that would lexically follow the chronological order of development,
and allow the standard Debian tools to generate automatic package
rebuild requests when the version in the Debian archive is out of
date. 

Take care,
-- 
Camm Maguire			     			Camm Maguire
==========================================================================
"The earth is but one country, and mankind its citizens."  --  Baha'u'llah



\start
Date: Tue, 15 Feb 2005 13:19:11 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [AxiomDownload] mention linux before windows


??changed:
-  * "February 2005 sources":http://axiom.axiom-developer.org/axiom-website/DOWNLOADS/axiom-Feb2005-src.tgz
  * "February 2005 sources":http://axiom.axiom-developer.org/axiom-website/DOWNLOADS/axiom-20050201-src.tgz

++added:
    Note: At the present time Axiom for Windows can not be built from these
    source files. Download Windows source files from the developer archive
    axiom--windows--1.  For detailed instructions see ArchUsage.


++added:
  - "RedHat 9
    (binary)":http://axiom.axiom-developer.org/axiom-website/DOWNLOADS/axiom-Feb2005-Redhat9-bin.tgz
    ${\bf \longleftarrow}$ **Recommended Download**
 
       This is a binary tree for a Redhat 9 system. Unpack this tree in a directory such as /home::

         1) cd /home
         2) tar -zxf axiom-Feb2005-Redhat9-bin.tgz
         3) cd axiom
         4) export AXIOM=`pwd`/mnt/linux
         5) export PATH=\$AXIOM/bin:\$PATH
         6) axiom

  - "Fedora Core 1 (binary)":http://axiom.axiom-developer.org/axiom-website/DOWNLOADS/axiom-Feb2005-Fedora1-bin.tgz

       This is a binary tree for a Fedora Core 1 system. Unpack this tree in a directory such as /home::

         1) cd /home
         2) tar -zxf axiom-Feb2005-Fedora1-bin.tgz
         3) cd axiom
         4) export AXIOM=`pwd`/mnt/linux
         5) export PATH=\$AXIOM/bin:\$PATH
         6) axiom

  - "Fedora Core 3
   (binary)":http://axiom.axiom-developer.org/axiom-website/DOWNLOADS/axiom-Feb2005-Fedora3-bin.tgz

       This is a binary tree for a Fedora Core 3 system. Unpack this tree in a directory such as /home::

         1) cd /home
         2) tar -zxf axiom-Feb2005-Fedora3-bin.tgz
         3) cd axiom
         4) export AXIOM=`pwd`/mnt/fedora3 
         5) export PATH=\$AXIOM/bin:\$PATH
         6) axiom


??changed:
-    (19 Mb.) Easy windows installation program. This version includes an upgraded TeXmacs interface featuring
-    the same sophisticated mathematical equation wrapping software as used here on MathAction. An improved
-    TeXmacs stylesheet for Axiom is also available. Please refer to the updated TeXmacs installation notes.
-    The performace of this version of Axiom has been optimized by a special "double-pass" compilation step.
-
-  - "Windows (exe) version 0.1.1":http://page.axiom-developer.org/axiom-windows-0.1.1.exe (Thankyou Dan Martens!) 
-
-    (19 Mb.) Easy to use self-installing executable, includes TeXmacs interface, Axiom Book and tutorial
-
-    This pre-release version 0.1.1 corrects some problems with )summary and
-    )cd commands. The original windows version of Axiom was prepared by Mike Thomas.
-
-  - "RedHat 9 (binary)":http://axiom.axiom-developer.org/axiom-website/DOWNLOADS/axiom-Feb2005-Redhat9-bin.tgz
-
-       This is a binary tree for a Redhat 9 system. Unpack this tree in a directory such as /home::
-
-         1) cd /home
-         2) tar -zxf axiom-Feb2005-Redhat9-bin.tgz
-         3) cd axiom
-[26 more lines...]
    (19 Mb.) Easy windows installation program (Thankyou Dan Martens!) . This version includes an
    upgraded TeXmacs interface featuring the same sophisticated mathematical equation wrapping
    software as used here on MathAction. An improved TeXmacs stylesheet for Axiom is also available.
    Please refer to the updated TeXmacs installation notes. The performace of this version of Axiom
    has been optimized by a special "double-pass" compilation step. The original windows version of
    Axiom was prepared by Mike Thomas.

  Also check here for other (older) versions compiled on specific platforms: 

++added:
  Linux (general)

    1 Download one of the above pre-compiled linux tarballs to a temporary directory, e.g.:<pre>
mkdir ~/temp
cd ~/temp
wget -c http://axiom.axiom-developer.org/axiom-website/DOWNLOADS/axiom.fedora1.bin.20041109.tgz</pre>

    2 Unzip the contents in a convenient place, e.g.:<pre>
mkdir ~/programs
cd ~/programs
tar xzvf ~/temp/axiom.fedora1.bin.20041109.tgz</pre>

    3 Set the environment variables:<pre>
export AXIOM=~/programs/mnt/linux
export PATH=!$AXIOM/bin:$PATH</pre>

      It might be convenient to set this in the startup script, e.g. .bashrc

    4 Start axiom from the command line:<pre>
axiom</pre>

  Debian Linux

    1 You must use the "testing" (Sarge) version of Debian.

    2 Ensure that the /etc/apt/sources.list file includes an entry for the
      "testing":http://www.debian.org/releases/testing/ distribution. E.g.:<pre>
deb http://http.us.debian.org/debian testing main contrib non-free</pre>

      Consult the "apt-get":http://www.debian.org/doc/manuals/apt-howto/ch-basico.en.html
      documentation to configure and upgrade your distribution if necessary.

    3 Use the command:<pre>
apt-get install axiom</pre>

      and optionally:<pre>
apt-get install axiom-doc
apt-get install axiom-test
apt-get install axiom-source</pre>

    4 Run axiom from the command line:<pre>
axiom</pre>


??changed:
-        C:\Program Files\axiom</pre>
C:\Program Files\axiom</pre>

??changed:
-        Start / Settings / Control Panel / System / Advanced / Environment Variables</pre>
Start / Settings / Control Panel / System / Advanced / Environment Variables</pre>

??changed:
-        Start / Settings / Control Panel / System / Advanced / Environment Variables / Edit
-        Path ... ;C:\Program Files\axiom\mnt\windows\bin</pre>
Start / Settings / Control Panel / System / Advanced / Environment Variables / Edit
Path ... ;C:\Program Files\axiom\mnt\windows\bin</pre>

??changed:
-      to AXIOMsys:<pre>
      to AXIOMsys

??changed:
-        Start/Programs/Axiom/Axiom</pre>
Start/Programs/Axiom/Axiom</pre>

??changed:
-        Start/Programs/Accessories/Command Prompt
-        AXIOMsys</pre>
Start/Programs/Accessories/Command Prompt
AXIOMsys</pre>

??changed:
-        Start/Programs/Axiom</pre>
-
-  Linux (general)
-
-    1 Download one of the above pre-compiled linux tarballs to a temporary directory, e.g.:<pre>
-        mkdir ~/temp
-        cd ~/temp
-        wget -c http://axiom.axiom-developer.org/axiom-website/DOWNLOADS/axiom.fedora1.bin.20041109.tgz</pre>
-
-    2 Unzip the contents in a convenient place, e.g.:<pre>
-        mkdir ~/programs
-        cd ~/programs
-        tar xzvf ~/temp/axiom.fedora1.bin.20041109.tgz</pre>
-
-    3 Set the environment variables:<pre>
-        export AXIOM=~/programs/mnt/linux
-        export PATH=!$AXIOM/bin:$PATH</pre>
-
-      It might be convenient to set this in the startup script, e.g. .bashrc
-[24 more lines...]
Start/Programs/Axiom</pre>

--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomDownload#msg20050215131911-0600@page.axiom-developer.org



\start
Date: Tue, 15 Feb 2005 14:38:18 -0500
From: Bill Page
To: Camm Maguire
Subject: RE: Archive file naming request

Camm,

On Tuesday, February 15, 2005 12:41 PM you wrote:
> 
> Greetings!  Could we please either rename the source tarballs on the
> download site, or establish a symbolic link, following the syntax
> below:
> 
> axiom-YYYYMMDD-src.tgz

Since external bookmarks might exist for the existing source tarball,
I added the symbolic link:

   axiom-20050201-src.tgz  --> axiom-Feb2005-src.tgz

The AxiomDownload page now uses this link. In future I think we can
use your naming convention.

Regards,
Bill Page.




\start
Date: Tue, 15 Feb 2005 19:32:22 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [AxiomInterface] 

\begin{axiom}
    [1/2, 3/4, 2/3]
    \end{axiom}
--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomInterface#msg20050215193222-0600@page.axiom-developer.org



\start
Date: Tue, 15 Feb 2005 20:39:05 -0600
From: MathAction (Tim Daly)
To: MathAction
Subject: [#83 Bug 5977   1::DMP([x], FRAC INT)::POLY FRAC INT ==> 0] the original complaint

(1) -> a:=1::DMP(['x],INT)

   (1)  1
               Type: DistributedMultivariatePolynomial([x],Integer)
(2) -> a::POLY INT

   >> System error:
   Caught fatal error [memory may be damaged]

protected-symbol-warn called with (NIL)
(2) -> variables(a)

   (2)  []
                                           Type: List OrderedVariableList [x]
(3) -> a::INT::POLY INT

   (3)  1
                                Type: Polynomial Integer

(4) -> 1::DMP([x],INT)::POLY INT


   >> System error:
   Caught fatal error [memory may be damaged]

protected-symbol-warn called with (NIL)

(5) -> 1::DMP([x],INT)::DMP([y],INT)

   (5)  1
               Type: DistributedMultivariatePolynomial([y],Integer)

and 

1::POLY INT :: DMP([x],INT) 
x::DMP([x],INT)::POLY INT
1::DMP([x,y],INT)::POLY INT 
1::EXPR INT:: POLY INT 
1::UP(x,INT)::POLY INT
 
and (surprise!) even
 
1::DMP([x],INT)::POLY FRAC INT

all worked!


This bug also exists in the NAG version, where the first (2) would give "Memory
access violation detected".  Two observations: (a) the coercion in (2), shows
the interpreter does not follow the two steps in (3); and (b) the problem is
specific to POLY INT. It may also have to do with the second (2), and my
suspicion is that it has to do with a combination of the interpreter, POLY, DMP,
INT, no variables, and may be POLYLIFT or MLIFT.

Tim: can you do a boot trace of (4) and compare that with any of the others that
work?
--
forwarded from http://page.axiom-developer.org/zope/mathaction/83Bug59771DMPXFRACINTPOLYFRACINT0#msg20050215203905-0600@page.axiom-developer.org



\start
Date: Wed, 16 Feb 2005 13:18:02 +1000
From: Mike Thomas
To: Camm Maguire, Bill Page
Subject: Re: GCL 2.6.6 does not buildAxiom on Windows

Hi Bill/Camm.

Good news I think.

| Thanks, Mike!  Bill, might you have a few moments to try to spot the
| relevant patch?  I'd like to get stock GCL completely axiom/windows
| ready.

After:

  tla register-archive arch@axiom-developer.org--axiom
http://axiom-developer.org/archive/axiom

  tla my-default-archive arch@axiom-developer.org--axiom

  tla get axiom--windows--1

I end up with a directory called "axiom--windows--1--patch-13" in which I
successfully built Axiom on Windows:

  1. in the usual way using gcl 2.6.5 as supplied in that new source tree
(unmodified) and also

  2. using 2.6.6 after modifications to "lsp/Makefile.pamphlet" for minimum
usual patching to the GCL 2.6.6 source in new version gcl2.2.2w.

The modifications I made apart from adding "gcl-2.6.6.tgz" and new patch
files in "zips" are to be found at the end of this email.  I believe I am
using gcc 3.4.2, binutils 2.15.91, mingw32 runtime 3.5, win32 libraries 3.1.

Interestingly I get different output (less verbose) at the point where
AHYP.spad is compiled to that you mentioned in your earlier email, Bill, and
to which I was previously accustomed:

=======================================================================BOBOO
T>c:/junk/ax/axiom--windows--1--patch-13/mnt/windows/bin/lib/notangle -R"cat
egory AHYP ArcHyperbolicFunctionCategory"
c:/junk/ax/axiom--windows--1--patch-13/src/algebra/trigcat.spad.pamphlet>c:/
junk/ax/axiom--windows--1--patch-13/int/algebra/AHYP.spad
generic 2 -- making
c:/junk/ax/axiom--windows--1--patch-13/int/algebra/AHYP.NRLIB from
c:/junk/ax/axiom--windows--1--patch-13/int/algebra/AHYP.spad
)co AHYP.spad
(cd c:/junk/ax/axiom--windows--1--patch-13/int/algebra ; echo ")co
AHYP.spad" |
c:/junk/ax/axiom--windows--1--patch-13/obj/windows/bin/interpsys >
AHYP.out )
generic 1 -- making
c:/junk/ax/axiom--windows--1--patch-13/mnt/windows/algebra/AHYP.o from
c:/junk/ax/axiom--windows--1--patch-13/int/algebra/AHYP.NRLIB
cp c:/junk/ax/axiom--windows--1--patch-13/int/algebra/AHYP.NRLIB/code.o
c:/junk/ax/axiom--windows--1--patch-13/mnt/windows/algebra/AHYP.o
=======================================================================

I'll send the compressed make log and new patch files separately to you Bill
and Camm for comparison purposes.

Gratuitous Complaint Time (apologies in advance) -  I have yet to either
successfully use the sftp repository or download a tree over a modem.  Arch
has also left me with vast directory trees I could not delete except by
shortening the directory names down the tree first and has done bizarre
permission mangling on files so they were editable with wordpad but not with
emacs!  Arch on Windows is an appalling program to use - I feel strongly
disinclined whenever I think about working on Axiom.

Cheers

Mike Thomas.




=================================================================
$ tla changes --diffs
* looking for arch@axiom-developer.org--axiom/axiom--windows--1--patch-13 to
com
pare with
* comparing to arch@axiom-developer.org--axiom/axiom--windows--1--patch-13
M  Makefile
M  Makefile.pamphlet
M  lsp/Makefile.pamphlet

* modified files

--- orig/Makefile
+++ mod/Makefile
@@ -9,7 +9,7 @@
 #GCLVERSION=gcl-2.6.2
 #GCLVERSION=gcl-2.6.2a
 #GCLVERSION=gcl-2.6.3
-GCLVERSION=gcl-2.6.5w
+GCLVERSION=gcl-2.6.6w
 AWK=gawk
 GCLDIR=${LSP}/${GCLVERSION}
 SRC=${SPD}/src


--- orig/Makefile.pamphlet
+++ mod/Makefile.pamphlet
@@ -597,9 +597,8 @@
 lsp/Makefile.pamphlet file and get the correct version. If you
 forget to erase the lsp/Makefile the wrong patches will be applied.

-The GCLVERSION of [[gcl-2.6.5w]] is the same as the [[gcl-2.6.5]]
-version except that we have to add some additional patches for windows.
-These will eventually make their way into GCL.
+The GCLVERSION of [[gcl-2.6.6w]] is the same as the [[gcl-2.6.6]]
+version except that we have to patch h/mingw.h rather than h/linux.h for
window
s.
 <<GCLVERSION>>=
 #GCLVERSION=gcl-2.4.1
 #GCLVERSION=gcl-2.5
@@ -609,7 +608,8 @@
 #GCLVERSION=gcl-2.6.2a
 #GCLVERSION=gcl-2.6.3
 #GCLVERSION=gcl-2.6.5
-GCLVERSION=gcl-2.6.5w
+#GCLVERSION=gcl-2.6.5w
+GCLVERSION=gcl-2.6.6w
 @

 \subsection{Makefile.axposf1v3}


--- orig/lsp/Makefile.pamphlet
+++ mod/lsp/Makefile.pamphlet
@@ -15,6 +15,17 @@
 over the gcl Makefiles.

 Patches are applied to the distribution before we do the configure.
+\section{Gnu Common Lisp 2.6.6w}
+This is a Windows port of GCL. We run under MSYS and have to make
+a few Windows specific changes.
+\subsection{mingw.defs}
+This patch adds the necessary [[.o]] files to the [[EXTRAS]] variable
+so they are available at link time.
+<<gcl-2.6.6w.h.mingw.defs.patch>>=
+       @(cd ${GCLVERSION}/h ; \
+         echo 1 applying gcl-2.6.6.h.mingw.defs.patch ; \
+         patch <${SPD}/zips/${GCLVERSION}.h.mingw.defs.patch )
+@
 \section{Gnu Common Lisp 2.6.5w}
 This is a Windows port of GCL. We run under MSYS and have to make
 a few Windows specific changes.
@@ -145,6 +156,11 @@
          touch ${OBJ}/${SYS}/lib/cfuns-c.ini ; \
          touch ${OBJ}/${SYS}/lib/sockio-c.ini )
 @
+<<gcl-2.6.6w.socket.patch>>=
+       @(echo 20 setup ini files for EXTRAS patch ; \
+         touch ${OBJ}/${SYS}/lib/cfuns-c.ini ; \
+         touch ${OBJ}/${SYS}/lib/sockio-c.ini )
+@
 \subsubsection{fortran patch}
 Communication over sockets (basically to the NAG fortran library)
 requires us to have XDR enabled.
@@ -199,6 +215,11 @@
          echo 28 applying libspad.a patch to unixport/makefile ; \
          patch <${SPD}/zips/${GCLVERSION}.unixport.makefile.patch )
 @
+<<gcl-2.6.6w.libspad.patch>>=
+       @(cd ${GCLVERSION}/unixport ; \
+         echo 29 applying libspad.a patch to unixport/makefile ; \
+         patch <${SPD}/zips/${GCLVERSION}.unixport.makefile.patch )
+@
 \subsubsection{toploop patch}
 This patch turns off the banner display every time GCL starts.
 We could use the -batch flag but that would be a pervasive change.
@@ -240,6 +261,11 @@
          echo 35 applying toploop patch to unixport/init_gcl.lsp ; \
          patch <${SPD}/zips/${GCLVERSION}.unixport.init_gcl.lsp.in.patch )
 @
+<<gcl-2.6.6w.toploop.patch>>=
+       @(cd ${GCLVERSION}/unixport ; \
+         echo 35 applying toploop patch to unixport/init_gcl.lsp ; \
+         patch <${SPD}/zips/${GCLVERSION}.unixport.init_gcl.lsp.in.patch )
+@
 \subsubsection{object to float patch}
 GCL 2.5.2 contains no reference to this function and it was removed.
 Axiom uses this function so we re-implement it here.
@@ -348,6 +374,14 @@
          echo 55 applying tail-recursive noise patch ; \
          patch <${SPD}/zips/${GCLVERSION}.cmpnew.gcl_cmpcall.lsp.patch )
 @
+<<gcl-2.6.6w.tail-recursive.patch>>=
+       @(cd ${GCLVERSION}/cmpnew ; \
+         echo 54 applying tail-recursive noise patch ; \
+         patch <${SPD}/zips/${GCLVERSION}.cmpnew.gcl_cmpflet.lsp.patch )
+       @(cd ${GCLVERSION}/cmpnew ; \
+         echo 55 applying tail-recursive noise patch ; \
+         patch <${SPD}/zips/${GCLVERSION}.cmpnew.gcl_cmpcall.lsp.patch )
+@
 \subsubsection{collectfn fix}
 GCL-2.6.1 renamed collectfn.lsp to gcl_collectfn.lsp.
 We rename it back into place because we have later Makefiles
@@ -404,6 +438,14 @@
          echo 65 copy sys-proclaim.lisp to
${OBJ}/${SYS}/lsp/sys-proclaim.lisp
; \
          cp sys-proclaim.lisp ${OBJ}/${SYS}/lsp/sys-proclaim.lisp )
 @
+<<gcl-2.6.6w.collectfn.fix>>=
+       @(cd ${GCLVERSION}/cmpnew ; \
+         echo 64 copy gcl_collectfn.lsp to ${OBJ}/${SYS}/lsp/collectfn.lsp
; \
+         cp gcl_collectfn.lsp ${OBJ}/${SYS}/lsp/collectfn.lsp )
+       @(cd ${GCLVERSION}/lsp ; \
+         echo 65 copy sys-proclaim.lisp to
${OBJ}/${SYS}/lsp/sys-proclaim.lisp
; \
+         cp sys-proclaim.lisp ${OBJ}/${SYS}/lsp/sys-proclaim.lisp )
+@
 \subsection{The GCL-2.5.2 stanza}
 \subsubsection{Configure and Make GCL}
 We enable several features of GCL.
@@ -798,6 +840,53 @@
        @( cd ccl ; ${ENV} ${MAKE} clean )

 @
+\subsection{The GCL-2.6.6w stanza}
+This stanza will be written out when the GCLVERSION variable is
+``gcl-2.6.6w''. It will overwrite the default version. See the
+top level Makefile.pamphlet.
+
+This is version for Windows. We untar the [[gcl-2.6.6]] version and then
+rename it to [[gcl-2.6.6w]]
+<<gcl-2.6.6w>>=
+# gcl version 2.6.6w
+OUT=${OBJ}/${SYS}/bin
+
+all:
+       @echo 110 building ${LSP} ${GCLVERSION}
+
+gcldir:
+       @echo 111 building ${GCLVERSION}
+       @tar -zxf ${ZIPS}/gcl-2.6.6.tgz
+       @mv gcl-2.6.6 ${GCLVERSION}
+<<gcl-2.6.6w.socket.patch>>
+<<gcl-2.6.6w.libspad.patch>>
+<<gcl-2.6.6w.toploop.patch>>
+<<gcl-2.6.6w.tail-recursive.patch>>
+<<gcl-2.6.6w.collectfn.fix>>
+<<gcl-2.6.6w.h.mingw.defs.patch>>
+<<gclConfigureMake>>
+       @echo 112 finished system build on `date` | tee >gcldir
+
+ccldir: ${LSP}/ccl/Makefile
+       @echo 113 building CCL
+       @mkdir -p ${INT}/ccl
+       @mkdir -p ${OBJ}/${SYS}/ccl
+       @( cd ccl ; ${ENV} ${MAKE} )
+
+${LSP}/ccl/Makefile: ${LSP}/ccl/Makefile.pamphlet
+       @echo 114 making ${LSP}/ccl/Makefile from
${LSP}/ccl/Makefile.pamphlet
+       @( cd ccl ; ${SPADBIN}/document ${NOISE} Makefile )
+
+document:
+       @echo 115 making docs in ${LSP}
+       @mkdir -p ${INT}/doc/lsp/ccl
+       @( cd ccl ; ${ENV} ${MAKE} document )
+
+clean:
+       @echo 116 cleaning ${LSP}/ccl
+       @( cd ccl ; ${ENV} ${MAKE} clean )
+
+@
 \section{Gnu Common Lisp 2.5}
 GCL 2.5 requires a different Makefile. In particular, GCL 2.5
 has a different method of building the lisp image. And, just to
=================================================================





\start
Date: Wed, 16 Feb 2005 12:28:35 -0500
From: Justin Smith
To: list
Subject: Axiom on FreeBSD

Is it possible to build this system on FreeBSD?

My system has the awk and patch commands, but typing make
results in the message


13 making noweb
mkdir: /obj: Permission denied
*** Error code 1

Stop in /home/jsmith/axiom.

It looks as though it is trying to install stuff in the root directory.

Interestingly, I have noweb installed on my system. Is there any easy
way to tell axiom to just use it and not try to build it?

Thank you!

-- 
Time blows wildly against my door       | Justin R. Smith
Stirring discarded sorrows      	| Mathematics Department
Like dead leaves of summers past        | Drexel University
Shadows of what went before          	| Philadelphia, PA 19104
Making way for new tomorrows         	|
New hopes, new fears,                   | Office: (215) 895-1847
         and new ways that last         | URL: vorpal.math.drexel.edu




\start
Date: Wed, 16 Feb 2005 13:20:12 -0500
From: Bill Page
To: Mike Thomas
Subject: GCL 2.6.6 does build Axiom on Windows
Cc: Camm Maguire

Mike, Camm,

On Tuesday, February 15, 2005 10:18 PM Mike Thomas wrote:
> 
> Good news I think.

Yes, I can confirm that it *does* build Axiom! It was my error.

> 
> I end up with a directory called "axiom--windows--1--patch-13"
> in which I successfully built Axiom on Windows:
> ... 
>   2. using 2.6.6 after modifications to "lsp/Makefile.pamphlet"
> for minimum usual patching to the GCL 2.6.6 source in new
> version gcl2.2.2w.
> 

This is exactly the same thing I did.

> The modifications I made apart from adding "gcl-2.6.6.tgz" 
> and new patch files in "zips" are to be found at the end of
> this email.

Comparing my tla file-diffs with yours, however I found that
I had unintentionally also removed the mingw.defs patch. :(
Thanks very much for helping me to sort this out.

> I believe I am using gcc 3.4.2, binutils 2.15.91, mingw32
> runtime 3.5, win32 libraries 3.1.

Yes, same.

> 
> Interestingly I get different output (less verbose) at the point
> where AHYP.spad is compiled to that you mentioned in your earlier 
> email, Bill, and to which I was previously accustomed:
> 

Yes. In this version of the Axiom makefile the output of the
algebra compiles is redirected to a file with the name int/*.out
so that the compiler output for AHYP.spad is in 'int/AHYP.out'.
I did this so that I could process the compiler "Loading"
messages to produce a list of dependencies. If anyone is
interested I can send you a copy of the script that I use to
extra these dependencies - but that is a whole other issue
since the list of dependencies is circular. Anyway I think
this approach is more useful than just adding the compiler
output to the other noise generated during the build.

You might also be interested in the 'fixedPoint' script which
is included in axiom--windows--1--patch-13. This script
resolves the inconsistencies between the algebra bootstrap
lisp code and the code produced by the Axiom compiler.

Regards,
Bill Page.




\start
Date: Wed, 16 Feb 2005 13:45:40 -0500
From: Bill Page
To: Tim Daly
Subject: Arch, Darcs, Subversion, or CVS again
Cc: Mike Thomas, list

On Tuesday, February 15, 2005 11:41 PM Tim Daly wrote:
>
> On Tuesday, February 15, 2005 10:18 PM Mike Thomas wrote:
> > Gratuitous Complaint Time (apologies in advance) -  I
> > have yet to either successfully use the sftp repository
> > or download a tree over a modem.  Arch has also left me
> > with vast directory trees I could not delete except by
> > shortening the directory names down the tree first and has
> > done bizarre permission mangling on files so they were
> > editable with wordpad but not with emacs!  Arch on Windows
> > is an appalling program to use - I feel strongly disinclined
> > whenever I think about working on Axiom.

I have had MUCH better success using arch on Windows (same
version that Mike is using I think) but over a relatively high
speed connection (download only, upload is at slow modem speeds).
I have also had the problems of deleting arch directory trees
due to extremely long names and some odd permission settings
(under Windows XP only). Perhaps these problems are being
addressed by the developer or maybe we should submit a bug
report to him?

> ... 
> just so you're not alone i'm coming to believe that arch
> downloads 2 full copies of the source (one for the "pristine"
> version). I'm unhappy with this as I'm always working in the
> last 2% of my disk space so, unless i can figure out a way to
> prevent that, it may be the case that we abandon arch for
> something else (darcs? subversion?)
> 

First thing: Tim, go out and buy yourself a few 100 Gb. drives
for $25 or so! :)

Second, I agree with you about arch's gluttonous demands for
disk space - and also with Mike's previous implied complaint
about it's demands for high speed network access.

Part of the problem here is just in the way we are currently
using arch, i.e. in the "centralized file-pull" mode where
there is an "old-fashioned" CVS-style central repository. Arch
can also be used in the newer "file-push" mode (like darcs)
where everyone maintains there own local copy of the archive
and changes are pushed (usually by email) to other developers.
Usually one or more developers also take the role of maintaining
an "official version" from which copies are made.

Also, from following the arch mailing list I have learnt that
it is possible to set up a "revision-library" which is much more
efficient for remote access than the way arch does things by
default. These things are described in the arch documentation
but as far as I know there are no simple tutorials that give
an easy recipe for this.

Martin Rubey here on this list has also had some experience with
improving arch performance and moving repositories by CD rom
instead of modem.

About darcs: Compared to arch, it seems to me that darcs is MUCH
more efficient in the way it saves the diffs. Of course in
terms of features it is also much more "light weight" than arch,
but I think it could be easily used to do the same thing that
we do now with arch - except as I mentioned above, darcs uses
a file-push model only. In the case of darcs there is no central
repository where everything is stored. In short, I am strongly
in favour of experimenting with darcs for the Axiom archives but
I think we will have to learn a slightly different way of
maintaining the archives.

Although subversion has been adopted by some other open source
projects, my impression after a first look at it is that is would
be a step backwards (toward the old CVS-style archive). I think
it is appealing for those people who really only want a better
CVS.

Regards,
Bill Page.




\start
Date: Wed, 16 Feb 2005 14:22:16 -0500
From: Balbir Thomas
To: list
Subject: ABELGRP missing ?

Hi,
I get the following error when trying to compile
the current cvs (patch 30) source code :

make[3]: *** No rule to make target
`/home/bt/archive/axiom/int/algebra/ABELGRP.o', needed by `src'.  Stop.
make[3]: Leaving directory `/home/bt/archive/axiom/src/algebra'
make[2]: *** [algebradir] Error 2
make[2]: Leaving directory `/home/bt/archive/axiom/src'
make[1]: *** [srcdir] Error 2
make[1]: Leaving directory `/home/bt/archive/axiom'
make: *** [all] Error 2

The same error also occurs when trying to compile 
axiom-Feb2005-src.tgz. 

would be greatful for any tips.

Sincerely
B Thomas




\start
Date: 16 Feb 2005 14:25:43 -0500
From: Camm Maguire
To: Bill Page
Subject: Re: GCL 2.6.6 does build Axiom on Windows
Cc: Mike Thomas

Greetings!

Bill Page writes:

> Mike, Camm,
> 
> On Tuesday, February 15, 2005 10:18 PM Mike Thomas wrote:
> > 
> > Good news I think.
> 
> Yes, I can confirm that it *does* build Axiom! It was my error.
> 
> > 
> > I end up with a directory called "axiom--windows--1--patch-13"
> > in which I successfully built Axiom on Windows:
> > ... 
> >   2. using 2.6.6 after modifications to "lsp/Makefile.pamphlet"
> > for minimum usual patching to the GCL 2.6.6 source in new
> > version gcl2.2.2w.
> > 
> 
> This is exactly the same thing I did.
> 
> > The modifications I made apart from adding "gcl-2.6.6.tgz" 
> > and new patch files in "zips" are to be found at the end of
> > this email.
> 
> Comparing my tla file-diffs with yours, however I found that
> I had unintentionally also removed the mingw.defs patch. :(
> Thanks very much for helping me to sort this out.
> 

Wonderful!  

So in case anyone cares, most/all these patches can be eliminated and
replaced with simple settings in gcl:

init_gcl.lsp.in --> (setq si::*system-banner* "")
gcl_cmpflet,gcl_cmpcall -> (setq compiler::*suppress-compiler-notes* t)
makefile,mingw.defs -> preliminary call to (compiler::link ...) to
                       build an image with extras and libspad.a linked
                       in.

Take care,

> > I believe I am using gcc 3.4.2, binutils 2.15.91, mingw32
> > runtime 3.5, win32 libraries 3.1.
> 
> Yes, same.
> 
> > 
> > Interestingly I get different output (less verbose) at the point
> > where AHYP.spad is compiled to that you mentioned in your earlier 
> > email, Bill, and to which I was previously accustomed:
> > 
> 
> Yes. In this version of the Axiom makefile the output of the
> algebra compiles is redirected to a file with the name int/*.out
> so that the compiler output for AHYP.spad is in 'int/AHYP.out'.
> I did this so that I could process the compiler "Loading"
> messages to produce a list of dependencies. If anyone is
> interested I can send you a copy of the script that I use to
> extra these dependencies - but that is a whole other issue
> since the list of dependencies is circular. Anyway I think
> this approach is more useful than just adding the compiler
> output to the other noise generated during the build.
> 
> You might also be interested in the 'fixedPoint' script which
> is included in axiom--windows--1--patch-13. This script
> resolves the inconsistencies between the algebra bootstrap
> lisp code and the code produced by the Axiom compiler.
> 
> Regards,
> Bill Page.
> 

-- 
Camm Maguire			     			Camm Maguire

\start
Date: 16 Feb 2005 14:27:02 -0500
From: Camm Maguire
To: Mike Thomas
Subject: re: GCL 2.6.6 does not buildAxiom on Windows

BTW, thank you both so much for looking into this!

Take care,
-- 
Camm Maguire			     			Camm Maguire


\start
Date: Wed, 16 Feb 2005 19:30:23 +0000
From: Mark Murray
To: Justin Smith
Subject: Re: Axiom on FreeBSD 

Justin Smith writes:
> Is it possible to build this system on FreeBSD?

Yes, but not as it is right now.

I have a FreeBSD build which is currently broken, but I am 
reconverging on a build, and I have access to a repository so
this knowledge won't get lost.

> Interestingly, I have noweb installed on my system. Is there any easy
> way to tell axiom to just use it and not try to build it?

Not easy, but it can be done, and my patches do this.

M
--
Mark Murray
iumop ap!sdn w,I idlaH





\start
Date: Wed, 16 Feb 2005 13:41:13 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [#100 integrate((z^a+1)^b, z) crashes] (new) 

stack overflow
--
forwarded from http://page.axiom-developer.org/zope/mathaction/100IntegrateZA1BZCrashes#msg20050216134112-0600@page.axiom-developer.org



\start
Date: Wed, 16 Feb 2005 13:43:45 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [#103 solve(z=z, z) ] (new) 

 >> Error detected within library code:
   (1 . failed) cannot be coerced to mode (Polynomial (Integer)) 
--
forwarded from http://page.axiom-developer.org/zope/mathaction/103SolveZZZ#msg20050216134345-0600@page.axiom-developer.org



\start
Date: Wed, 16 Feb 2005 13:47:46 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [#105 integrate(z^3000, z=0..1) ] (new) 

stack overflow
--
forwarded from http://page.axiom-developer.org/zope/mathaction/105IntegrateZ3000Z01#msg20050216134746-0600@page.axiom-developer.org



\start
Date: Wed, 16 Feb 2005 13:42:16 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [#101 laplace(log(z), z,w) ] (new) 

stack overflow
--
forwarded from http://page.axiom-developer.org/zope/mathaction/101LaplaceLogZZW#msg20050216134216-0600@page.axiom-developer.org



\start
Date: Wed, 16 Feb 2005 13:45:23 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [#104 branch cuts differ?] (new) 

 solve(cos(z)/sin(z)=0, z)

   []

-> solve(cot(z)=0, z)

       %pi
   [z= ---]
        2


--
forwarded from http://page.axiom-developer.org/zope/mathaction/104BranchCutsDiffer#msg20050216134506-0600@page.axiom-developer.org



\start
Date: Wed, 16 Feb 2005 13:43:04 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [#102 solve(sinh(z)=cosh(z), z) ] (new) 

   >> Error detected within library code:
   No identity element for reduce of empty list using
   operation append


--
forwarded from http://page.axiom-developer.org/zope/mathaction/102SolveSinhZCoshZZ#msg20050216134304-0600@page.axiom-developer.org



\start
Date: Wed, 16 Feb 2005 20:40:44 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [Programming Axiom] 


??changed:
-However there has been quite a lot of
Introduction

 *(based on an email from Tim Daly, Thursday, February 13, 2003)*

The primary documentation on Axiom is the book by Richard Jenks
and Robert Sutor "Axiom, The Scientific Computation System" 
Springer-Verlag, 0-387-97855-0 1992. A revised copy of this book
is available online see "Axiom Documentation":AxiomDocumentationAndCommunity.

The language used in Axiom is called Spad (a contraction of Scratchpad,
the original name for Axiom). During the Scratchpad days we decided to
rewrite the compiler (for the nth time, as both Axiom and its language
have always been an ongoing, evolving research effort). The result was
both the current internal spad compiler, that lives in the interpreter,
and an external stand-alone compiler written in C. The external compiler
accepts the spad language (modulo some constraints based on the fact
that it (a) doesn't have the lisp runtime and (b) can link to non-lisp
code). The external compiler went thru its own name evolution, called
A-sharp (A#), AxiomXL, and now Aldor. Aldor programs will run in Axiom
(assuming you don't use various non-axiom libraries, etc). Look at the
site www.aldor.org for details. http://www.aldor.org/docs/HTML/chap21.html
will bring you to a tutorial I wrote which shows how to create a
simple stand-alone polynomial type in Aldor.

You might also want to read http://www.aldor.org/docs/HTML/chap1.html#1

The {spad,aldor} language supports parameterized types (e.g. 
Matrix(Polynomial(Fraction(Integer))) , that is, an object can
be a Matrix of Polynomials with coefficients which are Fractions
of Integers) which are most useful in mathematics. In fact, types
carry all of the meaning of expressions. The expression::

   (1) -> x:=matrix([[2,2],[2,2]])

        +2  2+
   (1)  |    |
        +2  2+

                                                         Type: Matrix Integer

creates a matrix of integers. Computing (x-x) should give you
the zero matrix, not the integer 0, as you will get in some systems::

   (2) -> x-x

        +0  0+
   (2)  |    |
        +0  0+
                                                         Type: Matrix Integer

Strictly speaking, Axiom is not really an object oriented system in 
the sense of Smalltalk. In Smalltalk computing 2+3 means that you send the
"object" 2 the message "+ 3". In Axiom, 2+3 is computed by deciding that::

  "2" is of type PositiveInteger, 
  "3" is of type PositiveInteger
  "+" is a function that computes 
  "+(PositiveInteger, PositiveInteger) => PositiveInteger"

and so it applies the function. 

Axiom, unlike Java, matches not only the argument types but also the
result type so the matching is much more explicit (that is, painful).

I would tend to argue, although not with much religious fire,
that Axiom is not an object oriented programming system or language.
However, it is entirely possible to think of the spad programs as
"classes" (in the java sense) with "methods" and a private data
representation. The whole type hierarchy, including all of the
dozens of data structures, can be thought of as an object-oriented
type hierarchy.

Axiom and Aldor

  However there has been quite a lot of

??changed:
-    It seems that this can be done. See
-    http://lists.nongnu.org/archive/html/axiom-mail/2004-09/msg00018.html and
-    the thread around it for instructions. It would be great if somebody could
-    describe how to do it here.
    It seems that this can be done. See also
    http://lists.nongnu.org/archive/html/axiom-mail/2004-09/msg00018.html
    and the thread around it for additional instructions.

--
forwarded from http://page.axiom-developer.org/zope/mathaction/ProgrammingAxiom#msg20050216204044-0600@page.axiom-developer.org



\start
Date: Thu, 17 Feb 2005 01:26:16 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [#104 branch cuts differ?] Display problems with Latex?


??changed:
- solve(cos(z)/sin(z)=0, z)
-
-   []
-
--> solve(cot(z)=0, z)
-
-       %pi
-   [z= ---]
-        2
-
-
Branch cuts differ? 

\begin{axiom}
)clear all
solve(cot(z)=0, z)
solve(cos(z)/sin(z)=0, z)
\end{axiom}

\begin{verbatim}
(27) -> solve(cos(z)/sin(z)=0, z)

   (27)  []
                                       Type: List Equation Expression Integer
(28) -> solve(cot(z)=0, z)

             %pi
   (28)  [z= ---]
              2
                                       Type: List Equation Expression Integer
\end{verbatim}

Mathaction display problem? (Above verbatim text is not shown)

\begin{axiom}
solve(cos(z)/sin(z)=0, z)
solve(cot(z)=0, z)
\end{axiom}


--
forwarded from http://page.axiom-developer.org/zope/mathaction/104BranchCutsDiffer#msg20050217012616-0600@page.axiom-developer.org



\start
Date: Thu, 17 Feb 2005 03:10:02 -0600
From: MathAction (kratt6)
To: MathAction
Subject: [AboutMathAction] 


??changed:
-"experiment":AxiomInterface.
"experiment":SandBox.

--removed:
-

--
forwarded from http://page.axiom-developer.org/zope/mathaction/AboutMathAction#msg20050217031002-0600@page.axiom-developer.org



\start
Date: Thu, 17 Feb 2005 06:07:32 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [#99 x^1 abc[y] should be a syntax error] Not a bug


++added:
To explain this, you have to understand several syntax conventions in Axiom.
When two expressions are separated by a space, it means "apply" as in
'f x' meaning 'f(x)'.  Exactly what "apply" does depends on 'f' and 'x'.
When 'f' is a symbol and 'x' is a list, this application produces a subscripted symbol.
Also "apply" has higher precedence than any other operation. Finally, a subscripted 
symbol 'c'<SUB>'d'</SUB> when displayed on the Type info line is written as '*01c d'.

So 'abc' [ 'y' ] &nbsp; is the same as 'abc' &nbsp; [ 'y' ] &nbsp; (because clearly the left [ terminates the 
symbol 'abc') and so this is a subscripted symbol 'abc'<SUB>'y'</SUB>.

\begin{axiom}
abc [y]
\end{axiom}

Now if 'b' is a symbol, then '1 b' is '1' applied to 'b'. Axiom tries to find what operation 
this application is, and finds one in 'UP(b,INT)' where the application means evaluate 
the element '1::UP(b,INT)' as a function at the value 'b' (substitution), which gives '1'.

\begin{axiom}
1 (b::Symbol)
\end{axiom}

This is the same as

\begin{axiom}
elt(1::UP(b,INT),b::UP(b,INT))$UP(b,INT)
\end{axiom}

The results reported above are therefore all obtained by the these rules. The input 
'x abc[y]' produces an error because this apply can only take place in UP 
(the fact that UP has only one variable makes the substitution unambiguous)
and although it actually makes sense under suitable domains, the interpreter 
is not smart enough to find it.

\begin{axiom}
(x::UP(x, POLY INT)) (b::UP(x, POLY INT))
\end{axiom}


and actually, the construction UP(x, POLY INT) is not kosher, but somehow 
the extra parentheses helped.

\begin{axiom}
x::UP(x, POLY INT) b::UP(x, POLY INT)
\end{axiom}



--
forwarded from http://page.axiom-developer.org/zope/mathaction/99X1AbcYShouldBeASyntaxError#msg20050217060732-0600@page.axiom-developer.org



\start
Date: Thu, 17 Feb 2005 06:13:45 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [#99 x^1 abc[y] should be a syntax error] Not a syntax error


++added:
x [1,2,3]

--
forwarded from http://page.axiom-developer.org/zope/mathaction/99X1AbcYShouldBeASyntaxError#msg20050217061345-0600@page.axiom-developer.org



\start
Date: Thu, 17 Feb 2005 06:09:34 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [#99 x^1 abc[y] should be a syntax error] Not a syntax error

Status: open => closed 

--
forwarded from http://page.axiom-developer.org/zope/mathaction/99X1AbcYShouldBeASyntaxError#msg20050217060933-0600@page.axiom-developer.org



\start
Date: Thu, 17 Feb 2005 06:36:10 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [#103 solve(z=z, z) ] 


??changed:
- >> Error detected within library code:
-   (1 . failed) cannot be coerced to mode (Polynomial (Integer)) 
 This should return [ ] as in (1)

\begin{axiom}
solve(z=z,z)
\end{axiom}

\begin{axiom}
solve(z=z,y)
\end{axiom}

\begin{axiom}
solve(0=0,z)
\end{axiom}

--
forwarded from http://page.axiom-developer.org/zope/mathaction/103SolveZZZ#msg20050217063610-0600@page.axiom-developer.org



\start
Date: Thu, 17 Feb 2005 07:36:03 -0600
From: MathAction (kratt6)
To: MathAction
Subject: [#103 solve(z=z, z) ] patch

The mistake is in 'primitivePart$POLYCAT', where a check for zero (as in 'primitivePart!$NEWPOLY', 'primitivePart$SUP', 'primitivePart$FAMR') is missing.

The functions should read::

  @@ -580,8 +585,10 @@
           unit(s := squareFree p) * */[f.factor for f in factors s]
         content(p,v) == content univariate(p,v)
         primitivePart p ==
  +        zero? p => p
           unitNormal((p exquo content p) ::%).canonical
         primitivePart(p,v) ==
  +        zero? p => p
           unitNormal((p exquo content(p,v)) ::%).canonical
       if R has OrderedSet then
         p:% < q:% ==

--
forwarded from http://page.axiom-developer.org/zope/mathaction/103SolveZZZ#msg20050217073554-0600@page.axiom-developer.org



\start
Date: Thu, 17 Feb 2005 07:41:54 -0600
From: MathAction (kratt6)
To: MathAction
Subject: [#103 solve(z=z, z) ] patch


??changed:
-The mistake is in 'primitivePart$POLYCAT', where a check for zero (as in 'primitivePart!$NEWPOLY', 'primitivePart$SUP', 'primitivePart$FAMR') is missing.
The mistake is in 'primitivePart\$POLYCAT', where a check for zero (as in 'primitivePart!\$NEWPOLY', 'primitivePart\$SUP', 'primitivePart\$FAMR') is missing.

--removed:
-

--
forwarded from http://page.axiom-developer.org/zope/mathaction/103SolveZZZ#msg20050217074154-0600@page.axiom-developer.org



\start
Date: Thu, 17 Feb 2005 07:49:06 -0600
From: MathAction (kratt6)
To: MathAction
Subject: [#103 solve(z=z, z) ] another bug

However, the result in (1) is another bug! The result should be '[0=0]', which is not the emptyset!
--
forwarded from http://page.axiom-developer.org/zope/mathaction/103SolveZZZ#msg20050217074905-0600@page.axiom-developer.org



\start
Date: Thu, 17 Feb 2005 07:46:12 -0600
From: MathAction (kratt6)
To: MathAction
Subject: [#103 solve(z=z, z) ] patch


??changed:
- This should return [ ] as in (1)
This should return '[ ]' as in (1)

++added:

>From kratt6 Thu Feb 17 07:35:54 -0600 2005
From: kratt6
Date: Thu, 17 Feb 2005 07:35:54 -0600
Subject: patch

The mistake is in 'primitivePart\$POLYCAT', where a check for zero (as in 'primitivePart!\$NEWPOLY', 'primitivePart\$SUP', 'primitivePart\$FAMR') is missing.

The functions should read::

  @@ -580,8 +585,10 @@
           unit(s := squareFree p) * */[f.factor for f in factors s]
         content(p,v) == content univariate(p,v)
         primitivePart p ==
  +        zero? p => p
           unitNormal((p exquo content p) ::%).canonical
         primitivePart(p,v) ==
  +        zero? p => p
           unitNormal((p exquo content(p,v)) ::%).canonical
       if R has OrderedSet then
         p:% < q:% ==

--
forwarded from http://page.axiom-developer.org/zope/mathaction/103SolveZZZ#msg20050217074611-0600@page.axiom-developer.org



\start
Date: Thu, 17 Feb 2005 10:32:28 -0500
From: Tim Daly
To: Bill Page
Subject: build issue?

Bill,

in src/etc/Makefile, in the <<dbcomplete>> chunk there is a
prerequisite of:

${INT}/algebra/*.NRLIB/code.o

but there is no stanza to address this rule. This only shows
up if you remove the code.o files. 

This is somehow related to the generic rule effort but I don't
see how to resolve it.

To trigger the problem remove the code.o files and type make.

t



\start
Date: Thu, 17 Feb 2005 10:44:10 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [#103 solve(z=z, z) ] 

Why is (1) a bug? 0=0 is always true, the equation is equivalent to no equation, the empty set. This is a simplification of the system of equations given. The empty set implies that anything is a solution (the polynomial ideal is the zero ideal, the algebraic variety is the entire affine space).
--
forwarded from http://page.axiom-developer.org/zope/mathaction/103SolveZZZ#msg20050217104408-0600@page.axiom-developer.org



\start
Date: Thu, 17 Feb 2005 12:21:06 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [#103 solve(z=z, z) ] Patch should be for exquo, not primitivePart


??changed:
-This should return '[ ]' as in (1)
<pre>[Anonymous user:]</pre><br>
This should return [ ] as in (1)

??changed:
-From kratt6 Thu Feb 17 07:35:54 -0600 2005
-From: kratt6
-Date: Thu, 17 Feb 2005 07:35:54 -0600
<pre>[Martin Rubey (kratt6) Thu Feb 17 07:35:54 -0600 2005

??changed:
-Message-ID: <20050217073554-0600@page.axiom-developer.org>

++added:


??changed:
-From kratt6 Thu Feb 17 07:49:05 -0600 2005
-From: kratt6
-Date: Thu, 17 Feb 2005 07:49:05 -0600
<pre>[Martin Rubey (kratt6) Thu Feb 17 07:49:05 -0600 2005

??changed:
-Message-ID: <20050217074905-0600@page.axiom-developer.org>

??changed:
-From unknown Thu Feb 17 10:44:08 -0600 2005
-From: 
<pre>[William Sit, Thu Feb 17 10:44:08 -0600 2005] 

??changed:
-Subject: 
-Message-ID: <20050217104408-0600@page.axiom-developer.org>
</pre>

??changed:
-From unknown Thu Feb 17 10:54:28 -0600 2005
-From: 
-Date: Thu, 17 Feb 2005 10:54:28 -0600
<pre>[unknown Thu Feb 17 10:54:28 -0600 2005

??changed:
-In-Reply-To: <20050217104408-0600@page.axiom-developer.org>
-
-


<hr><br>
<pre>[William Sit]</pre>

Martin, thanks for pointing out the source. However, I think the error is not in 'primitivePart', but in 'exquo'. There are two cases:

\begin{axiom}
p:=0::POLY INT
exquo(p,content p)
exquo(p, content(p,v))
\end{axiom}

Description: 'exquo(a,b)' either returns an element 'c' such that 'c*b=a' or '"failed"' if no such element can be found. The '"failed"' case is intended for the situation when 'b' does not divide 'a' exactly.
So 'exquo(p,content p)' which is 'exquo(0,0)' returns '0' is ok, but 'exquo(p,content(p,v))' returns "failed" is wrong. Ironically, it is because the second exquo tested 'b' (whether it is zero) and returned '"failed"' that caused the problem. In catdef.spad, 'EuclideanDomain', 'exquo' is implemented as:

<pre>
     x exquo y ==
       zero? y => "failed"
       ...
</pre>

This should be:

<pre>
     x exquo y ==
+       zero? x => 0
-       zero? y => "failed"
        ...
</pre>

Compare this with implementation for the first 'exquo' in polycat.spad: 'FAMR'

<pre>
     x exquo y ==
       zero? x => 0
       ...
</pre>


--
forwarded from http://page.axiom-developer.org/zope/mathaction/103SolveZZZ#msg20050217122106-0600@page.axiom-developer.org



\start
Date: Thu, 17 Feb 2005 12:35:22 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [#103 solve(z=z, z) ] Typo in patch and edits (sorry)


??changed:
-So 'exquo(p,content p)' which is 'exquo(0,0)' returns '0' is ok, but 'exquo(p,content(p,v))' returns "failed" is wrong. Ironically, it is because the second exquo tested 'b' (whether it is zero) and returned '"failed"' that caused the problem. In catdef.spad, 'EuclideanDomain', 'exquo' is implemented as:
So 'exquo(p,content p)' which is 'exquo(0,0)' returning '0' is ok, but 'exquo(p,content(p,v))' which is also 'exquo(0,0)' but with a different signature, returning '"failed"' is wrong.  This happens because the second 'exquo' tested 'b' first (whether it is zero) and returned '"failed"' causing the problem. In 'catdef.spad', 'EuclideanDomain', the second 'exquo' is implemented as:

??changed:
-This should be:
This should be: (patch in 'catdef.spad' : 'EuclideanDomain')

??changed:
--       zero? y => "failed"
        zero? y => "failed"

??changed:
-Compare this with implementation for the first 'exquo' in polycat.spad: 'FAMR'
Compare this with implementation for the first 'exquo' in 'polycat.spad' : 'FAMR'

--
forwarded from http://page.axiom-developer.org/zope/mathaction/103SolveZZZ#msg20050217123522-0600@page.axiom-developer.org



\start
Date: Thu, 17 Feb 2005 14:44:40 -0600
From: MathAction (Ning Wang)
To: MathAction
Subject: [Axiom-mail] Does Axiom support infinite sets

Hello,

    Can I define an infinite set by the axiom of comprehension or the 
axiom of replacement?

    Thanks
Ning


_______________________________________________
Axiom-mail mailing list
Axiom-mail@nongnu.org
http://lists.nongnu.org/mailman/listinfo/axiom-mail

--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomMail#msg4214FE92.7010505@ics.uci.edu



\start
Date: Thu, 17 Feb 2005 15:05:54 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [#99 x^1 abc[y] should be a syntax error] annoying

First, I find it rather annoying that the **Status** was changed
by an anonymous user to 'closed' without further discussion. Maybe
I would agree with a status of 'pending' but I think it would 
at least be courteous to identify oneself by clicking 'preferences'
before changing a status. That way at least I know who to blame. ;)
Maybe we should make it so that a user id must be specified in order
to click the 'Change' button?

Second, it was clear from the original description that it is
'not a syntax error'. The bug report said: **should be** a syntax
error. So maybe you mean 'should not be a syntax error'?

Third most of your "explanation" is quite easy to find in the Axiom
book (see page 818)

"Univariate polynomials can also be used as if they were functions."

but the fact that abd[y] when appearing in a Type is displayed as
'*01abc y' is not described anywhere. This notation is especially
odd since it is not a valid input form. So perhaps you might have
proposed to change the category of this issue to 'Axiom Documentation'
and leave the status 'Open'?

But I am not at all convinced that Axiom should behave in this
strange manner. The idea that::

  1 x[k]

is the unit of the domain of univariate polynomials over the
variable x[k] is extraordinarily obscure and does not seem to
have any obvious application to me. Further the fact that::

  1 x

is not defined (because the type of x is of type **Variable x* and
not **Symbol** and for some reason the interpreter does not consider
the obvious coercion of x to **Symbol** while something more complicated
like 'x[k]' is of type *Symbol* by defautl) is at best very awkward
and bordering on the bizarre.

I am not sure whether to blame the interpreter (which is apparently
only following a fairly well defined search strategy) or perhaps better
to blame the implementation of UnivariatePolynomial for allowing this
form of abbreviated 'composition' of polynomials (which I think should
be seen as at best idiosyncratic) as something so ubiquitous in Axiom
as 'function application'. I think there are very good reasons to
distinguish polynomials and expressions in general from functions
(i.e. the lambda abstraction).

--
forwarded from http://page.axiom-developer.org/zope/mathaction/99X1AbcYShouldBeASyntaxError#msg20050217150552-0600@page.axiom-developer.org



\start
Date: Thu, 17 Feb 2005 15:17:50 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [#99 x^1 abc[y] should be a syntax error] annoying


??changed:
-It seems that '1 abc![y]' is parsed as something unusual
It seems that <code>1 abc![y]</code> is parsed as something unusual

??changed:
-So 'abc' [ 'y' ] &nbsp; is the same as 'abc' &nbsp; [ 'y' ] &nbsp; (because clearly the left [ terminates the 
-symbol 'abc') and so this is a subscripted symbol 'abc'<SUB>'y'</SUB>.
So <code>abc![y]</code> is the same as <code>abc ![y]</code> (because clearly the
left <code>'['</code> terminates the  symbol 'abc') and so this is a subscripted
symbol 'abc'<SUB>'y'</SUB>.

??changed:
-'x abc[y]' produces an error because this apply can only take place in UP 
'x abc![y]' produces an error because this apply can only take place in UP 

--
forwarded from http://page.axiom-developer.org/zope/mathaction/99X1AbcYShouldBeASyntaxError#msg20050217151750-0600@page.axiom-developer.org



\start
Date: Thu, 17 Feb 2005 15:30:42 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [#104 branch cuts differ?] Mathaction display problem?

Yes, ever since I upgraded to a new version of the Python Image Library
(last week), MathAction seems to occassionally go into a mode where
it cannot render LaTeX images properly. I do not yet know the cause
however with a little tweaking (like restarting the web server and
deleteing the improperly generated images), I can manage to get it
to work for a while. (I have made such corrections to this page.)

I am investigating the problem now. Please be patient. Thanks.
--
forwarded from http://page.axiom-developer.org/zope/mathaction/104BranchCutsDiffer#msg20050217153042-0600@page.axiom-developer.org



\start
Date: Thu, 17 Feb 2005 17:09:17 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [#103 solve(z=z, z) ] solve(z=z, z) should return [z=z]

Someone wrote:

  This should return <code>[ ]</code> as in (1)

but I disagree. The (trivial) solution of 'z=z' for the variable 'z'
is obviously <code>[z=z]</code> just as the solution of 'w=z' for 'z'
is <code>[z=w]</code>
\begin{axiom}
solve(w=z,z)
\end{axiom}

Similarly, I think the only reasonable result of 'solve(0=0,z)'
is also <code>[z=z]</code>. So I agree that the result should be
that same as (1) except that the result of (1) is also wrong!

Note: These are the same as the results returned by Maple.
--
forwarded from http://page.axiom-developer.org/zope/mathaction/103SolveZZZ#msg20050217170853-0600@page.axiom-developer.org



\start
Date: Thu, 17 Feb 2005 17:20:27 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [#106 Results of integrate(x^2) and integrate(x^2,x) are different] (new) 

The interpreter returns different results (different types) for
\begin{axiom}
integrate(x^2)
integrate(x^2,x)
\end{axiom}

Why?
--
forwarded from http://page.axiom-developer.org/zope/mathaction/106ResultsOfIntegrateX2AndIntegrateX2XAreDifferent#msg20050217172023-0600@page.axiom-developer.org



\start
Date: Fri, 18 Feb 2005 02:14:12 +0200
From: Vladimir Bondarenko
To: list
Subject: [Q] How to classify integrate(z) vs integrate(z^1)

Hi *,

AXIOM connoisseurs help is highly appreciated.

How to interpret the following behavior?


-> integrate(z^2)

     1  3
     - z
     3
                               Type: UnivariatePolynomial(z,Fraction Integer)
-> integrate(z^3)

     1  4
     - z
     4
                               Type: UnivariatePolynomial(z,Fraction Integer)
-> integrate(z^4)

     1  5
     - z
     5
                               Type: UnivariatePolynomial(z,Fraction Integer)

-> integrate(z^1)

     1  2
     - z
     2
                               Type: UnivariatePolynomial(z,Fraction Integer)

but

-> integrate(z)

   There are 5 exposed and 2 unexposed library operations named
      integrate having 1 argument(s) but none was determined to be
      applicable. Use HyperDoc Browse, or issue
                            )display op integrate
      to learn more about the available operations. Perhaps
      package-calling the operation or using coercions on the arguments
      will allow you to apply the operation.

   Cannot find a definition or applicable library operation named
      integrate with argument type(s)
                                 Variable z

      Perhaps you should use "@" to indicate the required return type,
      or "$" to specify which version of the function you need.


Much thanks in advance.


Best wishes,

Vladimir Bondarenko

http://www.cybertester.com/
http://maple.bug-list.org/
http://www.CAS-testing.org/




\start
Date: Thu, 17 Feb 2005 18:41:28 -0600
From: MathAction (billpage)
To: MathAction
Subject: [#99 x^1 abc[y] should be a syntax error] 

Changes http://page.axiom-developer.org/zope/mathaction/99X1AbcYShouldBeASyntaxError/diff
--

??changed:
-Second, it was clear from the original description that it is
-'not a syntax error'. The bug report said: **should be** a syntax
-error. So maybe you mean 'should not be a syntax error'?
Second, it is clear from the original description that it is
"**not** a syntax error". The bug report said: "**should be** a syntax
error". So maybe you mean "should not be a syntax error"?

??changed:
-but the fact that abd[y] when appearing in a Type is displayed as
but the fact that abc[y] when appearing in a Type is displayed as

--
forwarded from http://page.axiom-developer.org/zope/mathaction/99X1AbcYShouldBeASyntaxError#msg20050217184128-0600@page.axiom-developer.org/diff
Changes: http://page.axiom-developer.org/zope/mathaction/99X1AbcYShouldBeASyntaxError



\start
Date: Thu, 17 Feb 2005 19:41:44 -0500
From: William Sit
To: Vladimir Bondarenko
Subject: Re: [Q] How to classify integrate(z) vs integrate(z^1)

Vladimir Bondarenko wrote:
sseurs help is highly appreciated.
> 
> How to interpret the following behavior?
[snipped]

> -> integrate(z^1)
> 
>      1  2
>      - z
>      2
>                                Type: UnivariatePolynomial(z,Fraction Integer)
> 
> but
> 
> -> integrate(z)
> 
>    There are 5 exposed and 2 unexposed library operations named
>       integrate having 1 argument(s) but none was determined to be
[snipped]

Again, this is the more information you give the interpreter, the easier it can
find the right function. In z^1 you indicated that there is an exponentiation
function, so the Interpreter naturally look into POLY INT and failing to find
integrate without knowing the variable to integrate, backtracks to UP(z, INT)
and then can find integrate. But when you only give z as Variable(z), it gives
up. 

Use )set mess bot on to see what the interpreter does.

William



\start
Date: Thu, 17 Feb 2005 19:09:32 -0600
From: MathAction (billpage)
To: MathAction
Subject: [#7 Simplify changes the type of an expression] 

Changes http://page.axiom-developer.org/zope/mathaction/7SimplifyChangesTheTypeOfAnExpression/diff
--

--removed:
-

??changed:
-
-From unknown Wed Feb 2 12:47:56 -0600 2005
-From: 
-Date: Wed, 02 Feb 2005 12:47:56 -0600
-Subject: property change
-Message-ID: <20050202124756-0600@page.axiom-developer.org>
-
-
-
-From unknown Wed Feb 16 20:28:41 -0600 2005
-From: 
-Date: Wed, 16 Feb 2005 20:28:41 -0600
-Subject: property change
-Message-ID: <20050216202841-0600@page.axiom-developer.org>
-
-
Why does factor refuse to factor an Expression Integer but
succeeds with Polynomial Integer?
\begin{axiom}
simplify((1+x)^3)
factor(%::Polynomial Integer)
\end{axiom}




--
forwarded from http://page.axiom-developer.org/zope/mathaction/7SimplifyChangesTheTypeOfAnExpression#msg20050217190932-0600@page.axiom-developer.org



\start
Date: Thu, 17 Feb 2005 19:56:18 -0500
From: Bill Page
To: Vladimir Bondarenko
Subject: RE: [Q] How to classify integrate(z) vs integrate(z^1)

Since in Axiom

(1) -> z^1
 
   (1)  z
                                                     Type: Polynomial
Integer
(2) -> z

   (2)  z
                                                             Type: Variable
z

What you show below is entirely normal behaviour for Axiom.
Axiom knows how to integrate something that it can coerce to
a univariate polynomial such as the polynomial z^1, but it
does not know what to do with the variable z.

I agree that this is a bit bizzarre - especially for new users.

Actually I think it might make sense to allow coersion from
the domain Variable to Symbol from which the interpret can get
to UnivariatePolynomial. In which case one would see the same
result as

  integrate(z::Symbol)

Regards,
Bill Page.


On Thursday, February 17, 2005 7:14 PM Vladimir Bondarenko wrote:
> 
> AXIOM connoisseurs help is highly appreciated.
> 
> How to interpret the following behavior?
>
> ...
> 
> -> integrate(z^1)
> 
>      1  2
>      - z
>      2
>                                Type: 
> UnivariatePolynomial(z,Fraction Integer)
> 
> but
> 
> -> integrate(z)
> 
>    There are 5 exposed and 2 unexposed library operations named
>       integrate having 1 argument(s) but none was determined to be
>       applicable. Use HyperDoc Browse, or issue
>                             )display op integrate
>       to learn more about the available operations. Perhaps
>       package-calling the operation or using coercions on the 
> arguments
>       will allow you to apply the operation.
> 
>    Cannot find a definition or applicable library operation named
>       integrate with argument type(s)
>                                  Variable z
> 
>       Perhaps you should use "@" to indicate the required return type,
>       or "$" to specify which version of the function you need.



\start
Date: Thu, 17 Feb 2005 19:19:28 -0600
From: MathAction (William Sit)
To: MathAction
Subject: [#99 x^1 abc[y] should be a syntax error] [#99	x^1 abc[y] should be a syntax error] annoying

Changes http://page.axiom-developer.org/zope/mathaction/99X1AbcYShouldBeASyntaxError/diff
--
Bill Page wrote:
> 
> First, I find it rather annoying that the **Status** was changed
> by an anonymous user to 'closed' without further discussion. Maybe
> I would agree with a status of 'pending' but I think it would
> at least be courteous to identify oneself by clicking 'preferences'
> before changing a status. That way at least I know who to blame. ;)
> Maybe we should make it so that a user id must be specified in order
> to click the 'Change' button?
>

Sorry, Bill. I was too hasty in closing it. But I don't see why anyone should be
"annoyed". If you don't think it is right, just change it back to "open". Isn't
that the reason for Wiki?

By the way, I did look all over to find where to login -- I advocated that --but
putting it under "preference" does not ring a bell (neither would "user
options"). Login and setting preferences are two distinct functions that should
not be put under one button. Preferences should be set once when one registers,
but login should done each time.

> Second, it was clear from the original description that it is
> 'not a syntax error'. The bug report said: **should be** a syntax
> error. So maybe you mean 'should not be a syntax error'?
> 
> Third most of your "explanation" is quite easy to find in the Axiom
> book (see page 818)
> 
> "Univariate polynomials can also be used as if they were functions."
> 


 I was at first very puzzled by how the outputs in the original post are
obtained. Perhaps if whoever posted it knew how the outputs came about, that
should be included in the post so others do not have to waste time figuring that
out. I interpreted the heading (ok wrongly) as some of the expressions have
syntax error. I figured that they do not. Rather, it is the inability of the
interpreter to coerce some parameters to the "correct" type and find a
reasonable signature. But this is nothing new and short of analyzing the
interpreter code to make it even smarter, what can we do in the meantime? That
is why I thought "case closed".

> but the fact that abd[y] when appearing in a Type is displayed as
> '*01abc y' is not described anywhere. This notation is especially
> odd since it is not a valid input form. So perhaps you might have
> proposed to change the category of this issue to 'Axiom Documentation'
> and leave the status 'Open'?



I disagree with your objection to <code>*01abc y</code> in the output message.
Sure, it would be better to be able to display that as a subscripted symbol, but
this is merely a device to make outputting a subscript on a line-oriented device
easier. Output in most cases cannot be fed back as input (that is on the wish
list). This is not part of the Axiom language, just as how TeXForm is coded is
not part of Axiom. 

On the otherhand, one can use easily

\begin{axiom}
t:=1 x[y[z]]
dom:=typeOf t
h:dom:=monomial(2,3)
\end{axiom}

In fact, precisely because Axiom wants to preserve this structural information
on the variable that it outputs it this way! Had it used a two dimensional
method, it would not be able recapture the type information.

> 
> But I am not at all convinced that Axiom should behave in this
> strange manner. The idea that::
> 
>   1 x[k]
> 
> is the unit of the domain of univariate polynomials over the
> variable x[k] is extraordinarily obscure and does not seem to
> have any obvious application to me. Further the fact that::
> 
>   1 x
> 
> is not defined (because the type of x is of type **Variable x* and
> not **Symbol** and for some reason the interpreter does not consider
> the obvious coercion of x to **Symbol** while something more complicated
> like 'x[k]' is of type *Symbol* by defautl) is at best very awkward
> and bordering on the bizarre.
> 
> I am not sure whether to blame the interpreter (which is apparently
> only following a fairly well defined search strategy) or perhaps better
> to blame the implementation of UnivariatePolynomial for allowing this
> form of abbreviated 'composition' of polynomials (which I think should
> be seen as at best idiosyncratic) as something so ubiquitous in Axiom
> as 'function application'. I think there are very good reasons to
> distinguish polynomials and expressions in general from functions
> (i.e. the lambda abstraction).
> 

You must have a pretty bad day? (three "blame" words in one message? :-)

I agree 100% with you that one should distinguish polynomials or expressions
from functions. But that is on the mathematics or theory level. In computing, we
need to be able to make substitutions (compose if you like under certain cases)
into the polynomials or expressions -- even if you use eval, you are still
considering the polynomials as functions *without any change in domain or
representation*. It would be another nightmare of coercion if a polynomial has
to be coerced into a function before any evaluation. Moreover, if a polynomial
can be thought of as a function, then ground elements are constant functions.
Axiom is consistent in this interpretation and any one writing '1 x'
intentionally would understand that to be the constant function 1 evaluated at
'x' and the interpreter is to find the domain in which this makes sense. One way
is to treat 'x' as in a univariate polynomial ring (a multivariate polynomial
ring would be ok too except that the function that does the evaluation must
operate on all cases, and unless you are in a univariate situation, '1 x' would
only be a special case, and '(a+b) x' would be ambiguous because 'x' may replace
'a' or replace 'b').

While it may be unintuitive why anyone would perform an operation like '1 x', we
should always bear in mind that this computation may have come about as an
intermediate computation (piping), when most of the time it would be 'a b' where
'a', 'b' are both polynnomials in 'POLY INT', and in some situation, 'a' becomes
'1'. You cannot treat '1 x' differently from 'a b', and certainly should not be
treated as a syntax error (when suitably placed, as in code intended for
compilation) because it is not. 


The interpreter succeeds in seemingly more complicated <code>1 x[y]</code> and
not '1 x' may perhaps be understood the following way.  More complicated
expressions provide more information to the interpreter and this guides it: to
apply 'x' to <code>[y]</code>, the interpreter figures out the correct map with
target domain Symbol, which helps it to locate
<code>UP(x<sub>y</sub>,INT)</code>. Converting a 'Variable(x)' element to Symbol
is "counter-intuitive" to the interpreter, because the domain Variable(x:Symbol)
starts with a symbol. Variable(x) is an unexposed domain, and the conversion
(either 'coerce' or 'variable') are unexposed (possibly to avoid the possibility
to change it back from Symbol to Variable(x) again). So unless you explicitly
make the conversion, the interpreter does not do it.

The Wiki pages are supposed to be for experts as well as for novices. When
simple input like this causes some apparent problem that is "unexpected", we
should explain it. For some this may sound trivial, but for others, it may not.


 
> --
> forwarded from http://page.axiom-developer.org/zope/mathaction/99X1AbcYShouldBeASyntaxError#msg20050217150552-0600@page.axiom-developer.org
> 

William

--
forwarded from http://page.axiom-developer.org/zope/mathaction/99X1AbcYShouldBeASyntaxError#msg421542A6.ABB4CF71@cunyvm.cuny.edu



\start
Date: Thu, 17 Feb 2005 19:24:17 -0600
From: MathAction (billpage)
To: MathAction
Subject: [SquareMatrix] 

Changes http://page.axiom-developer.org/zope/mathaction/SquareMatrix/diff
--

??changed:
-a b 
-ab
-
SquareMatrix(2,Integer) is an example of a domain constructor that
accepts both a particular data value as well as an integer. In this
case the number 2 specifies the number of rows and columns the square
matrix will contain. Elements of the matricies are integers.

\begin{axiom}
A:SquareMatrix(2,Integer)
A:=1
\end{axiom}

or even

\begin{axiom}
B:SquareMatrix(2,SquareMatrix(3,Float))
B:=1
\end{axiom}


--
forwarded from http://page.axiom-developer.org/zope/mathaction/SquareMatrix#msg20050217192417-0600@page.axiom-developer.org



\start
Date: Thu, 17 Feb 2005 22:15:21 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [#99 x^1 abc[y] should be a syntax error] bad day? not really :)

Changes http://page.axiom-developer.org/zope/mathaction/99X1AbcYShouldBeASyntaxError/diff
--
Today I felt like taking what I think might be the point of view
of a new user of Axiom. I agree completely that the Wiki pages are
supposed to be for experts as well as for novices and when simple
input like this causes some apparent problem that is "unexpected",
that we should explain it. I think you did a good job of that.
But in my opinion the explanation is rather bizarre (especially
from the point of view of a new user). So this is were the experts
come in: How can we make Axiom's behaviour less bizarre to new
users?

I originally saw this behaviour in an simple test in the SandBox
where a new user wrote something like this
\begin{axiom}
integrate(z^2 ln[z],z)
\end{axiom}

I was quite sure that what they intended to compule was
\begin{axiom}
integrate(z^2*log(z),z)
\end{axiom}

but I had a hard time understanding the original answer and I
wondered way Axiom did not at least produce some kind of syntax
error.

About the status: 'Closed' looks like you have decided that there
should be no more discussion. Yes this is a wiki and so I could
simply 'Open' it again, but I think it is better to try to develop
some "rules of netiquette" so that the open collaboration allowed
by the wiki can work smoothly. We are all still fairly new at this.

Perhaps I was too direct in using the word "annoyed" since I am
well aware that it is very hard to correctly interpret other peoples'
motives and emotional state when reading what they wrote alone.
I was annoyed :) but if you had seen me in person you would have
noticed that I also smiled when I said that. Of course I used the
word "blame" in the same way. I did not mean it to sound like I
was "finding fault" with anyone, only that I wanted to identify
what might be changed to make Axiom's behaviour more intuitive.

About 'preferences': It seems that "wiki people" generally would
like to avoid any perceived "login barrier". Setting preferences
is just a matter of saying how you would like to be identified
(and a few other details) - it is not supposed to be like
"logging in". And you are right that in principle this only
needs to be done once. Setting preferences sends some cookies
to your browser which, depending on whether you have set your
browser security to permit it or not, will allow the system
to remember your preferences the next time you connect to the
wiki. But maybe you are right that there might be a better
label than 'preferences'. How about something like 'Who Am I'?

About the use of '*01abc y' as a symbol in a type. Maybe this
notation starts to make a *little* more sense if you see an
expression like
\begin{axiom}
1 t[x,y,z]
\end{axiom}

but I still don't see why, if there is a need for some
linear syntax, there would be any objection to using the
same syntax as the input. Surely::

             Type: UnivariatePolynomial(t[x,y,z], Integer)

would be self explanatory, no?

About functions and expressions. There is no problem making
substitutions into polynomials like this:
\begin{axiom}
subst((1+b^2)::UP(b,INT),b=(t^2::UP(t,INT)))::UP(t,INT)
\end{axiom}

or even this
\begin{axiom}
subst((1+c*b^2)::MPOLY([b,c],INT),b=(t^2::UP(t,INT)))::MPOLY([t,c],INT)
\end{axiom}

We can also explicitly use 'eval'. So I don't understand the
need to define application for univariate polynomials and to
treat them like functions.

Finally, could you explain further your reasoning about why the
interpreter should not coerce 'Variable x' to 'Symbol'? Axiom
has no trouble coercing x to a Symbol in the case of an expresion
like 'UP(x,INT)'. Surely it should be able to solve the problem
of coercing x to Symbol in order that Symbol can be coerced to
UP(x,INT) in cases like '1 x' and 'integrate(x)'?

Or is it the case that the interpreter never tries harder than
just one coercion?

BTW, I tried specifying
\begin{axiom}
)expose Variable
\end{axiom}

but I did not see any change in Axiom's behaviour.
\begin{axiom}
1 x
integrate(x)
\end{axiom}

---------
Bill Page
--
forwarded from http://page.axiom-developer.org/zope/mathaction/99X1AbcYShouldBeASyntaxError#msg20050217221454-0600@page.axiom-developer.org



\start
Date: Thu, 17 Feb 2005 23:00:46 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [#107 Interpreter code generation failed for expression1] (new) 

Changes http://page.axiom-developer.org/zope/mathaction/107InterpreterCodeGenerationFailedForExpression1/diff
--
It is sometimes useful to define x as a Symbol:
\begin{axiom}
x:Symbol:=x
integrate(x)
1 x
\end{axiom|

But somethings can be done with Variables but cannot
be done with Symbols
\begin{axiom}
y
y == 1
y
x == 1
x
\end{axiom}
--
forwarded from http://page.axiom-developer.org/zope/mathaction/107InterpreterCodeGenerationFailedForExpression1#msg20050217230036-0600@page.axiom-developer.org



\start
Date: Thu, 17 Feb 2005 23:02:49 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [#107 Interpreter code generation failed for expression1] 

Changes http://page.axiom-developer.org/zope/mathaction/107InterpreterCodeGenerationFailedForExpression1/diff
--

??changed:
-\end{axiom|
-
-But somethings can be done with Variables but cannot
\end{axiom}

But some things can be done with Variables but cannot

--
forwarded from http://page.axiom-developer.org/zope/mathaction/107InterpreterCodeGenerationFailedForExpression1#msg20050217230249-0600@page.axiom-developer.org



\start
Date: Thu, 17 Feb 2005 23:37:49 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [#107 Interpreter code generation failed for expression1] 

Changes http://page.axiom-developer.org/zope/mathaction/107InterpreterCodeGenerationFailedForExpression1/diff
--

??changed:
-It is sometimes useful to define x as a Symbol:
It is sometimes useful to define x as a Symbol

??changed:
-x:Symbol:=x
x:Symbol

++added:
x := 1
\end{axiom}

And this causes an error
\begin{axiom}

--
forwarded from http://page.axiom-developer.org/zope/mathaction/107InterpreterCodeGenerationFailedForExpression1#msg20050217233749-0600@page.axiom-developer.org



\start
Date: Thu, 17 Feb 2005 23:47:17 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [#99 x^1 abc[y] should be a syntax error] bad day? not really :)

Changes http://page.axiom-developer.org/zope/mathaction/99X1AbcYShouldBeASyntaxError/diff
--

??changed:
-I was quite sure that what they intended to compule was
I was quite sure that what they intended to compute was

??changed:
-wondered way Axiom did not at least produce some kind of syntax
wondered why Axiom did not at least produce some kind of syntax

--
forwarded from http://page.axiom-developer.org/zope/mathaction/99X1AbcYShouldBeASyntaxError#msg20050217234717-0600@page.axiom-developer.org



\start
Date: Thu, 17 Feb 2005 23:52:51 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [#99 x^1 abc[y] should be a syntax error] bad day? not really :)

Changes http://page.axiom-developer.org/zope/mathaction/99X1AbcYShouldBeASyntaxError/diff
--

++added:

\begin{axiom}
)clear all
\end{axiom}

--
forwarded from http://page.axiom-developer.org/zope/mathaction/99X1AbcYShouldBeASyntaxError#msg20050217235251-0600@page.axiom-developer.org



\start
Date: Fri, 18 Feb 2005 01:37:11 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [#108 InfiniteTuple and Stream] 

Changes http://page.axiom-developer.org/zope/mathaction/108InfiniteTupleAndStream/diff
--

??changed:
-Section
-
-5.6 An Example: Streams of Primes
Section 5.6 An Example: Streams of Primes

??changed:
-
-This is how you use generate to generate an infinite stream of primes.
"This is how you use generate to generate an infinite stream of primes."

--
forwarded from http://page.axiom-developer.org/zope/mathaction/108InfiniteTupleAndStream#msg20050218013711-0600@page.axiom-developer.org



\start
Date: Fri, 18 Feb 2005 01:26:26 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [#108 InfiniteTuple and Stream] (new) 

Changes http://page.axiom-developer.org/zope/mathaction/108InfiniteTupleAndStream/diff
--
Section

5.6 An Example: Streams of Primes

  of the Axiom Book says:

This is how you use generate to generate an infinite stream of primes.
\begin{axiom}
primes := generate(nextPrime,2)
\end{axiom}

but the result is an InfiniteTuple, not a Stream. The domain
InfiniteTuple is not documented in the book.

To create a stream one must explicitly write:
\begin{axiom}
primes := generate(nextPrime,2)$Stream Integer
\end{axiom}

or
\begin{axiom}
primes := construct generate(nextPrime,2)
\end{axiom}

--
forwarded from http://page.axiom-developer.org/zope/mathaction/108InfiniteTupleAndStream#msg20050218012618-0600@page.axiom-developer.org



\start
Date: Fri, 18 Feb 2005 01:16:18 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [AxiomDownload] 2/2005 release

Changes http://page.axiom-developer.org/zope/mathaction/AxiomDownload/diff
--
(Fedora 3) After I made a link from ~/axiom to ~/axiom--main--1--patch-30, axiom sort of worked. I had a help window open, and 2+2=4. cos(2) crashed the program. I don't care what the correct syntax of the cosine command (if any) is; crashing is not an appropriate response.

--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomDownload#msg20050218011615-0600@page.axiom-developer.org



\start
Date: Fri, 18 Feb 2005 01:35:12 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [InfiniteTuple] (new) 

Changes http://page.axiom-developer.org/zope/mathaction/InfiniteTuple/diff
--
The following description is copied from the source code.
No other documentation is available yet for this domain.

)abbrev domain ITUPLE InfiniteTuple::

  ++ Infinite tuples for the interpreter
  ++ Author: Clifton J. Williamson
  ++ Date Created: 16 February 1990
  ++ Date Last Updated: 16 February 1990

InfiniteTuple(S:Type): Exports == Implementation where::

  ++ This package implements 'infinite tuples' for the interpreter.
  ++ The representation is a stream.

  Exports ==> CoercibleTo OutputForm with
    map: (S -> S, %) -> %
      ++ map(f,t) replaces the tuple t
      ++ by \spad{[f(x) for x in t]}.
    filterWhile: (S -> Boolean, %) -> %
      ++ filterWhile(p,t) returns \spad{[x for x in t while p(x)]}.
    filterUntil: (S -> Boolean, %) -> %
      ++ filterUntil(p,t) returns \spad{[x for x in t while not p(x)]}.
    select: (S -> Boolean, %) -> %
      ++ select(p,t) returns \spad{[x for x in t | p(x)]}.
    generate: (S -> S,S) -> %
      ++ generate(f,s) returns \spad{[s,f(s),f(f(s)),...]}.
    construct: % -> Stream S
      ++ construct(t) converts an infinite tuple to a stream.

--
forwarded from http://page.axiom-developer.org/zope/mathaction/InfiniteTuple#msg20050218013512-0600@page.axiom-developer.org



\start
Date: Fri, 18 Feb 2005 01:59:37 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [UnivariatePolynomial] (new) 

Changes http://page.axiom-developer.org/zope/mathaction/UnivariatePolynomial/diff
--
Section 9.83 UnivariatePolynomial

  The domain constructor UnivariatePolynomial (abbreviated UP) creates
domains of univariate polynomials in a specified variable. For example,
the domain 'UP(a1,POLY FRAC INT)' provides polynomials in the single
variable a1 whose coefficients are general polynomials with rational
number coefficients. 'UP(x,INT) is the domain of polynomials in the
single variable x with integer coefficients.

Example operations on univariate polynomials

\begin{axiom}
(p,q) : UP(x,INT)
p := (3*x-1)**2 * (2*x + 8)
q := (1 - 6*x + 9*x**2)**2
p**2 + p*q
D p
integrate p
p(2)
p q
q p
vectorise(p,5)
t : UP(a1,FRAC POLY INT)
t := a1**2 - a1/b2 + (b1**2-b1)/(b2+3)
u : FRAC POLY INT := t
u :: UP(b1,?)
\end{axiom}
--
forwarded from http://page.axiom-developer.org/zope/mathaction/UnivariatePolynomial#msg20050218015935-0600@page.axiom-developer.org



\start
Date: Fri, 18 Feb 2005 02:33:40 -0600
From: MathAction (billpage)
To: MathAction
Subject: [UnivariatePolynomial] 

Changes http://page.axiom-developer.org/zope/mathaction/UnivariatePolynomial/diff
--

??changed:
-p(2)
p 2
subst(p,x=2)
2 p

++added:
y:Symbol
1 y
w
p w

--
forwarded from http://page.axiom-developer.org/zope/mathaction/UnivariatePolynomial#msg20050218023340-0600@page.axiom-developer.org



\start
Date: Fri, 18 Feb 2005 02:20:32 -0600
From: MathAction (billpage)
To: MathAction
Subject: [UnivariatePolynomial] 

Changes http://page.axiom-developer.org/zope/mathaction/UnivariatePolynomial/diff
--

??changed:
-number coefficients. 'UP(x,INT) is the domain of polynomials in the
number coefficients. 'UP(x,INT)' is the domain of polynomials in the

--
forwarded from http://page.axiom-developer.org/zope/mathaction/UnivariatePolynomial#msg20050218022032-0600@page.axiom-developer.org



\start
Date: Fri, 18 Feb 2005 02:47:28 -0600
From: MathAction (billpage)
To: MathAction
Subject: [AxiomDownload] where does it say

Changes http://page.axiom-developer.org/zope/mathaction/AxiomDownload/diff
--
Where does it say to make a link for ~/axiom to ~/axiom--main--1--patch-30?

Have you set the environment variables according to::

 % cd ~/axiom--main--1--patch-30
 % ./configure

Note: unlike other linux applications with Axiom you **must**
set these variables manually.

After setting the environment variables, what is the result of
running::

  % AXIOMsys

If cos(2) still causes a crash, please click on 'issues' at
the top of this page and submit a bug report.

If AXIOMsys works, try::

  % axiom

If this still has problems, then check the contents
of the script at::

  % which axiom

Make sure that the environment variables in the script are set
correctly.
--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomDownload#msg20050218024726-0600@page.axiom-developer.org



\start
Date: Fri, 18 Feb 2005 10:52:44 +0200
From: Vladimir Bondarenko
To: list
Subject: [Q] Explanation of 1+z==z+1 impact ?

Hello *,

Is is possible to hear explanation on the following?

->)clear all

-> integrate(1+z, z)

     1  2
     - z  + z
     2
                                            Type: Polynomial Fraction Integer
-> 1+z==z+1
   Compiled code for + has been cleared.
   1 old definition(s) deleted for function or rule +
                                                                   Type: Void

> integrate(1+z, z)
   Compiling function + with type (PositiveInteger,PositiveInteger) ->
      Float
   Compiling function + with type (Variable z,PositiveInteger) -> Float

   Compiling function + with type (PositiveInteger,Variable z) -> Float


   The function + is not defined for the given argument(s).


Much thanks in advance.


Best,

Vladimir




\start
Date: Fri, 18 Feb 2005 10:56:25 +0200
From: Vladimir Bondarenko
To: list
Subject: [Q]  %pi()  vs  %pi  difference ?

Hello *,

Is there a difference between  %pi and %pi()?
If yes, how to learn about it? If not, why we
have both %pi() and %pi?

-> )set mess bot on

-> %pi() :: Complex Float

 Function Selection for pi
      Arguments: ()
      Default target type: Pi

 [1]  signature:   () -> HACKPI
      implemented: slot $ from HACKPI


 3.1415926535 897932385
                                     Type: Complex Float

-> %pi :: Complex Float

 Function Selection for pi
      Arguments: ()
      Default target type: Pi

 [1]  signature:   () -> HACKPI
      implemented: slot $ from HACKPI


 3.1415926535 897932385
                                   Type: Complex Float

Thank you in advance.


Best,

Vladimir




\start
Date: Fri, 18 Feb 2005 06:06:51 -0500
From: Bill Page
To: Vladimir Bondarenko
Subject: RE: [Q] Explanation of 1+z==z+1 impact ?

On Friday, February 18, 2005 3:53 AM Vladimir Bondarenko wrote:
> ...
> -> 1+z==z+1
>    Compiled code for + has been cleared.
>    1 old definition(s) deleted for function or rule +
>                                                               
>      Type: Void
>

Wow! Did you really want to re-define the function + ??

What do you expect '1+z==z+1' to mean? As a function
definition it seems to have an infinite recursion.

Try this instead

 -> 1+z==2*z

Then you can compute

 -> 1+3

      6

but

 -> 2+3

is still undefined.
 
> > integrate(1+z, z)
>    Compiling function + with type (PositiveInteger,PositiveInteger)
>       -> Float
>    Compiling function + with type (Variable z,PositiveInteger)
>       -> Float
> 
>    Compiling function + with type (PositiveInteger,Variable z)
>       -> Float
> 
> 
>    The function + is not defined for the given argument(s).
> 

With + defined as

 -> 1+z==2*z

then

 > integrate(1+z, z)

          z^2

Does that make sense?

Regards,
Bill Page.



\start
Date: Fri, 18 Feb 2005 05:52:48 -0500
From: Bill Page
To: Tim Daly
Subject: RE: build issue?

Tim,

On Thursday, February 17, 2005 10:32 AM you wrote:
> 
> in src/etc/Makefile, in the <<dbcomplete>> chunk there is a
> prerequisite of:
> 
> ${INT}/algebra/*.NRLIB/code.o
> 
> but there is no stanza to address this rule.

That is normal.

The *.NRLIB/code.o files are intermediate files that are
actually created by the src/algebra/Makefile. Since they
are intermediate, as far as src/algebra/Makefile is
concerned, they are not needed unless some target that
explicitly depends on them, e.g. the ${OUT}/%.o files,
needs to be rebuilt.

The rule in src/etc/Makefile

  ${MNT}/${SYS}/algebra/*.daase: ${INT}/algebra/*.NRLIB/code.o

is a "wildcard" rule which says that the *.daase files
depend on all of the *.NRLIB/code.o files that exist at
the time the sub-make is run (i.e. those that were previously
created by the src/algebra/Makefile). The databases will
be re-built if any of these files have dates later than
the database files.

> This only shows up if you remove the code.o files. 
>

It does not really make sense to delete only the code.o
files. That is like saying that these are no longer needed
to build the daase files.

You could delete *both* the ${OUT}/%.o files as well as
the code.o files. That will trigger all of them to be
re-build in src/algebra/Makefile. Or alternatively if your
goal is just to re-build the code.o files then

  touch int/algebra/*.spad

should work even better.
 
> This is somehow related to the generic rule effort but
> I don't see how to resolve it.

Yes. More specifically it is related to the use of implicit
rules which are treated in a subtly different way than explicit
rules when it comes to intermediate files. The code.o files
are not re-created unless some explicit rule calls for them.
Deleting the ${OUT}/%.o files before running make will cause
the code.o files to be created.

If deleting both the ${OUT}/%.o files and the code.o files or
using 'touch int/algebra/*.spad' does not seem satisfactory
to you, then we should move <<dbcomplete>> back to the
src/algebra/Makefile and replace the simple wildcard rule
with an explicit list of code.o files built from the
${SPADFILES} list by patterns substitutions - the way you
do it in the src/interp/Makefile. It would be something like
this:

${OUT}/*.daase: \
    ${SPADFILES:${OUTSRC}/%.spad=${MID}/%.NRLIB/code.o}

Probably the internal $ in the patterns have to be escaped
with \$ . I know you never liked the idea of moving
<<dbcomplete>> from algebra to etc anyway. :)

If you want, I can experiment with this change in my next
patch to axiom--windows--1.

> 
> To trigger the problem remove the code.o files and
> type make.
> 

Can you try deleting the ${OUT}/%.o files and the code.o
files and see if that does what you want?

In my fixedPoint script this problem does not happen
because I use

  touch int/algebra/*.spad

If your goal is to cause the code.o files to be re-built
using the optimization information in the NRLIBS from a
previous build, then I think this should also work for
you.

Regards,
Bill Page.



\start
Date: Fri, 18 Feb 2005 06:35:47 -0500
From: Bill Page
To: Vladimir Bondarenko
Subject: RE: [Q]  %pi()  vs  %pi  difference ?

Vladimir,

Briefly, %pi is a system defined macro for pi(). The
interpreter allows %pi() because macros can sometimes
have parameters. But both %pi and %pi() are treated exactly
the same as pi().

To see all the macros type

  )display macros

For more about pi() try

  )display op pi

Notice that there is also a special "domain" of Pi.

  )show Pi

which contains the function pi().

See previous discussion

http://lists.gnu.org/archive/html/axiom-developer/2005-01/msg00002.html
http://lists.gnu.org/archive/html/axiom-developer/2004-12/msg00283.html
http://lists.gnu.org/archive/html/axiom-developer/2004-12/msg00282.html

Regards,
Bill Page.

> -----Original Message-----
> From: Vladimir Bondarenko [mailto:Vladimir Bondarenko]
> Sent: Friday, February 18, 2005 3:56 AM
> To: list
> Subject: [Q] %pi() vs %pi difference ?
> 
> 
> Hello *,
> 
> Is there a difference between  %pi and %pi()?
> If yes, how to learn about it? If not, why we
> have both %pi() and %pi?
> 
> -> )set mess bot on
> 
> -> %pi() :: Complex Float
> 
>  Function Selection for pi
>       Arguments: ()
>       Default target type: Pi
> 
>  [1]  signature:   () -> HACKPI
>       implemented: slot $ from HACKPI
> 
> 
>  3.1415926535 897932385
>                                      Type: Complex Float
> 
> -> %pi :: Complex Float
> 
>  Function Selection for pi
>       Arguments: ()
>       Default target type: Pi
> 
>  [1]  signature:   () -> HACKPI
>       implemented: slot $ from HACKPI
> 
> 
>  3.1415926535 897932385
>                                    Type: Complex Float
> 
> Thank you in advance.
> 
> 
> Best,
> 
> Vladimir



\start
Date: Fri, 18 Feb 2005 06:42:43 -0800 (PST)
From: Cliff Yapp
To: list
Subject: Idea for mathaction updates

I have another, possibly more workable idea for the question of sending
updates to the axiom-developer list:

Have a checkbox next to the submission for change that can toggle
whether or not a change is sent to the developer list or just added to
a "minor changes" digest.  That way no change goes unrecorded or
unnoticed, but if we need to correct a typo or something else that
doesn't add new content we could uncheck the "send to axiom-developer"
option and reduce list noise.

Useful/workable?

CY


		
__________________________________ 
Do you Yahoo!? 
Yahoo! Mail - 250MB free storage. Do more. Manage less. 
http://info.mail.yahoo.com/mail_250



\start
Date: Fri, 18 Feb 2005 18:16:51 +0100
From: Pierre Doucy
To: Cliff Yapp
Subject: Re: Idea for mathaction updates

What about a read-only mathaction-updates mailing-list ? That would
make the actual developer conversations more readable and less
noised...

just my 2 pence...

Pierre DOUCY


On Fri, 18 Feb 2005 06:42:43 -0800 (PST), Cliff Yapp wrote:
> I have another, possibly more workable idea for the question of sending
> updates to the axiom-developer list:
> 
> Have a checkbox next to the submission for change that can toggle
> whether or not a change is sent to the developer list or just added to
> a "minor changes" digest.  That way no change goes unrecorded or
> unnoticed, but if we need to correct a typo or something else that
> doesn't add new content we could uncheck the "send to axiom-developer"
> option and reduce list noise.
> 
> Useful/workable?
> 
> CY
> 
> __________________________________
> Do you Yahoo!?
> Yahoo! Mail - 250MB free storage. Do more. Manage less.
> http://info.mail.yahoo.com/mail_250
> 
> _______________________________________________
> Axiom-developer mailing list
> list
> http://lists.nongnu.org/mailman/listinfo/axiom-developer
> 


-- 
Cats are intended to teach us that not everything in nature has a function.



\start
Date: Fri, 18 Feb 2005 19:01:22 +0100
From: Martin Rubey
To: Pierre Doucy
Subject: Re: Idea for mathaction updates

Pierre Doucy writes:
 > What about a read-only mathaction-updates mailing-list ? That would
 > make the actual developer conversations more readable and less
 > noised...

My reason for promoting the current mode of forwarding changes from MathAction
to axiom-developer was twofold:

* promoting MathAction

* unifying the places where things happen.

I think that with changing AxiomInterface to SandBox a lot of noise has gone, a
further lot will go away when there is a preview button also for IssueTracker.

I believe that a separate mailing list for MathAction -- or, equivalently,
returning to the old status, where you had to subscribe MathAction -- is not
such a good idea: "actual" developer conversation currently are stimulated by
bugs posted to IssueTracker and also by modifications as recently done on the
ProgrammingAxiom. (I did not yet respond, since my time is currently very
limited due to baby and research...)

I think it is absolutely necessary that bugs are forwarded to
axiom-developer. And, looking at the recent lot of posts, these make the big
lot.

Some more thoughts: I'm absolutely certain that noise will reduce as time goes
by and, of course we shoul keep our eyes open for simple ways to reduce noise.
I would suggest that we at least wait until the preview button on IssueTracker
exists. Finally, it is quite clear that usage of MathAction did increase quite
a bit recently!

Martin




\start
Date: Fri, 18 Feb 2005 18:24:13 -0500
From: Bill Page
To: Martin Rubey
Subject: RE: Idea for mathaction updates

On Friday, February 18, 2005 1:01 PM Martin Rubey wrote:
> 
> I think that with changing AxiomInterface to SandBox a
> lot of noise has gone, a further lot will go away when
> there is a preview button also for IssueTracker.

Unfortunately, adding a **preview** button to **add comment**
and **add issue** is a little complicated because preview is
part of the **edit** function but the code for **add comment**
and **add issue** is designed for entry only. Such a change
would have to be done by the developers of ZWiki. I have been
discussing this at:

http://zwiki.org/UserDiscussion#msg20050218085526-0800@zwiki.org

Feel free to join in.

In the mean time, one can use a two-step process:

1 First enter only a subject or title, leave the body of
  the comment or issue blank and click **add**. Because
  it consists of only a heading, MathAction will not
  create an email message.

2 Second, click **edit** and the main body of the comment of
  issue. Since you are editing, you have access to **preview**
  and an email will be sent only when you finally click
  **Save**

It might be possible to program a simple **preview** button
for the **add* boxes which automatically presents the user
with the **edit** page.

> ... 
> Some more thoughts: I'm absolutely certain that noise will 
> reduce as time goes by and, of course we should keep our
> eyes open for simple ways to reduce noise.

You may notice that since yesterday there is a new link
at the beginning of each message forwarded from MathAction.
Although this does not reduce the amount of "noise", it
might make it a little more convenient for people who use
email and a web browser in an integrated manner.

Emails from MathAction now look like this:

-------
Changes
http://page.axiom-developer.org/zope/mathaction/108InfiniteTupleAndStream/di
ff
--
text of changes ...
--
forwarded from
http://page.axiom-developer.org/zope/mathaction/108InfiniteTupleAndStream#ms
g20050218012618-0600@page.axiom-developer.org
--------

The first link points to a much easier to read web page
containing only the changes, complete with colored strike-out
and insertion mark-up. From there you can also review the
history of the changes and view the whole page as it is
now.

> I would suggest that we at least wait until the preview 
> button on IssueTracker exists.

Fortunately there are a fairly large number of active
developers of ZWiki on which MathAction is based.

> Finally, it is quite clear that usage of MathAction 
> did increase quite a bit recently!
> 

Indeed! I have been fascinated to watch the apparent
exponential growth in the number of accesses to MathAction
displayed in the web statics at:

  http://page.axiom-developer.org/usage

It is amazing to me that in the last 3 months the Axiom book
has been downloaded more than 4,000 times and the Windows
version of Axiom has been downloaded more than 3,000 times.
Clearly there are a lot of people who are interested in
Axiom but only a very small number of these, only about
1%, who are active on MathAction and the email lists. And
and even smaller number who have been motivate to donate
to the Axiom Foundation. :(

>From these statistics I am not so confident that the
amount of "noise" will reduce on it's own any time soon.
If anything it might grow as more of these new users
become motivated to communicate with each other and learn
more about Axiom. 

Regards.
Bill Page.



\start
Date: Fri, 18 Feb 2005 18:49:37 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [Streams] (new) 

Changes http://page.axiom-developer.org/zope/mathaction/Streams/diff
--
Streams display only a few of their initial elements. Otherwise, they
are “lazy”: they only compute elements when you ask for them.

Series and streams make no attempt to compute all their elements!
Rather, they stand ready to deliver elements on demand.

Section 0.5.3 Streams

  Streams are infinite lists which have the ability to calculate
the next element should it be required. For example, a stream of
positive integers and a list of prime numbers can be generated by:
\begin{axiom}
[i for i in 1..]
\end{axiom}

Another method of creating streams is to use the generate(f,a)
function. This applies its first argument repeatedly onto its
second to produce the stream::

   ![a, f (a), f ( f (a)), f ( f ( f (a))) . . .]

Given that the function nextPrime returns the lowest prime number
greater than its argument we can generate a stream of primes as
follows:

\begin{axiom}
primes := generate(nextPrime,2)$Stream Integer
\end{axiom}

A stream is a structure that (potentially) has an infinite number
of distinct elements. Think of a stream as an “infinite list” where
elements are computed successively.

Axiom represents streams by a collection of already-computed
elements together with a function to compute the next element
“on demand.” Asking for the n-th element causes elements 1 through
n to be evaluated.

Streams can also be finite or cyclic. They are implemented by a
linked list structure similar to lists and have many of the same
operations. For example, first and rest are used to access elements
and successive nodes of a stream.

In contract, a **set** is a collection of elements where duplication
and order is irrelevant. Sets are always finite and have no
corresponding structure like streams for infinite collections.

By default, Axiom tries to compute and display the first ten elements
of a stream.Use:
\begin{axiom}
)set streams calculate 7
\end{axiom}

to change the default to something else, e.g. 7. This also affects the
number of terms computed and displayed for power series.

You can also create lists of streams, streams of lists and streams
of streams. Here is a stream of streams.
\begin{axiom}
[ [i/j for i in j+1..] for j in 1..]
\end{axiom}

Section 5.6 An Example: Streams of Primes

  Create a stream of primes.
\begin{axiom}
primes : Stream Integer := [i for i in 2.. | prime? i]
\end{axiom}

A more elegant way, however, is to use the generate operation as
show above.

Once the stream is generated, you might only be interested in
primes starting at a particular value.
\begin{axiom}
smallPrimes := [p for p in primes | p > 1000]
\end{axiom}

Here are the first 11 primes greater than 1000.
\begin{axiom}
[p for p in smallPrimes for i in 1..11]
\end{axiom}

Here is a stream of primes between 1000 and 1200.
\begin{axiom}
[p for p in smallPrimes while p < 1200]
\end{axiom}

Finally, we can convert a finite stream such as above to
a simple list.
\begin{axiom}
thesePrimes:=entries complete %
\end{axiom}

And now we can test for membership in the usual way.
\begin{axiom}
member?(1117,thesePrimes)
\end{axiom}

--
forwarded from http://page.axiom-developer.org/zope/mathaction/Streams#msg20050218184926-0600@page.axiom-developer.org



\start
Date: Fri, 18 Feb 2005 18:51:58 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [#108 InfiniteTuple and Stream] 

Changes http://page.axiom-developer.org/zope/mathaction/108InfiniteTupleAndStream/diff
--

??changed:
-Section 5.6 An Example: Streams of Primes
Section 5.6 An Example: [Streams] of Primes

--
forwarded from http://page.axiom-developer.org/zope/mathaction/108InfiniteTupleAndStream#msg20050218185158-0600@page.axiom-developer.org



\start
Date: Fri, 18 Feb 2005 18:50:40 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [InfiniteTuple] 

Changes http://page.axiom-developer.org/zope/mathaction/InfiniteTuple/diff
--

++added:

See also [Streams]

--
forwarded from http://page.axiom-developer.org/zope/mathaction/InfiniteTuple#msg20050218185040-0600@page.axiom-developer.org



\start
Date: Fri, 18 Feb 2005 19:00:41 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [StreamsAndInfiniteTuples] 

Changes http://page.axiom-developer.org/zope/mathaction/StreamsAndInfiniteTuples/diff
--

??changed:
-This page was renamed to Streams. You can delete this one if no longer needed.
-
[Streams] and [InfiniteTuple]s

  Do we need them both?

--
forwarded from http://page.axiom-developer.org/zope/mathaction/StreamsAndInfiniteTuples#msg20050218190041-0600@page.axiom-developer.org



\start
Date: Fri, 18 Feb 2005 18:49:35 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [Streams] (renamed)

Changes http://page.axiom-developer.org/zope/mathaction/Streams/diff
--
This page was renamed from StreamsAndInfiniteTuples to Streams.

--
forwarded from http://page.axiom-developer.org/zope/mathaction/Streams#msg20050218184935-0600@page.axiom-developer.org



\start
Date: Fri, 18 Feb 2005 19:18:19 -0600
From: MathAction (Page, Bill)
To: MathAction
Subject: [Axiom-mail] Does Axiom support infinite sets

Changes http://page.axiom-developer.org/zope/mathaction/AxiomMail/diff
--
On Thursday, February 17, 2005 3:29 PM Ning Wang wrote:
> 
> Can I define an infinite set by the axiom of comprehension
> or the axiom of replacement?
> 

The short (but incomplete) answer is "no". At least not in an
entirely abstract manner. But Axiom does provide tools
specifically for dealing with "infinite", i.e. indefinitely
large, lists called streams.

Perhaps you will find the following web page useful. It
summarizes some of the properties of streams.

http://page.axiom-developer.org/zope/mathaction/Streams

If you have other questions please let us know.

Regards,
Bill Page.


_______________________________________________
Axiom-mail mailing list
Axiom-mail@nongnu.org
http://lists.nongnu.org/mailman/listinfo/axiom-mail

--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomMail#msg68207C39878CC54695B4E7A1D58E098124DDAB@CORPORATEEX



\start
Date: 19 Feb 2005 09:41:41 -0500
From: Camm Maguire
To: Tim Daly
Subject: graphics error in 20050205?

Greetings!  Anyone see this when trying to run the graphics demos from
the hyperdoc utility?

(1) -> uncompress: "/fix/t1/camm/debian/axiom/axiom-20050205/mnt/linux/doc/viewports/OneVariableGraphicsPage1.VIEW/image.xpm.Z".gz: No such file or directory

Take care,
-- 
Camm Maguire			     			Camm Maguire
==========================================================================
"The earth is but one country, and mankind its citizens."  --  Baha'u'llah



\start
Date: Sat, 19 Feb 2005 08:51:45 -0600
From: MathAction (Tim Daly)
To: MathAction
Subject: [#109 hyperdoc uncompress failed] (new) 

Changes http://page.axiom-developer.org/zope/mathaction/109HyperdocUncompressFailed/diff
--
Greetings!  Anyone see this when trying to run the graphics demos from
the hyperdoc utility?

(1) -> uncompress: "/fix/t1/camm/debian/axiom/axiom-20050205/mnt/linux/doc/viewports/OneVariableGraphicsPage1.VIEW/image.xpm.Z".gz: No such file or directory


--
forwarded from http://page.axiom-developer.org/zope/mathaction/109HyperdocUncompressFailed#msg20050219085144-0600@page.axiom-developer.org



\start
Date: Sat, 19 Feb 2005 08:52:37 -0600
From: MathAction (Tim Daly)
To: MathAction
Subject: [#109 hyperdoc uncompress failed] 

Changes http://page.axiom-developer.org/zope/mathaction/109HyperdocUncompressFailed/diff
--

??changed:
-(1) -> uncompress: "/fix/t1/camm/debian/axiom/axiom-20050205/mnt/linux/doc/viewports/OneVariableGraphicsPage1.VIEW/image.xpm.Z".gz: No such file or directory
-
-
(1) -> uncompress: 
"/fix/t1/camm/debian/axiom/axiom-20050205/mnt/linux/doc/viewports/OneVariableGraphicsPage1.VIEW/image.xpm.Z".gz:
 No such file or directory



--
forwarded from http://page.axiom-developer.org/zope/mathaction/109HyperdocUncompressFailed#msg20050219085237-0600@page.axiom-developer.org



\start
Date: Sat, 19 Feb 2005 15:08:13 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [TeXmacs] Graphics still--John Sheppard

Changes http://page.axiom-developer.org/zope/mathaction/TeXmacs/diff
--
I too have problems displaying graphics. I finally managed to get the Windows version of axiom to work with the windows (non-cygwin) version of TeXmacs (i.e., WinTeXmacs). I tried the draw command from the axiom tutorial, both in axiom and from WinTeXmacs. Here's the sequence:

s := operator 's
DE := D(s(t),t,2) = -k^2*s(t) - c*D(s(t),t)
S := solve(DE,s,t=0,[A,0])
S1 == eval(S,[A=1,k=1,c=3])
draw(S1,t=0..100)

Following the compiling of the draw function, I get:

  Graph data being transmitted to the viewport manager...

  >>System error:
  SOCK-SEND-INT is invalid as a function.

  protected-symbol-warn called with (NIL)

This same error appears both in axiom alone and in WinTeXmacs. Any ideas for solving this would be appreciated. If I need to set the AXIOM and PATH variables, as suggested above, what should they be set to? You can respond to me at jws@cablespeed.com if you wish.

Thanks,
John Sheppard
--
forwarded from http://page.axiom-developer.org/zope/mathaction/TeXmacs#msg20050219150752-0600@page.axiom-developer.org



\start
Date: Sat, 19 Feb 2005 15:59:32 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [TeXmacs] Graphics still--John Sheppard

Changes http://page.axiom-developer.org/zope/mathaction/TeXmacs/diff
--
Well, that certainly explains it. Many thanks!!
--
forwarded from http://page.axiom-developer.org/zope/mathaction/TeXmacs#msg20050219155929-0600@page.axiom-developer.org



\start
Date: Sat, 19 Feb 2005 15:47:22 -0600
From: MathAction (Tim Daly)
To: MathAction
Subject: [TeXmacs] Graphics still--John Sheppard

Changes http://page.axiom-developer.org/zope/mathaction/TeXmacs/diff
--
The windows version of Axiom does not have graphics.
The graphics subsystem currently only works on Linux and needs X11.
We are working on a windows solution.
--
forwarded from http://page.axiom-developer.org/zope/mathaction/TeXmacs#msg20050219154718-0600@page.axiom-developer.org



\start
Date: Sun, 20 Feb 2005 11:45:18 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [other Computer Algebra systems] 

Changes http://page.axiom-developer.org/zope/mathaction/OtherComputerAlgebraSystems/diff
--

??changed:
-From unknown Sat Feb 19 23:59:29 -0600 2005
-From: 
-Date: Sat, 19 Feb 2005 23:59:29 -0600
-Subject: 2+2
-Message-ID: <20050219235929-0600@page.axiom-developer.org>
-
-


--
forwarded from http://page.axiom-developer.org/zope/mathaction/OtherComputerAlgebraSystems#msg20050220114518-0600@page.axiom-developer.org



\start
Date: Sun, 20 Feb 2005 22:14:53 +0100
From: Pierre Doucy
To: list
Subject: -I/usr/include/sys on MacOS X

Hi all,

Working on the Mac OS X port of axiom, I encountered some problems in
wct.c regarding time manipulation. I figured out that the problem came
from the fact that -I/usr/include/sys was passed to gcc, which lead to
including the bad time.h
(http://lists.apple.com/archives/unix-porting/2004/Feb/msg00062.html).
The Makefile.pamphlet in the axiom root directory says : 

"We need to add [[-I/usr/include/sys]] because [[malloc.h]] has been
moved on this platform."

What I suggest is to remove the -I/usr/include/sys and add something like

#ifdef MACOSXplatform
#include <sys/malloc.h>
#else
#include <malloc.h>
#endif

Does anyone see a better solution, or can I go on with that ?

Pierre DOUCY

-- 
Cats are intended to teach us that not everything in nature has a function.



\start
Date: Mon, 21 Feb 2005 01:16:18 -0600
From: MathAction (wyscc)
To: MathAction
Subject: [#110 Domain Variable() and Symbol] Problems with MathAction, Compiler

Changes http://page.axiom-developer.org/zope/mathaction/110DomainVariableAndSymbol/diff
--

??changed:
-
<B>Interpreter</B><br><br>

In IssueTracker #99, I made some incorrect comments on how the Interpreter treats coercion between elements of the two domains <code>Variable(x:Symbol)</code> and 'Symbol'. This new page consists of experiments to find out more, in regard to both the Interpreter and the Compiler. Note that the domain constructor <code>Variable(x:Symbol)</code> contains a unique element with output representation 'x' which may be coerced to the symbol 'x'. The domain 'Symbol' consists of all symbols (I know this does not say anything, but I won't dare to say it consists of all undeclared identifiers or all variables).  The following should have <code>)set mess bot on</code>, but MathAction does not process this well.


\begin{axiom}
)clear all
--)set mess bot on
t:Boolean:= x = y
\end{axiom}

Note when an undeclared identifier 'x' is used, the interpreter temporarily turns it into the only element of <code>Variable(x:Symbol)</code>, see (1) where 'x' and 'y' are interpreted as of type <code>Variable()</code>, not 'Symbol'. Unlike 'Symbol', there is no equality testing across different <code>Variable()</code> domains and so in (1) both 'x' and 'y' are coerced to 'Symbol'. 
\begin{axiom}
x:Variable(y):= y
\end{axiom}

This is confirmed by (2), where the assignment is immediate because <code>y:Variable(y)</code>.  Thus from 'Symbol' to <code>Variable()</code> seems to me automatic *in the interpreter* but temporarily. Temporarily, because you can reassign the identifier to any other typed value. This is different than manually declaring the identifier as <code>y: Variable(y)</code>. You cannot reassign with <code>y:=1</code> later without changing the declaration of its type.

However, I was not able to find any function that does this: <code>y +->Variable(y)</code> and we know why: the target domain is dependent on the input.  

\begin{axiom}
t:= ((x::Symbol)=y)
t:= (x = (y::Symbol))
--)set mess bot off
\end{axiom}


The absence of this map's signature may be why in (3), the Interpreter did not coerce <code>x:Symbol</code> to <code>x:Variable(y)</code>, but did the opposite. Same for (4), it coerces <code>x:Variable(y)</code> to <code>x:Symbol</code>.

The difference between  <code>y:Variable(y)</code> and <code>y:Symbol</code> for the interpreter is thus that an undefined identifier 'y' behaves as 'Symbol' only transiently on its way to 'Variable(y)', and need to be explicitly coerced back to 'Symbol'.


<B>Compiler</B><br><br>

Now, the real confusion is when one starts using the compiler! (By the way, in Windows 0.1.4 version, all compiling of the test packages, a message appears:

'The syntax of the command is incorrect.'

This does not appear below. Also there is a problem with MathAction/Wiki processing a comment line such as

<code>--%SymbolVariableTest1</code>

So these are omitted from below.)

(a) Without any prior declarations or assignments, you can compile within a routine, <code>y: Variable(y):= y</code> ('SVT1' below) but not <code>x: Variable(y):= y</code> ('SVT2'). Both are acceptable in the interpreter. So in the first case, the 'y' on the rhs is of type <code>Variable(y)</code>, but not in the second case ('SVT2'), where it is untyped and unassigned. According to Section 6.16 of the Axiom book, I think both 'y' on the rhs is free (global) the first time it is encountered in the subroutines.


\begin{axiom}
)abbrev package SVT1 SymbolVariableTest1
SymbolVariableTest1(): Spec == Imp where
  Spec ==  with 
    symVar1:() -> Boolean
  Imp == add
    symVar1()==
      y: Variable(y) := y
      x: Variable(y) := y
      t: Boolean := (x = y)
\end{axiom}

\begin{axiom}
symVar1()
\end{axiom}


\begin{axiom}
)abbrev package SVT2 SymbolVariableTest2
SymbolVariableTest2(): Spec == Imp where
  Spec ==  with 
    symVar2:() -> Boolean
  Imp == add
    symVar2()==
      x: Variable(y):=y
      t:Boolean:= true
\end{axiom}

(b) We can compile <code>x:Variable(y):=y</code> if we first declare <code>y: Variable(y)</code> (without assignment, SVT3). 

\begin{axiom}
)abbrev package SVT3 SymbolVariableTest3
SymbolVariableTest3(): Spec == Imp where
  Spec ==  with 
    symVar3:() -> Boolean
  Imp == add
    symVar3()==
      y: Variable(y)
      x: Variable(y):=y
      t:Boolean:= true
\end{axiom}

Even though 'y' was never defined, the function <code>symVar3()</code> still runs. Actually the local variable 'x' is assigned 'Nil'.

\begin{axiom}
symVar3()
\end{axiom}

But we cannot <code>x:Variable(y):=y</code> if we declare <code>y: Symbol</code> (without assignment, 'SVT4'). 

\begin{axiom}
)abbrev package SVT4 SymbolVariableTest4
SymbolVariableTest4(): Spec == Imp where
  Spec ==  with 
    symVar4:() -> Boolean
  Imp == add
    symVar4()==
      y: Symbol
      x: Variable(y):=y
      t:Boolean:= true
\end{axiom}

Not even if we assign a value to 'y' and we specify a coercion afterwards ('SVT5'). This is because no such coercion function exists (even if the target is <code>Union("failed", Variable(y))</code>. So this differs from the interpreter.

\begin{axiom}
)abbrev package SVT5 SymbolVariableTest5
SymbolVariableTest5(): Spec == Imp where
  Spec ==  with 
   symVar5:() -> Boolean
  Imp == add
    symVar5()==
      y: Symbol := y
      x: Variable(y):=y::Variable(y)
      t:Boolean:= true
\end{axiom}

(c) Although we can compile <code>x:Variable(y):=y</code> after declaring <code>y:Variable(y)</code> without assigning a value to 'y' ('SVT3') and in fact run <code>symVar3()</code>, we cannot compile a line actually using 'x' ('SVT6').

\begin{axiom}
)abbrev package SVT6 SymbolVariableTest6
SymbolVariableTest6(): Spec == Imp where
  Spec ==  with 
   symVar6:() -> Boolean
  Imp == add
    symVar6()==
      y: Variable(y)
      x: Variable(y):=y
      t:Boolean:= x = y
\end{axiom}

Not even testing <code>x=x</code> ('SVT7'). Note that the compiler was apparently trying to use equality from 'Symbol', not equality from <code>Variable(y)</code>. This is a bit bizarre. The identfiers 'x' and 'y' even after declaration to be of type  <code>Variable(y)</code> may still be of type 'Symbol'. On the other hand, an inspection of the code generated for 'SVT3' shows the equality is in fact from <code>Variable(y)</code>. So, why does the compiler try to convert 'y' to 'Symbol'? Why does 'SVT6' fail to compile? (I would expect it to compile, but give a run-time error.)

\begin{axiom}
)abbrev package SVT7 SymbolVariableTest7
SymbolVariableTest7(): Spec == Imp where
  Spec ==  with 
   symVar7:() -> Boolean
  Imp == add
    symVar7()==
      y: Variable(y)
      x: Variable(y):=y
      t:Boolean:= x = x
\end{axiom}

(d) But if we stay with the domain 'Symbol', we can compile without a problem even if 'y' is never assigned ('SVT8').

\begin{axiom}
)abbrev package SVT8 SymbolVariableTest8
SymbolVariableTest8(): Spec == Imp where
  Spec ==  with 
    symVar8:() -> Boolean
  Imp == add
    symVar8()==
      y:Symbol:= y
      x:Symbol:= y
      t:Boolean:= (x=y)
\end{axiom}

For some unknown reasons, replacing <code>y:Symbol:=y</code> by <code>y:Symbol</code>, which still compiles, causes MathAction not to display correctly. MathAction should display correctly up to the place of error, but it doesn't. Also, the next result, which produces the error below in Windows version, is not displayed.

\begin{axiom}
symVar8()
\end{axiom}

Like <code>Variable(y)</code>, in 'SVT8', 'y' is considered undefined, but unlike 'SVT1', 'SVT8' produces a run time error. Which one is a bug?

<pre>
   >> System error:
   equal: x is a NULL pointer

protected-symbol-warn called with (NIL)
</pre>

--
forwarded from http://page.axiom-developer.org/zope/mathaction/110DomainVariableAndSymbol#msg20050221011618-0600@page.axiom-developer.org



\start
Date: Mon, 21 Feb 2005 01:31:03 -0600
From: MathAction (William Sit)
To: MathAction
Subject: [#99 x^1 abc[y] should be a syntax error] [#99	x^1 abc[y] should be a syntax error] badday? not really :)

Changes http://page.axiom-developer.org/zope/mathaction/99X1AbcYShouldBeASyntaxError/diff
--
Bill Page wrote:
> 
> Changes http://page.axiom-developer.org/zope/mathaction/99X1AbcYShouldBeASyntaxError/diff
> --
> Today I felt like taking what I think might be the point of view
> of a new user of Axiom. I agree completely that the Wiki pages are
> supposed to be for experts as well as for novices and when simple
> input like this causes some apparent problem that is "unexpected",
> that we should explain it. I think you did a good job of that.
> But in my opinion the explanation is rather bizarre (especially
> from the point of view of a new user). So this is were the experts
> come in: How can we make Axiom's behaviour less bizarre to new
> users?

This is a tall order even though I would agree that such bizarre results may
drive many away. 

 
> I originally saw this behaviour in an simple test in the SandBox
> where a new user wrote something like this
> \begin{axiom}
> integrate(z^2 ln[z],z)
> \end{axiom}

A new user has to learn the basic operations and syntax. The above user may be
used to Mathematica and Maple or just simply use intuition. I have the same
experience myself: I am used to Mathematica and I can't stand the syntax and
especially the worksheet interface of Maple (my prejudice). I made so many
mistakes and got frustrated every time. But this is not to say Maple is not
great for a lot of other people. 

> I was quite sure that what they intended to compute was
> \begin{axiom}
> integrate(z^2*log(z),z)
> \end{axiom}
> 
> but I had a hard time understanding the original answer and I
> wondered why Axiom did not at least produce some kind of syntax
> error.

I did not find it easy either. Just because it can be explained does not mean
the problem is not there. On the other hand, Axiom was designed for
mathematicians and perhaps there is some assumption built in that the users
would follow the rules and would realize what their mistakes are. This "apply"
notion permeates all levels of Axiom and I believe it would be impossible to
modify it without causing a lot of other failures, creating more problems.

> About the status: 'Closed' looks like you have decided that there
> should be no more discussion. Yes this is a wiki and so I could
> simply 'Open' it again, but I think it is better to try to develop
> some "rules of netiquette" so that the open collaboration allowed
> by the wiki can work smoothly. We are all still fairly new at this.

Agreed. I will not close any discussion from now on. One cannot foresee the
implications sometimes when the examples illustrating the bugs are already
traced to such a low level. I decided to close it because the example x^1 abc[y]
was clearly artificial; had I seen this one on integration, I probably wouldn't
have.

Perhaps in addition to a pin-point example, there should also be the other
examples on a more complex level to illustrate the implications. For example, I
would classify the problem with '1 x[y]' as not a severe problem, but
'integrate(z^2 ln[z], z)' as severe, even though the cause is the same. And the
two should be combined into one page, may be with a heading: Beware of
Functional Applications.
 
> Perhaps I was too direct in using the word "annoyed" since I am
> well aware that it is very hard to correctly interpret other peoples'
> motives and emotional state when reading what they wrote alone.
> I was annoyed :) but if you had seen me in person you would have
> noticed that I also smiled when I said that. Of course I used the
> word "blame" in the same way. I did not mean it to sound like I
> was "finding fault" with anyone, only that I wanted to identify
> what might be changed to make Axiom's behaviour more intuitive.

While this is a worthwhile goal, it may be too late in the game because these
issues should have been resolved from the moment the system was designed. The
interpreter is already quite different from the compiler in its handling of user
input. Increasing its user friendliness will only make it even harder to learn
to use the compiler, especially if the grammar is changed. Right now, I think
all the interpreter does is performing coercions, lifting domains, and matching
signatures. I don't believe you would get any of these problems with a compiled
package because one is forced by the compiler to know exactly what one is
computing. So if the "behavior" of Axiom is to be changed, one has to rewrite
the interpreter, making Axiom even more different than the compiler version. 

It is probably easier to change user behavior :-). I remember how new students
using Mathematica forget to start the trig functions (or any built-in function)
with a capital letter and enter 'xy' to mean 'x' times 'y'. I would say that to
a new user, when (s)he has not yet got familiar with the nuiances, many answers
or error messages would seem bizarre too. But in the end they almost always
learn these. I also provided a calculator type pallette for them to just click
on these functions to minimize the accidental mistakes. Perhpas that's the area
we need to improve Axiom on: user input interface and better tutorials. I find
Mathematica's interface the best (I have used Maple, and Matlab as well). It is
easy to scroll back to a previous command and edit it, wrap it inside a function
for more processing, or append afterthought functions.  I think these pages, as
we accumulate more and reorganize them systematically, can become a good
introductory set of notes (or teasers) for users to hone their Axiom skills.

On the other hand, I think no software system can stand a deliberate scrutiny on
all possible input errors (not to mention those that are syntactically correct
but with wishful semantics). It is similar to anticipating all student errors in
mathematics or their wishful laws on algebraic operations. We can't and instead
we teach students the correct ways.

I recommend strongly that when users find "strange behavior" in the interpreter
version that they try to analyse it by using <code>)set mess bot on</code>. If
that does not help, then use a simple test package and compile it. They will
then be forced to be explicit (and may find that the compiler uses a different
set of assumptions) and find out what went wrong and thus continue with their
computations in the correct way. When it is a bug in computation with the
compiler, it becomes a genuine concern. 

> About 'preferences': It seems that "wiki people" generally would
> like to avoid any perceived "login barrier". Setting preferences
> is just a matter of saying how you would like to be identified
> (and a few other details) - it is not supposed to be like
> "logging in". And you are right that in principle this only
> needs to be done once. Setting preferences sends some cookies
> to your browser which, depending on whether you have set your
> browser security to permit it or not, will allow the system
> to remember your preferences the next time you connect to the
> wiki. But maybe you are right that there might be a better
> label than 'preferences'. How about something like 'Who Am I'?

That sounds like a better label. May be "Who Are You"? "whoami" is a Unix
command for a different purpose. But of course, I know now where to do it. For
new comers, that would certainly help.
 
> About the use of '*01abc y' as a symbol in a type. Maybe this
> notation starts to make a *little* more sense if you see an
> expression like
> \begin{axiom}
> 1 t[x,y,z]
> \end{axiom}
> 
> but I still don't see why, if there is a need for some
> linear syntax, there would be any objection to using the
> same syntax as the input. Surely::
> 
>              Type: UnivariatePolynomial(t[x,y,z], Integer)
> 
> would be self explanatory, no?

I suppose, I was only guessing at some logic behind this "design". And actually
Axiom does use your suggested notation too (indeed, mixed), and so it is again
not that consistent. 

\begin{axiom}
integrate(z^2*x[z],z)
1 x[%]
\end{axiom}

Here in the Type message, x(z) is used instead of *01x z. You will see Axiom
tries very hard to work out the type of the last one if you had ')set mess bot
on'. 

> 
> About functions and expressions. There is no problem making
> substitutions into polynomials like this:
> \begin{axiom}
> subst((1+b^2)::UP(b,INT),b=(t^2::UP(t,INT)))::UP(t,INT)
> \end{axiom}
> 
> or even this
> \begin{axiom}
> subst((1+c*b^2)::MPOLY([b,c],INT),b=(t^2::UP(t,INT)))::MPOLY([t,c],INT)
> \end{axiom}
> 
> We can also explicitly use 'eval'. So I don't understand the
> need to define application for univariate polynomials and to
> treat them like functions.

Univariate polynomials are just like finite sequences (streams would be infinite
sequences) and all are just functions in the sense the domain is  the set of
indices (subscripts, exponents or more complicated scripting at times). Axiom is
just treating them uniformly. In using 'subst', you explicitly spell out how the
substitution is done. Axiom does not *prevent* you to use 'subst'. But even in
'subst', Axiom's behavior is vastly different than, say Mathematica. For
example, Axiom would not substitute *every* occurrence of 'b'.

\begin{axiom}
)clear all
subst(1+c[b^2],b=t^2)
subst(1+c(b^2), b=t^2)
\end{axiom}

whereas in Mathematica, <code>1+c[b^2]/.b->t^2</code> will give
<code>1+c[t^4]</code> and <code>1+Subscript[c,b^2] /.b->t^2</code> will give
<code>1+Subscript[c,t^4]</code> even when 'c' is not defined. There is a lot of
differences between languages and one cannot expect Axiom to behave "like"
Mathematica, which has *no concept* of where (that is, in what domain) the
operation is taking place.

> Finally, could you explain further your reasoning about why the
> interpreter should not coerce 'Variable x' to 'Symbol'? Axiom
> has no trouble coercing x to a Symbol in the case of an expresion
> like 'UP(x,INT)'. Surely it should be able to solve the problem
> of coercing x to Symbol in order that Symbol can be coerced to
> UP(x,INT) in cases like '1 x' and 'integrate(x)'?

Nope, because I was wrong! I thought it might create an infinite mutual
coercion, but that is apparently not the case.  I don't have any documentation
on the interpreter. Like what physicists practice, the theory must follow the
experiments and will change when new evidence shows up. So I now find out a
situation where the interpreter actually does the coercion from Variable(x) to
Symbol. (So my previous statement that claim the interpreter does not do this
conversion in my last message is wrong -- I was misguided by the hyperdoc
documentation that the convert and variable functions are unexposed, even if
Variable() is).

See IssueTracker #110.

 
> Or is it the case that the interpreter never tries harder than
> just one coercion?

No, the interpreter tries very hard sometimes. See above symbol with a
complicated subscript. 

> BTW, I tried specifying
> \begin{axiom}
> )expose Variable
> \end{axiom}
> 
> but I did not see any change in Axiom's behaviour.
> \begin{axiom}
> 1 x
> integrate(x)
> \end{axiom}

I don't know. According to hyperdoc, even if Variable() is exposed, the two
operations convert and variable are still unexposed. But I now do not think that
is the problem. Apparently, the interpreter is able to use them when it wants
to.

> ---------
> Bill Page
> --
> forwarded from http://page.axiom-developer.org/zope/mathaction/99X1AbcYShouldBeASyntaxError#msg20050217221454-0600@page.axiom-developer.org

William

--
forwarded from http://page.axiom-developer.org/zope/mathaction/99X1AbcYShouldBeASyntaxError#msg42198E31.CF10A5D6@cunyvm.cuny.edu



\start
Date: Mon, 21 Feb 2005 02:50:42 -0500
From: William Sit
To: list
Subject: Fedora FC2 graphics

I like to report that compiling Feb 2005 release on Fedora FC2 was successful.
However, when running Hyperdoc and selecting Topic, graphics, 2d-graphics,
Parametric Curves, draw(...) 
I got the error

sh: line1: uncompress: command not found.

To solve the problem, I put in the following symbolic links

su
cd /bin
ln -s gzip compress
ln -s gunzip uncompress

and that solves the problem. Perhaps Axiom should change its use of these
obsolete commands?

William



\start
Date: Mon, 21 Feb 2005 19:39:09 +1100
From: Jason White
To: William Sit
Subject: Re: Fedora FC2 graphics

William Sit writes:
 > 
 > and that solves the problem. Perhaps Axiom should change its use of these
 > obsolete commands?

I don't think they're obsolete on Unix systems.
On my Debian GNU/Linux system I have
/bin/uncompress

This is the sort of variation that a configure script (or similar)
should be able to identify.



\start
Date: Mon, 21 Feb 2005 08:18:37 +0000
From: Mark Murray
To: Pierre Doucy
Subject: Re: -I/usr/include/sys on MacOS X 

Pierre Doucy writes:
> (http://lists.apple.com/archives/unix-porting/2004/Feb/msg00062.html).
> The Makefile.pamphlet in the axiom root directory says : 
> 
> "We need to add [[-I/usr/include/sys]] because [[malloc.h]] has been
> moved on this platform."
> 
> What I suggest is to remove the -I/usr/include/sys and add something like
> 
> #ifdef MACOSXplatform
> #include <sys/malloc.h>
> #else
> #include <malloc.h>
> #endif
> 
> Does anyone see a better solution, or can I go on with that ?

This is a very bad idea. sys/malloc.h is the malloc used in the kernel, 
and it does nothing for a BSD-like system WRT malloc()/free(); in fact 
all it is giving you is namespace pollution. MACOS and *BSD just need 
unistd.h to get malloc/free, and it is an error to include the 
deprecated malloc.h.

The above should look like

#ifndef MACOSXplatform
#include <malloc.h>
#endif

or (if unistd.h is not already there)

#ifdef MACOSXplatform
#include <unistd.h>
#else
#include <malloc.h>
#endif

but I doubt that is neceassary.

M
--
Mark Murray
iumop ap!sdn w,I idlaH





\start
Date: Mon, 21 Feb 2005 13:30:36 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [#110 Domain Variable() and Symbol] [#110 Domain Variable() and Symbol] Problems withMathAction, Compiler

Changes http://page.axiom-developer.org/zope/mathaction/110DomainVariableAndSymbol/diff
--


> -----Original Message-----
> From: 
> axiom-developer-bounces+bill.page1=sympatico.ca@nongnu.org 
> .org] On Behalf Of wyscc
> Sent: Monday, February 21, 2005 2:16 AM
> To: MathAction
> Subject: [#110 Domain Variable() and 
> Symbol] Problems withMathAction, Compiler
> 
> 
> Changes 
> http://page.axiom-developer.org/zope/mathaction/110DomainVaria
> bleAndSymbol/diff
> --
> 
> ??changed:
> -
> <B>Interpreter</B><br><br>
> 
> In IssueTracker #99, I made some incorrect comments on how 
> the Interpreter treats coercion between elements of the two 
> domains <code>Variable(x:Symbol)</code> and 'Symbol'. This 
> new page consists of experiments to find out more, in regard 
> to both the Interpreter and the Compiler. Note that the 
> domain constructor <code>Variable(x:Symbol)</code> contains a 
> unique element with output representation 'x' which may be 
> coerced to the symbol 'x'. The domain 'Symbol' consists of 
> all symbols (I know this does not say anything, but I won't 
> dare to say it consists of all undeclared identifiers or all 
> variables).  The following should have <code>)set mess bot 
> on</code>, but MathAction does not process this well.
> 
> 
> \begin{axiom}
> )clear all
> --)set mess bot on
> t:Boolean:= x = y
> \end{axiom}
> 
> Note when an undeclared identifier 'x' is used, the 
> interpreter temporarily turns it into the only element of 
> <code>Variable(x:Symbol)</code>, see (1) where 'x' and 'y' 
> are interpreted as of type <code>Variable()</code>, not 
> 'Symbol'. Unlike 'Symbol', there is no equality testing 
> across different <code>Variable()</code> domains and so in 
> (1) both 'x' and 'y' are coerced to 'Symbol'. 
> \begin{axiom}
> x:Variable(y):= y
> \end{axiom}
> 
> This is confirmed by (2), where the assignment is immediate 
> because <code>y:Variable(y)</code>.  Thus from 'Symbol' to 
> <code>Variable()</code> seems to me automatic *in the 
> interpreter* but temporarily. Temporarily, because you can 
> reassign the identifier to any other typed value. This is 
> different than manually declaring the identifier as <code>y: 
> Variable(y)</code>. You cannot reassign with 
> <code>y:=1</code> later without changing the declaration of its type.
> 
> However, I was not able to find any function that does this: 
> <code>y +->Variable(y)</code> and we know why: the target 
> domain is dependent on the input.  
> 
> \begin{axiom}
> t:= ((x::Symbol)=y)
> t:= (x = (y::Symbol))
> --)set mess bot off
> \end{axiom}
> 
> 
> The absence of this map's signature may be why in (3), the 
> Interpreter did not coerce <code>x:Symbol</code> to 
> <code>x:Variable(y)</code>, but did the opposite. Same for 
> (4), it coerces <code>x:Variable(y)</code> to <code>x:Symbol</code>.
> 
> The difference between  <code>y:Variable(y)</code> and 
> <code>y:Symbol</code> for the interpreter is thus that an 
> undefined identifier 'y' behaves as 'Symbol' only transiently 
> on its way to 'Variable(y)', and need to be explicitly 
> coerced back to 'Symbol'.
> 
> 
> <B>Compiler</B><br><br>
> 
> Now, the real confusion is when one starts using the 
> compiler! (By the way, in Windows 0.1.4 version, all 
> compiling of the test packages, a message appears:
> 
> 'The syntax of the command is incorrect.'
> 
> This does not appear below. Also there is a problem with 
> MathAction/Wiki processing a comment line such as
> 
> <code>--%SymbolVariableTest1</code>
> 
> So these are omitted from below.)
> 
> (a) Without any prior declarations or assignments, you can 
> compile within a routine, <code>y: Variable(y):= y</code> 
> ('SVT1' below) but not <code>x: Variable(y):= y</code> 
> ('SVT2'). Both are acceptable in the interpreter. So in the 
> first case, the 'y' on the rhs is of type 
> <code>Variable(y)</code>, but not in the second case 
> ('SVT2'), where it is untyped and unassigned. According to 
> Section 6.16 of the Axiom book, I think both 'y' on the rhs 
> is free (global) the first time it is encountered in the subroutines.
> 
> 
> \begin{axiom}
> )abbrev package SVT1 SymbolVariableTest1
> SymbolVariableTest1(): Spec == Imp where
>   Spec ==  with 
>     symVar1:() -> Boolean
>   Imp == add
>     symVar1()==
>       y: Variable(y) := y
>       x: Variable(y) := y
>       t: Boolean := (x = y)
> \end{axiom}
> 
> \begin{axiom}
> symVar1()
> \end{axiom}
> 
> 
> \begin{axiom}
> )abbrev package SVT2 SymbolVariableTest2
> SymbolVariableTest2(): Spec == Imp where
>   Spec ==  with 
>     symVar2:() -> Boolean
>   Imp == add
>     symVar2()==
>       x: Variable(y):=y
>       t:Boolean:= true
> \end{axiom}
> 
> (b) We can compile <code>x:Variable(y):=y</code> if we first 
> declare <code>y: Variable(y)</code> (without assignment, SVT3). 
> 
> \begin{axiom}
> )abbrev package SVT3 SymbolVariableTest3
> SymbolVariableTest3(): Spec == Imp where
>   Spec ==  with 
>     symVar3:() -> Boolean
>   Imp == add
>     symVar3()==
>       y: Variable(y)
>       x: Variable(y):=y
>       t:Boolean:= true
> \end{axiom}
> 
> Even though 'y' was never defined, the function 
> <code>symVar3()</code> still runs. Actually the local 
> variable 'x' is assigned 'Nil'.
> 
> \begin{axiom}
> symVar3()
> \end{axiom}
> 
> But we cannot <code>x:Variable(y):=y</code> if we declare 
> <code>y: Symbol</code> (without assignment, 'SVT4'). 
> 
> \begin{axiom}
> )abbrev package SVT4 SymbolVariableTest4
> SymbolVariableTest4(): Spec == Imp where
>   Spec ==  with 
>     symVar4:() -> Boolean
>   Imp == add
>     symVar4()==
>       y: Symbol
>       x: Variable(y):=y
>       t:Boolean:= true
> \end{axiom}
> 
> Not even if we assign a value to 'y' and we specify a 
> coercion afterwards ('SVT5'). This is because no such 
> coercion function exists (even if the target is 
> <code>Union("failed", Variable(y))</code>. So this differs 
> from the interpreter.
> 
> \begin{axiom}
> )abbrev package SVT5 SymbolVariableTest5
> SymbolVariableTest5(): Spec == Imp where
>   Spec ==  with 
>    symVar5:() -> Boolean
>   Imp == add
>     symVar5()==
>       y: Symbol := y
>       x: Variable(y):=y::Variable(y)
>       t:Boolean:= true
> \end{axiom}
> 
> (c) Although we can compile <code>x:Variable(y):=y</code> 
> after declaring <code>y:Variable(y)</code> without assigning 
> a value to 'y' ('SVT3') and in fact run 
> <code>symVar3()</code>, we cannot compile a line actually 
> using 'x' ('SVT6').
> 
> \begin{axiom}
> )abbrev package SVT6 SymbolVariableTest6
> SymbolVariableTest6(): Spec == Imp where
>   Spec ==  with 
>    symVar6:() -> Boolean
>   Imp == add
>     symVar6()==
>       y: Variable(y)
>       x: Variable(y):=y
>       t:Boolean:= x = y
> \end{axiom}
> 
> Not even testing <code>x=x</code> ('SVT7'). Note that the 
> compiler was apparently trying to use equality from 'Symbol', 
> not equality from <code>Variable(y)</code>. This is a bit 
> bizarre. The identfiers 'x' and 'y' even after declaration to 
> be of type  <code>Variable(y)</code> may still be of type 
> 'Symbol'. On the other hand, an inspection of the code 
> generated for 'SVT3' shows the equality is in fact from 
> <code>Variable(y)</code>. So, why does the compiler try to 
> convert 'y' to 'Symbol'? Why does 'SVT6' fail to compile? (I 
> would expect it to compile, but give a run-time error.)
> 
> \begin{axiom}
> )abbrev package SVT7 SymbolVariableTest7
> SymbolVariableTest7(): Spec == Imp where
>   Spec ==  with 
>    symVar7:() -> Boolean
>   Imp == add
>     symVar7()==
>       y: Variable(y)
>       x: Variable(y):=y
>       t:Boolean:= x = x
> \end{axiom}
> 
> (d) But if we stay with the domain 'Symbol', we can compile 
> without a problem even if 'y' is never assigned ('SVT8').
> 
> \begin{axiom}
> )abbrev package SVT8 SymbolVariableTest8
> SymbolVariableTest8(): Spec == Imp where
>   Spec ==  with 
>     symVar8:() -> Boolean
>   Imp == add
>     symVar8()==
>       y:Symbol:= y
>       x:Symbol:= y
>       t:Boolean:= (x=y)
> \end{axiom}
> 
> For some unknown reasons, replacing <code>y:Symbol:=y</code> 
> by <code>y:Symbol</code>, which still compiles, causes 
> MathAction not to display correctly. MathAction should 
> display correctly up to the place of error, but it doesn't. 
> Also, the next result, which produces the error below in 
> Windows version, is not displayed.
> 
> \begin{axiom}
> symVar8()
> \end{axiom}
> 
> Like <code>Variable(y)</code>, in 'SVT8', 'y' is considered 
> undefined, but unlike 'SVT1', 'SVT8' produces a run time 
> error. Which one is a bug?
> 
> <pre>
>    >> System error:
>    equal: x is a NULL pointer
> 
> protected-symbol-warn called with (NIL)
> </pre>
> 
> --
> forwarded from 
> http://page.axiom-developer.org/zope/mathaction/110DomainVaria
bleAndSymbol#msg20050221011618-0600@page.axiom-developer.org


_______________________________________________
Axiom-developer mailing list
list
http://lists.nongnu.org/mailman/listinfo/axiom-developer

--
forwarded from http://page.axiom-developer.org/zope/mathaction/110DomainVariableAndSymbol#msg001a01c5184b$b5f8ea50$6601a8c0@Asus



\start
Date: 21 Feb 2005 15:18:24 -0500
From: Camm Maguire
To: list
Subject: axiom-20050201 Debian packages going out today

Greetings!  For those interested, I've split the package a bit
further, adding axiom-graphics, axiom-hypertex, axiom-graphics-data,
axiom-hypertex-data to the structure present in 20040831.  This is
primarily to forestall the inevitable complaints from those who want
to use axiom without installing X.  

Running everything under sman also broke the former readline terminal
command-line interface present in the Debian package.  readline has
certain advantages over clef, so I've taken the liberty of modifying
the shell wrapper to invoke AXIOMsys directly when -nogr and -noht
are set, or -nox, or there is no DISPLAY environment variable set.
This currently lumps session and spadclient with viewman and hypertex
as programs that one would like to use when having X -- I'm pretty
sure this is not true, but I will need some more time to understand
what session and spadclient do.  The overwhelming majority of users
will doubtlessly run transparently under sman. 

I'm wondering whether we would gain anything from being able to run
these processes from lisp rather than the other way round?  No sense
reinventing the wheel if no advantage is in sight, but if there is
reason, it would give me an excuse to overhaul the GCL socket code,
which is straightforward, but apparently unused by anyone at present. 

In going over the old Debian bugs, I noticed that
)edit/SPADEDIT/source-pamplet-filename reporting is still broken.
This got me thinking that a nice emacs interface would really be
useful -- i.e. a debugger mode allowing breakpoint setting, and source
display in another window, at the lisp and spad levels.  Dr. Schelter
had put together dbl for maxima/gcl.  This appears to have promise. 

bessintr.eps is empty.  The AXIOM variable setting in the axiom script
needs to be exported if one is using bash.

Overall, things are looking quite nice.  I wish we could plot to
gnuplot as an option.  On a far lower scale, would be nice to use a
more advanced toolkit for the hypertext, like gcl-gtk or some such.  

Take care,

-- 
Camm Maguire			     			Camm Maguire
==========================================================================
"The earth is but one country, and mankind its citizens."  --  Baha'u'llah



\start
Date: Mon, 21 Feb 2005 15:08:10 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [#110 Domain Variable() and Symbol] improvements in formatting of MathAction output

Changes http://page.axiom-developer.org/zope/mathaction/110DomainVariableAndSymbol/diff
--

??changed:
-In IssueTracker #99, I made some incorrect comments on how the Interpreter treats coercion between elements of the two domains <code>Variable(x:Symbol)</code> and 'Symbol'. This new page consists of experiments to find out more, in regard to both the Interpreter and the Compiler. Note that the domain constructor <code>Variable(x:Symbol)</code> contains a unique element with output representation 'x' which may be coerced to the symbol 'x'. The domain 'Symbol' consists of all symbols (I know this does not say anything, but I won't dare to say it consists of all undeclared identifiers or all variables).  The following should have <code>)set mess bot on</code>, but MathAction does not process this well.
In IssueTracker #99, I made some incorrect comments on how the Interpreter treats coercion between elements of the two domains <code>Variable(x:Symbol)</code> and 'Symbol'. This new page consists of experiments to find out more, in regard to both the Interpreter and the Compiler. Note that the domain constructor <code>Variable(x:Symbol)</code> contains a unique element with output representation 'x' which may be coerced to the symbol 'x'. The domain 'Symbol' consists of all symbols (I know this does not say anything, but I won't dare to say it consists of all undeclared identifiers or all variables).

??changed:
---)set mess bot on
)set output tex off
)set output algebra on
)set mess bot on

--removed:
-

??changed:
---)set mess bot off
)set mess bot off

--removed:
-

??changed:
-      y:Symbol:= y
      y:Symbol

??changed:
-For some unknown reasons, replacing <code>y:Symbol:=y</code> by <code>y:Symbol</code>, which still compiles, causes MathAction not to display correctly. MathAction should display correctly up to the place of error, but it doesn't. Also, the next result, which produces the error below in Windows version, is not displayed.
-
-\begin{axiom}
-symVar8()
-\end{axiom}
Computing the next result, which produces the error below in Windows version,
is not displayed properly by MathAction because the system error causes Axiom
to return an error condition.
<pre>
  symVar8()
</pre>

--
forwarded from http://page.axiom-developer.org/zope/mathaction/110DomainVariableAndSymbol#msg20050221150810-0600@page.axiom-developer.org



\start
Date: Mon, 21 Feb 2005 18:14:17 -0600
From: MathAction (William Sit)
To: MathAction
Subject: [#110 Domain Variable() and Symbol] [#110 Domain Variable() and Symbol] improvementsin formatting of MathAction output

Changes http://page.axiom-developer.org/zope/mathaction/110DomainVariableAndSymbol/diff
--
Dear Bill:

Thanks for fixing some of the problems on MathAction in IssueTracker #110 and
also rebroadcasting the page.

Did you change the editor? The page is now defaulted to HTML+LaTeX and the
editor that came up when I hit the edit button is a fancy editor with tool bars.
On the other hand, I did not get the "raw" text. When I simply insert a carriage
return before the header "Compiler", the preview shows error. 

Resetting the format to Structured Text + LaTeX will mess up (line breaks, etc)
the preview as well.


William

--
forwarded from http://page.axiom-developer.org/zope/mathaction/110DomainVariableAndSymbol#msg421A794D.E4963CC5@cunyvm.cuny.edu



\start
Date: Mon, 21 Feb 2005 18:19:25 -0600
From: MathAction (wyscc)
To: MathAction
Subject: [IssueNo0001 first issue] Meaning of heading

Changes http://page.axiom-developer.org/zope/mathaction/IssueNo0001FirstIssue/diff
--
I thought this is the first newsletter on IssueTracker that summarizes the current states of some major issues. :-)

William
--
forwarded from http://page.axiom-developer.org/zope/mathaction/IssueNo0001FirstIssue#msg20050221181924-0600@page.axiom-developer.org



\start
Date: Mon, 21 Feb 2005 19:41:04 -0600
From: MathAction (billpage)
To: MathAction
Subject: [#110 Domain Variable() and Symbol] change of editor

Changes http://page.axiom-developer.org/zope/mathaction/110DomainVariableAndSymbol/diff
--
William, I am sorry for this oversight. I did not intentionally
change the editor. I forgot that by default the wiki uses a "fancy
editor" called Epoz for the HTML page type. This editor assumes
that the content is pure HTML and is supposed to let people who
don't know HTML produce nicely formatted pages. Unfortunately the
pages that we are editing contain embedded LaTeX commands that
seem to completely confuse it. There is a way to change the mode to
plain text editing, but I think that on the whole this is more
trouble than it is worth. Therefore I have disabled Epoz and you
should be able to edit the HTML+LaTeX page in the same way as the
StructuredText+LaTeX pages.

The reason that I changed the page type to HTML+LaTeX is because I
have found that it often produces a better formated page when the
page contains compiler output.
---------
Bill Page.
--
forwarded from http://page.axiom-developer.org/zope/mathaction/110DomainVariableAndSymbol#msg20050221194059-0600@page.axiom-developer.org



\start
Date: Mon, 21 Feb 2005 20:36:40 -0600
From: MathAction (billpage)
To: MathAction
Subject: [#65 protect* functions should be #:NAG only] (new) 

Changes http://page.axiom-developer.org/zope/mathaction/65ProtectFunctionsShouldBeNAGOnly/diff
--
>From BillPage Fri Jan 21 23:58:17 -0600 2005
From: Bill Page
Date: Fri, 21 Jan 2005 23:58:17 -0600
Subject: (new) protect* functions should be #:NAG only


This is an automated notification sent by Savannah.
It relates to:
		bugs #4552, project Axiom Computer Algebra System

==============================================================================
 LATEST MODIFICATIONS of bugs #4552:
==============================================================================

               Posted by: Bill Page <billpage1>
               Posted on: 2005-01-22 05:57 (Canada/Eastern)
    _______________________________________________________

                  Status:                    None -> transferred            


==============================================================================
 OVERVIEW of bugs #4552:
==============================================================================

URL:
  <http://savannah.nongnu.org/bugs/?func=detailitem&item_id=4552>

                 Summary: protect* functions should be #:NAG only
                 Project: Axiom Computer Algebra System
            Submitted by: dmentre
            Submitted on: Thu 07/31/2003 at 17:03
                Category: interpreter
                Severity: 5 - Average
              Item Group: code bug
                  Status: transferred
                 Privacy: Public
             Assigned to: None
         Originator Name: Tim Daly
        Originator Email: axiom@tenkan.org
             Open/Closed: Open
                 Release: Thursday June 5, 2003 at 14:52:04
         Reproducibility: None
           Fixed Release: 
           Error message: 
Example of code trigerring the bug: 
          Internal cause: 

    _______________________________________________________









==============================================================================

This item URL is:
  <http://savannah.nongnu.org/bugs/?func=detailitem&item_id=4552>

_______________________________________________
  Message sent via/by Savannah
  http://savannah.nongnu.org/

--
forwarded from http://page.axiom-developer.org/zope/mathaction/65ProtectFunctionsShouldBeNAGOnly#msg20050221203640-0600@page.axiom-developer.org



\start
Date: Mon, 21 Feb 2005 20:16:09 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [StructuredText] (new) 

Changes http://page.axiom-developer.org/zope/mathaction/StructuredText/diff
--
Structured Text is a simple plain text markup format used by Zope
and ZWiki. It's similar in effect to !WikiWikiWebMarkup but is more
intuitive and standardized. The idea is to have text that is easy
to read both in source and rendered form.

The LatexWiki extensions allow LaTeX commands to be embedded in
Structured Text. MathAction also permits Axiom and Reduce commands
to be embedded.

Zwiki supports other text formatting rules, but Structured Text is
still the default for these reasons: it was the first in zope, it's
a standard, it's simple, it's forgiving, and it allows embedded HTML
and DTML.


    * Cheatsheet for Structured Text: http://zwiki.org/QuickReference#4

    * Structured Text's home page is
      http://www.zope.org/Members/jim/StructuredTextWiki/FrontPage

    * The official rules http://www.zope.org/Members/jim/StructuredTextWiki/StructuredTextRules

    * An Introduction to Structured Text - a nice article by Paul Everitt
      http://www.zope.org/Documentation/Articles/STX

--
forwarded from http://page.axiom-developer.org/zope/mathaction/StructuredText#msg20050221201608-0600@page.axiom-developer.org



\start
Date: Mon, 21 Feb 2005 20:40:27 -0600
From: MathAction (billpage)
To: MathAction
Subject: [#67 Underlying common lisp system should have a binding to OpenMATH library] (new) 

Changes http://page.axiom-developer.org/zope/mathaction/67UnderlyingCommonLispSystemShouldHaveABindingToOpenMATHLibrary/diff
--
>From BillPage Fri Jan 21 23:52:58 -0600 2005
From: Bill Page
Date: Fri, 21 Jan 2005 23:52:58 -0600
Subject: (new) Underlying common lisp system should have a binding to OpenMATH
	library


This is an automated notification sent by Savannah.
It relates to:
		bugs #4578, project Axiom Computer Algebra System

==============================================================================
 LATEST MODIFICATIONS of bugs #4578:
==============================================================================

               Posted by: Bill Page <billpage1>
               Posted on: 2005-01-22 05:52 (Canada/Eastern)
    _______________________________________________________

                  Status:                    None -> transferred            


==============================================================================
 OVERVIEW of bugs #4578:
==============================================================================

URL:
  <http://savannah.nongnu.org/bugs/?func=detailitem&item_id=4578>

                 Summary: Underlying common lisp system should have a binding
to OpenMATH library
                 Project: Axiom Computer Algebra System
            Submitted by: dmentre
            Submitted on: Sat 08/02/2003 at 09:38
                Category: lisp system
                Severity: 3 - Ordinary
              Item Group: feature request
                  Status: transferred
                 Privacy: Public
             Assigned to: camm
         Originator Name: Tim Daly
        Originator Email: axiom@tenkan.org
             Open/Closed: Open
                 Release: Sat Aug  2 11:38:18 CEST 2003
         Reproducibility: None
           Fixed Release: 
           Error message: 
Example of code trigerring the bug: 
          Internal cause: 

    _______________________________________________________


This is necessary to restore OpenMATH printing facilities in Axiom.


    _______________________________________________________

Follow-up Comments:


-------------------------------------------------------
Date: Sat 08/02/2003 at 10:23       By: David Mentr� <dmentre>
The information on the bug you submitted has been modified.









==============================================================================

This item URL is:
  <http://savannah.nongnu.org/bugs/?func=detailitem&item_id=4578>

_______________________________________________
  Message sent via/by Savannah
  http://savannah.nongnu.org/

--
forwarded from http://page.axiom-developer.org/zope/mathaction/67UnderlyingCommonLispSystemShouldHaveABindingToOpenMATHLibrary#msg20050221204027-0600@page.axiom-developer.org



\start
Date: Mon, 21 Feb 2005 20:39:13 -0600
From: MathAction (billpage)
To: MathAction
Subject: [#66 one? function calls need to be restored] (new) 

Changes http://page.axiom-developer.org/zope/mathaction/66OneFunctionCallsNeedToBeRestored/diff
--
>From BillPage Fri Jan 21 23:58:35 -0600 2005
From: Bill Page
Date: Fri, 21 Jan 2005 23:58:35 -0600
Subject: (new) one? function calls need to be restored


This is an automated notification sent by Savannah.
It relates to:
		bugs #4553, project Axiom Computer Algebra System

==============================================================================
 LATEST MODIFICATIONS of bugs #4553:
==============================================================================

               Posted by: Bill Page <billpage1>
               Posted on: 2005-01-22 05:58 (Canada/Eastern)
    _______________________________________________________

                  Status:                    None -> transferred            


==============================================================================
 OVERVIEW of bugs #4553:
==============================================================================

URL:
  <http://savannah.nongnu.org/bugs/?func=detailitem&item_id=4553>

                 Summary: one? function calls need to be restored
                 Project: Axiom Computer Algebra System
            Submitted by: dmentre
            Submitted on: Thu 07/31/2003 at 17:05
                Category: algebra
                Severity: 3 - Ordinary
              Item Group: code bug
                  Status: transferred
                 Privacy: Public
             Assigned to: None
         Originator Name: Tim Daly
        Originator Email: axiom@tenkan.org
             Open/Closed: Open
                 Release: Thursday June 5, 2003 at 14:52:04
         Reproducibility: None
           Fixed Release: 
           Error message: 
Example of code trigerring the bug: 
          Internal cause: 

    _______________________________________________________




    _______________________________________________________

Follow-up Comments:


-------------------------------------------------------
Date: Tue 10/14/2003 at 21:44       By: Dylan Thurston <dpt>
I don't understand this bug: is there a problem with the current behaviour? 
There are many commented out calls to 'one?' in the tree; should they just be
restored, now that 'onep' has been defined as a macro in the lisp?








==============================================================================

This item URL is:
  <http://savannah.nongnu.org/bugs/?func=detailitem&item_id=4553>

_______________________________________________
  Message sent via/by Savannah
  http://savannah.nongnu.org/

--
forwarded from http://page.axiom-developer.org/zope/mathaction/66OneFunctionCallsNeedToBeRestored#msg20050221203913-0600@page.axiom-developer.org



\start
Date: Mon, 21 Feb 2005 20:53:38 -0600
From: MathAction (billpage)
To: MathAction
Subject: [#71 The current free Axiom has no complete documentation] (new) 

Changes http://page.axiom-developer.org/zope/mathaction/71TheCurrentFreeAxiomHasNoCompleteDocumentation/diff
--
>From BillPage Thu Jan 20 23:27:24 -0600 2005
From: Bill Page
Date: Thu, 20 Jan 2005 23:27:24 -0600
Subject: (new) The current free Axiom has no complete documentation


This is an automated notification sent by Savannah.
It relates to:
		bugs #7585, project Axiom Computer Algebra System

==============================================================================
 OVERVIEW of bugs #7585:
==============================================================================

URL:
  <http://savannah.nongnu.org/bugs/?func=detailitem&item_id=7585>

                 Summary: The current free Axiom has no complete
documentation
                 Project: Axiom Computer Algebra System
            Submitted by: dmentre
            Submitted on: Wed 02/04/2004 at 18:13
                Category: documentation
                Severity: 9 - Blocker
              Item Group: documentation bug
                  Status: None
                 Privacy: Public
             Assigned to: axiom
         Originator Name: David MENTRE
        Originator Email: David Mentre
             Open/Closed: Open
                 Release: 2004-02-04
         Reproducibility: None
           Fixed Release: 
           Error message: 
Example of code trigerring the bug: 
          Internal cause: Tim is overbooked. ;-)


    _______________________________________________________


Most potential user can't use Axiom because of lack of documentation. Having
the Axiom Book freely available would allow us to have our first stable
release.







==============================================================================

This item URL is:
  <http://savannah.nongnu.org/bugs/?func=detailitem&item_id=7585>

_______________________________________________
  Message sent via/by Savannah
  http://savannah.nongnu.org/


>From BillPage Thu Jan 20 23:27:53 -0600 2005
From: Bill Page
Date: Thu, 20 Jan 2005 23:27:53 -0600
Subject: The current free Axiom has no complete documentation


This is an automated notification sent by Savannah.
It relates to:
		bugs #7585, project Axiom Computer Algebra System

==============================================================================
 LATEST MODIFICATIONS of bugs #7585:
==============================================================================

               Posted by: Bill Page <billpage1>
               Posted on: 2005-01-21 05:27 (Canada/Eastern)
    _______________________________________________________

             Open/Closed:                    Open -> Closed                 


==============================================================================
 OVERVIEW of bugs #7585:
==============================================================================

URL:
  <http://savannah.nongnu.org/bugs/?func=detailitem&item_id=7585>

                 Summary: The current free Axiom has no complete
documentation
                 Project: Axiom Computer Algebra System
            Submitted by: dmentre
            Submitted on: Wed 02/04/2004 at 18:13
                Category: documentation
                Severity: 9 - Blocker
              Item Group: documentation bug
                  Status: None
                 Privacy: Public
             Assigned to: axiom
         Originator Name: David MENTRE
        Originator Email: David Mentre
             Open/Closed: Closed
                 Release: 2004-02-04
         Reproducibility: None
           Fixed Release: 
           Error message: 
Example of code trigerring the bug: 
          Internal cause: Tim is overbooked. ;-)


    _______________________________________________________


Most potential user can't use Axiom because of lack of documentation. Having
the Axiom Book freely available would allow us to have our first stable
release.







==============================================================================

This item URL is:
  <http://savannah.nongnu.org/bugs/?func=detailitem&item_id=7585>

_______________________________________________
  Message sent via/by Savannah
  http://savannah.nongnu.org/

--
forwarded from http://page.axiom-developer.org/zope/mathaction/71TheCurrentFreeAxiomHasNoCompleteDocumentation#msg20050221205338-0600@page.axiom-developer.org



\start
Date: Mon, 21 Feb 2005 20:57:33 -0600
From: MathAction (billpage)
To: MathAction
Subject: [#74 XSLT style sheet to convert OpenMath to MathML] (new) 

Changes http://page.axiom-developer.org/zope/mathaction/74XSLTStyleSheetToConvertOpenMathToMathML/diff
--
>From BillPage Thu Jan 20 23:39:43 -0600 2005
From: Bill Page
Date: Thu, 20 Jan 2005 23:39:43 -0600
Subject: (new) XSLT style sheet to convert OpenMath to MathML


This is an automated notification sent by Savannah.
It relates to:
		bugs #9582, project Axiom Computer Algebra System

==============================================================================
 LATEST MODIFICATIONS of bugs #9582:
==============================================================================

               Posted by: Bill Page <billpage1>
               Posted on: 2005-01-21 05:39 (Canada/Eastern)
    _______________________________________________________

                  Status:                    None -> transferred            


==============================================================================
 OVERVIEW of bugs #9582:
==============================================================================

URL:
  <http://savannah.nongnu.org/bugs/?func=detailitem&item_id=9582>

                 Summary: XSLT style sheet to convert OpenMath to MathML
                 Project: Axiom Computer Algebra System
            Submitted by: axiom
            Submitted on: Wed 07/07/2004 at 10:48
                Category: interpreter
                Severity: 3 - Ordinary
              Item Group: feature request
                  Status: transferred
                 Privacy: Public
             Assigned to: axiom
         Originator Name: Jason White
        Originator Email: jasonjwg@pacific.net.au
             Open/Closed: Open
                 Release: current
         Reproducibility: None
           Fixed Release: 
           Error message: 
Example of code trigerring the bug: 
          Internal cause: 

    _______________________________________________________


Bob McElrath writes:
 > 
 > MathML adoption has been glacially slow due to the chicken and egg
 > problem between browsers and page creators.  I encourage the AXIOM
 > project to make use of MathML and help push this!

Axiom includes support for OpenMath (http://www.openmath.org/) but it
isn't clear from the mailing list discussion whether anyone has
managed to get it to work with any of the open-source axiom releases.

At http://www.openmath.org/ there is an XSLT style sheets intended to
transform OpenMath into presentation MathML. This could perhaps be
used to process output from Axiom in the absence of support for
generating presentation MathML directly.






    _______________________________________________________

Carbon-Copy List:

CC Address                          | Comment
------------------------------------+-----------------------------
Tim Daly                       | 




==============================================================================

This item URL is:
  <http://savannah.nongnu.org/bugs/?func=detailitem&item_id=9582>

_______________________________________________
  Message sent via/by Savannah
  http://savannah.nongnu.org/


>From unknown Tue Jan 25 01:53:08 -0600 2005
From: 
Date: Tue, 25 Jan 2005 01:53:08 -0600
Subject: property change

Category:  => Axiom User Interface 
Status:  => planned 

--
forwarded from http://page.axiom-developer.org/zope/mathaction/74XSLTStyleSheetToConvertOpenMathToMathML#msg20050221205732-0600@page.axiom-developer.org



\start
Date: Mon, 21 Feb 2005 20:50:43 -0600
From: MathAction (billpage)
To: MathAction
Subject: [#70 when is broken] (new) 

Changes http://page.axiom-developer.org/zope/mathaction/70WhenIsBroken/diff
--
>From BillPage Thu Jan 20 23:24:40 -0600 2005
From: Bill Page
Date: Thu, 20 Jan 2005 23:24:40 -0600
Subject: (new) when is broken


This is an automated notification sent by Savannah.
It relates to:
		bugs #6490, project Axiom Computer Algebra System

==============================================================================
 LATEST MODIFICATIONS of bugs #6490:
==============================================================================

               Posted by: Bill Page <billpage1>
               Posted on: 2005-01-21 05:24 (Canada/Eastern)
    _______________________________________________________

                  Status:                    None -> transferred            


==============================================================================
 OVERVIEW of bugs #6490:
==============================================================================

URL:
  <http://savannah.nongnu.org/bugs/?func=detailitem&item_id=6490>

                 Summary: when is broken
                 Project: Axiom Computer Algebra System
            Submitted by: axiom
            Submitted on: Wed 11/12/2003 at 03:36
                Category: interpreter
                Severity: 5 - Average
              Item Group: code bug
                  Status: transferred
                 Privacy: Public
             Assigned to: axiom
         Originator Name: Tim Daly
        Originator Email: Tim Daly
             Open/Closed: Open
                 Release: 20031110
         Reproducibility: None
           Fixed Release: 
           Error message: There are no library operations named when
Example of code trigerring the bug: ch : Integer ->
UnivariatePolynomial(x,FRAC(INT))
ch(0) == 1
ch(1) == x
ch(n) == 2 * x * ch(n-1) - ch(n-2) when n > 1
ch(2)
          Internal cause: The parser is broken

    _______________________________________________________


The NAG interpreter and the Axiom interpreter do not
accept the when and otherwise verbs when defining
piecewise functions.






==============================================================================

This item URL is:
  <http://savannah.nongnu.org/bugs/?func=detailitem&item_id=6490>

_______________________________________________
  Message sent via/by Savannah
  http://savannah.nongnu.org/

--
forwarded from http://page.axiom-developer.org/zope/mathaction/70WhenIsBroken#msg20050221205043-0600@page.axiom-developer.org



\start
Date: Mon, 21 Feb 2005 20:48:55 -0600
From: MathAction (billpage)
To: MathAction
Subject: [#69 sqrt(-1/abs(x))-1/sqrt(-abs(x))] (new) 

Changes http://page.axiom-developer.org/zope/mathaction/69Sqrt1AbsX1SqrtAbsX/diff
--
Subject: (new) sqrt(-1/abs(x))-1/sqrt(-abs(x))=>0

 OVERVIEW of bugs #6357::

  URL:
  <http://savannah.nongnu.org/bugs/?func=detailitem&item_id=6357>

                 Summary: sqrt(-1/abs(x))-1/sqrt(-abs(x))=>0
                 Project: Axiom Computer Algebra System
            Submitted by: kratt5
            Submitted on: Tue 11/04/2003 at 13:26
                Category: algebra
                Severity: 5 - Average
              Item Group: code bug
                  Status: transferred
                 Privacy: Public
             Assigned to: billpage1
         Originator Name: kratt5
        Originator Email: 
             Open/Closed: Open
                 Release: CVS 3.11.2003
         Reproducibility: None
           Fixed Release: 
           Error message: 

Example of code trigerring the bug:

\begin{axiom}
sqrt(-1/abs(x))-1/sqrt(-abs(x))
\end{axiom}

should be:
\begin{axiom}
 2*%i/sqrt(x)
\end{axiom}

-------------------------------------------------------

Date: Fri 06/11/2004 at 10:43       By: Martin Rubey <kratt6>

patched by patch #3089

-------------------------------------------------------

Date: Tue 11/04/2003 at 14:43       By: Martin Rubey <kratt5>

The error occurs, because::

  sqrt(1/x::Expression Integer)=>1/sqrt(x)


--
forwarded from http://page.axiom-developer.org/zope/mathaction/69Sqrt1AbsX1SqrtAbsX#msg20050221204853-0600@page.axiom-developer.org



\start
Date: Mon, 21 Feb 2005 20:55:12 -0600
From: MathAction (billpage)
To: MathAction
Subject: [#72 product over product or sum fails] (new) 

Changes http://page.axiom-developer.org/zope/mathaction/72ProductOverProductOrSumFails/diff
--
>From BillPage Fri Jan 21 23:51:08 -0600 2005
From: Bill Page
Date: Fri, 21 Jan 2005 23:51:08 -0600
Subject: (new) product over product or sum fails


This is an automated notification sent by Savannah.
It relates to:
		bugs #9057, project Axiom Computer Algebra System

==============================================================================
 LATEST MODIFICATIONS of bugs #9057:
==============================================================================

               Posted by: Bill Page <billpage1>
               Posted on: 2005-01-22 05:50 (Canada/Eastern)
    _______________________________________________________

                  Status:                    None -> transferred            


==============================================================================
 OVERVIEW of bugs #9057:
==============================================================================

URL:
  <http://savannah.nongnu.org/bugs/?func=detailitem&item_id=9057>

                 Summary: product over product or sum fails
                 Project: Axiom Computer Algebra System
            Submitted by: kratt6
            Submitted on: Sat 05/22/2004 at 14:12
                Category: interpreter
                Severity: 5 - Average
              Item Group: code bug
                  Status: transferred
                 Privacy: Public
             Assigned to: billpage1
         Originator Name: Martin Rubey
        Originator Email: rubey@geometrie.tuwien.ac.at
             Open/Closed: Open
                 Release: tla from may 2004
         Reproducibility: None
           Fixed Release: 
           Error message:    >> Error detected within library code:
   not a kernel
Example of code trigerring the bug: f==n+->product(sum(1/i,i=1..j),j=1..n)
f(1)

f==n+->product(product(1/i,i=1..j),j=1..n)
f(1)

f==n+->sum(sum(1/i,i=1..j),j=1..n)
f(1)
          Internal cause: it might be that the problem is in iidprod in
combfunc.spad: if I understand correctly, its last line 

 */[eval(first l,k::K,i::F) for i in r1::Z .. r2::Z]

evaluates product's first argument for each value of the product variable and
then multiplies the resulting list together. However, for some reason the eval
fails. I was unable to find out why eval fails. A hint might be that the
operation "summation" is not called anymore. I don't even know which
operation "eval" is called...

Same thing for iidsum.

    _______________________________________________________


it seems that products and sums cannot be nested. However, the following
works:

 g:=operator 'g
 f==n+->sum(g(j),j=1..n)
 f(1)

    _______________________________________________________

Follow-up Comments:


-------------------------------------------------------
Date: Fri 06/11/2004 at 10:42       By: Martin Rubey <kratt6>
patched by patch #3121
discussion in

http://lists.gnu.org/archive/html/axiom-developer/2004-06/msg00087.html

and

http://lists.gnu.org/archive/html/axiom-developer/2004-05/msg00138.html








==============================================================================

This item URL is:
  <http://savannah.nongnu.org/bugs/?func=detailitem&item_id=9057>

_______________________________________________
  Message sent via/by Savannah
  http://savannah.nongnu.org/

--
forwarded from http://page.axiom-developer.org/zope/mathaction/72ProductOverProductOrSumFails#msg20050221205511-0600@page.axiom-developer.org



\start
Date: Mon, 21 Feb 2005 20:56:31 -0600
From: MathAction (billpage)
To: MathAction
Subject: [#73 )spool does not capture )sys output] (new) 

Changes http://page.axiom-developer.org/zope/mathaction/73SpoolDoesNotCaptureSysOutput/diff
--
>From BillPage Thu Jan 20 23:38:43 -0600 2005
From: Bill Page
Date: Thu, 20 Jan 2005 23:38:43 -0600
Subject: (new) )spool does not capture )sys output


This is an automated notification sent by Savannah.
It relates to:
		bugs #9581, project Axiom Computer Algebra System

==============================================================================
 LATEST MODIFICATIONS of bugs #9581:
==============================================================================

               Posted by: Bill Page <billpage1>
               Posted on: 2005-01-21 05:38 (Canada/Eastern)
    _______________________________________________________

                  Status:                    None -> transferred            


==============================================================================
 OVERVIEW of bugs #9581:
==============================================================================

URL:
  <http://savannah.nongnu.org/bugs/?func=detailitem&item_id=9581>

                 Summary: )spool does not capture )sys output
                 Project: Axiom Computer Algebra System
            Submitted by: axiom
            Submitted on: Wed 07/07/2004 at 10:42
                Category: None
                Severity: 3 - Ordinary
              Item Group: feature request
                  Status: transferred
                 Privacy: Public
             Assigned to: axiom
         Originator Name: William Sit
        Originator Email: William Sit
             Open/Closed: Open
                 Release: current
         Reproducibility: None
           Fixed Release: 
           Error message: 
Example of code trigerring the bug: 
          Internal cause: )spool captures lisp i/o
)sys starts a shell with its own i/o


    _______________________________________________________


I am not sure if it is a bug, but I think it would be better if the
"feature"
below is modified.

As one knows, it takes quite a few compiles to get a spad file in the right
form, especially when one is learning. I also like to keep a record of the
mistakes I made as well as to document any possible bugs. So what I want to
do
is this:

)spool mytest.output
)sys cat mytest.spad
)comp mytest.spad
-- go make some changes
-- repeat the previous two commands
)spool

At the console the file is displayed. However, spool does not capture any
output
from the )sys cat command.

I lost all the changes I made to mytest.spad even though eventually, I got
it
working.

My request therefore: Is it difficult to modify spool so it will also
capture
all the output from a system command like cat? (I don't expect spool to
capture
other than "terminal" type output streams.)

William






    _______________________________________________________

Carbon-Copy List:

CC Address                          | Comment
------------------------------------+-----------------------------
Tim Daly                       | 




==============================================================================

This item URL is:
  <http://savannah.nongnu.org/bugs/?func=detailitem&item_id=9581>

_______________________________________________
  Message sent via/by Savannah
  http://savannah.nongnu.org/

--
forwarded from http://page.axiom-developer.org/zope/mathaction/73SpoolDoesNotCaptureSysOutput#msg20050221205630-0600@page.axiom-developer.org



\start
Date: Mon, 21 Feb 2005 20:43:49 -0600
From: MathAction (billpage)
To: MathAction
Subject: [#66 one? function calls need to be restored]	(new) 

Changes http://page.axiom-developer.org/zope/mathaction/66OneFunctionCallsNeedToBeRestored/diff
--
>From BillPage Fri Jan 21 23:58:35 -0600 2005
From: Bill Page
Date: Fri, 21 Jan 2005 23:58:35 -0600
Subject: (new) one? function calls need to be restored


This is an automated notification sent by Savannah.
It relates to:
		bugs #4553, project Axiom Computer Algebra System

==============================================================================
 LATEST MODIFICATIONS of bugs #4553:
==============================================================================

               Posted by: Bill Page <billpage1>
               Posted on: 2005-01-22 05:58 (Canada/Eastern)
    _______________________________________________________

                  Status:                    None -> transferred            


==============================================================================
 OVERVIEW of bugs #4553:
==============================================================================

URL:
  <http://savannah.nongnu.org/bugs/?func=detailitem&item_id=4553>

                 Summary: one? function calls need to be restored
                 Project: Axiom Computer Algebra System
            Submitted by: dmentre
            Submitted on: Thu 07/31/2003 at 17:05
                Category: algebra
                Severity: 3 - Ordinary
              Item Group: code bug
                  Status: transferred
                 Privacy: Public
             Assigned to: None
         Originator Name: Tim Daly
        Originator Email: axiom@tenkan.org
             Open/Closed: Open
                 Release: Thursday June 5, 2003 at 14:52:04
         Reproducibility: None
           Fixed Release: 
           Error message: 
Example of code trigerring the bug: 
          Internal cause: 

    _______________________________________________________




    _______________________________________________________

Follow-up Comments:


-------------------------------------------------------
Date: Tue 10/14/2003 at 21:44       By: Dylan Thurston <dpt>
I don't understand this bug: is there a problem with the current behaviour? 
There are many commented out calls to 'one?' in the tree; should they just be
restored, now that 'onep' has been defined as a macro in the lisp?








==============================================================================

This item URL is:
  <http://savannah.nongnu.org/bugs/?func=detailitem&item_id=4553>

_______________________________________________
  Message sent via/by Savannah
  http://savannah.nongnu.org/

--
forwarded from http://page.axiom-developer.org/zope/mathaction/66OneFunctionCallsNeedToBeRestored#msg20050221204349-0600@page.axiom-developer.org



\start
Date: Mon, 21 Feb 2005 21:17:28 -0600
From: MathAction (billpage)
To: MathAction
Subject: [#60 bugs duplicate functions exists. optimizer complains during rebuild] (new) 

Changes http://page.axiom-developer.org/zope/mathaction/60BugsDuplicateFunctionsExistsOptimizerComplainsDuringRebuild/diff
--
>From BillPage Fri Jan 21 23:53:48 -0600 2005
From: Bill Page
Date: Fri, 21 Jan 2005 23:53:48 -0600
Subject: (new) duplicate functions exists. optimizer complains during rebuild


This is an automated notification sent by Savannah.
It relates to:
		bugs #4551, project Axiom Computer Algebra System

==============================================================================
 LATEST MODIFICATIONS of bugs #4551:
==============================================================================

               Posted by: Bill Page <billpage1>
               Posted on: 2005-01-22 05:53 (Canada/Eastern)
    _______________________________________________________

                  Status:                    None -> transferred            


==============================================================================
 OVERVIEW of bugs #4551:
==============================================================================

URL:
  <http://savannah.nongnu.org/bugs/?func=detailitem&item_id=4551>

                 Summary: duplicate functions exists. optimizer complains
during rebuild
                 Project: Axiom Computer Algebra System
            Submitted by: dmentre
            Submitted on: Thu 07/31/2003 at 17:02
                Category: build process
                Severity: 5 - Average
              Item Group: code bug
                  Status: transferred
                 Privacy: Public
             Assigned to: None
         Originator Name: Tim Daly
        Originator Email: axiom@tenkan.org
             Open/Closed: Open
                 Release: Thursday June 5, 2003 at 14:52:04
         Reproducibility: None
           Fixed Release: 
           Error message: Warn foo redefined in #pX.fn. Originally in #pY.fn
Example of code trigerring the bug: -- assuming Axiom has already been built.

-- >rm /spad/obj/linux/bin/interpsys
-- >cd /spad
-- >make

          Internal cause: 

    _______________________________________________________









==============================================================================

This item URL is:
  <http://savannah.nongnu.org/bugs/?func=detailitem&item_id=4551>

_______________________________________________
  Message sent via/by Savannah
  http://savannah.nongnu.org/

--
forwarded from http://page.axiom-developer.org/zope/mathaction/60BugsDuplicateFunctionsExistsOptimizerComplainsDuringRebuild#msg20050221211728-0600@page.axiom-developer.org



\start
Date: Tue, 22 Feb 2005 09:34:00 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [#111 Fedora Core 3 binaries don't work (axiom-Feb2005-Fedora3-bin.tgz)] (new) 

Changes http://page.axiom-developer.org/zope/mathaction/111FedoraCore3BinariesDontWorkAxiomFeb2005Fedora3BinTgz/diff
--
The reason is that the file bin/axiom starts with

#!/bin/sh
AXIOM=/root/axiom--main--1--patch-30/mnt/fedora3

obviously a left-over from debugging. Delete these 2 lines.
--
forwarded from http://page.axiom-developer.org/zope/mathaction/111FedoraCore3BinariesDontWorkAxiomFeb2005Fedora3BinTgz#msg20050222093356-0600@page.axiom-developer.org



\start
Date: Tue, 22 Feb 2005 09:57:29 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [#111 Fedora Core 3 binaries don't work (axiom-Feb2005-Fedora3-bin.tgz)] Fedora Core 2 binaries

Changes http://page.axiom-developer.org/zope/mathaction/111FedoraCore3BinariesDontWorkAxiomFeb2005Fedora3BinTgz/diff
--
The same problem exists in the Fedora Core 2 binaries.

Instead of just deleting the AXIOM environment variable
there might be some advantage to keeping it and setting
it appropropriating for where ever you have located your
.../mnt/linux file ...
--
forwarded from http://page.axiom-developer.org/zope/mathaction/111FedoraCore3BinariesDontWorkAxiomFeb2005Fedora3BinTgz#msg20050222095728-0600@page.axiom-developer.org



\start
Date: Tue, 22 Feb 2005 09:58:05 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [#111 Fedora Core 3 binaries don't work (axiom-Feb2005-Fedora3-bin.tgz)] Fedora Core 2 binaries

Changes http://page.axiom-developer.org/zope/mathaction/111FedoraCore3BinariesDontWorkAxiomFeb2005Fedora3BinTgz/diff
--

??changed:
-The reason is that the file bin/axiom starts with
-
-#!/bin/sh
-AXIOM=/root/axiom--main--1--patch-30/mnt/fedora3
The reason is that the file bin/axiom starts with::

  #!/bin/sh
  AXIOM=/root/axiom--main--1--patch-30/mnt/fedora3

--
forwarded from http://page.axiom-developer.org/zope/mathaction/111FedoraCore3BinariesDontWorkAxiomFeb2005Fedora3BinTgz#msg20050222095805-0600@page.axiom-developer.org



\start
Date: Tue, 22 Feb 2005 09:53:30 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [build Axiom] 

Changes http://page.axiom-developer.org/zope/mathaction/BuildAxiom/diff
--

++added:
Building Axiom on Linux

  Fedora FC2 graphics

   (from William Sitt, email of Monday, February 21, 2005 2:51 AM)

I would like to report that compiling Feb 2005 release on Fedora 
FC2 was successful. However, when running Hyperdoc and selecting
Topic, graphics,  2d-graphics, Parametric Curves, draw(...)
I got the error::

  sh: line1: uncompress: command not found.

To solve the problem, I put in the following symbolic links::

  su
  cd /bin
  ln -s gzip compress
  ln -s gunzip uncompress

and that solves the problem.

Perhaps Axiom should change its use of these obsolete commands?



--
forwarded from http://page.axiom-developer.org/zope/mathaction/BuildAxiom#msg20050222095330-0600@page.axiom-developer.org



\start
Date: Tue, 22 Feb 2005 11:09:37 -0500
From: Bill Page
To: Jason White
Subject: Axiom configure script

On Monday, February 21, 2005 3:39 AM Jason White wrote:
> 
> William Sit writes:
> > 
> > and that solves the problem. Perhaps Axiom should change 
> > its use of these obsolete commands?
> 
> I don't think they're obsolete on Unix systems.
> On my Debian GNU/Linux system I have
> /bin/uncompress
> 
> This is the sort of variation that a configure script
> (or similar) should be able to identify.
> 

I think it would be great if someone (Do you have time Jason?)
could get a start on a proper ./configure script for Axiom.
I am quite tired of the "do nothing" approach of the current
./configure script.

One simple thing would be to rename the current Makefile
in the root directory of the Axiom build to Makefile.in
and then let the ./configure script create an appropriate
Makefile for the particular host environment (including
checking dependencies and setting PATH and AXIOM environment
variables).

Regards,
Bill Page.




\start
Date: Tue, 22 Feb 2005 10:15:37 -0600
From: MathAction (anonymous)
To: MathAction
Subject: [MathAction] 

Changes http://page.axiom-developer.org/zope/mathaction/MathAction/diff
--
(x+y)^n + (x-y)^n
--
forwarded from http://page.axiom-developer.org/zope/mathaction/MathAction#msg20050222101535-0600@page.axiom-developer.org



\start
Date: Tue, 22 Feb 2005 10:27:14 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [AxiomDownload] 

Changes http://page.axiom-developer.org/zope/mathaction/AxiomDownload/diff
--

??changed:
-    See [111FedoraCore3BinariesDontWorkAxiomFeb2005Fedora3BinTg]
    See [#111FedoraCore3BinariesDontWorkAxiomFeb2005Fedora3BinTg]

--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomDownload#msg20050222102714-0600@page.axiom-developer.org



\start
Date: Tue, 22 Feb 2005 10:25:40 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [AxiomDownload] 

Changes http://page.axiom-developer.org/zope/mathaction/AxiomDownload/diff
--

??changed:
-
-**From**::
-
- Balbir Thomas
- Friday, December 03, 2004 6:43 AM
-
-AxiomGraphics don't work or sman fails to start ?
-
-  First try running sman as :
-sman -debug -noclef -nonag -noht
  Fedora Core 2 and 3

    Tthe file bin/axiom starts with::

      #!/bin/sh
      AXIOM=/root/axiom--main--1--patch-30/mnt/fedora3

    obviously a left-over from debugging. Delete these 2 lines.

    See [111FedoraCore3BinariesDontWorkAxiomFeb2005Fedora3BinTg]


  AxiomGraphics don't work or sman fails to start ?

    **From**::

      Balbir Thomas
      Friday, December 03, 2004 6:43 AM

First try running sman as ::

  sman -debug -noclef -nonag -noht


--removed:
-

--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomDownload#msg20050222102540-0600@page.axiom-developer.org



\start
Date: Tue, 22 Feb 2005 10:39:42 -0600
From: MathAction (billpage)
To: MathAction
Subject: [MathAction] 

Changes http://page.axiom-developer.org/zope/mathaction/MathAction/diff
--

??changed:
-
-From unknown Wed Jan 26 16:19:56 -0600 2005
-From: 
-Date: Wed, 26 Jan 2005 16:19:56 -0600
-Subject: xxx
-Message-ID: <20050126161956-0600@page.axiom-developer.org>
-
-xxx
-\begin{axiom}
-(1+2)/3
-\end{axiom}
-
-It is sort of interesting, isn't it, that Axiom insists on
-calling `1' a fraction just because of the way it was
-calculated? There is a way to say that you want the answer
-as an integer. Of course this isn't always possible:
-\begin{axiom}
-(1/3)::Integer
-\end{axiom}
-[21 more lines...]
Try out Axiom and Reduce online in the SandBox.

--
forwarded from http://page.axiom-developer.org/zope/mathaction/MathAction#msg20050222103942-0600@page.axiom-developer.org



\start
Date: Tue, 22 Feb 2005 10:37:41 -0600
From: MathAction (billpage)
To: MathAction
Subject: [FrontPage] 

Changes http://page.axiom-developer.org/zope/mathaction/FrontPage/diff
--

??changed:
-  Although this site is mainly about Axiom, we also provide services related to
-  [other Computer Algebra systems]. The [Rosetta Stone] intends to demonstrate
-  how things are done in different systems. Here, on MathAction, you can 
-  "try out":PlayingTogether various Computer Algebra Systems online.
-
-- Learn more [about Axiom],  more [about MathAction] or more
  This web site is called MathAction. It is mainly about Axiom, we also
  provide some support for [other Computer Algebra systems]. The [Rosetta Stone]
  demonstrates how things are done in different systems. Currently you can use
  both Axiom and Reduce here "online":PlayingTogether together on the same web
  page.

- Learn more [about Axiom], more [about MathAction] or more

??changed:
-- Don't hesitate to join [Axioms Community]!
- Please join [Axioms Community]!

--
forwarded from http://page.axiom-developer.org/zope/mathaction/FrontPage#msg20050222103741-0600@page.axiom-developer.org



\start
Date: Tue, 22 Feb 2005 11:05:38 -0600
From: MathAction (billpage)
To: MathAction
Subject: [AxiomInterpreter] (new) 

Changes http://page.axiom-developer.org/zope/mathaction/AxiomInterpreter/diff
--
Interprets commands typed by the user or read from files.
--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomInterpreter#msg20050222110537-0600@page.axiom-developer.org



\start
Date: Tue, 22 Feb 2005 10:59:40 -0600
From: MathAction (billpage)
To: MathAction
Subject: [FrontPage] 

Changes http://page.axiom-developer.org/zope/mathaction/FrontPage/diff
--

??changed:
-  and development of mathematical algorithms. It defines a strongly typed,
-  mathematically correct type hierarchy. It has a 
-  "programming language and a built-in compiler":ProgrammingAxiom.
  and development of mathematical algorithms. The [Axiom Language] provides a
  convenient way to express abstract mathematical concepts.  It defines a
  over 1,000 strongly-typed mathematical domains and categories. Axiom has both
  an "interpreter":AxiomInterpreter and a built-in "compiler":ProgrammingAxiom.

--
forwarded from http://page.axiom-developer.org/zope/mathaction/FrontPage#msg20050222105940-0600@page.axiom-developer.org



\start
Date: Tue, 22 Feb 2005 14:36:45 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [Axioms Community] 

Changes http://page.axiom-developer.org/zope/mathaction/AxiomsCommunity/diff
--

++added:

Axiom and the scientific commnunauty

  (based on an email from Daniel Augot on Friday, September 19, 2003 5:18 AM)

  I think there is an issue for the future life of Axiom, which involves
  researchers in computer algebra. From some email exchanges with
  friends, I do not feel that the revival of Axiom as free software will
  motivate them to go back to Axiom.

  In the French commnunauty, which I know a bit, because I was involved
  during my PHD thesis, 10 years ago, many people got very involved with
  Axiom. Many wrote domains, packages etc... for implementing the
  algorithms they were introducing in their research work.

  But at his time, Axiom was a very closed software, and the French
  communauty was on its own, for documentation, help, contacting gurus,
  etc... Axiom also had its load of defaults~: a cumbersome system of
  categories, poor speed of code, compiler and interpreter bizareness,
  no way to use Unix pipes and redirection etc. Furthermore NAG did not
  show any clear sign about the future of Axiom. Even more, there was
  the promising A#/axiomxl/aldor project, with Basicmath, but it was
  immature, so the choice between Axiom and aldor was unclear.

  As a consequence many were confused and discouraged, and switched to
  other computer algebra systems, for instance Magma, which offers a
  large library and is very fast (although it does not offer the rich
  mechanism of Axiom for contructing domains and categories).

  Consequently, I think there must be a thinking about the state of
  Axiom, and clear signs concerning its future, beyond the point of
  making it publicly available. Will the compiler will be fixed ? Will
  it be documented ? Will compiled code be faster ? Will researchers in
  computer algebra be able to incorporate easily their software ? Will
  they be able to redesign the system of categories ? Will it be
  possible to link against efficient C code ? etc, etc...

  May be the benefits of the free software will show up, but, after
  discussion with friends, it will not be enough for switching back to
  Axiom.

  Kind regards, and felicitations for the work done. I have been able to
  download and compile all Axiom, and I am very glad for that.

  ------------

  Daniel Augot

Reply

  (based on an email from Tim Daly, on Friday, September 19, 2003 10:43 AM)

I have had both face-to-face and direct email discussions that the
issues you raise are real and need to be addressed. I'll try to give
you my current thinking on the subject.

I don't expect that Axiom will gain a great deal of use simply because
it is free. I have collected about 100 free "computer algebra" systems
which I distribute on my Rosetta CD collection. Free CA systems are
"a dime a dozen" quite literally. Indeed many of these systems were
built by researchers as part of their research work.

My experience shows that most of these free systems start with the insight
that math "types" and programming "types" are similar. Starting with this
idea it becomes clear that you can build a nice, clean system from scratch.
It takes about a semester to build up a full, general purpose, polynomial
manipulation library in C++ and, indeed, you find that the math and computer
types interact very well. Then the insight occurs that the library isn't
useful to anyone but the researcher so the second semester of work involves
writing a front-end interpreter on the library. Subsequent effort involves
trying to convince others that this could be a very useful system given
sufficient effort.

This is very seductive since it looks like great progress. It has several 
problems. 

First, a local problem is that the research work that is "reduced to 
practice" using a newly implemented system cannot be effectively used by
others (e.g. library systems rarely do simplification and almost never
document their algorithms).

Second, a local problem is that reduction to practice, that is, "programming"
is generally not "valorized". The research is recognized but the year or
two spent building a working system is either ignored or considered to
be of little worth during tenure discussions.

Third, a global problem is that the algorithmic work, while free, is
generally useless to others. Either the system is so specialized that
it only does one thing well which makes it into a single-purpose, once-only
use tool or it tries to be general purpose and has such a limited range of
algorithms that it quickly reaches a point of frustration for the user.
Thus the one great algorithm at the center of the system is buried and lost.

Fourth is the "rule of 3". It takes 1 unit of work to get something for
yourself. It takes 3x1 units of work to make is so your office neighbor
can use it. It takes 3x3x1 units of work so you can use it "in the 
department" and in courses. It takes 3x3x3x1 units of work to give it
to the world for free without support. It takes 3x3x3x3x1 units of work 
to make it into a commercial product with support, a hotline, lawyers, etc.
Most "computer algebra" systems stop at the 3x1 level as there is no
interesting new research work beyond the first unit and the 3x1 units
are expended as a matter of trying to get the work out to the world.

Building your research on top of Axiom or the 3Ms (Mathematica, Maple, 
Matlab) immediately gives you the benefit of the 81 units of work already 
done.

Systems like the 3Ms get purchased because they are general purpose
enough to do virtually anything and hold out the hope that research
done with these systems will be picked up and made useful to others.
However you tend to lose control of your work. If it is badly implemented
in the 3M world and has your name attached to it you have little choice
but to suffer the hit on your reputation. In a free system like Axiom
your reputation is yours to make or break.

Detailed discussions with researchers highlights another subtle fact.
The 3Ms are built on weak theory ground. Practically speaking this has
the effect of "limits of scale". You'll find that the more complex the
package you build the more difficult these systems become, for reasons
not related to your package. The difficulty is compounded if you need
to use other "non-core" packages. In some sense, these systems are like
Perl which is easy to use, fast to write, hard to scale to large projects,
and impossible to maintain (yes, I know this is a religious debate).

Axiom started out like any other home-grown system, called Scratchpad. 
However it was started at a time that major funding was available 
(computer algebra was considered to be a branch of artificial intelligence). 
It was heavily funded by both the U.S. government and IBM Research for about 
23 years. Many researchers came to visit, many people worked on the system, 
many algorithms were created in a broad range of areas. This is the
"dream realized" for the authors of the many free "library" systems.
Fortunately Axiom started out as a "theory" system and not a "library".
(See the footnote).

IBM ran into financial trouble and sold Scratchpad (as Axiom) to raise cash.
As a business decision this made sense but as a global decisions it was
pointless. Scratchpad is a great system for doing research work and had
the support and attention of about 400 researchers worldwide. If you're
going to do real math research Scratchpad was definitely the place to work.
It required at least a master's degree to learn but was easy to extend if
you understood the underlying math. Your work could be integrated and used
by the research community. As a "product" (Axiom) it had a very limited 
market with cash-poor clients who could not support Axiom as a commercial 
product. Axiom could never generate sufficient cash flow to cover the cost
of a development team in the commercial, closed source world. And open-source
generates no cash. So Axiom is the best place to do research and the worst
place to make money.

Scratchpad was "open source" before the term existed. People who asked me
(while I was at IBM) could get a free copy of the source code. Axiom
when it was released followed the standard commercial path of closed
source software. This depends on a staff of people to maintain, which
depends on a good cash flow, and clearly Axiom couldn't generate the
cash flow. So Axiom was cut off from the customers who made it useful
and could never survive in a closed source model.

Scratchpad was ported onto AKCL, a compiled, hand-optimized version of
common lisp specifically developed under contract. I worked closely
with Bill Schelter on several detailed features like second-compile
optimization of function calling, tail recursive optimizations, memory
management, etc. to make Scratchpad perform well. When Axiom became a
commercial product it was ported to run on CCL, a byte-code interpreted
partial common lisp. This solved the portability problem (AKCL was 
very hard to port as it compiles to optimized machine code) but 
basically broke Scratchpad. Function calling and garbage collection
optimizations disappeared. Axiom is now back to running on GCL, the
open-source version of AKCL. Camm, the GCL lead developer, is on the
Axiom maintainer list.

As to contacting gurus we on the scratchpad team were told to "circle
our chairs" until we came up with something other than computer algebra
to work on (they even brought in an industrial psych. to "reprogram" us
which I found to be a very painful experience both professionally and
emotionally). NAG was in a very difficult situation guru-wise as they
lost the help of the guys who wrote it.

Aldor has great promise but people insist on trying to build the world
"from scratch". It may be several years and several failed experiments
before it becomes clear that the "library" approach is flawed. In the
mean time Axiom and Aldor have committed to supporting cross-compiled
compatibility.

As to the other issues like "cumbersome categories", hey, it's now
open-source and I'm open to ways of improving it. Scratchpad/Axiom
evolved to the system it is now because hundreds of people worked on
it and improved it. Someone needs to "unify" the Axiom type tree with
the mathematics in a much more systematic way. This is about a whole
Ph.D-thesis level of effort. The benefits of such thesis work would
be enormous as it would clarify how to correctly build these systems.
Axiom's types grew with knowledge of the theory but without benefit
of the detailed analysis.

Now Axiom is back as open source. That is a necessary condition but not
sufficient. We need two things to survive. We need a community and we
need a funding model. 

For signs about its future visit savannah.nongnu.org/projects/axiom and
click on the "homepage" link. There are long range plans to unify with
theorem proving (ACL2 or MetaPRL), group theory (GAP and Magnus), 
[142 more lines...]

--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomsCommunity#msg20050222143645-0600@page.axiom-developer.org



\start
Date: Tue, 22 Feb 2005 14:45:00 -0600
From: MathAction (billpage)
To: MathAction
Subject: [Axiom Language] (new) 

Changes http://page.axiom-developer.org/zope/mathaction/AxiomLanguage/diff
--
Axiom Types

  Consider
\begin{axiom}
(1+2)/3
\end{axiom}

It is sort of interesting, isn't it, that Axiom insists on
calling `1' a fraction just because of the way it was
calculated? There is a way to say that you want the answer
as an integer. Of course this isn't always possible:
\begin{axiom}
(1/3)::Integer
\end{axiom}

But the example it is:
\begin{axiom}
((1+2)/3)::Integer
\end{axiom}

Axiom is very strict with types (meaning: where the operation
takes place). The division of 1+2 by 3 takes place in
Fraction Integer (field of rational numbers) and that is
where the answer should be, even if it is 1. Most people
would automatically "retract" this to the integer 1. But in
general, there is no natural way to do so (why not retract
1 to a natural number, for example?).  So Axiom provides the
user a way to "coerce" an answer to another type. You can coerce
1 to any of many, many types, for example, as a polynomial,
or even as a matrix (or the unit element of any ring).

\begin{axiom}
((1+2)/3)::Polynomial Integer
((1+2)/3)::SquareMatrix(1,Integer)
((1+2)/3)::SquareMatrix(3,Integer)
((1+2)/3)::SquareMatrix(3, Polynomial Complex Integer)
\end{axiom}

--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomLanguage#msg20050222144426-0600@page.axiom-developer.org



\start
Date: Wed, 23 Feb 2005 00:41:31 +0100
From: Pierre Doucy
To: list
Subject: Latest MacOS X issues...

Hi all,

in my way to compile axiom on a Mac, here is my last problem :

gcl refused to configure (the saved_pre_gcl problem). After some time
spent on the gcl website, my understanding was that gcl should be able
to configure and compile on a Mac (tell me if I'm wrong...). So I
thought that the configure options provided by the axiom Makefiles
were wrong. So I decided to change a little the lsp/Makefile.pamphlet
so that the configure command would be :

configure

instead of :

configure --enable-vssize=65536*2 --enable-statsysbfd --enable-maxpage=128*1024 

then gcl configured well, and then the make system started to compile
a lot of stuff (lsp files, mostly). I decided that that was good news
until it stopped with the following error :


Loading /Users/pdoucy/Documents/Travail/Axiom/axiom--MACOSX--1--patch-1/obj/MACOSX/interp/cformat.o
start address -T 0x9f75c8 Finished loading
/Users/pdoucy/Documents/Travail/Axiom/axiom--MACOSX--1--patch-1/obj/MACOSX/interp/cformat.o
Loading /Users/pdoucy/Documents/Travail/Axiom/axiom--MACOSX--1--patch-1/obj/MACOSX/interp/cfuns.o
Error binding section LC_SEGMENT.__DATA.__la_symbol_ptr: symbol
_findString is undefined

Error: Cannot get relocated section contents

Fast links are on: do (si::use-fast-links nil) for debugging
Error signalled by LOAD.
Broken at BUILD-INTERPSYS.  Type :H for Help.
BOOT>>make[3]: ***
[/Users/pdoucy/Documents/Travail/Axiom/axiom--MACOSX--1--patch-1/obj/MACOSX/bin/interpsys]
Error 255
make[2]: *** [interpdir] Error 2
make[1]: *** [srcdir] Error 2
make: *** [all] Error 2


First, can someone tell me what is being done at that point so that I
can understand the whole thing better.
Second, do you think it can be linked to the way I configured gcl ?

Thank you in advance.

Pierre DOUCY - hopefully in the good track.

-- 
Cats are intended to teach us that not everything in nature has a function.



\start
Date: Wed, 23 Feb 2005 11:35:49 -0600
From: MathAction (billpage)
To: MathAction
Subject: [AxiomDevelopment] 

Changes http://page.axiom-developer.org/zope/mathaction/AxiomDevelopment/diff
--

++added:

Programming Language Issues

  (from an email by Tim Daly on Sunday, August 31, 2003 3:56 PM)

Yes, Axiom is written in boot and common lisp. I wrote most, if not all,
of the common lisp. I found the boot syntax (which is basically lisp
except that parens are replaced by indentation) was impossible for me
to use. However other people on the project hate parens. It was a
religious difference that never got solved.

Boot has some nice features. It was basically Python before Python existed.
The key flaw in Boot (and Python) is that programs are not data. That is,
(print (eval (read "sourcefile"))) is broken. And there is no documentation
as it is a perfectly obvious language (sarcasm optional).

But, being a religious debate, the issue can never be resolved.  If
I'm not mistaken (but memory fails) Bill Burge added a "feature" to
boot to allow "nopile" (indented code was called "piled" code).  that
relied on syntax rather than spaces. It caused quite a stir about like
having the Pope decide to require all catholic females to wear a burka.
(Or Lisp programmers to code in Boot, which is far worse :-) )

There is a third language used in the system called Meta. (Which is why
meta.tar exists in zips). This code is not part of the bootstrap but
needs to be at some point. Changing the meta parser (see metameta.lisp,
fnewmeta.lisp, and metalex.lisp) would surely cause havoc. In the 
distributed system I replaced the Meta code with common lisp.

There is a fourth language called CHARYBDIS used in the printing subsystem.
This was a project at MIT around the time that IBM was working on MODLisp.
I'm not sure how they got co-mingled but I believe Dave Barton and Joel
Moses (MIT) worked with Dick Jenks, Jim Griesmer, and Fred Blair (IBM).

There is a fifth unnamed language, a psuedo-tex-html language (see
src/share/doc/hypertex/pages/util.ht) that is used by the hypertex
system (which is a browser before browser existed). You can see this
language stick up into the world in the comments section of the algebra
files. Notice the \axiom{}. That's the TeX-used-as-HTML language.
Scott Morrison invented this language to drive Hypertex, also his work.

In fact, if you do ")set output script on " you'll find support for
IBM's internal TeX-like language called Script. Technical papers
were written in Script before Knuth's TeX caught on. This isn't a
new language within the system but it is another language that is still
supported by the system. )set output fortran also works.
 
There is a sixth language, called spad, which is used to implement the
.spad algebra files. There were several spad languages. Each time we
redesigned the language we renamed the old language "old spad". We were
talking about old-old-old-spad at one point in the project. These 
languages are now dead but you can still find code to support them
Look for "old" and "new" in the sources. Bill Burge, our parser guy,
used "old" and "new" as the spad and boot languages evolved. It caused
no confusion in any given week but caused massive confusion in the code.

You can still see the confusion. Build Axiom then rebuild Axiom. 

(digression: I have a second-build function-calling optimizer that
Bill Schelter and I worked on.  We needed to make function calling
faster. There isn't enough information on the first compile. So if you
look in src/interp/util.lisp in the function make-depsys you'll see
the load of "/cmpnew/collectfn". This is code Schelter and I worked
on. When you compile a lisp file for the first time (say foo.lisp) it
spits out a file (foo.fn). If foo.fn exists and you recompile the
foo.lisp file it will optimize the function calling code (fast-pathing
the code) since it has "perfect information" about how many arguments
and what type the arguments are. This is a significant improvement.
So Axiom is much faster after the second build. I have to automate this
in the build but haven't yet. It works if you hand-build Axiom twice).

On the second build of Axiom the function-optimizer has the .fn files.
It will complain that duplicate code exists. The reason for this duplicate
code is that some of it is "old^N" code (where N is ambiguous) and the
duplicate code is "layered" on top of the old code. I have to go thru
the system and decide which code is correct and elide the "old" code.
I have marked all of the duplicates in the sources (look for "---->")
but stopped that effort in order to get the code uploaded. 

In any case this is an example of the "confusion" as we frequently
needed to run "old" BOOT and spad code until I rewrote it into the
"new" BOOT and spad code. Shortly before Axiom was given to NAG I
spent several weeks rewriting all of the algebra files into the 
"new" A# (AxiomXL, Aldor) compatible language so that the spad compiler
and the Aldor compiler used the same language.

There is a seventh language, originally A#, then AxiomXL, now Aldor
which is a minor variant of spad. It allows the use of { } pairs 
instead of indentation making it a philosophical cross between the
lisp and boot religions. (Bill Burge's "nopile" option exists in Aldor).
(It also uses ";" which is an abmonination but that might be a religious
opinion :-) )

There is an 8th language called SHOE (search for SHOE) which was a
replacement for BOOT. Bill Burge liked puns. SHOE was a "more refined"
BOOT. BOOT was a bootstrap language written in BOOT. Once Burge got
a language "in the air" he was quite fond of losing the scaffolding
that got it there. As a consequence BOOT and spad could not be built
from scratch and required a running BOOT and spad compiler. This is
fixed in the released version. This fix took the bulk of the last
8 months which is why it took so long to deliver an open-source
version of a product (NAG already had a running Axiom and didn't need
to build from scratch but I'm not allowed to distribute a runnable 
Axiom so I had to fix this fundamental problem). The fix is horrible
and I'll rewrite it all from scratch eventually. However if you had
to wait for me to "clean up" all the issues you'd have to wait a
few years. Release early, release often is going to be my mantra.

There are even languages within languages. If you look at the common
lisp you'll find such things as (from g-opt.boot.pamphlet):
EVALANDFILEACTQ which is VMLisp/370 (nee LispVM, nee Lisp/360)
a product of Fred Blair, Cyril Alberga, and Mark Wegman (which, by
the way I need to add to the kudos list since Fred, Cyril, and Mark
were heavily consulted during the translation from VMLisp). Most of
the MACLisp and VMLisp rewrites are in vmlisp.spad.pamphlet.

Looking even deeper into the common lisp you'll find MODLisp, which
was an effort by Dick Jenks, Dave Barton, and a few others. Bits of
it still survive. It predated and fathered Scratchpad/Scratchpad II.

And there are even MACLisp primitives still around like subrp (see
src/interp/vmlisp.lisp.pamphlet).

I rewrote large portions of old code trying hard to eliminate these
old languages but found that the newer languages didn't have a name
for all of the old concepts (e.g. EVALANDFILEACTQ) or the new name
didn't match the meaning of the old name (e.g. subrp vs compiled-function-p)
exactly so I had to write cover macros/functions. Over time I eliminated
the semantic differences and some of the cover functions/macros are now
simply renames (e.g. subrp is now just a rename and should be removed).
We sold Axiom before I could completely clean up the system. Now I get
a second chance (of course I wish the filmy bastard (i.e. me) had DOCUMENTED
some of this code :-( )

When dealing with languages it is very hard to do a rewrite. Usually the
original programmer was an expert in his language (e.g. MACLisp) and the
rewrite-programmer is not. When the rewrite happens subtle things break.
My special talent on the project was deep expertise in anything lispish
as I worked in MACLisp, VMLisp, Common Lisp, SpiceLisp ZetaLisp, PSL,
Scheme, Standard Lisp, NIL,  and my own implementation (living quietly
under code that runs IBM's and Unimation's industrial robots) and every 
other variant that I could find. I even have a lisp implemented in fortran.
Thus you will hear me say (and not realize the religious nature of the 
comment) that "Axiom is just Lisp". 

Clearly there is much more to do.

Anyway, this history lesson is brought to you by the letters Alpha and
Omega, and the numbers pi and e.

---------------

Tim, the wizard (from Monty Python)


--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomDevelopment#msg20050223113549-0600@page.axiom-developer.org



\start
Date: Wed, 23 Feb 2005 15:39:36 -0500
From: Bill Page
To: Bob McElrath
Subject: RE: latexwiki update

Bob,

Here is a small patch that I needed in order to run your new
LatexWiki 0.38 (from darcs Feb 23, 2005) on the MathAction
test website

  http://test.axiom-developer.org/mathaction

diff -au $HOME/latexwiki/LatexWiki/latexWrapper.py latexWrapper.py
--- /home/page/latexwiki/LatexWiki/latexWrapper.py      2005-02-23
13:15:53.0000
00000 -0600
+++ latexWrapper.py     2005-02-23 14:14:19.000000000 -0600
@@ -41,17 +41,16 @@
 latexInlinePattern = r'^(\$(?!\$)|\\\()$'

 # This is only used if your wiki does not have a node LatexTemplate.
-defaultLatexTemplate = r"""
-\\documentclass[%d""" %(charsizept) + """pt,notitlepage]{article}
+defaultLatexTemplate = "\\documentclass[%d" %(charsizept) +
"""pt,notitlepage]{article}
 \\usepackage{amsmath}
 \\usepackage{amsfonts}
 \\usepackage[all]{xy}
 \\newenvironment{latex}{}{}
+\\nofiles
 \\begin{document}
 \\oddsidemargin -86pt
 \\headheight 0pt
 \\topmargin -96pt
-\\nofiles
 \\pagestyle{empty}
 %s
 \\end{document}

Perhaps this change is required in part because I am using

  latex --version
  pdfeTeX 3.141592-1.21a-2.2 (Web2C 7.5.4)
  kpathsea version 3.5.4

------

The new dvipng however seems to be working great! It even
solves some formatting problems for long LaTeX lines.

I do however seem to have a problem with alignment of LaTeX
and non-LaTeX characters. Perhaps this ia related to running
the wiki from within Plone (but with Simon's standard skin
patch). See the above link. Any ideas?

Later tonight I plan to integrate the Axiom and Reduce
extensions into the test site.

Great work! Thanks.

Bill Page.

> -----Original Message-----
> From: Bob McElrath [mailto:Bob McElrath] 
> Sent: Tuesday, February 01, 2005 3:02 PM
> To: Bill Page
> Cc: list
> Subject: latexwiki update
> 
> 
> Hi Bill, 
> 
> I have just finished a rather extensive rewrite of latexwiki, and want
> to examine your patches again that add axiom and reduce functionality,
> and see if I can integrate that quickly.
> 
> Where is your code located again, and is it up-to-date?
> 
> ZWiki 0.38 was released today, and I want to release latexwiki 0.38
> tonight too.
> 
> Note: this rewrite does NOT include my new STX code, but improves
> rendering speed (using dvipng -- 100x faster on large pages), allows
> font-size scaling, and fixes a few bugs...
> 
> --
> Cheers,
> Bob McElrath [Univ. of California at Davis, Department of Physics]




\start
Date: Wed, 23 Feb 2005 12:54:45 -0800
From: Bob McElrath
To: Bill Page
Subject: Re: latexwiki update


--ZfOjI3PrQbgiZnxM

Bill Page [Bill Page] wrote:
> Bob,
> 
> Here is a small patch that I needed in order to run your new
> LatexWiki 0.38 (from darcs Feb 23, 2005) on the MathAction
> test website
> 
>   http://test.axiom-developer.org/mathaction

Thanks, fixed already though.

FWIW you should have a LatexTemplate file (this is normally created by
the install procedure), so that you can add packages and macros.

--
Cheers,
Bob McElrath [Univ. of California at Davis, Department of Physics]

    "Faith: Belief without evidence in what is told by one who speaks 
    without knowledge, of things without parallel." -- Ambrose Bierce


--ZfOjI3PrQbgiZnxM

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.4 (GNU/Linux)

iD8DBQFCHO2VjwioWRGe9K0RApiqAKDddC+98A4Fx87I/m7ekiF8kyb9DgCfXUX3
BPadb0Eo+ZWjVCGJWAmX9VQ=
=wUfW
-----END PGP SIGNATURE-----

--ZfOjI3PrQbgiZnxM--



\start
Date: Wed, 23 Feb 2005 19:27:42 -0500
From: Tim Daly
To: Camm Maguire
Subject: Latest MacOS X issues...]

Sorry, I've been unable to send outgoing email for a while.....

Camm,

Can you tell me the configure options that are needed on the MAC?

Pierre,

The process is 

configure
make Makefile
  make noweb/Makefile              (build noweb)
  make src/scripts/Makefile        (build literate commands)
  run notangle to extract Makefile.MACOSX
  make -f Makefile.MACOSX
    set up directories
    make noweb                     (does nothing if it exists)
    make src/Makefile setup        (creates Axiom C code for Lisp)
    make src/lsp/Makefile          (builds GCL, 
                                    create obj/MACOSX/bin/lisp)
    make src/Makefile              
      make src/scripts/Makefile    (build commands)
      make src/lib/Makefile        (make libspad.a, the gen. purpose C code)
      make src/boot/Makefile       (compile boot/*, 
                                    create obj/MACOSX/bin/bootsys)
      make src/interp/Makefile     (compile interp/*,
                                    create obj/MACOSX/bin/depsys,
                                    create obj/MACOSX/bin/interpsys)
      make src/share/Makefile      (copy util.ht, command.list)
      make src/algebra/Makefile    (compile algebra, 
                                    create obj/MACOSX/bin/AXIOMsys)
      make src/etc/Makefile        (create databases, asq command, axiom cmd)
      make src/clef/Makefile       (create clef)
      make src/doc/Makefile        (create book)
      make src/graph/Makefile      (create graphics)
      make src/sman/Makefile       (create sman)
      make src/hyper/Makefile      (create hyperdoc)
      make src/input/Makefile      (test system)

You've gotten into the src/interp/Makefile step. It looks like you 
might have run out of memory? Perhaps the configure should still
use enable-vssize and enable-maxpage? I say this because lisp has
clearly passed the stage of building, compiling bootsys, and saving
an image (depsys) which starts and compiles successfully.

Tim




------- Start of forwarded message -------
Date: Wed, 23 Feb 2005 00:41:31 +0100
From: Pierre Doucy
To: list
Subject: Latest MacOS X issues...

Hi all,

in my way to compile axiom on a Mac, here is my last problem :

gcl refused to configure (the saved_pre_gcl problem). After some time
spent on the gcl website, my understanding was that gcl should be able
to configure and compile on a Mac (tell me if I'm wrong...). So I
thought that the configure options provided by the axiom Makefiles
were wrong. So I decided to change a little the lsp/Makefile.pamphlet
so that the configure command would be :

configure

instead of :

configure --enable-vssize=65536*2 --enable-statsysbfd --enable-maxpage=128*1024 

then gcl configured well, and then the make system started to compile
a lot of stuff (lsp files, mostly). I decided that that was good news
until it stopped with the following error :


Loading /Users/pdoucy/Documents/Travail/Axiom/axiom--MACOSX--1--patch-1/obj/MACOSX/interp/cformat.o
start address -T 0x9f75c8 Finished loading
/Users/pdoucy/Documents/Travail/Axiom/axiom--MACOSX--1--patch-1/obj/MACOSX/interp/cformat.o
Loading /Users/pdoucy/Documents/Travail/Axiom/axiom--MACOSX--1--patch-1/obj/MACOSX/interp/cfuns.o
Error binding section LC_SEGMENT.__DATA.__la_symbol_ptr: symbol
_findString is undefined

Error: Cannot get relocated section contents

Fast links are on: do (si::use-fast-links nil) for debugging
Error signalled by LOAD.
Broken at BUILD-INTERPSYS.  Type :H for Help.
BOOT>>make[3]: ***
[/Users/pdoucy/Documents/Travail/Axiom/axiom--MACOSX--1--patch-1/obj/MACOSX/bin/interpsys]
Error 255
make[2]: *** [interpdir] Error 2
make[1]: *** [srcdir] Error 2
make: *** [all] Error 2


First, can someone tell me what is being done at that point so that I
can understand the whole thing better.
Second, do you think it can be linked to the way I configured gcl ?

Thank you in advance.

Pierre DOUCY - hopefully in the good track.

------- End of forwarded message -------



\start
Date: Wed, 23 Feb 2005 21:55:19 -0500
From: Bill Page
To: Bob McElrath
Subject: RE: latexwiki update

Bob,

On Wednesday, February 23, 2005 3:55 PM you wrote:
> 
> FWIW you should have a LatexTemplate file (this is normally created
> by the install procedure), so that you can add packages and macros.
> 

Yes of course I could copy or create one, but I started by creating a
Plone site, then I did a LatexWiki install. But no LatexTemplate file
was created in the root of the Plone site so LatexWiki tried to use the
default template embedded in the latexWrapper.py script.

About image alignment. When I create a standalone LatexWiki, everything
looks nice. When I use LatexWiki inside Plone with Simon's "standard"
skin the LaTeX generated images do not align well with HTML generated
characters. But if I log-in and click the 'plone' then the alignment is
good again. Compare

  http://test.axiom-developer.org/plainwiki  (stand alone)
  http://test.axiom-developer.org/mathaction (standard skin in Plone)

Do you have any ideas about the proper way to link the latexwiki.css
and related stuff into the 'standard' Zwiki Plone skin?

Regards,
Bill Page.




\start
Date: Wed, 23 Feb 2005 20:20:02 -0800
From: Bob McElrath
To: Bill Page
Subject: Re: latexwiki update


--9jxsPFA5p3P2qPhR

Bill Page [Bill Page] wrote:
> Bob,
> 
> On Wednesday, February 23, 2005 3:55 PM you wrote:
> > 
> > FWIW you should have a LatexTemplate file (this is normally created
> > by the install procedure), so that you can add packages and macros.
> > 
> 
> Yes of course I could copy or create one, but I started by creating a
> Plone site, then I did a LatexWiki install. But no LatexTemplate file
> was created in the root of the Plone site so LatexWiki tried to use the
> default template embedded in the latexWrapper.py script.
> 
> About image alignment. When I create a standalone LatexWiki, everything
> looks nice. When I use LatexWiki inside Plone with Simon's "standard"
> skin the LaTeX generated images do not align well with HTML generated
> characters. But if I log-in and click the 'plone' then the alignment is
> good again. Compare
> 
>   http://test.axiom-developer.org/plainwiki  (stand alone)
>   http://test.axiom-developer.org/mathaction (standard skin in Plone)

Yeah I noticed that earlier...

> Do you have any ideas about the proper way to link the latexwiki.css
> and related stuff into the 'standard' Zwiki Plone skin?

If you use the Plone Quick Installer it runs my install method for
plone, which creates a ploneCustom.css file that contains the necessary
magic, and your "plone" skin does not look like a plone page...and does
not include the (several) plone css files, including ploneCustom.css.

--
Cheers,
Bob McElrath [Univ. of California at Davis, Department of Physics]

    "Faith: Belief without evidence in what is told by one who speaks 
    without knowledge, of things without parallel." -- Ambrose Bierce


--9jxsPFA5p3P2qPhR

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.4 (GNU/Linux)

iD8DBQFCHVXyjwioWRGe9K0RAiQNAKCUATHRXL8DPgWW5IhcRoIFRCnqkgCcCsqL
PBuTdMFgVVewb8p0JLXd1XM=
=S+L4
-----END PGP SIGNATURE-----

--9jxsPFA5p3P2qPhR--



\start
Date: Thu, 24 Feb 2005 16:56:34 -0500
From: Bill Page
To: Bob McElrath
Subject: RE: latexwiki update

Bob,

On Wednesday, February 23, 2005 11:20 PM you wrote:

>Bill Page [Bill Page] wrote:
>> 
>> About image alignment. When I create a standalone LatexWiki,
>> everything looks nice. When I use LatexWiki inside Plone with
>> Simon's "standard" skin the LaTeX generated images do not align
>> well with HTML generated characters. But if I log-in and click
>> the 'plone' then the alignment is good again. Compare
>> 
>>   http://test.axiom-developer.org/plainwiki  (stand alone)
>>   http://test.axiom-developer.org/mathaction (standard skin in Plone)
>
>Yeah I noticed that earlier...
>
>> Do you have any ideas about the proper way to link the latexwiki.css
>> and related stuff into the 'standard' Zwiki Plone skin?
>
> If you use the Plone Quick Installer it runs my install method
> for plone, which creates a ploneCustom.css file that contains the
> necessary magic,

Yes I did that. ploneCustom.css only includes a link to latexwiki.css

> and your "plone" skin does not look like a plone page...and does
> not include the (several) plone css files, including ploneCustom.css.

That it is true. The "plone" skin is just what you sent me a few
weeks ago about what Simon set up on ubuntulinux.org.

On Tuesday, February 01, 2005 5:19 PM you wrote:

> Simon Michael set up a zwiki/plone skin switcher on ubuntulinux.org.
> (create an account and look in the preferences)
>
>I know you were interested in this Bill...
>
>    http://zwiki.org/HowToUseTheStandardSkinInPlone
>

Unfortunately that page and several other things on the zwiki.org
site (even issuetracker) seems to be broken right now :( IOError ):
So I can't review exactly what I did.

As I understand it, it is supposed to look just like the standard
ZWiki (i.e. stand alone) skin except that the wiki page itself is
really located inside Plone. Since LatexWiki works as an extension
of the ZWiki stand alone standard skin (is that right?), I thought
that this might work for LatexWiki as well. And it almost does.
So far, all I can see that is different is the alignment of images.

As I recall, among other things the changes described by Simon
involved changing the skin search order. As you said ploneCustom.css
is not involved. Maybe the latexwiki.css has to be located somewhere
else than in the root of the Plone site folder? Maybe something in
the ZWiki "standard" skins have to refer to latexwiki.css?

Another weird thing that you might also have already noticed
is that images that are inlined via $...$ do not seem to be
transparent but \begin{equation} ... \end{equation} are
transparent. This seems to be a problem both on the plainwiki
as well as under plone.

Regards,
Bill Page.



\start
Date: Thu, 24 Feb 2005 14:42:00 -0800
From: Bob McElrath
To: Bill Page
Subject: Re: latexwiki update


--J/dobhs11T7y2rNN

Page, Bill [Bill Page] wrote:
> Bob,
> 
> > and your "plone" skin does not look like a plone page...and does
> > not include the (several) plone css files, including ploneCustom.css.
> 
> That it is true. The "plone" skin is just what you sent me a few
> weeks ago about what Simon set up on ubuntulinux.org.

No... compare this plone wiki:

    http://www.ubuntulinux.org/wiki/FrontPage

And yours:

    http://test.axiom-developer.org/mathaction

"inside plone" means the plone titlebar, search field, login button, and
all that.  Here is what it should look like, with a wiki page in the
middle obviously:

    http://test.axiom-developer.org/mathaction/login_form

I don't know what you've done but it does not appear to be using plone.
"view source" on the ubuntu page and see the 10 or so .css files linked
in <head>.  Your page has none of that.

> As I understand it, it is supposed to look just like the standard
> ZWiki (i.e. stand alone) skin except that the wiki page itself is
> really located inside Plone. 

No, the pages look very different due to the interface added by plone.
e.g. here is latexwiki in plone:

    http://mcelrath.org/Plone/SandBox

> Since LatexWiki works as an extension
> of the ZWiki stand alone standard skin (is that right?), I thought
> that this might work for LatexWiki as well. And it almost does.
> So far, all I can see that is different is the alignment of images.

It's more than a matter of finding the css, the plone page template is
not being used at all, and zwiki's wikipage.pt is being used instead
(even when you hit the plone link to change skins).

> Another weird thing that you might also have already noticed
> is that images that are inlined via $...$ do not seem to be
> transparent but \begin{equation} ... \end{equation} are
> transparent. This seems to be a problem both on the plainwiki
> as well as under plone.

I noticed that.  Did you install dviping?  I was bouncing back and forth
between dvipng, gs, and using alpha-channel or not, because it affected
my new image alignment code.

This is the reason 0.38 isn't out yet.  I've spent SO much time tweaking
the image rendering...this is getting tiresome.  I've got to stop doing
that because it's making me not want to look at latexwiki.

--
Cheers,
Bob McElrath [Univ. of California at Davis, Department of Physics]

    "Faith: Belief without evidence in what is told by one who speaks 
    without knowledge, of things without parallel." -- Ambrose Bierce


--J/dobhs11T7y2rNN

-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.2.4 (GNU/Linux)

iD8DBQFCHlg4jwioWRGe9K0RAtrWAKDM6i/1uKbsRQmjHElTC8QRB00lXACgiOa7
4Tx+UhwvCEmSbk9Tuewh+78=
=eEUt
-----END PGP SIGNATURE-----

--J/dobhs11T7y2rNN--



\start
Date: Thu, 24 Feb 2005 16:56:03 -0600
From: MathAction (Ning Wang)
To: MathAction
Subject: [Axiom-mail] [Axiom-mail] Does Axiom support infinite sets

Changes http://page.axiom-developer.org/zope/mathaction/AxiomMail/diff
--
Thanks Bill, I think the streams is enough for me so far.
Regards,
Ning

Page, Bill wrote:

>Changes http://page.axiom-developer.org/zope/mathaction/AxiomMail/diff
>--
>On Thursday, February 17, 2005 3:29 PM Ning Wang wrote:
>  
>
>>Can I define an infinite set by the axiom of comprehension
>>or the axiom of replacement?
>>
>>    
>>
>
>The short (but incomplete) answer is "no". At least not in an
>entirely abstract manner. But Axiom does provide tools
>specifically for dealing with "infinite", i.e. indefinitely
>large, lists called streams.
>
>Perhaps you will find the following web page useful. It
>summarizes some of the properties of streams.
>
>http://page.axiom-developer.org/zope/mathaction/Streams
>
>If you have other questions please let us know.
>
>Regards,
>Bill Page.
>
>  
>

--
forwarded from http://page.axiom-developer.org/zope/mathaction/AxiomMail#msg421E5C55.6090307@ics.uci.edu



\start
Date: Thu, 24 Feb 2005 17:46:26 -0500
From: Bill Page
To: Bob McElrath
Subject: RE: latexwiki update

Bob,

On Thursday, February 24, 2005 4:57 PM I wrote:
>> ...
>>    http://zwiki.org/HowToUseTheStandardSkinInPlone
>>
>
> Unfortunately that page and several other things on the
> zwiki.org site (even issuetracker) seems to be broken right
> now :( IOError ): So I can't review exactly what I did.

Ok, ZWiki is back.

The change is quite simple. It amounts to only changing the
priority of the portal_skins/standard in a new "skin" called
Zwiki. I think that all this means is that it gets searched
first when Plone goes looking for stylesheets.

> ...
> Maybe something in the ZWiki "standard" skins have to refer to
> latexwiki.css?

Yes! All I had to do was to cusomize portal_skins/wikipage_macros
and add the line

 <link rel="stylesheet" type="text/css" href="latexwiki.css" />

to define-macro="head".

Now the LaTeX generated image of a character and the corresponding
HTML character align properly.

But this is still a problem:

> Another weird thing that you might also have already noticed
> is that images that are inlined via $...$ do not seem to be
> transparent but \begin{equation} ... \end{equation} are
> transparent. This seems to be a problem both on the plainwiki
> as well as under plone.

I will take a look at the new LatexWiki code to see if I
can see why this happens.

Regards,
Bill Page.



\start
Date: Thu, 24 Feb 2005 18:22:46 -0500
From: Bill Page
To: Bob McElrath
Subject: RE: latexwiki update

Bob,

On Thursday, February 24, 2005 5:42 PM you wrote:
> Bill Page wrote:
> > Bob McElrath wrote: 
> > > and your "plone" skin does not look like a plone page...
> > > and does not include the (several) plone css files,
> > > including ploneCustom.css.
> > 
> > That it is true. The "plone" skin is just what you sent me a
> > few weeks ago about what Simon set up on ubuntulinux.org.
> 
> No... compare this plone wiki:
> 
>     http://www.ubuntulinux.org/wiki/FrontPage
> 
> And yours:
> 
>     http://test.axiom-developer.org/mathaction
>

??? After you log in to ubuntulinux.org change to wiki/FrontPage
and press 'Shift Alt _' these look essentially the same to me.
What Simon implemented was this special ability to switch skins
on the fly using 'Shift Alt _' and 'Shift Alt +' (via a call to
'/setskin?skin=simple' and '/setskin?skin=plone' respectively).
Note: You *must* log in first for this to work.

The difference between test.axiom-developer.org/mathaction
and ubuntulinux.org is that on mathaction the skin=simple is
the default while on ubuntulinux the default is skin=plone.
This is done just by setting the default skin for the plone
side to 'Zwiki' instead of the usual plone default.
 
> "inside plone" means the plone titlebar, search field, login 
> button, and all that.  Here is what it should look like, with
> a wiki page in the middle obviously:
> 
>     http://test.axiom-developer.org/mathaction/login_form
>

No, "inside plone" just means that the wiki page is located
somewhere inside the Plone site folder in Zope. Other things
being equal, yes it will display as you say above with the plone
titlebar etc. But if you use Simon's Zwiki skin then it looks
just like a stand alone ZWiki page even though it is really
inside plone.
 
> I don't know what you've done but it does not appear to be 
> using plone. "view source" on the ubuntu page and see the
> 10 or so .css files linked in <head>.  Your page has none
> of that.

Obviously you are not lookin at the ubuntu page in the
/setskin?skin=simple mode. You must log in first and then
press 'Shift Alt _'.

> 
> > As I understand it, it is supposed to look just like the
> > standard ZWiki (i.e. stand alone) skin except that the
> > wiki page itself is really located inside Plone. 
> 
> No, the pages look very different due to the interface added
> by plone. e.g. here is latexwiki in plone:
> 
>     http://mcelrath.org/Plone/SandBox
>

??? But changing the interface (normally) added by plone is
exactly what Simon is doing! He (and me also) want the user
to be able to choose between seeing the page as a "normal"
stand alone wiki page *or* as a wiki page inside plone with
all the plone bells and whistles. But in both cases it is
the same page. Only the bells and whistles change because
they are only part of the "skin".
 
> > Since LatexWiki works as an extension of the ZWiki stand
> > alone standard skin (is that right?), I thought that this
> > might work for LatexWiki as well. And it almost does.  So
> > far, all I can see that is different is the alignment of
> > images.
> 
> It's more than a matter of finding the css, the plone page
> template is not being used at all, and zwiki's wikipage.pt
> is being used instead(even when you hit the plone link to
> change skins).

You are right. When you change skins the search order
changes so that the contents of the portal-skins/standard
folder is picked instead of the zwiki_plone folder.

> 
> > Another weird thing that you might also have already
> > noticed is that images that are inlined via $...$ do
> > not seem to be transparent but \begin{equation} ...
> > \end{equation} are transparent. This seems to be a
> > problem both on the plainwiki as well as under plone.
> 
> I noticed that.  Did you install dviping?

Yes I installed dvipng.

> I was bouncing back and forth between dvipng, gs, and
> using alpha-channel or not, because it affected my new
> image alignment code.
>

Maybe something is left over from these changes.
 
> This is the reason 0.38 isn't out yet.  I've spent SO much 
> time tweaking the image rendering...this is getting tiresome.
> I've got to stop doing that because it's making me not want
> to look at latexwiki.
> 

Well it's look pretty darn good to me! :) I think it produces
a much nicer looking result than the old latex 0.35 code that
I am using on the MathAction production site.

I really like the idea of using dvipng instead of gs.

Regards,
Bill Page




\start
Date: Mon, 28 Feb 2005 06:30:26 -0600
From: MathAction (Anonymous)
To: MathAction
Subject: [PlayingTogether] 

Changes http://page.axiom-developer.org/zope/mathaction/PlayingTogether/diff
--
\begin{axiom}
     x^2-4
      \end{axiom}
--
forwarded from http://page.axiom-developer.org/zope/mathaction/PlayingTogether#msg20050228063023-0600@page.axiom-developer.org



\start
Date: Mon, 28 Feb 2005 06:34:15 -0600
From: MathAction (Anonymous)
To: MathAction
Subject: [FAQ] 

Changes http://page.axiom-developer.org/zope/mathaction/FAQ/diff
--
First some explanation, then
      \begin{axiom}
      integrate(exp(-x**2/2)/sqrt(2*%pi),x=%minusInfinity..%plusInfinity)
      \end{axiom}
--
forwarded from http://page.axiom-developer.org/zope/mathaction/FAQ#msg20050228063412-0600@page.axiom-developer.org



\start
Date: Mon, 28 Feb 2005 06:34:11 -0600
From: MathAction (Anonymous)
To: MathAction
Subject: [FAQ] 

Changes http://page.axiom-developer.org/zope/mathaction/FAQ/diff
--
First some explanation, then
      \begin{axiom}
      integrate(exp(-x**2/2)/sqrt(2*%pi),x=%minusInfinity..%plusInfinity)
      \end{axiom}
--
forwarded from http://page.axiom-developer.org/zope/mathaction/FAQ#msg20050228063404-0600@page.axiom-developer.org



\start
Date: Mon, 28 Feb 2005 06:31:34 -0600
From: MathAction (Anonymous)
To: MathAction
Subject: [PlayingTogether] 

Changes http://page.axiom-developer.org/zope/mathaction/PlayingTogether/diff
--
fac(5)
--
forwarded from http://page.axiom-developer.org/zope/mathaction/PlayingTogether#msg20050228063134-0600@page.axiom-developer.org



\start
Date: Mon, 28 Feb 2005 08:35:40 -0600
From: MathAction (Bill Page)
To: MathAction
Subject: [PlayingTogether] 

Changes http://page.axiom-developer.org/zope/mathaction/PlayingTogether/diff
--

--removed:
-
-From unknown Fri Feb 25 17:22:04 -0600 2005
-From: 
-Date: Fri, 25 Feb 2005 17:22:04 -0600
-Subject: 1+1
-Message-ID: <20050225172204-0600@page.axiom-developer.org>
-
-
-
-From unknown Sat Feb 26 19:39:41 -0600 2005
-From: 
-Date: Sat, 26 Feb 2005 19:39:41 -0600
-Subject: (x+y)^2
-Message-ID: <20050226193941-0600@page.axiom-developer.org>
-

++added:
Put some command and then \\begin{axiom} before the first
Axiom command.

??changed:
-     x^2-4
-      \end{axiom}
x^2-4
\end{axiom}

??changed:
-fac(5)
Reduce commands end with ; Put some comment and the \\begin{reduce}
before the first Reduce command and \\end{reduce} after the last
one.
\begin{reduce}
fac(5);
\end{reduce}

--
forwarded from http://page.axiom-developer.org/zope/mathaction/PlayingTogether#msg20050228083540-0600@page.axiom-developer.org



\end{verbatim}
\eject
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\cleardoublepage
%\phantomsection
\addcontentsline{toc}{chapter}{Bibliography}
\bibliographystyle{axiom}
\bibliography{axiom}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\cleardoublepage
%\phantomsection
\addcontentsline{toc}{chapter}{Index}
\printindex
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\end{document}
