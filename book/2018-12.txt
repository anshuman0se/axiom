\start
Date: Fri, 14 Dec 2018 06:20:23 +0000
From: Shakthi Kannan <author@shakthimaan.com>
To: "axiom-developer@nongnu.org" <axiom-developer@nongnu.org>
Subject: [Axiom-developer] Compiling Axiom on Debian 9

Hi,

I am trying to build Axiom on Debian 9. The steps are listed in this GitHub=
 issue:
\begin{verbatim}
  https://github.com/daly/axiom/issues/14

The following issue mentions use of 13pre.

  https://github.com/daly/axiom/issues/6

1. Can you provide the instructions on building the required 13pre GCL vers=
ion to get Axiom built on Debian 9?

2. If there is a specific distro on which Axiom builds successfully, please=
 let me know.

3. Are you using http://savannah.nongnu.org/bugs/?group=3Daxiom or https://=
github.com/daly/axiom to keep track of bugs?

Appreciate your inputs in this regard.

Thanks!

SK
--
Shakthi Kannan
http://www.shakthimaan.com

\start
Date: Fri, 14 Dec 2018 06:22:29 +0000
From: Shakthi Kannan <mail@shakthimaan.com>
To: "axiom-developer@nongnu.org" <axiom-developer@nongnu.org>
Subject: [Axiom-developer] Compiling Axiom on Debian 9

Hi,

I am trying to build Axiom on Debian 9. The steps are listed in this GitHub=
 issue:

  https://github.com/daly/axiom/issues/14

The following issue mentions use of 13pre.

  https://github.com/daly/axiom/issues/6

1. Can you provide the instructions on building the required 13pre GCL vers=
ion to get Axiom built on Debian 9?

2. If there is a specific distro on which Axiom builds successfully, please=
 let me know.

3. Are you using http://savannah.nongnu.org/bugs/?group=3Daxiom or https://=
github.com/daly/axiom to keep track of bugs?

Appreciate your inputs in this regard.

Thanks!

SK
--
Shakthi Kannan
http://www.shakthimaan.com

\start
Date: Sat, 15 Dec 2018 13:36:42 -0500
From: Tim Daly <axiomcas@gmail.com>
To: author@shakthimaan.com, axiom-dev <axiom-developer@nongnu.org>,
	axiomcas@gmail.com
Subject: Re: [Axiom-developer] Compiling Axiom on Debian 9

In theory you should just be able to do:
   sudo apt-get install axiom

If that fails, use docker:
   docker pull daly/axiom
   docker run -i -t daly/axiom axiom

The Axiom project is currently focused on proving the
algorithms correct. Great progress is being made but it
is not ready to be open-sourced.

Tim

\start
Date: Sat, 22 Dec 2018 15:41:13 -0500
From: Tim Daly <axiomcas@gmail.com>
To: axiom-dev <axiom-developer@nongnu.org>
Subject: [Axiom-developer] PLOS Rules for documenting scientific software

https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1006561

1) Write comments as you code
2) Include examples and lots of them
3) Include a quickstart guide
4) Include a README file with basic information
5) Include a help command for command line interfaces
6) Version control your documentation
7) Fully document your application program interface
8) Use automated documentation tools
9) Write error messages that provide solutions or point to the documentation
10) Tell people how to cite your software

\start
Date: Sat, 22 Dec 2018 17:14:35 -0500
From: Tim Daly <axiomcas@gmail.com>
To: axiom-dev <axiom-developer@nongnu.org>
Subject: [Axiom-developer] The QED Manifesto

Computerized Mathematics
http://www.cs.ru.nl/~freek/qed/qed.html

\start
Date: Sat, 22 Dec 2018 17:17:51 -0500
From: Tim Daly <axiomcas@gmail.com>
To: axiom-dev <axiom-developer@nongnu.org>, Tim Daly <axiomcas@gmail.com>
Subject: [Axiom-developer] QED Manifesto and Symbolic Algebra

9. Too little care for rigor. It is notoriously easy to find "bugs" in
algorithms for symbolic
computation. To make matters worse, these errors are often regarded as
of no significance
by their authors, who plead that the result returned is true "except
on a set of measure
zero", without explicitly naming the set involved. The careful
determination, nay, even
proof, of precisely which conditions under which a result is true is
essential for building
the structure of mathematics so that one can depend on it. The QED
system will support
the development of symbolic algebra programs in which formal proofs of
correctness of
derivations are provided, along with the precise statement of
conditions under which the
results are true.

\start
Date: Sun, 23 Dec 2018 02:32:33 +0000
From: William Sit <wsit@ccny.cuny.edu>
To: Tim Daly <axiomcas@gmail.com>, axiom-dev <axiom-developer@nongnu.org>
Subject: Re: [Axiom-developer] PLOS Rules for documenting scientific software

Amen.=0A=
=0A=
William=0A=
=0A=
William Sit=0A=
Professor Emeritus=0A=
Department of Mathematics=0A=
The City College of The City University of New York=0A=
New York, NY 10031=0A=
homepage: wsit.ccny.cuny.edu=0A=
=0A=
________________________________________=0A=
From: Axiom-developer <axiom-developer-bounces+wyscc=3Dsci.ccny.cuny.edu@no=
ngnu.org> on behalf of Tim Daly <axiomcas@gmail.com>=0A=
Sent: Saturday, December 22, 2018 3:41 PM=0A=
To: axiom-dev=0A=
Subject: [Axiom-developer] PLOS Rules for documenting scientific software=
=0A=
=0A=
https://urldefense.proofpoint.com/v2/url?u=3Dhttps-3A__journals.plos.org_pl=
oscompbiol_article-3Fid-3D10.1371_journal.pcbi.1006561&d=3DDwICAg&c=3D4Nmam=
NZG3KTnUCoC6InoLJ6KV1tbVKrkZXHRwtIMGmo&r=3DqW9SUYRDo6sWEVPpx7wwWYZ79PdSWMRx=
NZvTih0Bkxc&m=3DoC0x0vQV9f5FuUNVQBO_UwV-h73cC7IliZkhPlVwAlw&s=3D47yINWjh8sm=
zKAsgwzJnJsvhRj7LH22zTHA2D-1xPzA&e=3D=0A=
=0A=
1) Write comments as you code=0A=
2) Include examples and lots of them=0A=
3) Include a quickstart guide=0A=
4) Include a README file with basic information=0A=
5) Include a help command for command line interfaces=0A=
6) Version control your documentation=0A=
7) Fully document your application program interface=0A=
8) Use automated documentation tools=0A=
9) Write error messages that provide solutions or point to the documentatio=
n=0A=
10) Tell people how to cite your software=0A=
=0A=
_______________________________________________=0A=
Axiom-developer mailing list=0A=
Axiom-developer@nongnu.org=0A=
https://urldefense.proofpoint.com/v2/url?u=3Dhttps-3A__lists.nongnu.org_mai=
lman_listinfo_axiom-2Ddeveloper&d=3DDwICAg&c=3D4NmamNZG3KTnUCoC6InoLJ6KV1tb=
VKrkZXHRwtIMGmo&r=3DqW9SUYRDo6sWEVPpx7wwWYZ79PdSWMRxNZvTih0Bkxc&m=3DoC0x0vQ=
V9f5FuUNVQBO_UwV-h73cC7IliZkhPlVwAlw&s=3DGgpZ-fSxzeliAR6li7ywCwO46JNvaG84OV=
xPUx7mHKk&e=3D=0A=

\start
Date: Sun, 23 Dec 2018 17:39:01 -0500
From: Eugene Surowitz <surow@verizon.net>
To: axiom-developer@nongnu.org
Subject: Re: [Axiom-developer] QED Manifesto and Symbolic Algebra

Tim:

The notion of a "set of measure zero" could just
be hiding the fact that they just don't know what it is ;)

On to something less humorous:

I am about to up grade my primary system to a MAC device
with Windows 10 and Linux as alternate boots.
This is part of a project I've been contemplating
to try to develop a "dual" to AXIOM that would capture the
experience of a "developer" who tries to build a system
from scratch.  "Build" means taking the algebra code
and compiling each component, one by one, until a full
AXIOM system has achieved.

Gene

On 12/22/2018 5:17 PM, Tim Daly wrote:
> 9. Too little care for rigor. It is notoriously easy to find "bugs" in
> algorithms for symbolic
> computation. To make matters worse, these errors are often regarded as
> of no significance
> by their authors, who plead that the result returned is true "except
> on a set of measure
> zero", without explicitly naming the set involved. The careful
> determination, nay, even
> proof, of precisely which conditions under which a result is true is
> essential for building
> the structure of mathematics so that one can depend on it. The QED
> system will support
> the development of symbolic algebra programs in which formal proofs of
> correctness of
> derivations are provided, along with the precise statement of
> conditions under which the
> results are true.

\start
Date: Sun, 23 Dec 2018 23:36:28 -0500
From: Tim Daly <axiomcas@gmail.com>
To: William Sit <wsit@ccny.cuny.edu>
Subject: Re: [Axiom-developer] PLOS Rules for documenting scientific software

I think one of the most important suggestions is the use of
a literature reference to the implemented algorithm. They
mention using DOI but any reference would do. I have tried
to figure out literature references to algorithms, some of
which decorate Axiom's current source tree. I wish there
were more.

Tim


On 12/22/18, William Sit <wsit@ccny.cuny.edu> wrote:
> Amen.
>
> William
>
> William Sit
> Professor Emeritus
> Department of Mathematics
> The City College of The City University of New York
> New York, NY 10031
> homepage: wsit.ccny.cuny.edu
>
> ________________________________________
> From: Axiom-developer
> <axiom-developer-bounces+wyscc=3Dsci.ccny.cuny.edu@nongnu.org> on behalf =
of
> Tim Daly <axiomcas@gmail.com>
> Sent: Saturday, December 22, 2018 3:41 PM
> To: axiom-dev
> Subject: [Axiom-developer] PLOS Rules for documenting scientific software
>
> https://urldefense.proofpoint.com/v2/url?u=3Dhttps-3A__journals.plos.org_=
ploscompbiol_article-3Fid-3D10.1371_journal.pcbi.1006561&d=3DDwICAg&c=3D4Nm=
amNZG3KTnUCoC6InoLJ6KV1tbVKrkZXHRwtIMGmo&r=3DqW9SUYRDo6sWEVPpx7wwWYZ79PdSWM=
RxNZvTih0Bkxc&m=3DoC0x0vQV9f5FuUNVQBO_UwV-h73cC7IliZkhPlVwAlw&s=3D47yINWjh8=
smzKAsgwzJnJsvhRj7LH22zTHA2D-1xPzA&e=3D
>
> 1) Write comments as you code
> 2) Include examples and lots of them
> 3) Include a quickstart guide
> 4) Include a README file with basic information
> 5) Include a help command for command line interfaces
> 6) Version control your documentation
> 7) Fully document your application program interface
> 8) Use automated documentation tools
> 9) Write error messages that provide solutions or point to the documentat=
ion
> 10) Tell people how to cite your software
>
> _______________________________________________
> Axiom-developer mailing list
> Axiom-developer@nongnu.org
> https://urldefense.proofpoint.com/v2/url?u=3Dhttps-3A__lists.nongnu.org_m=
ailman_listinfo_axiom-2Ddeveloper&d=3DDwICAg&c=3D4NmamNZG3KTnUCoC6InoLJ6KV1=
tbVKrkZXHRwtIMGmo&r=3DqW9SUYRDo6sWEVPpx7wwWYZ79PdSWMRxNZvTih0Bkxc&m=3DoC0x0=
vQV9f5FuUNVQBO_UwV-h73cC7IliZkhPlVwAlw&s=3DGgpZ-fSxzeliAR6li7ywCwO46JNvaG84=
OVxPUx7mHKk&e=3D
>

\start
Date: Sun, 23 Dec 2018 23:44:59 -0500
From: Tim Daly <axiomcas@gmail.com>
To: surow@verizon.net
Subject: Re: [Axiom-developer] QED Manifesto and Symbolic Algebra

I am rebuilding the Axiom compiler to support the algorihmic
proof technology.  It is a difficult problem and I still have much
to learn. However, I think that we need to connect the "proof"
side of computational mathematics with computer algebra
computational mathematics. After nearly 3 years taking courses
at CMU I think I see how it will succeed.

Whether *I* am capable of doing it is still an open question :-)

Tim

On 12/23/18, Eugene Surowitz <surow@verizon.net> wrote:
>
> Tim:
>
> The notion of a "set of measure zero" could just
> be hiding the fact that they just don't know what it is ;)
>
> On to something less humorous:
>
> I am about to up grade my primary system to a MAC device
> with Windows 10 and Linux as alternate boots.
> This is part of a project I've been contemplating
> to try to develop a "dual" to AXIOM that would capture the
> experience of a "developer" who tries to build a system
> from scratch.  "Build" means taking the algebra code
> and compiling each component, one by one, until a full
> AXIOM system has achieved.
>
> Gene
>
>
>
> On 12/22/2018 5:17 PM, Tim Daly wrote:
>> 9. Too little care for rigor. It is notoriously easy to find "bugs" in
>> algorithms for symbolic
>> computation. To make matters worse, these errors are often regarded as
>> of no significance
>> by their authors, who plead that the result returned is true "except
>> on a set of measure
>> zero", without explicitly naming the set involved. The careful
>> determination, nay, even
>> proof, of precisely which conditions under which a result is true is
>> essential for building
>> the structure of mathematics so that one can depend on it. The QED
>> system will support
>> the development of symbolic algebra programs in which formal proofs of
>> correctness of
>> derivations are provided, along with the precise statement of
>> conditions under which the
>> results are true.
>>
\documentclass{book}
%\newcommand{\VolumeName}{Volume 2: Axiom Users Guide}
%\input{bookheader.tex}
\pagenumbering{arabic}
\mainmatter
\setcounter{chapter}{0} % Chapter 1

\usepackage{makeidx}
\makeindex
\begin{document}




\end{verbatim}
\eject
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\cleardoublepage
%\phantomsection
\addcontentsline{toc}{chapter}{Bibliography}
\bibliographystyle{axiom}
\bibliography{axiom}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\cleardoublepage
%\phantomsection
\addcontentsline{toc}{chapter}{Index}
\printindex
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\end{document}
