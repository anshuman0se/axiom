\documentclass{book}
%\newcommand{\VolumeName}{Volume 2: Axiom Users Guide}
%\input{bookheader.tex}
\pagenumbering{arabic}
\mainmatter
\setcounter{chapter}{0} % Chapter 1

\usepackage{makeidx}
\makeindex
\begin{document}
\begin{verbatim}
\start
Date: Tue, 01 Jul 2014 00:29:08 -0400
From: Camm Maguire <camm@maguirefamily.org>
To: daly@axiom-developer.org
Subject: Re: [Axiom-developer] Hash problems

Greetings!  These are what I have found -- light search only:

|initializeSetVariables|
|displaySetOptionInformation|
|displaySetVariableSettings|
|set1|

Take care,

daly@axiom-developer.org writes:

> Camm,
>
> What function in Axiom relies on this? I will fix it. 
>
> Tim
>
>
>
>

-- 
Camm Maguire			     		    camm@maguirefamily.org

\start
Date: Tue, 01 Jul 2014 08:04:13 -0400
From: Camm Maguire <camm@maguirefamily.org>
To: axiom-dev <axiom-developer@nongnu.org>
Subject: Re: [Axiom-developer] mac access

Greetings!  Please ignore this request -- access has surfaced!

Take care,

Camm Maguire <camm@maguirefamily.org> writes:

> Greetings!  Might anyone on this least be able to provide remote ssh
> access to an intel mac running 10.8?
>
> Take care,

-- 
Camm Maguire			     		    camm@maguirefamily.org

\start
Date: Tue,  1 Jul 2014 23:34:05 -0400 (EDT)
From: u1204 <daly@axiom-developer.org>
To: "Camm Maguire" <camm@maguirefamily.org>, gcl-devel@gnu.org
Subject: [Axiom-developer] console2.6.8

Camm, 

On my Mac (10.6.8) I did a build of a fresh checkout of
2.6.8. I uploaded the failing console to
http://daly.axiom-developer.org/console2.6.8
including the configure line.

Suggestions?

Tim

\start
Date: Tue,  1 Jul 2014 23:39:05 -0400 (EDT)
From: u1204 <daly@axiom-developer.org>
To: "Camm Maguire" <camm@maguirefamily.org>, gcl-devel@gnu.org
Subject: [Axiom-developer] gcl mac build failure

gcl 2.6.9 fails with the same error. -- Tim

\start
Date: Tue, 1 Jul 2014 23:37:18 -0500
From: daly@axiom-developer.org
To: "Camm Maguire" <camm@maguirefamily.org>, gcl-devel@gnu.org
Subject: [Axiom-developer] gcl 2.6.10 builds ok

Camm,

2.6.10 builds. I will try to upgrade Axiom to 2.6.10

Tim

\start
Date: Wed, 2 Jul 2014 06:31:37 -0500
From: daly@axiom-developer.org
To: "Camm Maguire" <camm@maguirefamily.org>, gcl-devel@gnu.org
Subject: [Axiom-developer] stream_at_end EOF diff -Naur patch

Camm,

Axiom has a patch we developed for gcl-2.6.8pre7

The problem is that read-char-no-hang was changed to no longer
return EOF. 

Axiom reads from sLAterminal_ioA in order to talk to the new 
browser over a socket. Since read-char-no-hang no longer returns
EOF we have no way to know when the browser is finished talking.
This causes AXSERV to hang waiting for more input which never comes.
This causes the browser to hang waiting for a response.

The patch we developed for gcl-2.6.8pre7 reads:

--- read.d	2012-01-04 14:42:07.000000000 -0500
+++ read.d.tpd	2012-04-07 20:15:32.489298931 -0400
@@ -2292,7 +2292,7 @@
 	else if (strm == Ct)
 		strm = symbol_value(sLAterminal_ioA);
 	check_type_stream(&strm);
-	if (stream_at_end(strm)) {
+	if (!listen_stream(strm)) {
 		if (eof_errorp == Cnil)
 			@(return eof_value)
 		else

Is this patch reasonable for upstream?

Tim

\start
Date: Wed, 2 Jul 2014 13:07:22 -0500
From: daly@axiom-developer.org
To: "Camm Maguire" <camm@maguirefamily.org>, gcl-devel@gnu.org
Subject: [Axiom-developer] GCL 2.6.10 and Axiom on a MAC

Camm,

GCL 2.6.10 builds on MAC OS X 10.6.8 (my platform)

I moved Axiom to GCL 2.6.10. 

The MAC version of Axiom fails to build but the failure occurs
trying to build the final interpreter image. The lisp image builds.

Essentially the process is to load compiled binaries of lisp code
into a clean lisp image and then save the image using save-system.

Loading the binaries fails with 
Unrecoverable error: invocation history stack overflow

The complete console log is at
http://daly.axiom-developer.org/console2.6.10.txt

The failure seems to be related to cfuns.o

There are two patches related to this
http://daly.axiom-developer.org/gcl-2.6.10.h.linux.defs.patch
http://daly.axiom-developer.org/gcl-2.6.10.unixport.makefile.patch

I have no idea where to start to debug this.

Tim

\start
Date: Wed, 2 Jul 2014 13:11:58 -0500
From: daly@axiom-developer.org
To: "Camm Maguire" <camm@maguirefamily.org>, gcl-devel@gnu.org
Subject: [Axiom-developer] GCL 2.6.10 and Axiom on Ubuntu

Camm,

GCL 2.6.10 builds on Ubuntu.

I moved Axiom to GCL 2.6.10. 

The Ubuntu version builds cleanly and almost works perfectly.

I get errors of the form
   T is not of type List
in some of my regression test files. I will try to track that down.

Tim

\start
Date: Thu, 3 Jul 2014 09:17:55 -0500
From: daly@axiom-developer.org
To: axiom-developer@nongnu.org
Subject: [Axiom-developer] Proving Axiom correct

Leslie Lamport has a model-checking language TLA+ which looks like
it might be useful for proving the interpreter correct. A free online
book is available at:
http://research.microsoft.com/en-us/um/people/lamport/tla/book-02-08-08.pdf

Tim 
"If it's free, it's for me"

\start
Date: Thu, 3 Jul 2014 15:19:05 -0500
From: daly@axiom-developer.org
To: "Camm Maguire" <camm@maguirefamily.org>, gcl-devel@gnu.org
Subject: [Axiom-developer] GCL 2.6.10 bug? -- fixed

Apparently the behavior of assoc changed from 2.6.8 to 2.6.10.
I changed Axiom to follow the new behavior.

Tim Daly

\start
Date: Sun, 6 Jul 2014 16:37:20 +0200
From: Raoul <raoulb@bluewin.ch>
To: axiom-developer@nongnu.org
Subject: Re: [Axiom-developer] libgmp not found

Hi,


With latest Debian and Axiom versions
this seems to be fixed now.


-- Raoul

\start
Date: Sun, 6 Jul 2014 09:48:35 -0500
From: daly@axiom-developer.org
To: Raoul <raoulb@bluewin.ch>
Subject: Re: [Axiom-developer] libgmp not found

> With latest Debian and Axiom versions this seems to be fixed now.

Well that's good to know. I couldn't reproduce your failure.

Tim 

\start
Date: Sun, 6 Jul 2014 17:09:40 +0200
From: Raoul <raoulb@bluewin.ch>
To: axiom-developer <axiom-developer@nongnu.org>
Subject: [Axiom-developer] Failure when building interpreter files

Hi,


When compiling Axiom git HEAD on an up-to-date
Debian sid, I get the following errors:


src/interp BUILDING INTERPRETER FILES

[...]

Finished loading /scratch/src/Axiom/obj/debian/interp/bookvol9.fn
Loading /scratch/src/Axiom/obj/debian/interp/br-con.fn

 Warn postSignature redefined in #p/scratch/src/Axiom/obj/debian/interp/br-=
con.fn. Originally in #p/scratch/src/Axiom/obj/debian/interp/bookvol9.fn.
 Warn compDefineCapsuleFunction redefined in #p/scratch/src/Axiom/obj/debia=
n/interp/br-con.fn. Originally in #p/scratch/src/Axiom/obj/debian/interp/bo=
okvol9.fn.
Finished loading /scratch/src/Axiom/obj/debian/interp/br-con.fn
Loading /scratch/src/Axiom/obj/debian/interp/buildom.fn

Unrecoverable error: invocation history stack overflow.
Aborted
Makefile:180: recipe for target '/scratch/src/Axiom/obj/debian/bin/depsys' =
failed
make[3]: *** [/scratch/src/Axiom/obj/debian/bin/depsys] Error 134
make[3]: Leaving directory '/scratch/src/Axiom/src/interp'
Makefile:208: recipe for target 'interpdir' failed
make[2]: *** [interpdir] Error 2
make[2]: Leaving directory '/scratch/src/Axiom/src'
Makefile.debian:149: recipe for target 'srcdir' failed
make[1]: *** [srcdir] Error 2
make[1]: Leaving directory '/scratch/src/Axiom'
Makefile:129: recipe for target 'all' failed

[...]

lsp BUILDING GCL COMMON LISP
Makefile.debian:166: recipe for target 'lspdir' failed
make[1]: *** [lspdir] Error 2
make[1]: Leaving directory '/scratch/src/Axiom'
Makefile:129: recipe for target 'all' failed
make: *** [all] Error 2


-- Raoul

\start
Date: Sun, 6 Jul 2014 17:11:21 +0200
From: Raoul <raoulb@bluewin.ch>
To: axiom-developer@nongnu.org
Subject: Re: [Axiom-developer] libgmp not found

Dear Tim,


> > With latest Debian and Axiom versions this seems to be fixed now.
>=20
> Well that's good to know. I couldn't reproduce your failure.

Ok. Thanks anyway for looking into the problem.


-- Raoul

\start
Date: Sun, 6 Jul 2014 11:51:36 -0500
From: daly@axiom-developer.org
To: Raoul <raoulb@bluewin.ch>
Subject: Re: [Axiom-developer] Failure when building interpreter files

>> Where did you get your iso image?
>
>Well, it is not a new and fresh install but a
>up-to-date Debian sid. You can use any Debian
>image [1,2], for example a "testing" [3] image
>and the upgrade to "unstable/sid" with "apt".
>(Make sure to load a minimal installer and not
>the full software archive.)

Ok. I'll put a new debian iso and do a build.

>> I'll build a virtual machine and see if I can make it fail.
>
>It might be some odd situation on my machine.
>I started from git HEAD with git status showing
>nothing new or modified. And I removed all mnt/*
>before retrying. After the compilation, I have
>some more files lying around:
>
>git status
>On branch master
>Your branch is up-to-date with 'origin/master'.
>
>Untracked files:
>  (use "git add <file>..." to include in what will be committed)
>
>	Makefile.debian
>	Makefile.dvi
>	Makefile.pdf
>  ....

Yes, I am moving the system away from noweb and some of these
files are side-effects of the move that I forgot to add to the
clean section. They do not matter and will be overwritten.

>Oh, and my GCL is:
>
>GCL (GNU Common Lisp)  2.6.10 CLtL1    Jul  6 2014 00:07:47

Axiom does not use the installed GCL. It has its own copy in a
tar-gzip file in the zips directory. 

>Hope this helps. Again, please do not waste time here.

All my free time is spent working on Axiom.
I don't consider it a waste of my time.
I do hate it when the one of the failures gets off my desk
and begins to affect other people. Poor form, that.


>Obviously compiling Axiom must succeed somehow because
>very new Axiom Debian packages appeared just a few days
>ago [4,5]. I do not know from which version or git commit
>of the Axiom source code they were build.

News to me. I'll look once I build the debian virtual machine.

Tim

\start
Date: Mon, 07 Jul 2014 15:51:44 -0400
From: Eugene Surowitz <surow@attglobal.net>
To: fricas-devel@googlegroups.com,
	Axiom-Developer <axiom-developer@nongnu.org>,
	Gabriel Dos Reis <open-axiom-devel@lists.sf.net>
Subject: Re: [Axiom-developer] [fricas-devel] overlabel

This looks like an attempt, together with 'over' and 'overbar'
to implement the notion putting a symbol over another symbol
between them -- much in the manner of a fraction.

See the TeXbook p.70 and The Joy of TeX p.146 (in my copies).

Just last week I ran into issues with what Joy says should happen.

The above is purely speculation on my part and could very easily
hopelessly wrong.  However my impression is that Axiom's were
in active development around the time that those were being
written and developed.

You may be looking at something very half baked.

Cheers, Gene

On 7/7/2014 1:58 PM, Ralf Hemmecke wrote:
> Does someone know a good use case for "overlabel"?
>
> http://fricas.github.io/api/OutputForm.html#index-53
>
> overlabel: (%, %) -> %
>      overlabel(x,f) creates the form f with "x overbar=E2=80=9D ove=
r the top.
>
> It is used in tree.spad, but I cannot make sense of it.
>
> Ralf
>

\start
Date: Mon, 07 Jul 2014 16:43:08 -0400
From: Tim Daly <daly@axiom-developer.org>
To: raoulb@bluewin.ch, axiom-developer@nongnu.org
Subject: Re: [Axiom-developer] Failure when building interpreter files

>>> Where did you get your iso image?
>>
>>Well, it is not a new and fresh install but a
>>up-to-date Debian sid. You can use any Debian
>>image [1,2], for example a "testing" [3] image
>>and the upgrade to "unstable/sid" with "apt".
>>(Make sure to load a minimal installer and not
>>the full software archive.)
>
>Ok. I'll put a new debian iso and do a build.
>

I downloaded the latest debian.
I built a virtual machine image.
I did apt-get on the required packages from axiom's
download page for debian builds.
I did a git clone of the latest Axiom sources.

Axiom builds cleanly and runs.

Tim

\start
Date: Mon, 7 Jul 2014 15:50:25 -0500
From: daly@axiom-developer.org
To: "Ralf Hemmecke" <ralf@hemmecke.de>
Subject: [Axiom-developer] overlabel

Ralf,

This was probably a latex macro for
\[ a \mathrel{\mathop{\rightleftarrows}^{\mathrm{over}}_{\mathrm{under}}} b\]

which uses the amssymb package to create


            over
      a  ---------> b
         <--------
           under

Tim

\start
Date: Mon, 07 Jul 2014 22:59:31 +0200
From: Ralf Hemmecke <ralf@hemmecke.org>
To: daly@axiom-developer.org
Subject: Re: [Axiom-developer] overlabel

On 07/07/2014 10:50 PM, daly@axiom-developer.org wrote:
> Ralf,
> 
> This was probably a latex macro for
> \[ a \mathrel{\mathop{\rightleftarrows}^{\mathrm{over}}_{\mathrm{under}}} b\]
> 
> which uses the amssymb package to create
> 
> 
>             over
>       a  ---------> b
>          <--------
>            under
> 
> Tim

What confuses me is what is currently produced.
The TeX output is pretty useless. The algebra output rather confuses me.
without the | it would perhaps be like what Tim says.

Anyhow, it looks like there is need for a better specification.
I'm not going to support this in my new TexFormat.

Ralf

(1) -> O==>OutputForm
(3) -> )set output tex on
(3) -> overlabel(a::O, b::O)$O

        a
        |
   (3)  b
$$
OVERLABEL
\left(
{a, \: b}
\right)
\leqno(3)
$$

\start
Date: Mon, 07 Jul 2014 17:29:01 -0400
From: Eugene Surowitz <surow@attglobal.net>
To: fricas-devel@googlegroups.com,
	Axiom-Developer <axiom-developer@nongnu.org>,
	Gabriel Dos Reis <open-axiom-devel@lists.sf.net>
Subject: Re: [Axiom-developer] [fricas-devel] Re: overlabel

Actually it sort of looks just plain wrong.

Lamport LaTex says \: provides medium spacing rather
than whatever the default would be;

Spivak Joy p.220 talks about spacing similarly but
he seems flub it in line (12) of his example versus
his discussion below it -- missing a colon in the TeX.

So the notion of "something over something else" seems
to have gotten lost.  And in the interpreter's output
\: looks appropriately used, for spacing.

Gene

On 7/7/2014 4:59 PM, Ralf Hemmecke wrote:
> On 07/07/2014 10:50 PM, daly@axiom-developer.org wrote:
>> Ralf,
>>
>> This was probably a latex macro for
>> \[ a \mathrel{\mathop{\rightleftarrows}^{\mathrm{over}}_{\mathrm{under}}} b\]
>>
>> which uses the amssymb package to create
>>
>>
>>              over
>>        a  ---------> b
>>           <--------
>>             under
>>
>> Tim
>
> What confuses me is what is currently produced.
> The TeX output is pretty useless. The algebra output rather confuses me.
> without the | it would perhaps be like what Tim says.
>
> Anyhow, it looks like there is need for a better specification.
> I'm not going to support this in my new TexFormat.
>
> Ralf
>
> (1) -> O==>OutputForm
> (3) -> )set output tex on
> (3) -> overlabel(a::O, b::O)$O
>
>          a
>          |
>     (3)  b
> $$
> OVERLABEL
> \left(
> {a, \: b}
> \right)
> \leqno(3)
> $$
>

\start
Date: Mon, 7 Jul 2014 16:33:10 -0500
From: daly@axiom-developer.org
To: Ralf Hemmecke <ralf@hemmecke.org>
Subject: Re: [Axiom-developer] overlabel

You mean to tell me that the source code doesn't explain why 
someone wanted overlabel? Not even an example? That is, as the
saying goes,  "inconceivable!" :-)

Tim

\start
Date: Mon, 07 Jul 2014 23:42:53 +0200
From: Ralf Hemmecke <ralf@hemmecke.org>
To: fricas-devel@googlegroups.com, axiom-dev <axiom-developer@nongnu.org>
Subject: Re: [Axiom-developer] [fricas-devel] Re: overlabel

On 07/07/2014 11:29 PM, Eugene Surowitz wrote:
> Actually it sort of looks just plain wrong.

I can neither agree nor disagree when there is no specification. ;-)

> And in the interpreter's output
> \: looks appropriately used, for spacing.

If you mean the use of \: in

>> $$
>> OVERLABEL
>> \left(
>> {a, \: b}
>> \right)
>> \leqno(3)
>> $$

then this is actually boring and does not come from overlabel but rather
from the handling of the comma. formatNary puts ",\:" instead of a
simple comma. That's orthogonal to overlabel.

Ralf

\start
Date: Thu, 10 Jul 2014 21:46:44 -0500
From: daly@axiom-developer.org
To: Camm Maguire <camm@maguirefamily.org>
Subject: [Axiom-developer] axiom mac build instructions

Camm,

The AXIOM shell variable tells Axiom what system to build.
So if you set the shell variable to:
   export AXIOM=`pwd`/mnt/ubuntu
                          ^^^^^^
it will scan Makefile.pamphlet and extract a chunk called
   \begin{chunk}{Makefile.ubuntu}
                          ^^^^^^
into a file called Makefile.MACOSX, then it does
   make -f Makefile.ubuntu

For the MAC it would be MACOSX as in
   export AXIOM=`pwd`/mnt/MACOSX
to extract the chunk
   \begin{chunk}{Makefile.MACOSX}
into a file called Makefile.MACOSX, then it does
   make -f Makefile.MACOSX

Tim

\start
Date: Thu, 10 Jul 2014 21:57:08 -0500
From: daly@axiom-developer.org
To: Camm Maguire <camm@maguirefamily.org>
Subject: [Axiom-developer] axiom mac build instructions

Camm,

If A is a list '(x y z) and I do (get A 'b), assoc used to return NIL.

Now (get A 'b) throws "Error: b is not of type LIST"

I grant you that (get A 'b) on the list A is meaningless 
but that's what the legacy Axiom code does.

Tim

\start
Date: Fri, 11 Jul 2014 08:12:38 -0500
From: daly@axiom-developer.org
To: Camm Maguire <camm@maguirefamily.org>
Subject: [Axiom-developer] mail bouncing

Camm,

Hopefully you're reading the axiom-developer mailing list.
Both the address camm@maguirefamily.org and gcl-devel@nongnu.org
are bouncing my emails due to 


The original message was received at Thu, 10 Jul 2014 21:57:08 -0500
from localhost.localdomain [127.0.0.1]

   ----- The following addresses had permanent fatal errors -----
<gcl-devel@nongnu.org>
    (reason: 550 Previous (cached) callout verification failure)

   ----- Transcript of session follows -----
... while talking to eggs.gnu.org.:
>>> DATA
<<< 550 Previous (cached) callout verification failure
550 5.1.1 <gcl-devel@nongnu.org>... User unknown

--s6B2vA34009723.1405047430/axiom-developer.org
Content-Type: message/delivery-status

Reporting-MTA: dns; axiom-developer.org
Received-From-MTA: DNS; localhost.localdomain
Arrival-Date: Thu, 10 Jul 2014 21:57:08 -0500

Tim

\start
Date: Fri, 11 Jul 2014 11:38:27 -0400
From: Camm Maguire <camm@maguirefamily.org>
To: daly@axiom-developer.org
Subject: Re: [Axiom-developer] mail bouncing

Hi Tim!  Its gcl-devel@gnu.org.  GCL is officially part of the GNU
project. 

Take care,

daly@axiom-developer.org writes:

> Camm,
>
> Hopefully you're reading the axiom-developer mailing list.
> Both the address camm@maguirefamily.org and gcl-devel@nongnu.org
> are bouncing my emails due to 
>
>
> The original message was received at Thu, 10 Jul 2014 21:57:08 -0500
> from localhost.localdomain [127.0.0.1]
>
>    ----- The following addresses had permanent fatal errors -----
> <gcl-devel@nongnu.org>
>     (reason: 550 Previous (cached) callout verification failure)
>
>    ----- Transcript of session follows -----
> ... while talking to eggs.gnu.org.:
>>>> DATA
> <<< 550 Previous (cached) callout verification failure
> 550 5.1.1 <gcl-devel@nongnu.org>... User unknown
>
> --s6B2vA34009723.1405047430/axiom-developer.org
> Content-Type: message/delivery-status
>
> Reporting-MTA: dns; axiom-developer.org
> Received-From-MTA: DNS; localhost.localdomain
> Arrival-Date: Thu, 10 Jul 2014 21:57:08 -0500
>
> Tim
>

-- 
Camm Maguire			     		    camm@maguirefamily.org

\start
Date: Fri, 11 Jul 2014 12:27:46 -0400
From: Camm Maguire <camm@maguirefamily.org>
To: Raoul <raoulb@bluewin.ch>
Subject: Re: [Axiom-developer] Failure when building interpreter files

Greetings!  There in a gcc-4.9 instability on 32bit intel in sid
currently.  I'm trying to track it down now.

Take care,

Raoul <raoulb@bluewin.ch> writes:

> Hi,
>
>
> When compiling Axiom git HEAD on an up-to-date
> Debian sid, I get the following errors:
>
>
> =====================================
> src/interp BUILDING INTERPRETER FILES
> =====================================
>
> [...]
>
> Finished loading /scratch/src/Axiom/obj/debian/interp/bookvol9.fn
> Loading /scratch/src/Axiom/obj/debian/interp/br-con.fn
>
>  Warn postSignature redefined in #p/scratch/src/Axiom/obj/debian/interp/br-con.fn. Originally in #p/scratch/src/Axiom/obj/debian/interp/bookvol9.fn.
>  Warn compDefineCapsuleFunction redefined in #p/scratch/src/Axiom/obj/debian/interp/br-con.fn. Originally in #p/scratch/src/Axiom/obj/debian/interp/bookvol9.fn.
> Finished loading /scratch/src/Axiom/obj/debian/interp/br-con.fn
> Loading /scratch/src/Axiom/obj/debian/interp/buildom.fn
>
> Unrecoverable error: invocation history stack overflow.
> Aborted
> Makefile:180: recipe for target '/scratch/src/Axiom/obj/debian/bin/depsys' failed
> make[3]: *** [/scratch/src/Axiom/obj/debian/bin/depsys] Error 134
> make[3]: Leaving directory '/scratch/src/Axiom/src/interp'
> Makefile:208: recipe for target 'interpdir' failed
> make[2]: *** [interpdir] Error 2
> make[2]: Leaving directory '/scratch/src/Axiom/src'
> Makefile.debian:149: recipe for target 'srcdir' failed
> make[1]: *** [srcdir] Error 2
> make[1]: Leaving directory '/scratch/src/Axiom'
> Makefile:129: recipe for target 'all' failed
>
> [...]
>
> =====================================
> lsp BUILDING GCL COMMON LISP
> =====================================
> Makefile.debian:166: recipe for target 'lspdir' failed
> make[1]: *** [lspdir] Error 2
> make[1]: Leaving directory '/scratch/src/Axiom'
> Makefile:129: recipe for target 'all' failed
> make: *** [all] Error 2
>
>
> -- Raoul
> _______________________________________________
> Axiom-developer mailing list
> Axiom-developer@nongnu.org
> https://lists.nongnu.org/mailman/listinfo/axiom-developer

-- 
Camm Maguire			     		    camm@maguirefamily.org

\start
Date: Fri, 11 Jul 2014 15:08:19 -0400
From: Camm Maguire <camm@maguirefamily.org>
To: daly@axiom-developer.org,gcl-devel@gnu.org,axiom-developer@nongnu.org
Subject: [Axiom-developer] 2.6.10

Greetings!

vmlisp.lisp:

(defun getl (sym key )
  (cond ((consp sym) (cdr (assq key sym)))
        ((symbolp sym) (get sym key))))

sym in this function is bound to ordinary lists (i.e. non-alists), such
as (ans 1).  The assq would fail normally in GCL 2.6.8 in which there
are no immediate fixnums, i.e. all fixnums are boxed.  Taking the 'car'
on such a fixnum will return garbage, but not segfault.  In 2.6.10, most
fixnums are represented by bit patterns outside the heap to lower
allocation costs.  Here the assq will segfault instead of fail.  May I
suggest one of the following:

(defun getl (sym key)
  (cond ((consp sym) ;safe
         (cdr (member-if (lambda (x) (when (consp x) (eq key (car x)))) sym)))
        ((symbolp sym) (get sym key))))

(defun getl (sym key )
  (cond ((consp sym) ;assumes an alist can be detected by the first element
         (when (consp (car sym)) (cdr (assq key sym))))
        ((symbolp sym) (get sym key))))

Take care,
-- 
Camm Maguire			     		    camm@maguirefamily.org

\start
Date: Fri, 11 Jul 2014 15:11:28 -0400
From: Camm Maguire <camm@maguirefamily.org>
To: daly@axiom-developer.org,gcl-devel@gnu.org,axiom-developer@nongnu.org
Subject: [Axiom-developer] 2.6.10

Greetings!  Correction, that should have read:

(defun getl (sym key)
  (cond ((consp sym) ;safe
         (cdar (member-if (lambda (x) (when (consp x) (eq key (car x)))) sym)))
        ((symbolp sym) (get sym key))))

Take care,
-- 
Camm Maguire			     		    camm@maguirefamily.org

\start
Date: Sun, 13 Jul 2014 20:23:31 -0400
From: u1204 <daly@axiom-developer.org>
To: Camm Maguire <camm@maguirefamily.org>
Subject: Re: [Axiom-developer] 2.6.10

Camm,

Thanks for your suggestion on GETL. The code has been patched.

Tim

\start
Date: Mon, 14 Jul 2014 18:09:31 -0500
From: daly@axiom-developer.org
To: axiom-developer@nongnu.org, "John Kitchin" <jkitchin@andrew.cmu.edu>
Subject: [Axiom-developer] cl-notebook, common lisp, and literate programming

This is interesting:
cl-notebook, common lisp, and literate programming
http://vimeo.com/97623064

Tim

\start
Date: Wed, 16 Jul 2014 00:03:15 +0530
From: Sarvagnan <sarvagnan@gmail.com>
To: axiom-dev <axiom-developer@nongnu.org>
Subject: [Axiom-developer] GCL version on Axiom

Hey,

I've downloaded and tried to make the most recent Axiom source from the
github repo as of 16/07/2014. The lisp build failed. I checked and found
that it was building GCL version 2.6.8pre7 and not 2.6.10. I changed the
GCLVERSION variable in the main Makefile.pamphlet to gcl.2.6.10 but the
lisp build still fails. The platform used is MACOSX. Is there anything more
that should be changed before build?

Thanks!
Sarva

--001a11c2918295515304fe3fa594
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Hey,<div><br></div><div>I&#39;ve downloaded and tried to m=
ake the most recent Axiom source from the github repo as of 16/07/2014. The=
 lisp build failed. I checked and found that it was building GCL version 2.=
6.8pre7 and not 2.6.10. I changed the GCLVERSION variable in the main Makef=
ile.pamphlet to gcl.2.6.10 but the lisp build still fails. The platform use=
d is MACOSX. Is there anything more that should be changed before build?</d=
iv>

<div><br></div><div>Thanks!</div><div>Sarva</div></div>

--001a11c2918295515304fe3fa594--

\start
Date: Tue, 15 Jul 2014 14:45:33 -0500
From: daly@axiom-developer.org
To: Sarvagnan <sarvagnan@gmail.com>
Subject: Re: [Axiom-developer] GCL version on Axiom

Sarva, 

GCL-2.6.10 compiles but fails to build Axiom on MACOSX.
This issue is being worked on. I will announce a fix to the 
axiom-developer mailing list when one is available.

Tim

>I've downloaded and tried to make the most recent Axiom source from
>the github repo as of 16/07/2014. The lisp build failed. I checked and
>found that it was building GCL version 2.6.8pre7 and not 2.6.10. I
>changed the GCLVERSION variable in the main Makefile.pamphlet to
>gcl.2.6.10 but the lisp build still fails. The platform used is
>MACOSX. Is there anything more that should be changed before build?

\start
From: Camm Maguire <camm@maguirefamily.org>
To: daly@axiom-developer.org,axiom-developer@nongnu.org
Date: Wed, 16 Jul 2014 15:24:58 -0400
Subject: [Axiom-developer] MACOSX

Greetings!  I get through the mac build up to this non-gcl failure:

viewman.c: In function 'rmViewMgr':
viewman.c:546: warning: implicit declaration of function 'close'
viewman.c: In function 'goodbye':
viewman.c:561: warning: implicit declaration of function 'kill'
viewman.c: In function 'funView2D':
viewman.c:581: warning: implicit declaration of function 'write'
viewman.c: In function 'forkView2D':
viewman.c:676: warning: implicit declaration of function 'pipe'
viewman.c:681: warning: implicit declaration of function 'fork'
viewman.c:695: warning: implicit declaration of function 'dup2'
viewman.c:706: warning: implicit declaration of function 'execl'
viewman.c:706: warning: incompatible implicit declaration of built-in function 'execl'
viewman.c:755: warning: implicit declaration of function 'sleep'
viewman.c: In function 'forkView3D':
viewman.c:1021: warning: incompatible implicit declaration of built-in function 'execl'
viewman.c: In function 'readViewport':
viewman.c:1302: warning: implicit declaration of function 'read'
3 making /Users/camm/axiom/mnt/MACOSX/lib/view2d from /Users/camm/axiom/books/bookvol8.pamphlet
view2d.c: In function 'PSCreateFile':
view2d.c:994: warning: implicit declaration of function 'unlink'
view2d.c: In function 'makeControlPanel':
view2d.c:2789: warning: implicit declaration of function 'write'
view2d.c: In function 'mergeDatabases':
view2d.c:3008: warning: implicit declaration of function 'gethostname'
view2d.c: In function 'processEvents':
view2d.c:3680: error: expected '(' before '__darwin_fd_isset'
view2d.c: In function 'readViewman':
view2d.c:3747: warning: implicit declaration of function 'read'
view2d.c: In function 'spadAction':
view2d.c:3757: warning: implicit declaration of function 'close'
view2d.c: In function 'makeViewport':
view2d.c:4406: warning: implicit declaration of function 'sleep'
i686-apple-darwin10-gcc-4.2.1: view2d.o: No such file or directory
make[3]: *** [/Users/camm/axiom/mnt/MACOSX/lib/view2d] Error 1
make[2]: *** [graphdir] Error 2
make[1]: *** [srcdir] Error 2
make: *** [all] Error 2
megaera:axiom camm$ 

This is with git tag cygwin at the moment.  I will verify 2_6_10
afterwards.

Separately, I usually run with TESTSET=regresstests.  A simple 'make'
with no arguments seems to be taking forever on x86 on richtrig800-899,
some huge bignum calculation perhaps.  trace is spooling gc call
notifications.  How long should this test take?

Take care,
-- 
Camm Maguire			     		    camm@maguirefamily.org

\start
Date: Wed, 16 Jul 2014 15:26:13 -0400
From: Camm Maguire <camm@maguirefamily.org>
To: daly@axiom-developer.org,axiom-developer@nongnu.org
Subject: [Axiom-developer] solaris

Greetings!  Are solaris and or Windows (mingw and cygwin) targets of
interest?  If so, what AXIOM setting works here?

Take care,
-- 
Camm Maguire			     		    camm@maguirefamily.org

\start
Date: Wed, 16 Jul 2014 16:25:30 -0400
From: Camm Maguire <camm@maguirefamily.org>
To: Ansgar Burchardt <ansgar@debian.org>,daly@axiom-developer.org,
	axiom-developer@nongnu.org
Subject: Re: [Axiom-developer] Bug#752221: [axiom] Some sources are not
	included in your package
Cc: Bastien ROUCARIES <roucaries.bastien@gmail.com>, 752221@bugs.debian.org,
	control@bugs.debian.org, ftpmaster@debian.org

severity 752221 important
thanks

Greetings!  And thank you again for all your work on Debian and free
software!


Ansgar Burchardt <ansgar@debian.org> writes:

> Control: reopen -1
>
> Camm Maguire <camm@maguirefamily.org> writes:
>>>> The file alleged to be problematic:
>>>>
>>>> src/axiom-website/axiomgraph/js/arbor.js
>>>
>>> I respectfully disagree according to source it is minified from at least:
>>>
>>> *   etc.js
>>> *   kernel.js
>>> *  atoms.js
>>> *  system.js
>>> *  physics.js
>> Greetings!  Respectfully, comments /* etc.js */ are proof of no such
>> thing.
>
> Umm, the very comments that says which files it is generated from is
> proof that it is not a generated file?

Indeed, how do we know from the comments that the alleged output has not
been edited, making it the 'original source'?

I agree that the comments and the formatting are suggestive.  I think
from your use of the word 'might' below that we are in agreement here.

>
> Also please take a look at [1]. That might be the actual source for the
> line with "/* kernel.js */" (minus version and so on).
>
>   [1] <https://github.com/samizdatco/arbor/blob/master/src/kernel.js>
>

This makes things clearer -- thanks!  In general, to establish this
case, I think one needs either

1) the original sources together with the program that produces the file
in question, or
2) a claim by the original author that these files are simply machine
output from other files.

I've done some spot checking, and the correspondence appears close, but
not exact.  In any case, I'm including the mentioned sources in the next
axiom upload, as they are published under the free MIT license in any
case. 

> Note that the source version has whitespace, informative variable names
> and comments. These are all stripped by the minimization "compiler"
> (which translates Javascript into Javascript).

While I certainly share the goal of having source that is easily
readable by a human, I do wonder at the original claim that including
source in 'minimized' format somehow violates copy-left.  Where do we
get this idea?  I can assure you that lines of code I've contributed,
including assembler, look far more forbidding and less readable than
this javascript.  If we do not use the standard of 'compiling into the
executable' as the standard, whose human beauty standards are we going
to use?  What about C beautifiers, or even emacs auto-indent?

Take care,

>
> Ansgar
>
>
>
>

-- 
Camm Maguire			     		    camm@maguirefamily.org

\start
Date: Wed, 16 Jul 2014 16:38:30 -0400
From: Camm Maguire <camm@maguirefamily.org>
To: daly@axiom-developer.org,axiom-developer@nongnu.org
Subject: [Axiom-developer] regression tests

Greetings!

How much work is involved in cleaning this up?  I'm mostly interested if
gcl is responsible for any.

Take care,

int/input/arrows.regress:regression result FAILED 2 of 3 stanzas file arrows
int/input/bouquet.regress:regression result FAILED 2 of 4 stanzas file bouquet
int/input/cachedf.regress:regression result FAILED 1 of 8 stanzas file cachedf
int/input/clements.regress:regression result FAILED 1 of 6 stanzas file clements
int/input/dftrig.regress:regression result FAILED 328 of 672 stanzas file dftrig
int/input/divisor.regress:regression result FAILED 14 of 18 stanzas file divisor
int/input/dop.regress:regression result FAILED 6 of 127 stanzas file dop
int/input/e1.regress:regression result FAILED 4 of 7 stanzas file e1
int/input/ei.regress:regression result FAILED 16 of 20 stanzas file ei
int/input/elemnum.regress:regression result FAILED 21 of 50 stanzas file elemnum
int/input/en.regress:regression result FAILED 6 of 7 stanzas file en
int/input/fixed.regress:regression result FAILED 2 of 267 stanzas file fixed
int/input/float1.regress:regression result FAILED 1 of 37 stanzas file float1
int/input/fname.regress:regression result FAILED 1 of 9 stanzas file fname
int/input/fname1.regress:regression result FAILED 2 of 18 stanzas file fname1
int/input/gamma.regress:regression result FAILED 4 of 12 stanzas file gamma
int/input/grpthry.regress:regression result FAILED 7 of 68 stanzas file grpthry
int/input/guess.regress:regression result FAILED 72 of 102 stanzas file guess
int/input/ico.regress:regression result FAILED 10 of 65 stanzas file ico
int/input/mathml.regress:regression result FAILED 1 of 21 stanzas file mathml
int/input/mset.regress:regression result FAILED 5 of 17 stanzas file mset
int/input/mset2.regress:regression result FAILED 7 of 12 stanzas file mset2
int/input/newtonlisp.regress:regression result FAILED 2 of 14 stanzas file newtonlisp
int/input/numericgamma.regress:regression result FAILED 5 of 36 stanzas file numericgamma
int/input/paff.regress:regression result FAILED 20 of 26 stanzas file paff
int/input/paffexample.regress:regression result FAILED 14 of 20 stanzas file paffexample
int/input/sint.regress:regression result FAILED 2 of 11 stanzas file sint
int/input/sregset.regress:regression result FAILED 2 of 23 stanzas file sregset
int/input/stbl.regress:regression result FAILED 2 of 7 stanzas file stbl
int/input/strtbl.regress:regression result FAILED 1 of 3 stanzas file strtbl
int/input/test.regress:regression result FAILED 1 of 188 stanzas file test
int/input/tuplebug.regress:regression result FAILED 1 of 1 stanzas file tuplebug
int/input/unittest1.regress:regression result FAILED 2 of 96 stanzas file unittest1

-- 
Camm Maguire			     		    camm@maguirefamily.org

\start
Date: Wed, 16 Jul 2014 17:27:27 -0400
From: Camm Maguire <camm@maguirefamily.org>
To: control@bugs.debian.org,axiom-developer@nongnu.org,716442@bugs.debian.org
Subject: [Axiom-developer] [Mayhem] Bug report on axiom-graphics: view2d
 crashes with exit status 139

forwarded 716442 axiom-developer@nongnu.org
thanks

Package: axiom-graphics
Version: 20120501-2
Severity: normal
User: mayhem@forallsecure.com
Usertags: mayhem

view2d crashes with exit status 139. We confirmed the crash by
re-running it in a fresh debian unstable installation.

The attachment [1] contains a testcase (under ./crash) crashing the
program. It ensures that you can easily reproduce the bug. Additionally,
under ./crash_info/, we include more information about the crash such as
a core dump, the dmesg generated by the crash, and its output.

Regards,
The Mayhem Team (Alexandre Rebert, Thanassis Avgerinos, Sang Kil Cha, David Brumley, Manuel Egele)
Cylab, Carnegie Mellon University

[1] http://www.forallsecure.com/bug-reports/fd21763b1793a46ebf1d7f70b020f1b6da279ed4/full_report

-- System Information:
Debian Release: jessie/sid
  APT prefers unstable
  APT policy: (500, 'unstable')
Architecture: i386 (i686)

Kernel: Linux 3.9-1-686-pae (SMP w/1 CPU core)
Locale: LANG=C, LC_CTYPE=C (charmap=ANSI_X3.4-1968)
Shell: /bin/sh linked to /bin/dash

Versions of packages axiom-graphics depends on:
ii  axiom                20120501-2
ii  axiom-graphics-data  20120501-2
ii  libc6                2.17-6
ii  libx11-6             2:1.6.0-1
ii  libxpm4              1:3.5.10-1

axiom-graphics recommends no packages.

axiom-graphics suggests no packages.

-- no debconf information

[view2d-report.tar.bz2 (application/octet-stream, attachment)]

---------------------------------------------------------------------------------------------------------------------------------------------------

Send a report that this bug log contains spam.

Debian bug tracking system administrator <owner@bugs.debian.org>. Last modified: Wed Jul 16 19:12:58 2014; Machine Name: buxtehude.debian.org

Debian Bug tracking system
Copyright (C) 1999 Darren O. Benham, 1997,2003 nCipher Corporation Ltd, 1994-97 Ian Jackson.


-- 
Camm Maguire			     		    camm@maguirefamily.org

\start
Date: Wed, 16 Jul 2014 17:29:13 -0400
From: Camm Maguire <camm@maguirefamily.org>
To: control@bugs.debian.org,axiom-developer@nongnu.org,716335@bugs.debian.org
Subject: [Axiom-developer] [Mayhem] Bug report on axiom: sman crashes with
	exit status 139

forwarded 716335 axiom-developer@nongnu.org
thanks

Package: axiom
Version: 20120501-2
Severity: normal
User: mayhem@forallsecure.com
Usertags: mayhem

sman crashes with exit status 139. We confirmed the crash by
re-running it in a fresh debian unstable installation.

The attachment [1] contains a testcase (under ./crash) crashing the
program. It ensures that you can easily reproduce the bug. Additionally,
under ./crash_info/, we include more information about the crash such as
a core dump, the dmesg generated by the crash, and its output.

Regards,
The Mayhem Team (Alexandre Rebert, Thanassis Avgerinos, Sang Kil Cha, David Brumley, Manuel Egele)
Cylab, Carnegie Mellon University

[1] http://www.forallsecure.com/bug-reports/949787e234f007a5cae344a73ca6765197371bbe/full_report

-- System Information:
Debian Release: jessie/sid
  APT prefers unstable
  APT policy: (500, 'unstable')
Architecture: i386 (i686)

Kernel: Linux 3.9-1-686-pae (SMP w/1 CPU core)
Locale: LANG=C, LC_CTYPE=C (charmap=ANSI_X3.4-1968)
Shell: /bin/sh linked to /bin/dash

Versions of packages axiom depends on:
ii  axiom-databases  20120501-2
ii  libc6            2.17-6
ii  libgmp10         2:5.1.2+dfsg-1
ii  libreadline6     6.2+dfsg-0.1
ii  libx11-6         2:1.6.0-1
ii  libxpm4          1:3.5.10-1

Versions of packages axiom recommends:
ii  axiom-doc       20120501-2
ii  axiom-graphics  20120501-2
ii  axiom-hypertex  20120501-2
ii  axiom-source    20120501-2

Versions of packages axiom suggests:
pn  axiom-test  <none>
pn  axiom-tex   <none>
pn  nowebm      <none>
pn  texmacs     <none>

-- no debconf information

[sman-report.tar.bz2 (application/octet-stream, attachment)]


Send a report that this bug log contains spam.

Debian bug tracking system administrator <owner@bugs.debian.org>. Last modified: Wed Jul 16 21:27:46 2014; Machine Name: beach.debian.org

Debian Bug tracking system
Copyright (C) 1999 Darren O. Benham, 1997,2003 nCipher Corporation Ltd, 1994-97 Ian Jackson.


-- 
Camm Maguire			     		    camm@maguirefamily.org

\start
Date: Wed, 16 Jul 2014 17:30:45 -0400
From: Camm Maguire <camm@maguirefamily.org>
To: control@bugs.debian.org,axiom-developer@nongnu.org,716026@bugs.debian.org
Subject: [Axiom-developer] [Mayhem] Bug report on axiom-hypertex: htadd
 crashes with exit status 139

forwarded 716026 axiom-developer@nongnu.org
thanks

Package: axiom-hypertex
Version: 20120501-2
Severity: normal
User: mayhem@forallsecure.com
Usertags: mayhem

htadd crashes with exit status 139. We confirmed the crash by
re-running it in a fresh debian unstable installation.

The attachment [1] contains a testcase (under ./crash) crashing the
program. It ensures that you can easily reproduce the bug. Additionally,
under ./crash_info/, we include more information about the crash such as
a core dump, the dmesg generated by the crash, and its output.

Regards,
The Mayhem Team (Alexandre Rebert, Thanassis Avgerinos, Sang Kil Cha, David Brumley, Manuel Egele)
Cylab, Carnegie Mellon University

[1] http://www.forallsecure.com/bug-reports/408c61c3852fc0804acf1a96d4f6011a9adb3426/full_report

-- System Information:
Debian Release: jessie/sid
  APT prefers unstable
  APT policy: (500, 'unstable')
Architecture: i386 (i686)

Kernel: Linux 3.9-1-686-pae (SMP w/1 CPU core)
Locale: LANG=C, LC_CTYPE=C (charmap=ANSI_X3.4-1968)
Shell: /bin/sh linked to /bin/dash

Versions of packages axiom-hypertex depends on:
ii  axiom                20120501-2
ii  axiom-hypertex-data  20120501-2
ii  libc6                2.17-6
ii  libx11-6             2:1.6.0-1
ii  libxpm4              1:3.5.10-1

axiom-hypertex recommends no packages.

axiom-hypertex suggests no packages.

-- no debconf information

[htadd-report.tar.bz2 (application/octet-stream, attachment)]

Send a report that this bug log contains spam.

Debian bug tracking system administrator <owner@bugs.debian.org>. Last modified: Wed Jul 16 21:29:26 2014; Machine Name: beach.debian.org

Debian Bug tracking system
Copyright (C) 1999 Darren O. Benham, 1997,2003 nCipher Corporation Ltd, 1994-97 Ian Jackson.


-- 
Camm Maguire			     		    camm@maguirefamily.org

\start
Date: Wed, 16 Jul 2014 17:53:15 -0400
From: u1204 <daly@axiom-developer.org>
To: Camm Maguire <camm@maguirefamily.org>
Subject: Re: [Axiom-developer] MACOSX

Camm,

>Greetings!  I get through the mac build up to this non-gcl failure:

>viewman.c: In function 'rmViewMgr':
>viewman.c:546: warning: implicit declaration of function 'close'

Sigh. Another gcc change that will require me to figure out the
correct set of switches. It is hard to write stable software on
so many moving platforms.

>This is with git tag cygwin at the moment.  I will verify 2_6_10
>afterwards.

>Separately, I usually run with TESTSET=regresstests.  A simple 'make'
>with no arguments seems to be taking forever on x86 on richtrig800-899,
>some huge bignum calculation perhaps.  trace is spooling gc call
>notifications.  How long should this test take?

A straight 'make' call will run all of the tests, including the 
CATS (Computer Algebra Test Suite), which can take many hours.
I need to change the default not to run that suite.

Tim

\start
Date: Wed, 16 Jul 2014 18:14:42 -0400
From: u1204 <daly@axiom-developer.org>
To: Camm Maguire <camm@maguirefamily.org>
Subject: Re: [Axiom-developer] solaris

Camm,

>Greetings!  Are solaris and or Windows (mingw and cygwin) targets of
>interest?  If so, what AXIOM setting works here?

Solaris? Does that still exist? I don't have access to a Solaris box
anymore. I thought it sat in the corner with Multics and MVS. I would
have no idea how to set up the environment for it. Has anyone ported
texlive?

Windows? Maybe. I'm leaning toward either a virtual machine (there
is an "integrated" virtual machine I saw somewhere) or a Docker
image (if I can find a Docker/Windows setup).

I tried porting Axiom to mingw on Windows and wasted a week on a
compiler bug in the mingw C compiler. I really hate single-stepping
algebra in a debugger, especially when the bug is in the compiler.

The long term goal is to reduce Axiom to straight Common Lisp,
using a browser front end (because, you know, browsers are stable
platforms that never change :-) ). I have the browser interface
working and a fair portion of the hyperdoc text available. I also
have a working "notebook" where you can type expressions and see
the results in the browser. I'm looking at rewriting the graphics
to use the html5 canvas.

So, eventually, all you will need to do is fire up a browser,
point it at the pages, and all of Axiom will be available.
Combined with the literate work it should be a good environment.

Time, all it takes it time. ... 

Tim

\start
Date: Wed, 16 Jul 2014 18:33:09 -0400
From: Camm Maguire <camm@maguirefamily.org>
To: u1204 <daly@axiom-developer.org>
Subject: Re: [Axiom-developer] MACOSX

Greetings!

u1204 <daly@axiom-developer.org> writes:

> Camm,
>
>>Greetings!  I get through the mac build up to this non-gcl failure:
>
>>viewman.c: In function 'rmViewMgr':
>>viewman.c:546: warning: implicit declaration of function 'close'
>
> Sigh. Another gcc change that will require me to figure out the
> correct set of switches. It is hard to write stable software on
> so many moving platforms.
>

I can patch this up if needed -- my question is, how far into the build
do we need to get to determine that 2.6.11pre works and I can move on to
2.6.10?  Can I run the regressions at this point?

>>This is with git tag cygwin at the moment.  I will verify 2_6_10
>>afterwards.
>
>>Separately, I usually run with TESTSET=regresstests.  A simple 'make'
>>with no arguments seems to be taking forever on x86 on richtrig800-899,
>>some huge bignum calculation perhaps.  trace is spooling gc call
>>notifications.  How long should this test take?
>
> A straight 'make' call will run all of the tests, including the 
> CATS (Computer Algebra Test Suite), which can take many hours.
> I need to change the default not to run that suite.
>

OK, no problem, all is looking good.  Just released an axiom to the
autobuilders.  You can follow the progress here if desired:

https://buildd.debian.org/status/package.php?p=axiom

Take care,

> Tim

-- 
Camm Maguire			     		    camm@maguirefamily.org

\start
Date: Wed, 16 Jul 2014 18:40:28 -0400
From: u1204 <daly@axiom-developer.org>
To: Camm Maguire <camm@maguirefamily.org>
Message-ID: <878untnd0j.fsf@axiom-developer.org>
Subject: Re: [Axiom-developer] regression tests

Camm,

>How much work is involved in cleaning this up?  I'm mostly interested if
>gcl is responsible for any.

>int/input/arrows.regress:regression result FAILED 2 of 3 stanzas file
>arrows

The way this works is that there is a pamphlet (latex) file, e.g.

   src/input/dop.input.pamphlet

in src/input/dop.input.pamphlet. At run time this is extracted 
using the Axiom commend ")tangle dop" to the file

   int/input/dop.input

then it is executed to produce the output file

   int/input/dop.output

Note that the output file contains both the computed result
and the expected regression results which are the lines prefixed 
with --R. 
The -- syntax is an Axiom comment, 
The --S is the start of a test.
The --R is a regression result. 
The --E is the end of a test.

So in the dop.output file you'll see something like:

  --S 7 of 10                               start of a test
  2+3                                       axiom expression

     (7) 5                                  axiom result
  --R
  --R   (7) 5                               regression result
  --E 7                                     end of test

Axiom runs a command against the dop.output file  ")regress dop"
which compares the "axiom result" lines to the "regression result"
lines and complains if they don't match character for character.

The regression test results are written to a file called

   int/input/dop.regress

and any lines that don't match character for character generate
a message containing the uppercase word "FAILED". A final grep
script finds the ones that failed.

So you can look at the int/input/dop.regress file, find 
FAILED lines, note the "--S NN of MM", and look at dop.output to see
why "--S NN of MM" test failed.


You can copy dop.input.pamphlet to the current directory and then

  axiom -nox
  )tangle dop
  )read dop
     (axiom exits because there is a )lisp (bye) in the input file)
  axiom -nox
  )regress dop

which will allow you to run any test case individually.




Some of these failures are due to different libraries I guess.
I tried hard to find a portable way to get "the same results"
on different distros and different platforms. 

One problem is that floating point varies wildly from platform
to platform. And, in GCL 2.6.10 there is another change I see.
For instance, I had an output that looked like:

  2.0000000003

which now prints at
 
  2.0

Over the years I've tried several tricks to try to get the same
output, all of which failed.

So "the platform" (i.e. gcl, ubuntu, and dynamic libraries) 
give different answers for most of the regression failures.
You get different failures than I do. For instance, 
I'm surprised to see paff in your failure list.

Some of the failures are things I need to fix...

Time, all it takes is time....

Tim

\start
Date: Wed, 16 Jul 2014 18:45:13 -0400
From: u1204 <daly@axiom-developer.org>
To: Camm Maguire <camm@maguirefamily.org>
Subject: Re: [Axiom-developer] [Mayhem] Bug report on axiom-graphics: view2d
 crashes with exit status 139

Camm,

I've downloaded this crash report and will try to reproduce it.

Tim

\start
Date: Wed, 16 Jul 2014 18:40:45 -0500
From: daly@axiom-developer.org
To: Camm Maguire <camm@maguirefamily.org>
Subject: Re: [Axiom-developer] MACOSX

Camm,

>I can patch this up if needed -- my question is, how far into the build
>do we need to get to determine that 2.6.11pre works and I can move on to
>2.6.10?  Can I run the regressions at this point?

You can build Axiom with
   make TESTSET=notests
which will skip all of the tests. Then, if you want to run
a particular file in src/input you can follow the previous
instructions. Repeated here, they are

   cp src/input/foo.input.pamphlet .
   axiom -nox
   )tangle foo
   )read foo
   axiom -nox
   )regress foo

Tim

\start
Date: Wed, 16 Jul 2014 18:43:25 -0500
From: daly@axiom-developer.org
To: Camm Maguire <camm@maguirefamily.org>
Subject: [Axiom-developer] 2.6.11pre

>I can patch this up if needed -- my question is, how far into the build
>do we need to get to determine that 2.6.11pre works and I can move on to
>2.6.10?  

If Axiom builds on 2.6.11pre there is no need for 2.6.10

Where is 2.6.11pre? I'll try it on my other platforms.

Tim

\start
Date: Thu, 17 Jul 2014 04:56:11 -0400
From: u1204 <daly@axiom-developer.org>
To: Camm Maguire <camm@maguirefamily.org>
Subject: Re: [Axiom-developer] fast-linking and conservative gc

Camm,

The fastlink optimization is vital to the speed of Axiom.
Bill and I talked about that a lot during the AKCL work.

I am rewriting Axiom into straight lisp code.

Is there a way I can tell when a fastlink function call
cannot be performed and why? For example, a message like

   Note: cannot fastlink function call foo
         in function bar because the return type 
         of foo is not a single word

That would allow me to improve the code I write.

I have removed most of the autoloader code but Axiom
does tend to redefine functions because, you know, lisp :-)

Tim

\start
Date: Thu, 17 Jul 2014 05:08:44 -0400
From: u1204 <daly@axiom-developer.org>
To: Camm Maguire <camm@maguirefamily.org>
Subject: Re: [Axiom-developer] Bug#752221: [axiom] Some sources are not
	included in your package

Camm,

I'm not sure what to make of this bug report. 

The .js files exist as part of my learning curve of javascript. I'm
trying to find ways to present a huge algebra graph in some human
readable form. In this case I'm trying to understand how to use force
graphs. Portions of it are my code. All of it will go away once I
understand the details. They will probably be removed during a
release cleanup.

Tim

\start
Date: Thu, 17 Jul 2014 05:19:29 -0400
From: Tim Daly <daly@axiom-developer.org>
To: Camm Maguire <camm@maguirefamily.org>, mayhem@forallsecure.com
Subject: Re: [Axiom-developer] [Mayhem] Bug report on axiom-graphics: view2d
 crashes with exit status 139

Camm,

It appears that Brumley's team is fuzzing the input to the graphics
portion of Axiom, likely as an effort to find security holes. I used
to work at CMU/CERT and am currently active in the security field.

Actually, I'm kind of pleased that they got it to run considering our
last exchange about gcc no longer working with the legacy C code.
Perhaps I need to get David's gcc list of switches :-)

I will log these bug reports but they are certainly queued behind
larger problems like getting Axiom running on the MAC.

Tim

\start
Date: Thu, 17 Jul 2014 11:38:58 -0400
From: Camm Maguire <camm@maguirefamily.org>
To: axiom-developer@nongnu.org,daly@axiom-developer.org
Subject: [Axiom-developer] mac

Greetings!   viewman mac fix:

--- bookvol8.pamphlet~	2014-07-10 13:21:20.000000000 -0500
+++ bookvol8.pamphlet	2014-07-17 10:32:44.000000000 -0500
@@ -6919,7 +6919,7 @@
 	} /* else - not closing */
       } /* if checkButton */
     } /* if FD_ISSET(Xcon.... */
-    else if FD_ISSET(0,&rd) {
+    else if (FD_ISSET(0,&rd)) {
       externalControl=spadAction(); /* returns (-1) if broken ,0 if success */
       if (spadDraw && (externalControl==0)) drawViewport(Xoption);
     }
@@ -14542,7 +14542,7 @@
 	}  /* else - not closing */
       }	  /* if checkButton */
     } /* if FD_ISSET(Xcon,.. */
-    else if FD_ISSET(0,&rd) {
+    else if (FD_ISSET(0,&rd)) {
       externalControl = spadAction();
       if (spadDraw && (externalControl==0)) drawViewport(Xoption);
     }

continuing the build...

-- 
Camm Maguire			     		    camm@maguirefamily.org

\start
Date: Thu, 17 Jul 2014 11:50:50 -0400
From: Camm Maguire <camm@maguirefamily.org>
To: u1204 <daly@axiom-developer.org>
Subject: Re: [Axiom-developer] fast-linking and conservative gc

Greetings!

In 2.6.11pre (git tag cygwin at the moment) there is an unbound variable
si::*link-list*, which when set to nil, will accumulate a list of all
non-fast-link called functions together with a counts of the various
fast link failures.  I used this to speed up the maxima test suite
recently.  In master, si::*fast-link-warnings* can be set to t, which
will print out a diagnostic for each missed fast-link together with a
reason.  This latter output is often too big to be useful.

Please note that whatever the final report format, the caller will
always remain unknown, as functions in the same file share the
trampoline into the fast-link setting code.  We could print out the file
containing the caller, which is likely good enough.

Last I looked, I got master down to essentially no slow calls on typical
compilation jobs.

Take care,

u1204 <daly@axiom-developer.org> writes:

> Camm,
>
> The fastlink optimization is vital to the speed of Axiom.
> Bill and I talked about that a lot during the AKCL work.
>
> I am rewriting Axiom into straight lisp code.
>
> Is there a way I can tell when a fastlink function call
> cannot be performed and why? For example, a message like
>
>    Note: cannot fastlink function call foo
>          in function bar because the return type 
>          of foo is not a single word
>
> That would allow me to improve the code I write.
>
> I have removed most of the autoloader code but Axiom
> does tend to redefine functions because, you know, lisp :-)
>
> Tim

-- 
Camm Maguire			     		    camm@maguirefamily.org

\start
Date: Thu, 17 Jul 2014 11:52:23 -0400
From: Camm Maguire <camm@maguirefamily.org>
To: Tim Daly <daly@axiom-developer.org>
Subject: Re: [Axiom-developer] [Mayhem] Bug report on axiom-graphics: view2d
 crashes with exit status 139
Cc: mayhem@forallsecure.com, 716442@bugs.debian.org, axiom-developer@nongnu.org,
	control@bugs.debian.org

Greetings!

Tim Daly <daly@axiom-developer.org> writes:

> Camm,
>
> It appears that Brumley's team is fuzzing the input to the graphics
> portion of Axiom, likely as an effort to find security holes. I used
> to work at CMU/CERT and am currently active in the security field.
>
> Actually, I'm kind of pleased that they got it to run considering our
> last exchange about gcc no longer working with the legacy C code.
> Perhaps I need to get David's gcc list of switches :-)
>

Just a clarification here, the view2d.c problem is mac specific, to my
knowledge.  Linux is fine.

Take care,

> I will log these bug reports but they are certainly queued behind
> larger problems like getting Axiom running on the MAC.
>
> Tim

-- 
Camm Maguire			     		    camm@maguirefamily.org

\start
Date: Thu, 17 Jul 2014 11:53:57 -0400
From: Camm Maguire <camm@maguirefamily.org>
To: daly@axiom-developer.org
Subject: Re: [Axiom-developer] 2.6.11pre

Greetings!

daly@axiom-developer.org writes:

>>I can patch this up if needed -- my question is, how far into the build
>>do we need to get to determine that 2.6.11pre works and I can move on to
>>2.6.10?  
>
> If Axiom builds on 2.6.11pre there is no need for 2.6.10
>

I think the latest stable official release will work, and might be a
useful less-volatile target.

> Where is 2.6.11pre? I'll try it on my other platforms.
>

git clone git://git.sv.gnu.org/gcl.git
cd gcl/gcl
git checkout cywin

Take care,

> Tim


-- 
Camm Maguire			     		    camm@maguirefamily.org

\start
Date: Thu, 17 Jul 2014 12:42:51 -0400
From: Camm Maguire <camm@maguirefamily.org>
To: David Brumley <dbrumley@forallsecure.com>
Subject: Re: [Axiom-developer] Bug#716442: [Mayhem] Bug report on
 axiom-graphics: view2d crashes with exit status 139

Greetings, sorry for the confusion -- the mayhem bug was on linux,
failing runtime garbage input.  The compile bug Tim alluded to was mac
only.=20

Take care,

David Brumley <dbrumley@forallsecure.com> writes:

> Hmm. =A0if it's a bug we reported, we always test on Debian linux stable.=
 I don't know the particular bug, but I'd be surprised if it's only
> triggered on macs.
>
> Take care,
> -david
>
> On Thu, Jul 17, 2014 at 11:52 AM, Camm Maguire <camm@maguirefamily.org> w=
rote:
>
>     Greetings!

>     Tim Daly <daly@axiom-developer.org> writes:

>     > Camm,
>     >
>     > It appears that Brumley's team is fuzzing the input to the graphics
>     > portion of Axiom, likely as an effort to find security holes. I used
>     > to work at CMU/CERT and am currently active in the security field.
>     >
>     > Actually, I'm kind of pleased that they got it to run considering o=
ur
>     > last exchange about gcc no longer working with the legacy C code.
>     > Perhaps I need to get David's gcc list of switches :-)
>     >

>     Just a clarification here, the view2d.c problem is mac specific, to my
>     knowledge. =A0Linux is fine.

>     Take care,

>     > I will log these bug reports but they are certainly queued behind
>     > larger problems like getting Axiom running on the MAC.
>     >
>     > Tim
>     --
>     Camm Maguire
>

\start
Date: Thu, 17 Jul 2014 12:48:30 -0400
From: Camm Maguire <camm@maguirefamily.org>
To: u1204 <daly@axiom-developer.org>
Subject: Re: [Axiom-developer] solaris

Greetings!

u1204 <daly@axiom-developer.org> writes:

> Camm,
>
>>Greetings!  Are solaris and or Windows (mingw and cygwin) targets of
>>interest?  If so, what AXIOM setting works here?
>
> Solaris? Does that still exist? I don't have access to a Solaris box
> anymore. I thought it sat in the corner with Multics and MVS. I would
> have no idea how to set up the environment for it. Has anyone ported
> texlive?
>

OK, this is clearly not important.  Just checking as it is a maintained
gcl target in 2.6.11.


> Windows? Maybe. I'm leaning toward either a virtual machine (there
> is an "integrated" virtual machine I saw somewhere) or a Docker
> image (if I can find a Docker/Windows setup).
>
> I tried porting Axiom to mingw on Windows and wasted a week on a
> compiler bug in the mingw C compiler. I really hate single-stepping
> algebra in a debugger, especially when the bug is in the compiler.
>

I do have access to both mingw and cygwin environments for testing if
desired.  Again, just checking as these are supported gcl targets and I
want to complete testing before releasing 2.6.11.  Personally, it would
seem that at least one of these is at least as important as mac.  I take
it it has never really worked?  Is there a AXIOM keyword you worked on
last, e.g. mnt/mingw?

> The long term goal is to reduce Axiom to straight Common Lisp,
> using a browser front end (because, you know, browsers are stable
> platforms that never change :-) ). I have the browser interface
> working and a fair portion of the hyperdoc text available. I also
> have a working "notebook" where you can type expressions and see
> the results in the browser. I'm looking at rewriting the graphics
> to use the html5 canvas.
>
> So, eventually, all you will need to do is fire up a browser,
> point it at the pages, and all of Axiom will be available.
> Combined with the literate work it should be a good environment.
>
> Time, all it takes it time. ... 

As always, I so admire your ambition!

Take care,

>
> Tim

-- 
Camm Maguire			     		    camm@maguirefamily.org

\start
Date: Thu, 17 Jul 2014 11:56:33 -0400
From: David Brumley <dbrumley@forallsecure.com>
X-Google-Sender-Auth: Cthbm6qeEX4mdp8V6Ubv0MSh9BA
To: Camm Maguire <camm@maguirefamily.org>
Subject: Re: [Axiom-developer] [Mayhem] Bug report on axiom-graphics: view2d
 crashes with exit status 139

Hmm.  if it's a bug we reported, we always test on Debian linux stable. I
don't know the particular bug, but I'd be surprised if it's only triggered
on macs.

Take care,
-david

On Thu, Jul 17, 2014 at 11:52 AM, Camm Maguire <camm@maguirefamily.org>
wrote:

> Greetings!
>
> Tim Daly <daly@axiom-developer.org> writes:
>
> > Camm,
> >
> > It appears that Brumley's team is fuzzing the input to the graphics
> > portion of Axiom, likely as an effort to find security holes. I used
> > to work at CMU/CERT and am currently active in the security field.
> >
> > Actually, I'm kind of pleased that they got it to run considering our
> > last exchange about gcc no longer working with the legacy C code.
> > Perhaps I need to get David's gcc list of switches :-)
> >
>
> Just a clarification here, the view2d.c problem is mac specific, to my
> knowledge.  Linux is fine.
>
> Take care,
>
> > I will log these bug reports but they are certainly queued behind
> > larger problems like getting Axiom running on the MAC.
> >
> > Tim

> Camm Maguire                                        camm@maguirefamily.org
>

--e89a8ff1ce1282e2dd04fe65b0d7
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Hmm. =A0if it&#39;s a bug we reported, we always test on D=
ebian linux stable. I don&#39;t know the particular bug, but I&#39;d be sur=
prised if it&#39;s only triggered on macs.<div><br></div><div>Take care,</d=
iv>

<div>-david</div><div><br></div></div><div class=3D"gmail_extra"><br><br><d=
iv class=3D"gmail_quote">On Thu, Jul 17, 2014 at 11:52 AM, Camm Maguire <sp=
an dir=3D"ltr">&lt;<a href=3D"mailto:camm@maguirefamily.org" target=3D"_bla=
nk">camm@maguirefamily.org</a>&gt;</span> wrote:<br>

<blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
x #ccc solid;padding-left:1ex">Greetings!<br>
<div class=3D""><br>
Tim Daly &lt;<a href=3D"mailto:daly@axiom-developer.org">daly@axiom-develop=
er.org</a>&gt; writes:<br>
<br>
&gt; Camm,<br>
&gt;<br>
&gt; It appears that Brumley&#39;s team is fuzzing the input to the graphic=
s<br>
&gt; portion of Axiom, likely as an effort to find security holes. I used<b=
r>
&gt; to work at CMU/CERT and am currently active in the security field.<br>
&gt;<br>
&gt; Actually, I&#39;m kind of pleased that they got it to run considering =
our<br>
&gt; last exchange about gcc no longer working with the legacy C code.<br>
&gt; Perhaps I need to get David&#39;s gcc list of switches :-)<br>
&gt;<br>
<br>
</div>Just a clarification here, the view2d.c problem is mac specific, to m=
y<br>
knowledge. =A0Linux is fine.<br>
<br>
Take care,<br>
<div class=3D"HOEnZb"><div class=3D"h5"><br>
&gt; I will log these bug reports but they are certainly queued behind<br>
&gt; larger problems like getting Axiom running on the MAC.<br>
&gt;<br>
&gt; Tim<br>
&gt;<br>
&gt;<br>
&gt;<br>
&gt;<br>
<br>
</div></div><span class=3D"HOEnZb"><font color=3D"#888888">--<br>
Camm Maguire =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =A0 =
=A0 =A0 =A0 =A0 =A0<a href=3D"mailto:camm@maguirefamily.org">camm@maguirefa=
mily.org</a><br>
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=
=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D<br=
>
&quot;The earth is but one country, and mankind its citizens.&quot; =A0-- =
=A0Baha&#39;u&#39;llah<br>
</font></span></blockquote></div><br></div>

--e89a8ff1ce1282e2dd04fe65b0d7--


From MAILER-DAEMON Thu Jul 17 13:14:55 2014
Received: from list by lists.gnu.org with archive (Exim 4.71)
	id 1X7pGh-0004ET-2L
	for mharc-axiom-developer@gnu.org; Thu, 17 Jul 2014 13:14:55 -0400
Received: from eggs.gnu.org ([2001:4830:134:3::10]:39484)
	by lists.gnu.org with esmtp (Exim 4.71)
	(envelope-from <camm@maguirefamily.org>) id 1X7pGa-0004Ds-GD
	for axiom-developer@nongnu.org; Thu, 17 Jul 2014 13:14:53 -0400
Received: from Debian-exim by eggs.gnu.org with spam-scanned (Exim 4.71)
	(envelope-from <camm@maguirefamily.org>) id 1X7pGV-0007bY-9S
	for axiom-developer@nongnu.org; Thu, 17 Jul 2014 13:14:48 -0400
Received: from vms173017pub.verizon.net ([206.46.173.17]:33330)
	by eggs.gnu.org with esmtp (Exim 4.71)
	(envelope-from <camm@maguirefamily.org>) id 1X7pGV-0007bR-4C
	for axiom-developer@nongnu.org; Thu, 17 Jul 2014 13:14:43 -0400
Received: from localhost.m.enhanced.com ([unknown] [173.61.191.70])
	by vms173017.mailsrvcs.net
	(Sun Java(tm) System Messaging Server 7u2-7.02 32bit (built Apr 16
	2009)) with ESMTPA id <0N8V00FAR97RFG60@vms173017.mailsrvcs.net> for
	axiom-developer@nongnu.org; Thu, 17 Jul 2014 12:14:16 -0500 (CDT)
Received: from camm by localhost.m.enhanced.com with local (Exim 4.80)
	(envelope-from <camm@maguirefamily.org>)	id 1X7pG3-0002km-A2; Thu,
	17 Jul 2014 13:14:15 -0400
From: Camm Maguire <camm@maguirefamily.org>
To: u1204 <daly@axiom-developer.org>
References: <87egxlnf78.fsf@axiom-developer.org>
Date: Thu, 17 Jul 2014 13:14:15 -0400
In-reply-to: <87egxlnf78.fsf@axiom-developer.org>
	(daly@axiom-developer.org's	message of "Wed,
	16 Jul 2014 17:53:15 -0400")
Message-id: <87r41jc3h4.fsf@maguirefamily.org>
User-Agent: Gnus/5.13 (Gnus v5.13) Emacs/23.4 (gnu/linux)
MIME-version: 1.0
Content-type: text/plain; charset=us-ascii
X-detected-operating-system: by eggs.gnu.org: Genre and OS details not
	recognized.
X-Received-From: 206.46.173.17
Cc: axiom-developer@nongnu.org
Subject: Re: [Axiom-developer] MACOSX
X-BeenThere: axiom-developer@nongnu.org
X-Mailman-Version: 2.1.14
Precedence: list
List-Id: Axiom Developers <axiom-developer.nongnu.org>
List-Unsubscribe: <https://lists.nongnu.org/mailman/options/axiom-developer>, 
	<mailto:axiom-developer-request@nongnu.org?subject=unsubscribe>
List-Archive: <http://lists.nongnu.org/archive/html/axiom-developer>
List-Post: <mailto:axiom-developer@nongnu.org>
List-Help: <mailto:axiom-developer-request@nongnu.org?subject=help>
List-Subscribe: <https://lists.nongnu.org/mailman/listinfo/axiom-developer>,
	<mailto:axiom-developer-request@nongnu.org?subject=subscribe>
X-List-Received-Date: Thu, 17 Jul 2014 17:14:53 -0000

Greetings!

megaera:books camm$ diff -u bookvol7.pamphlet~ bookvol7.pamphlet
--- bookvol7.pamphlet~	2014-07-10 13:21:20.000000000 -0500
+++ bookvol7.pamphlet	2014-07-17 12:04:06.000000000 -0500
@@ -11251,8 +11251,8 @@
                     XNextEvent(gXDisplay, &event);
                     handleEvent(&event);
                 }
-                else if FD_ISSET
-                    (spadSocket->socket, &rd)
+                else if (FD_ISSET
+                    (spadSocket->socket, &rd))
                     /*
                      * Axiom Socket do what handleEvent does The 100 is
                      * $SpadStuff in hypertex.boot
@@ -23066,11 +23066,11 @@
          */
         bsdSignal(SIGUSR2, sigusr2Handler,RestartSystemCalls);
         bsdSignal(SIGUSR1, SIG_IGN,RestartSystemCalls);
-#if defined(BSDplatform) || defined(MACOSXplatform)
+/*#if defined(BSDplatform) || defined(MACOSXplatform)*/
         bsdSignal(SIGCHLD, sigcldHandler,RestartSystemCalls);
-#else
+/*#else
         bsdSignal(SIGCLD, sigcldHandler,RestartSystemCalls);
-#endif
+#endif*/
         bsdSignal(SIGINT, SIG_IGN,RestartSystemCalls);
         /*
          * Now go to the main event loop. I will never return, so just end

The second hunk is probably not what you want, but MACOSXplatform was
not defined for hypertex.c, and I could not see where it was supposed to
be defined.

With this, I'm in the middle of the regression tests on mac.

Take care,


u1204 <daly@axiom-developer.org> writes:

> Camm,
>
>>Greetings!  I get through the mac build up to this non-gcl failure:
>
>>viewman.c: In function 'rmViewMgr':
>>viewman.c:546: warning: implicit declaration of function 'close'
>
> Sigh. Another gcc change that will require me to figure out the
> correct set of switches. It is hard to write stable software on
> so many moving platforms.
>
>>This is with git tag cygwin at the moment.  I will verify 2_6_10
>>afterwards.
>
>>Separately, I usually run with TESTSET=regresstests.  A simple 'make'
>>with no arguments seems to be taking forever on x86 on richtrig800-899,
>>some huge bignum calculation perhaps.  trace is spooling gc call
>>notifications.  How long should this test take?
>
> A straight 'make' call will run all of the tests, including the 
> CATS (Computer Algebra Test Suite), which can take many hours.
> I need to change the default not to run that suite.
>
> Tim
>

-- 
Camm Maguire			     		    camm@maguirefamily.org

\start
Date: Thu, 17 Jul 2014 18:27:04 -0400
From: u1204 <daly@axiom-developer.org>
To: Camm Maguire <camm@maguirefamily.org>
Subject: Re: [Axiom-developer] fast-linking and conservative gc

> In 2.6.11pre (git tag cygwin at the moment) there is an unbound variable
> si::*link-list*, which when set to nil, will accumulate a list of all
> non-fast-link called functions together with a counts of the various
> fast link failures.  I used this to speed up the maxima test suite
> recently.  In master, si::*fast-link-warnings* can be set to t, which
> will print out a diagnostic for each missed fast-link together with a
> reason.  This latter output is often too big to be useful.
> 
> Please note that whatever the final report format, the caller will
> always remain unknown, as functions in the same file share the
> trampoline into the fast-link setting code.  We could print out the file
> containing the caller, which is likely good enough.
> 
> Last I looked, I got master down to essentially no slow calls on typical
> compilation jobs.

Perfect. Just what I need to make Axiom faster.

You do excellent work. You never cease to amaze me.

Tim

\start
Date: Thu, 17 Jul 2014 18:31:25 -0400
From: u1204 <daly@axiom-developer.org>
To: Camm Maguire <camm@maguirefamily.org>
Subject: Re: [Axiom-developer] [Mayhem] Bug report on axiom-graphics: view2d
 crashes with exit status 139

> > It appears that Brumley's team is fuzzing the input to the graphics
> > portion of Axiom, likely as an effort to find security holes. I used
> > to work at CMU/CERT and am currently active in the security field.
> >
> > Actually, I'm kind of pleased that they got it to run considering our
> > last exchange about gcc no longer working with the legacy C code.
> > Perhaps I need to get David's gcc list of switches :-)
> >
> 
> Just a clarification here, the view2d.c problem is mac specific, to my
> knowledge.  Linux is fine.

If Brumley is fuzzing then the problem he is finding (it looks like he
is "forcing AA"s) is that the input stream is not properly handling
overlong input (scanf? strcpy?). So the problem would be generic. 
I do this in my pentesting work. I know how to fix it but I want to
concentrate on several other fronts first.

Tim

\start
Date: Sun, 20 Jul 2014 23:03:45 -0500
From: daly@axiom-developer.org
To: "Camm Maguire" <camm@maguirefamily.org>, gcl-devel@gnu.org
Subject: [Axiom-developer] GCL

Camm,

I did a git clone of gcl from savannah.

A raw ./configure or a ./configure with the usual Axiom settings
failed to build. I tried a git checkout of cygwin, which also
failed to build (on Ubuntu). 

I walked backward in history and did a 
  git reset --hard 9338b1
which builds and runs but does not know about (bye).
It claims to be 2.7.0

I'd like to get 2.6.11pre version you mentioned but that tag
doesn't seem to exist.

What sequence, from a git clone onward, should I try.

Suggestions?

Tim

\start
Date: Mon, 21 Jul 2014 10:46:31 -0400
From: Camm Maguire <camm@maguirefamily.org>
To: daly@axiom-developer.org
Subject: Re: [Axiom-developer] GCL

Greetings!  Please try the following, and if this fails, post the
complete output:

rm -rf gcl
git clone git://git.sv.gnu.org/gcl.git
cd gcl/gcl
git checkout cygwin
./configure && make

If you have special configure switches you want to use, please post
those too.

Take care,

daly@axiom-developer.org writes:

> Camm,
>
> I did a git clone of gcl from savannah.
>
> A raw ./configure or a ./configure with the usual Axiom settings
> failed to build. I tried a git checkout of cygwin, which also
> failed to build (on Ubuntu). 
>
> I walked backward in history and did a 
>   git reset --hard 9338b1
> which builds and runs but does not know about (bye).
> It claims to be 2.7.0
>
> I'd like to get 2.6.11pre version you mentioned but that tag
> doesn't seem to exist.
>
> What sequence, from a git clone onward, should I try.
>
> Suggestions?
>
> Tim

-- 
Camm Maguire			     		    camm@maguirefamily.org

\start
Date: Mon, 21 Jul 2014 10:50:07 -0400
From: Camm Maguire <camm@maguirefamily.org>
To: u1204 <daly@axiom-developer.org>
Subject: Re: [Axiom-developer] MACOSX

Greetings!  Just to report that axiom builds just fine on MACOSX against
git tag cygwin with

1) the bookvol7.pamphlet patch below (the second hunk of which you
probably want to investigate and modify)
2) the bookvol8.pamphlet patch I posted earlier and
3) the getl vmlisp patch we discussed a while ago.

After checking acl2, I'll also try 2.6.10, which I expect to work.

Take care,


Camm Maguire <camm@maguirefamily.org> writes:

> Greetings!
>
> megaera:books camm$ diff -u bookvol7.pamphlet~ bookvol7.pamphlet
> --- bookvol7.pamphlet~	2014-07-10 13:21:20.000000000 -0500
> +++ bookvol7.pamphlet	2014-07-17 12:04:06.000000000 -0500
> @@ -11251,8 +11251,8 @@
>                      XNextEvent(gXDisplay, &event);
>                      handleEvent(&event);
>                  }
> -                else if FD_ISSET
> -                    (spadSocket->socket, &rd)
> +                else if (FD_ISSET
> +                    (spadSocket->socket, &rd))
>                      /*
>                       * Axiom Socket do what handleEvent does The 100 is
>                       * $SpadStuff in hypertex.boot
> @@ -23066,11 +23066,11 @@
>           */
>          bsdSignal(SIGUSR2, sigusr2Handler,RestartSystemCalls);
>          bsdSignal(SIGUSR1, SIG_IGN,RestartSystemCalls);
> -#if defined(BSDplatform) || defined(MACOSXplatform)
> +/*#if defined(BSDplatform) || defined(MACOSXplatform)*/
>          bsdSignal(SIGCHLD, sigcldHandler,RestartSystemCalls);
> -#else
> +/*#else
>          bsdSignal(SIGCLD, sigcldHandler,RestartSystemCalls);
> -#endif
> +#endif*/
>          bsdSignal(SIGINT, SIG_IGN,RestartSystemCalls);
>          /*
>           * Now go to the main event loop. I will never return, so just end
>
> The second hunk is probably not what you want, but MACOSXplatform was
> not defined for hypertex.c, and I could not see where it was supposed to
> be defined.
>
> With this, I'm in the middle of the regression tests on mac.
>
> Take care,
>
>
> u1204 <daly@axiom-developer.org> writes:
>
>> Camm,
>>
>>>Greetings!  I get through the mac build up to this non-gcl failure:
>>
>>>viewman.c: In function 'rmViewMgr':
>>>viewman.c:546: warning: implicit declaration of function 'close'
>>
>> Sigh. Another gcc change that will require me to figure out the
>> correct set of switches. It is hard to write stable software on
>> so many moving platforms.
>>
>>>This is with git tag cygwin at the moment.  I will verify 2_6_10
>>>afterwards.
>>
>>>Separately, I usually run with TESTSET=regresstests.  A simple 'make'
>>>with no arguments seems to be taking forever on x86 on richtrig800-899,
>>>some huge bignum calculation perhaps.  trace is spooling gc call
>>>notifications.  How long should this test take?
>>
>> A straight 'make' call will run all of the tests, including the 
>> CATS (Computer Algebra Test Suite), which can take many hours.
>> I need to change the default not to run that suite.
>>
>> Tim

-- 
Camm Maguire			     		    camm@maguirefamily.org

\start
Date: Mon, 21 Jul 2014 10:57:56 -0400
From: Camm Maguire <camm@maguirefamily.org>
To: gcl-devel@gnu.org,axiom-developer@nongnu.org,daly@axiom-developer.org
Subject: [Axiom-developer] GCL images and prelink

Greetings!  Just a note that I believe I've solved the long standing bug
affecting all GCL images (and emacs) preventing their being 'prelinked',
a system performance enhancing facility whereby the shared libraries
used by an executable are permanently linked and the dynamic linker
loader (ld.so) is side-stepped, thereby accelerating image startup
times. 

I'm pushing this onto Version_2_6_11pre for testing.  I won't be
updating the cygwin tag further.  Tim, you should probably get cygwin
working first to avoid any headaches this latest might introduce.  We'll
know of any possible issues in a few days.

Take care,
-- 
Camm Maguire			     		    camm@maguirefamily.org

\start
Date: Mon, 21 Jul 2014 14:10:06 -0400
From: Camm Maguire <camm@maguirefamily.org>
To: u1204 <daly@axiom-developer.org>
Subject: [Axiom-developer] 2.6.11,
	Axiom and macosx [ was Re: fast-linking and conservative gc]

u1204 <daly@axiom-developer.org> writes:

>> In 2.6.11pre (git tag cygwin at the moment) there is an unbound variable
>> si::*link-list*, which when set to nil, will accumulate a list of all
>> non-fast-link called functions together with a counts of the various
>> fast link failures.  I used this to speed up the maxima test suite
>> recently.  In master, si::*fast-link-warnings* can be set to t, which
>> will print out a diagnostic for each missed fast-link together with a
>> reason.  This latter output is often too big to be useful.
>> 
>> Please note that whatever the final report format, the caller will
>> always remain unknown, as functions in the same file share the
>> trampoline into the fast-link setting code.  We could print out the file
>> containing the caller, which is likely good enough.
>> 
>> Last I looked, I got master down to essentially no slow calls on typical
>> compilation jobs.
>
> Perfect. Just what I need to make Axiom faster.
>
> You do excellent work. You never cease to amaze me.
>

Thank you so much for the kind words -- would that they were true!  And
thank you for keeping axiom going, doubtlessly a much more complex task.

On the mac, just wanted to let you know that I'm still using the sources
from the 20120501 release.  If you would like to work in parallel on the
same development version, please let me know.  You should be able to
work with unpatched gcl sources if desired, but of course you are free
to patch if you want to.  Debian/Ubuntu packages have been built with an
external GCL for many years now.  I can help you support this option
should you decide it is worthwhile.

I'd really like to get 2.6.11 out soon, so please let me know ASAP if
you find trouble.

Take care,

> Tim

-- 
Camm Maguire			     		    camm@maguirefamily.org

\start
Date: Mon, 21 Jul 2014 21:02:43 -0500
From: daly@axiom-developer.org
To: "Camm Maguire" <camm@maguirefamily.org>, gcl-devel@gnu.org
Subject: [Axiom-developer] GCL cygwin Axiom build

Camm,

The build fails loading the Axiom extensions. The log is at
http://daly.axiom-developer.org/cygwinfail.txt

If you recall there are two files, cfuns-c.o and sockio-c.o
which are linked into the GCL image. The related patches are
listed at the top of the cygwinfail.txt file.

You made a change in the makefile related to library loads
so it was unclear to me where libspad.a should be added.

Tim

\start
Date: Tue, 22 Jul 2014 12:33:10 -0400
From: Camm Maguire <camm@maguirefamily.org>
To: daly@axiom-developer.org
Subject: Re: [Axiom-developer] GCL cygwin Axiom build

Hi Tim!  How do I get the sources to reproduce this?

As you might recall, we may have an old unresolved skew in the handling
of these extensions.  I put in place a #'compiler::link function a long
time ago to support adding these sorts of files without having to patch
GCL, and thereby enabling a build against an externally installed gcl.

In sum, in the Debian package I replace your gcl build under the
makefile target gcldir in lsp/Makefile.pamphlet with

 gcldir: 
 	@echo 2 building ${GCLVERSION}
-	@tar -zxf ${ZIPS}/${GCLVERSION}.tgz
-<<gcl-2.6.8pre7.h.linux.defs.patch>>
-<<gcl-2.6.8pre7.o.read.d.patch>>
-<<gcl-2.6.8pre7.unixport.initgcl.lsp.in.patch>>
-<<gcl-2.6.8pre7.unixport.makefile.patch>>
-<<gcl-2.6.8pre7.collectfn.fix>>
-<<gclConfigureMake>>
+	echo '(compiler::link (list (compile-file "${BOOKS}/tangle.lisp")) "${OUT}/lisp" (format nil "(progn (let ((*load-path* (cons ~S *load-path*))(si::*load-types* ~S)) (compiler::emit-fn t))(when (fboundp (quote si::sgc-on)) (si::sgc-on t))#-native-reloc(setq compiler::*default-system-p* t))" si::*system-directory* (quote (list #+native-reloc".o" ".lsp"))) "${OBJ}/${SYS}/lib/cfuns-c.o ${OBJ}/${SYS}/lib/sockio-c.o ${OBJ}/${SYS}/lib/libspad.a")' | gcl
 	@echo 13 finished system build on `date` | tee >gcldir
 
Let me break out the link call with commentary:

(compiler::link ;;create a new lisp image ld and C objects prior to save-system
         (list (compile-file "${BOOKS}/tangle.lisp")) ;;list of compiled lisp files
          "${OUT}/lisp" ;; output image name
          (format nil ;; a command to run before the final save-system
           "(progn 
              (let ((*load-path* (cons ~S *load-path*))(si::*load-types* ~S)) (compiler::emit-fn t))
              (when (fboundp (quote si::sgc-on)) (si::sgc-on t))
              #-native-reloc(setq compiler::*default-system-p* t))" 
                  si::*system-directory* (quote (list #+native-reloc".o" ".lsp"))) 
         ;; a string of C objects and libraries         
         "${OBJ}/${SYS}/lib/cfuns-c.o ${OBJ}/${SYS}/lib/sockio-c.o ${OBJ}/${SYS}/lib/libspad.a"
)

I can explain how this works in detail if you are interested.  If you'd
like to use it, that should simplify things quite a bit.  If not, we can
still get the method based on patching GCL's makefiles to work -- it is
just that any edits to these files will require an update to the
patches, and this is somewhat fragile.  Should you wish to pursue this,
please point me at the sources and I'll try to spot the failure.

Take care,


daly@axiom-developer.org writes:

> Camm,
>
> The build fails loading the Axiom extensions. The log is at
> http://daly.axiom-developer.org/cygwinfail.txt
>
> If you recall there are two files, cfuns-c.o and sockio-c.o
> which are linked into the GCL image. The related patches are
> listed at the top of the cygwinfail.txt file.
>
> You made a change in the makefile related to library loads
> so it was unclear to me where libspad.a should be added.
>
> Tim
>
>
>
>

-- 
Camm Maguire			     		    camm@maguirefamily.org

\start
Date: Tue, 22 Jul 2014 12:19:32 -0500
From: daly@axiom-developer.org
Message-Id: <201407221719.s6MHJWFj003146@axiom-developer.org>
To: Camm Maguire <camm@maguirefamily.org>
Subject: Re: [Axiom-developer] GCL cygwin Axiom build

Camm,

I remember you advocated this compiler::link method before.
I looked at it and didn't understand it (and still don't).
I'll patch the system to use this method instead.
I'll let you know the result. 

Tim

\start
Date: Tue, 22 Jul 2014 14:53:34 -0500
From: daly@axiom-developer.org
To: axiom-developer@nongnu.org
Subject: [Axiom-developer] Library of Constructive Mathematics

One of the latest Axiom initiatives is trying to prove an
Axiom algorithm correct. This is a site of interest.

Constructive Coq Repository at Nijmegen
http://http://corn.cs.ru.nl

Tim

\start
Date: Tue, 22 Jul 2014 17:53:47 -0500
From: daly@axiom-developer.org
To: "Camm Maguire" <camm@maguirefamily.org>, gcl-devel@gnu.org
Subject: [Axiom-developer] gcl makefile tries to create a file in
	/usr/local/axiom

Camm,

When I build gcl-cygwin standalone I get a copy of gcl in the bin
directory. When I build it by program the gcl makefile seems to try:

rm -f /usr/local/axiom/home/daly/t1/lsp/gcl-cygwin/bin/gcl
(echo '#!/bin/sh ; \
     echo exec /home/daly/t1/lsp/gcl-cygwin/unixport/saved_gcl \\ ; \
     echo '  -dir /home/daly/t1/lsp/gcl-cygwin/unixport/ \\ ; \
     echo '  -libdir' /home/daly/t1/lsp/gcl-cgwin/ \\ ; \
     echo '  -eval '\''(setq si::*allow-gzipped-file* t)'\' \\ ;\
     ! [ -d "no" ] || echo '  -eval '\''(setq si::*tk-library* '\"\"')'\' \\;\
     echp '   '\"\$@\" ) > /usr/local/axiom/home/daly/t1/lsp/gcl-cygwin/bin/gcl

/bin/sh: 1: cannot create /usr/local/axiom/home/daly/t1/lsp/gcl-cygwin/bin/gcl
Directory nonexistent

Why is it trying to create anything in /usr/local/axiom (which does not exist)?

Tim

\start
Date: Tue, 22 Jul 2014 20:02:36 -0400
From: Camm Maguire <camm@maguirefamily.org>
To: daly@axiom-developer.org
Subject: Re: [Axiom-developer] gcl makefile tries to create a file in
	/usr/local/axiom

Greetings!  The top level makefile in GCL makes use of the DESTDIR and
BINDIR environment variables -- methinks your program wrapper is setting
these.  Just try setting these appropriately right before 'make' on the
gcl build command line.  Please let me know if problems persist.

Take care,

daly@axiom-developer.org writes:

> Camm,
>
> When I build gcl-cygwin standalone I get a copy of gcl in the bin
> directory. When I build it by program the gcl makefile seems to try:
>
> rm -f /usr/local/axiom/home/daly/t1/lsp/gcl-cygwin/bin/gcl
> (echo '#!/bin/sh ; \
>      echo exec /home/daly/t1/lsp/gcl-cygwin/unixport/saved_gcl \\ ; \
>      echo '  -dir /home/daly/t1/lsp/gcl-cygwin/unixport/ \\ ; \
>      echo '  -libdir' /home/daly/t1/lsp/gcl-cgwin/ \\ ; \
>      echo '  -eval '\''(setq si::*allow-gzipped-file* t)'\' \\ ;\
>      ! [ -d "no" ] || echo '  -eval '\''(setq si::*tk-library* '\"\"')'\' \\;\
>      echp '   '\"\$@\" ) > /usr/local/axiom/home/daly/t1/lsp/gcl-cygwin/bin/gcl
>
> /bin/sh: 1: cannot create /usr/local/axiom/home/daly/t1/lsp/gcl-cygwin/bin/gcl
> Directory nonexistent
>
> Why is it trying to create anything in /usr/local/axiom (which does not exist)?
>
> Tim

-- 
Camm Maguire			     		    camm@maguirefamily.org

\start
Date: Thu, 24 Jul 2014 17:36:35 -0500
From: daly@axiom-developer.org
To: Camm Maguire <camm@maguirefamily.org>, gcl-devel@gnu.org
Subject: [Axiom-developer] Axiom on the Mac works

Camm,

Axiom runs on the Mac again!
Your fixes worked. Thank you for your help.

I will push the changes along with a new release as soon as possible.

Tim

\start
Date: Thu, 24 Jul 2014 23:52:59 -0500
From: daly@axiom-developer.org
To: "Camm Maguire" <camm@maguirefamily.org>, gcl-devel@gnu.org
Subject: [Axiom-developer] Couldn't protect

Camm,

On most of my systems the build succeeds.

It succeeded on the Ubuntu system where you have a userid.
However, on my other Ubuntu (reasonably old) it fails with

  Couldn't protect

This comes from o/sgbc.c, apparently trying to make a page 
write-protected. Do you know what could cause this? The lisp
runs and compiles code up until the Axiom compiler starts to 
run. That may be the first GC since all of the other tasks
are small.

Is there a recommended memory size that might fix this?

Tim

\start
Date: Fri, 25 Jul 2014 10:09:25 -0400
From: Camm Maguire <camm@maguirefamily.org>
To: daly@axiom-developer.org
Subject: Re: [Axiom-developer] Couldn't protect

Greetings!

SElinux or the like?

Failing that, if you can provide access I can take a look.

Take care,

daly@axiom-developer.org writes:

> Camm,
>
> On most of my systems the build succeeds.
>
> It succeeded on the Ubuntu system where you have a userid.
> However, on my other Ubuntu (reasonably old) it fails with
>
>   Couldn't protect
>
> This comes from o/sgbc.c, apparently trying to make a page 
> write-protected. Do you know what could cause this? The lisp
> runs and compiles code up until the Axiom compiler starts to 
> run. That may be the first GC since all of the other tasks
> are small.
>
> Is there a recommended memory size that might fix this?
>
> Tim

-- 
Camm Maguire			     		    camm@maguirefamily.org

\start
Date: Mon, 28 Jul 2014 03:14:36 -0500
From: daly@axiom-developer.org
To: axiom-developer@nongnu.org
Subject: [Axiom-developer] August 2014 release

Axiom has been released. The sources and binaries are being uploaded
and will be available over the next few days.

Axiom can now build in native form on the Intel Mac, thanks to the
amazing effort of Camm Maguire.

===================================================================

August 2014 release notes

This release moves Axiom to the latest GCL version.
All unused prior versions were removed.

Most of the work involved in this release has involved CATS,
working with Albert Rich to develop Axiom tests.

Noweb was removed. Axiom now uses its own literate tools.

The databases are no longer compressed.

Volume 13: Proving Axiom Correct was started

Makefile.pamphlet
   VERSION = August 2014
   TESTSET defaults to regresstests
   fix missing dvipdfm
   remove noweb

book/
   new directory containing axiom-developer emails
   reduce and categorize emails for history
   create timeline of people joining/leaving

books/
   axiom.sty
      document
      remove all other sources
      add additional macros
   axbook.tgz
      fix sinCosExpandRules
   dvipdfm.def
      added
   tanglec.c
      new C function to handle chunks
   tangle.lisp
      add fastxhtml extraction from bookvol11
   extract (rename from document)
      support new chunk syntax
   ps/
      move .ps to .eps
      add new images

books/Makefile
   handle bookheader.tex
   fix broken sed regular expression
   add bookvol13 (Proving Axiom Correct)

books/bookheader.tex
   user underline, colored links
   standardize headers, table of contents

books/bookvol0 (Jenks)
   add condata for MAGCDOC
   add graphics, fix typos, add text

books/bookvol1 (tutorial)
   use bookheader.tex
   fix typos

books/bookvol2 (users guide)
   use bookheader.tex
   add category theory chapter
   remove noweb

books/bookvol3 (programmers guide)
   use bookheader.tex
   remove noweb

books/bookvol4 (developers guide)
   use bookheader.tex
   section on changing GCL versions
   document makeHelpFiles
   remove autoload files
   remove noweb
   add HACKPI section

books/bookvol5 (interpreter)
   use bookheader.tex
   fix GETL for GCL
   add Attributes as Categories
   add Comparable
   add LeftOreRing
   add U32Matrix support macros
   add bc-matrix code
   add support code for U8Vector
   add support code for U32Vector
   add support code for U8Matrix
   add support code for U16Matrix
   add U32VectorPolyunomialOperations
   expose FiniteFieldFactorization
   expose MAGCDOC
   expose MatrixManipulation
   rename functionp to canFuncall?
   incremental rewrite of br-con.lisp
   merge ht-util.lisp

books/bookvol6 (commands)
   use bookheader.tex

books/bookvol7 (hyperdoc)
   apply Camm's patches
   remove bibliography
   standardize the table of contents
   update credits
   use bookheader.tex

books/bookvol7.1 (hyperdoc pages)
   standardize the table of contents
   update What's New Page
   update credits
   use bookheader.tex

books/bookvol8 (graphics)
   apply Camm's patches
   convert bookvol8 from noweb to chunks
   remove crc test cases
   standardize the table of contents
   update credits
   use bookheader.tex
   remove noweb

books/bookvol8.1 (graphics gallery)
   add CRC standard test cases, section 2.3-2.9

books/bookvol9 (compiler)
   use bookheader.tex
   functionp -> canFuncall?

books/bookvol10 (algebra implementation)
   absorb src/algebra/Makefile
   use bookheader.tex

books/bookvol10.1 (algebra theory)
   add interval arithmetic
   add section on interpolation formulas
   use bookheader.tex

books/bookvol10.2 (categories)
   AGG bug fixed 40355
   CLAGG bug fixed 40021
   MONAD bug fix 40350, add 7236
   ORDSET bug fix 40346
   PTRANFN bug fixed 40357
   REAL bug fix 40345
   add Attributes as Categories
   add Comparable
   add LeftOreRing
   add MAGCDOC
   add enumerate to FINITE
   add matrix initializer function
   fix failing test cases
   fix help documentation and regression tests
   use bookheader.tex
   write help documentation for all categories
   FiniteSetAggregate subset? fixed
   BinaryTreeCategory remove finiteAggregate, bug fix 7255

books/bookvol10.3 (domains)
   AFFSP bug fix 30230, 20495; introduce 60076
   BLAS1 bug fixed 40304
   CHAR bug fix 40022
   DFLOAT bug fix 20073, add 20570
   DFLOAT bug fixed 40019
   FPS bug fixed 40013
   INBFF bug fixed 20465, add 20571
   INTRVL bug fix 20480, 30143
   ITAYLOR bug fix 20542 pretend
   LIST bug fix 20063, add, add 20569
   MLIFT bug fix 20001, add 20568
   OPTPROB bug fix 40347
   RNUMP removed bug fix 30047
   SINT bug fix 20057 pretend
   SMTS bug fix 20383, 50005, add 20567
   SYMBOL bug fix 20056 pretend
   add U16Matrix
   add U16Vector
   add U32Matrix
   add U8Matrix
   add U8Vector
   add information to SingleInteger
   SEXOF bug fix 20501
   fix failing test cases
   fix help documentation and regression tests
   move EFULS EFUPXS from package to domain
   update U32Vector domain
   use bookheader.tex
   write help documentation for all domains

books/bookvol10.4 (packages)
   ATTREG bug fix 40362
   ELTAB bug fix 40360
   FSPECF bug fix 7235, 40077
   GRAY bug fixed 20467
   MAPPKG1 bug fix 40351
   MSYSCMD bug fix 40359
   SOLVERAD bug fix 40043
   SREGSET bug fix 50001
   add FiniteFieldFactorization
   add MatrixManipulation, add Raoul Bourquin
   add U32VectorPolynomialOperations
   apply Waldek's changes to imposelc in PGCD
   comment out bad code in GUESS
   document htrigs function in TRMANIP
   expand hyperbolic identities
   bug fix "bad reduction" in multivariate poly gcd
   bug fix ++X function example in gcd
   bug fix OUT.spad warning (bug 329)
   bug fix failing test cases
   bug fix help documentation and regression tests
   move EFULS EFUPXS from package to domain
   use bookheader.tex
   write help documentation
   add reportInstantiations to API package

books/bookvol10.5 (numerics)
   add netlib cephes function covers
   use bookheader.tex

books/bookvol11 (browser)
   use bookheader.tex
   remove noweb

books/bookvol12 (crystal)
   remove noweb

books/bookvol13 (proving axiom correct)
   created

books/bookvolbib (bibliography)
   add references and abstracts
   add subsection Ore Rings
   add subsection Partial Fraction Decomposition
   add subsection Integration
   add subsection Expression Simplification
   add subsection Differential Equations
   add subsection Advanced Documentation
   add subsection Numerics
   add subsection Interval Arithmetic
   add subsection Proving Axiom Correct
   add subsection Category Theory
   add subsection Polynomial GCD
   add subsection Exponenetial Integral
   add subsection Special Functions
   add subsection Numerical Algorithms
   add subsection Solving Systems of Equations

buglist
   MLIFT fix 20001, add 20568
   AGG fixed 40355
   ATTREG fix 40362
   BLAS1 fixed 40304
   CHAR fix 40022
   CLAGG fixed 40021
   DFLOAT fix 20073, add 20570
   DFLOAT fixed 40019
   ELTAB fix 40360
   FPS fixed 40013
   FSPECF fix 7235, 40077
   GRAY fixed 20467
   INBFF fixed 20465, add 20571
   INTRVL fix 20480, 30143
   ITAYLOR fix 20542 pretend
   LIST fix 20063, add, add 20569
   MAPPKG1 fix 40351
   MONAD fix 40350, add 7236
   MSYSCMD fix 40359
   OPTPROB fix 40347
   ORDSET fix 40346
   PTRANFN fixed 40357
   REAL fix 40345
   SINT fix 20057 pretend
   SMTS fix 20383, 50005, add 20567
   SOLVERAD fix 40043
   SREGSET fix 50001
   SYMBOL fix 20056 pretend
   fix bug 7072/19 D(0^z, z) closed
   fix bug 7248: differentiation fix bug in D(1,z)
   fix bug 7249: radicalSolve(z^7=1, z)
   fix bug 7249: radicalSolve(z^7=1, z) update
   fix bug 7251: integrate(1/(1+z^4), z=0..1) :: Complex Float
   fix bug 7252: argument(-%i)
   fix bug 7253: There are no library operations named 'when'
   fix bug 7254: f==n+->sum(sum(1/i,i=1..j),j=1..n) complains
   fix bug 7256: acot(-1) values differ
   fix bug 7257: normalize(subst(asin(z),z=-1)) division by zero
   fix bug 7258: acosh(0.0) invalid argument to acosh
   fix bug 20501, SEXOF pretend, 30047 RNUMP
   fix bug 30230, 20495; introduce 60076
   fix bug 7236
   fix bug 329, add todo 330
   remove dead items
   remove error message for deleted files
   add 7142 exp^log(x) Cannot take first of an empty list update
   add 7233: fill! operation from U8Vector does not show up
   add 7242/7243
   add 7244, 7245
   add bug 7241, fix the integration routines
   add bugs found in tests
   add kamke4, kamke6 missing bug
   add todo 335: add packages to )d op gcd
   add 7232
   wish 1011: sum(1/(k+a), k=1..n) by Gosper's method

Wikipedia
   en.wikipedia.org/wiki/Axiom_(computer_algebra_system) update date
   en.wikipedia.org/wiki/List_of_computer_algebra_systems update date

faq
   remove noweb
   fix mailing list links

readme
   add Edi Meier
   add Edi Meier
   add Jia Zhao Cong
   add Raoul Bourquin
   update credits

src/Makefile
   clean up src/algebra properly
   convert bookvol8 from noweb to chunks
   fix {OUT} bug
   handle special case files for bookvol11
   rename tangle.c to tanglec.c
   pamphlet extract src using chunk syntax
   pamphlet modified, noweb removed

src/algebra/Makefile
   add Comparable
   add FINITE-
   add LeftOreRing
   add MatrixManipulation
   add U16Matrix
   add U32Matrix
   add U32VectorPolynomialOperations
   add U8Matrix
   add fastxhtml extraction call
   add machinearithmetic.input
   compile FiniteFieldFactorization
   compile MAGCDOC
   fix failing test cases
   set up regression tests
   update graph info for OUT
   modified, noweb removed

src/algebra/libdb.text
   add Attributes as Categories

src/axiom-website/
   AxiomConference.pdf added
   axiom.sty
   CATS/
      charlwood.input added
      rich* added
      kamke*.txt added
   books/
      add 8.1, 10.5, bibliography
      add bookvol13
   community/
      fix mailing list links
   documentation.html
      add AxiomConference.pdf
      add Bottorff quote
      add Knuth quote, cleanup
      add Lamport quote
      add McNamara quote
      add Stroustrop quote
      add W.T. Gowers quote
   download.html
      add binaries
      add texlive-fonts-extra
   patches.html
      add patches
   releasenotes.html
       update for August 2014

src/booklets
   Makefile cleanup

src/clef
   Makefile rename tangle to tanglec
   edible.c modified, noweb removed

src/doc
   export endpaper as pdf
   remove axiom.bib
   rename tangle to tanglec
   use books/axiom.sty
   remove noweb
   booklet.c fix mailing list, remove noweb
   msgs/
      s2-us.msgs remove .as extension from compiler msg

src/etc
   Makefile remove noweb
   asq.c remove noweb

src/input/
   Makefile add input tests for
      charlwood, cherry, functioncode, machinarithmetic,
      pgcd, polygamma, rich*, romanpolynomials, rsa, segletes
      exptest, subset, tree, trigtests
   Makefile remove noweb
   add many tests

src/interp
   Makefile
      remove noweb
      remove autoload of ht-util
      remove bc-matrix
    bc-matrix.lisp removed
    br-con.lisp move to bookvol5
    debugsys cleanup
    g-timer.lisp RNUMP removed
    g-util.lisp functionp -> canFuncall?
    g-util.lisp remove functions
    ht-util.lisp deleted, merged with bookvol5
    i-coerce.lisp functionp -> canFuncall?
    i-funsel.lisp remove functions
    i-spec2.lisp. functionp -> canFuncall?
    interp-proclaims.lisp functionp -> canFuncall?
    regress.lisp improve diff output
    sys-pkg.lisp RNUMP removed
    temp.text deleted
    util.lisp functionp -> canFuncall?
    util.lisp remove autoload of ht-util
    util.lisp remove autoload trigger functions
    util.lisp remove bc-matrix autoload triggers
    util.lisp remove compression
    vmlisp.lisp RNUMP removed

src/scripts
   Makefile remove noweb
   boxhead removed
   boxtail removed
   boxup removed
   document -> books/extract
   showdvi removed
   tex/
      axiom.sty removed

src/share
   Makefile remove noweb
   algebra/compress removed
   algebra/browse, category, dependents, interp, operations, users
      add Attributes as Categories
      add LeftOreRing
      enumerate to FINITE
      no compression
      updated
   doc/
      hypertex/pages/util.ht deleted, unused

src/sman
   Makefile cleanup

zips/
   axiom.vim.tgz vim syntax file added
   gcl-cgywin.tgz added
   noweb-2.10a.tgz deleted, noweb removed
   noweb.* deleted, noweb removed
   all unused patches and versions of gcl deleted

\start
Date: Mon, 28 Jul 2014 17:33:55 -0400
From: Tim Daly <daly@axiom-developer.org>
To: Sarvagnan <sarvagnan@gmail.com>
Subject: Re: [Axiom-developer] Axiom on Mac OS X

Sarvagnan,

I have removed noweb from Axiom so it should not be a problem.  Axiom
now uses its own literate tools, compatible with latex so pamphlet files
are now standard latex files.

I build Axiom on a MACOSX machine. The sources and binary have been
uploaded. The binary should work but, if not, you can build from the
sources with

    tar -cxf axiom-aug2014-src.tgz
    cd axiom
    export AXIOM=`pwd`/mnt/MACOSX         <<-- MACOSX is the SYSNAME
    export PATH=$AXIOM/bin:$PATH
    make

Camm Maguire was vital in getting this to work. The Axiom community owes
Camm a great measure of thanks for all the work he has done over the years.

Tim

\start
Date: Mon, 28 Jul 2014 17:59:13 -0500
From: daly@axiom-developer.org
To: "Camm Maguire" <camm@maguirefamily.org>, gcl-devel@gnu.org
Subject: [Axiom-developer] Couldn't protect

Camm,

I'm building various Axiom versions. It works on ubuntu and on MACOSX
(Intel Mac). However, on a debian image it fails with
   Couldn't protect

The details of the system are:

uname -a

Linux debian 3.2.0-4.686-pae #1 SMP Debian 3.2.57-3 i686 GNU/Linux

cat /etc/os-release

PRETTY_NAME="Debian GNU/Linux 7 (wheezy)"
NAME="Debian GNU/Linux"
VERSION_ID="7"
VERSION="7 (wheezy)"
ID=debian
ANSI_COLOR="1;31"
HOME_URL="http://www.debian.org/"
SUPPORT_URL="http://www.debian.org/support/"
BUG_REPORT_URL="http://bugs.debian.org/"

\start
Date: Tue, 29 Jul 2014 18:08:12 +0530
From: Sarvagnan <sarvagnan@gmail.com>
To: Tim Daly <daly@axiom-developer.org>
Subject: Re: [Axiom-developer] Axiom on Mac OS X

Hey,

Thank you for the great work! I've been reading the mailing list and I'd
like to thank Camm as well.
The binary works on my computer.

Sarva


On Tue, Jul 29, 2014 at 3:03 AM, Tim Daly <daly@axiom-developer.org> wrote:

> Sarvagnan,
>
> I have removed noweb from Axiom so it should not be a problem.  Axiom
> now uses its own literate tools, compatible with latex so pamphlet files
> are now standard latex files.
>
> I build Axiom on a MACOSX machine. The sources and binary have been
> uploaded. The binary should work but, if not, you can build from the
> sources with
>
>     tar -cxf axiom-aug2014-src.tgz
>     cd axiom
>     export AXIOM=`pwd`/mnt/MACOSX         <<-- MACOSX is the SYSNAME
>     export PATH=$AXIOM/bin:$PATH
>     make
>
> Camm Maguire was vital in getting this to work. The Axiom community owes
> Camm a great measure of thanks for all the work he has done over the years.
>
> Tim

--001a11c127783f109d04ff5451f3
Content-Type: text/html; charset=UTF-8
Content-Transfer-Encoding: quoted-printable

<div dir=3D"ltr">Hey,<div><br></div><div>Thank you for the great work! I&#3=
9;ve been reading the mailing list and I&#39;d like to thank Camm as well.<=
/div><div>The binary works on my computer.</div><div><br></div><div>Sarva</=
div>

</div><div class=3D"gmail_extra"><br><br><div class=3D"gmail_quote">On Tue,=
 Jul 29, 2014 at 3:03 AM, Tim Daly <span dir=3D"ltr">&lt;<a href=3D"mailto:=
daly@axiom-developer.org" target=3D"_blank">daly@axiom-developer.org</a>&gt=
;</span> wrote:<br>

<blockquote class=3D"gmail_quote" style=3D"margin:0 0 0 .8ex;border-left:1p=
x #ccc solid;padding-left:1ex">Sarvagnan,<br>
<br>
I have removed noweb from Axiom so it should not be a problem. =C2=A0Axiom<=
br>
now uses its own literate tools, compatible with latex so pamphlet files<br=
>
are now standard latex files.<br>
<br>
I build Axiom on a MACOSX machine. The sources and binary have been<br>
uploaded. The binary should work but, if not, you can build from the<br>
sources with<br>
<br>
=C2=A0 =C2=A0 tar -cxf axiom-aug2014-src.tgz<br>
=C2=A0 =C2=A0 cd axiom<br>
=C2=A0 =C2=A0 export AXIOM=3D`pwd`/mnt/MACOSX =C2=A0 =C2=A0 =C2=A0 =C2=A0 &=
lt;&lt;-- MACOSX is the SYSNAME<br>
=C2=A0 =C2=A0 export PATH=3D$AXIOM/bin:$PATH<br>
=C2=A0 =C2=A0 make<br>
<br>
Camm Maguire was vital in getting this to work. The Axiom community owes<br=
>
Camm a great measure of thanks for all the work he has done over the years.=
<br>
<br>
Tim<br>
<br>
<br>
</blockquote></div><br></div>

--001a11c127783f109d04ff5451f3--

\start
Date: Wed, 30 Jul 2014 16:01:27 -0400
From: Camm Maguire <camm@maguirefamily.org>
To: gcl-devel@gnu.org,daly@axiom-developer.org,axiom-developer@nongnu.org
Subject: [Axiom-developer] axiom extensions

Greetings!

Congratulations on the release, Tim!  I was working on a patch to
suggest, but you beat me to the gates!

Might I be granted write access to some branch in git?

I have been unable to reproduce the protect failure so far.  The 1.8
machine showed a different issue, which has now been resolved.  These
all pertain to differences in compiler versions.  I will try shortly on
a Debian i386 porterbox.

As I mentioned earlier, while compiler::link is working, I would like to
suggest that we migrate to a simpler method of handling the axiom
extensions.  I have a working prototype on your machines.  The basic
idea is to include (clines "#include \"cfuns-c.c\"") at the top of
cfuns.lisp and similar for sockio.lisp, and compile-file and load as
normal.  This requires a few very minor changes to GCL and the -c.c
extension files, but presents the following advantages:

1) all axiom objects are compiled and loaded in the same way

2) it does not depend on gcl externally shipping its link libraries, as
it does now.  This was to support a much more complicated method of
supporting maxima, axiom, and acl2 on machines on which gcl could not
natively relocate binaries, which I'm happy to announce is now
obsolete.  All supported gcl targets have the #+native-reloc feature at
present.  We will continue to ship these libraries for compatibility
reasons for the foreseeable future, but the original motivation, the
dlopen link option, like bfd, is now deprecated, custreloc being the
universal default.
  
3) it does not open a hole for ld to undo what gcl and unexec have
done.  Some care is taken, for example, to eliminate any non-PIC
references to variables in external shared libraries to support prelink,
but this can be foiled by an external application running
compiler::link. 

4) it prepares the way for a unified foreign function interface mostly
ready in master.  The idea here being that everything in the gcl image
should be lisp, and if one really needs something in C, one can
explicitly define pointers to functions in external shared libraries
which will be relocated on image startup, and use these exclusively
within compiled lisp code.  I can repost examples of this if desired.

The only issue here is that this will introduce changes, albeit minor,
which will make axiom require gcl-2.6.11pre or higher.  Given our past
development cycle, I don't think this should be a problem.

Please let me know what you think, or if I might clarify anything.

This diff has the added feature that if the GCL environment variable is
set, the axiom build will use that external image in lieu of building
its own from source.

Take care,


=============================================================================
diff --git a/Makefile b/Makefile
index a26e500..e71365c 100644
--- a/Makefile
+++ b/Makefile
@@ -50,7 +50,8 @@ BYE:=bye
 #GCLVERSION=gcl-2.6.8pre2
 #GCLVERSION=gcl-2.6.8pre3 
 #GCLVERSION=gcl-2.6.8pre4
-GCLVERSION=gcl-2.6.8pre7
+#GCLVERSION=gcl-2.6.8pre7
+GCLVERSION=gcl-cygwin
 GCLDIR:=${LSP}/${GCLVERSION}
 GCLOPTS="--enable-vssize=65536*2 --enable-locbfd --disable-dynsysbfd \
          --disable-statsysbfd --enable-maxpage=512*1024 --disable-xgcl \
@@ -294,4 +295,11 @@ clean:
 	@ for i in `find src -name "Makefile.dvi"` ; do rm -f $$i ; done
 	@ rm -f lastBuildDate
 	@ rm -f books/tangle
+	@ rm -f Makefile.pdf books/Makefile.pdf 
+	@ rm -f lsp/Makefile.pdf lsp/Makefile.pdf src/Makefile.pdf
+	@ rm -f src/algebra/Makefile.pdf src/clef/Makefile.pdf 
+	@ rm -f src/doc/Makefile.pdf
+	@ rm -f src/etc/Makefile.pdf src/input/Makefile.pdf 
+	@ rm -f src/interp/Makefile.pdf
+	@ rm -f src/scripts/Makefile.pdf src/share/Makefile.pdf
 
diff --git a/Makefile.pamphlet b/Makefile.pamphlet
index 24b427a..cb21426 100644
--- a/Makefile.pamphlet
+++ b/Makefile.pamphlet
@@ -690,7 +690,7 @@ lspdir: ${MNT}/${SYS}/bin/document ${LSP}/Makefile
 	@echo =====================================
 	@echo lsp BUILDING GCL COMMON LISP
 	@echo =====================================
-	@(cd lsp ; ${ENV} ${MAKE} gcldir ) 1>/dev/null 2>/dev/null
+	@(cd lsp ; ${ENV} DESTDIR= ${MAKE} gcldir ) 
 #	@(cd lsp ; ${ENV} ${MAKE} ccldir )
 
 \getchunk{LSPMakefile}
@@ -876,7 +876,8 @@ forget to erase the lsp/Makefile the wrong patches will be applied.
 #GCLVERSION=gcl-2.6.8pre2
 #GCLVERSION=gcl-2.6.8pre3 
 #GCLVERSION=gcl-2.6.8pre4
-GCLVERSION=gcl-2.6.8pre7
+#GCLVERSION=gcl-2.6.8pre7
+GCLVERSION=gcl-cygwin
 \end{chunk}
 
 \subsubsection{The GCLOPTS configure variable}
diff --git a/lsp/Makefile.pamphlet b/lsp/Makefile.pamphlet
index 2b2764e..58e169a 100644
--- a/lsp/Makefile.pamphlet
+++ b/lsp/Makefile.pamphlet
@@ -1681,6 +1681,89 @@ clean:
 	@echo 25 cleaning ${LSP}/ccl
 	@( cd ccl ; ${ENV} ${MAKE} clean )
 \end{chunk}
+
+\subsection{The GCL-cygwin stanza}
+This stanza will be written when the GCLVERSION variable is
+``gcl-cygwin''. It will overwrite the default version. See the 
+top level Makefile.pamphlet.
+
+The compiler::link function call was suggested by Camm as a
+way around patching the lisp system. The function creates a
+new lisp image ld and C objects prior to save-system. 
+\begin{verbatim}
+	echo '(compiler::link \
+\end{verbatim}
+The first argument can be used to compile and load lisp code.
+\begin{verbatim}
+               (list (compile-file "${BOOKS}/tangle.lisp")) \
+\end{verbatim}
+The second argument gives the file location for the save-system
+\begin{verbatim}
+               "${OUT}/lisp" \
+\end{verbatim}
+The third argument sets up various internal variables, including
+the 
+\begin{verbatim}
+               (format nil \
+                "(progn \
+                  (let ((*load-path* (cons ~S *load-path*)) \
+                        (si::*load-types* ~S)) \
+                    (compiler::emit-fn t)) \
+                  (setq *tmp-dir* "${TMP}") \
+                  (makunbound (quote *system-banner*)) \
+                  (when (fboundp (quote si::sgc-on)) (si::sgc-on t)) \
+                  #-native-reloc (setq compiler::*default-system-p* t))" \
+                si::*system-directory* \
+                (quote (list #+native-reloc".o" ".lsp"))) \
+\end{verbatim}
+The fourth argument is a list of binaries to link
+\begin{verbatim}
+               "${OBJ}/${SYS}/lib/cfuns-c.o \
+                ${OBJ}/${SYS}/lib/sockio-c.o \
+                ${OBJ}/${SYS}/lib/libspad.a")' \
+\end{verbatim}
+and the compiler::link command is piped into the lisp image.
+\begin{verbatim}
+           | unixport/saved_gcl )
+\end{verbatim}
+
+\begin{chunk}{gcl-cygwin}
+# gcl version cygwin
+OUT=${OBJ}/${SYS}/bin
+
+all:
+	@echo 1 building ${LSP} ${GCLVERSION}
+
+${BOOKS}/tangle1.lisp: ${BOOKS}/tangle.lisp
+	cp $< $@		       
+
+GCL?=$(GCLVERSION)/bin/gcl
+
+$(GCLVERSION)/bin/gcl:
+	@echo 2 building ${GCLVERSION}
+	@tar -zxf ${ZIPS}/${GCLVERSION}.tgz
+	cd ${GCLVERSION} && ./configure ${GCLOPTS} && ${ENV} DESTDIR= ${MAKE}
+
+${OUT}/lisp: ${GCL} ${BOOKS}/tangle1.lisp
+	echo "(progn \
+		     (load (compile-file \"${BOOKS}/tangle1.lisp\"))\
+		     (compiler::emit-fn t)\
+		     (when (fboundp 'si::sgc-on)(si::sgc-on t))\
+		     (si::save-system \"${OUT}/lisp\"))" | ${GCL}
+
+gcldir: ${OUT}/lisp
+	@echo 13 finished system build on `date` | tee >gcldir
+
+clean-gcl-external:
+
+clean-gcl-cygwin:
+	rm -rf $(GCLVERSION)
+
+clean: clean-$(GCLVERSION)
+	rm gcldir build-* gcl-link
+
+\end{chunk}
+
 \eject
 \begin{thebibliography}{99}
 \bibitem{1} nothing
diff --git a/src/include/com.h b/src/include/com.h
index c974f07..241438d 100755
--- a/src/include/com.h
+++ b/src/include/com.h
@@ -92,11 +92,16 @@ typedef struct {
 
 /* table of dedicated socket types */
 
+#ifndef GCL_SOURCE
+#define STATIC
 extern Sock *purpose_table[];
 extern Sock server[];
 extern Sock clients[];
 extern fd_set socket_mask;
 extern fd_set server_mask;
+#else
+#define STATIC static
+#endif
 
 /* Commands sent over the AXIOM session manager or menu socket */
 
diff --git a/src/interp/Makefile.pamphlet b/src/interp/Makefile.pamphlet
index eced320..3db9715 100644
--- a/src/interp/Makefile.pamphlet
+++ b/src/interp/Makefile.pamphlet
@@ -828,7 +828,7 @@ ${OUT}/%.${LISP}: ${MID}/%.lisp
 ${OUT}/%.lisp: ${IN}/%.lisp.pamphlet
 	@ echo siOUTfromIN making ${OUT}/$*.lisp from ${IN}/$*.lisp.pamphlet
 	@ rm -f ${OUT}/$*.${O}
-	@( cd ${OUT} ; \
+	@ ( cd ${OUT} ; \
           echo '(tangle "${IN}/$*.lisp.pamphlet" "*" "$*.lisp")' \
         | ${OBJ}/${SYS}/bin/lisp ) 1>/dev/null 
 
@@ -836,13 +836,15 @@ ${OUT}/%.o: ${MID}/%.lisp
 	@ echo siOUTfromMID making ${OUT}/$*.o from ${MID}/$*.lisp
 	@ if [ -z "${NOISE}" ] ; then \
 	   (cd ${MID} ; \
-	    echo '(progn  (compile-file "$*.lisp"' \
-             ':output-file "${OUT}/$*.o") (${BYE}))' | ${DEPSYS} ) ; \
+	   echo "(let ((compiler::*cc* (concatenate 'string compiler::*cc* \" -I ${INC} -I ../lib\")))\
+	   	  (compile-file \"$<\" \
+             :output-file \"$@\") (${BYE}))" | ${DEPSYS}) ; \
 	   else \
 	    (cd ${MID} ; \
-	     echo '(progn  (compile-file "$*.lisp"' \
-             ':output-file "${OUT}/$I.o") (${BYE}))' | ${DEPSYS} ) \
-              1>/dev/null 2>/dev/null ; \
+	   echo "(let ((compiler::*cc* (concatenate 'string compiler::*cc* \" -I ${INC} -I ../lib\")))\
+	   	  (compile-file \"$<\" \
+             :output-file \"$@\") (${BYE}))" | ${DEPSYS} \
+              1>$$(echo "$(NOISE)" | $(AWK) '{print $$2}') 2>&1) ; \
 	   fi 
 
 ${MID}/%.lisp: ${IN}/%.lisp.pamphlet
@@ -857,15 +859,17 @@ ${AUTO}/%.${O}: ${OUT}/%.${O}
 
 ${OUT}/%.${O}: ${MID}/%.${LISP}
 	@ echo si123 making ${OUT}/$*.${O} from ${MID}/$*.${LISP}
-	@  if [ -z "${NOISE}" ] ; then \
+	@ if [ -z "${NOISE}" ] ; then \
 	 (cd ${MID} ; \
-	   echo '(progn  (compile-file "${MID}/$*.${LISP}"' \
-             ':output-file "${OUT}/$*.${O}") (${BYE}))' | ${DEPSYS} ) ; \
+	   echo "(let ((compiler::*cc* (concatenate 'string compiler::*cc* \" -I ${INC} -I ../lib\")))\
+	   	  (compile-file \"$<\" \
+             :output-file \"$@\") (${BYE}))" | ${DEPSYS}) \
 	  else \
 	  (cd ${MID} ; \
-	   echo '(progn  (compile-file "${MID}/$*.${LISP}"' \
-             ':output-file "${OUT}/$*.${O}") (${BYE}))' | ${DEPSYS} ) \
-              1>/dev/null 2>/dev/null ; \
+	   echo "(let ((compiler::*cc* (concatenate 'string compiler::*cc* \" -I ${INC} -I ../lib\")))\
+	   	  (compile-file \"$<\" \
+             :output-file \"$@\") (${BYE}))" | ${DEPSYS} \
+              1>$$(echo "$(NOISE)" | $(AWK) '{print $$2}') 2>&1) ; \
 	  fi 
 
 \end{chunk}
diff --git a/src/interp/cfuns.lisp.pamphlet b/src/interp/cfuns.lisp.pamphlet
index f0885e9..bbedc3e 100644
--- a/src/interp/cfuns.lisp.pamphlet
+++ b/src/interp/cfuns.lisp.pamphlet
@@ -45,6 +45,10 @@
 \end{verbatim}
 \begin{chunk}{*}
 
+(clines "
+#define GCL_SOURCE
+#include \"cfuns-c.c\"
+")
 
 (in-package "BOOT")
 
diff --git a/src/interp/sockio.lisp.pamphlet b/src/interp/sockio.lisp.pamphlet
index aff6848..11d6e5c 100644
--- a/src/interp/sockio.lisp.pamphlet
+++ b/src/interp/sockio.lisp.pamphlet
@@ -47,6 +47,11 @@
 
 
 ;; load C socket functions
+(clines "
+#define GCL_SOURCE
+#include \"sockio-c.c\"
+#include \"bsdsignal.c\"
+")
 
 (in-package "BOOT")
 
@@ -90,24 +95,24 @@ string with data read from connection, therefore needs address of
 actual string buffer. We use [[sock_get_string_buf_wrapper]] to
 resolve the problem
 \begin{chunk}{*}
-  (clines "int sock_get_string_buf_wrapper(int i, object x, int j)"
+  (clines "fixnum sock_get_string_buf_wrapper(int i, object x, int j)"
           "{ if (type_of(x)!=t_string) FEwrong_type_argument(sLstring,x);"
           "  if (x->st.st_fillp<j)"
           "    FEerror(\"string too small in sock_get_string_buf_wrapper\",0);"
-          "  return sock_get_string_buf(i, x->st.st_self, j); }")
+          "  return (fixnum)sock_get_string_buf(i, x->st.st_self, j); }")
   (defentry open_server (string) (int "open_server"))
   (defentry sock_get_int (int) (int "sock_get_int"))
   (defentry sock_send_int (int int) (int "sock_send_int"))
   (defentry sock_get_string_buf (int object int) 
-     (int "sock_get_string_buf_wrapper"))
+     (fixnum "sock_get_string_buf_wrapper"))
   (defentry sock_send_string_len (int string int) (int "sock_send_string_len"))
   (defentry sock_get_float (int) (double "sock_get_float"))
   (defentry sock_send_float (int double) (int "sock_send_float"))
-  (defentry sock_send_wakeup (int int) (int "sock_send_wakeup"))
+  (defentry sock_send_wakeup (int) (int "sock_send_wakeup"))
   (defentry server_switch () (int "server_switch"))
-  (defentry flush_stdout () (int "flush_stdout"))
+  (defentry flush_stdout () (void "flush_stdout"))
   (defentry sock_send_signal (int int) (int "sock_send_signal"))
-  (defentry print_line (string) (int "print_line"))
+  (defentry print_line (string) (void "print_line"))
   (defentry plus_infinity () (double "plus_infinity"))
   (defentry minus_infinity () (double "minus_infinity"))
   (defentry NANQ () (double "NANQ"))
diff --git a/src/lib/cfuns-c.c.pamphlet b/src/lib/cfuns-c.c.pamphlet
index 486fe09..21c1760 100644
--- a/src/lib/cfuns-c.c.pamphlet
+++ b/src/lib/cfuns-c.c.pamphlet
@@ -123,7 +123,11 @@ int make_path_from_file(char *s, char *t) {
         return (-1);
     }
     /** now just do the copying **/
+#ifdef GCL_SOURCE
+    memcpy(s, t, pos - t);
+#else       
     strncpy(s, t, pos - t);
+#endif
     return 1;
 }
 
diff --git a/src/lib/sockio-c.c.pamphlet b/src/lib/sockio-c.c.pamphlet
index 6841293..4549bd7 100644
--- a/src/lib/sockio-c.c.pamphlet
+++ b/src/lib/sockio-c.c.pamphlet
@@ -89,17 +89,17 @@ of files are badly broken with respect to the [[/usr/include]] versions.
   ( purpose_table[purpose] == NULL ? sock_accept_connection(purpose) : 1 )
 
 
-Sock clients[MaxClients];       /* socket description of spad clients */
-Sock server[2];                 /* AF_UNIX and AF_INET sockets for server */
-Sock *purpose_table[TotalMaxPurposes]; /* table of dedicated socket types */
-fd_set socket_mask;             /* bit mask of active sockets */
-fd_set server_mask;             /* bit mask of server sockets */
-int socket_closed;              /* used to identify closed socket on SIGPIPE */
-int spad_server_number = -1;    /* spad server number used in sman */
-int str_len = 0;
-int still_reading  = 0;
-
-
+STATIC Sock clients[MaxClients];       /* socket description of spad clients */
+STATIC Sock server[2];                 /* AF_UNIX and AF_INET sockets for server */
+STATIC Sock *purpose_table[TotalMaxPurposes]; /* table of dedicated socket types */
+STATIC fd_set socket_mask;             /* bit mask of active sockets */
+STATIC fd_set server_mask;             /* bit mask of server sockets */
+STATIC int socket_closed;              /* used to identify closed socket on SIGPIPE */
+STATIC int spad_server_number = -1;    /* spad server number used in sman */
+STATIC int str_len = 0;
+#ifndef GCL_SOURCE
+STATIC int still_reading  = 0;
+#endif
 
 #include "bsdsignal.h1"
 #include "sockio-c.h1"
@@ -303,14 +303,22 @@ send_string_len(Sock *sock,char *str,int len)
   if (len > 1023) {
     char *buf;
     buf = malloc(len+1);
+#ifdef GCL_SOURCE
+    memcpy(buf,str,len);
+#else
     strncpy(buf,str,len);
+#endif
     buf[len]='\0';
     send_int(sock,len+1);
     val = swrite(sock, buf, len+1, NULL);
     free(buf);
   } else {
     static char buf[1024];
-    strncpy(buf, str, len);
+#ifdef GCL_SOURCE
+    memcpy(buf,str,len);
+#else
+    strncpy(buf,str,len);
+#endif
     buf[len] = '\0';
     send_int(sock, len+1);
     val = swrite(sock, buf, len+1, NULL);
@@ -730,7 +738,11 @@ remote_stdio(Sock *sock)
       return;
     }
     if (FD_ISSET(0, &rd)) {
+#ifdef GCL_SOURCE
+       gcl_gets(buf,1024);
+#else
       fgets(buf,1024,stdin);
+#endif
       len = strlen(buf);
       /*
           gets(buf);
@@ -746,8 +758,12 @@ remote_stdio(Sock *sock)
         return;
       else {
         *(buf + len) = '\0';
-        fputs(buf, stdout);
-        fflush(stdout);
+#ifdef GCL_SOURCE
+       gcl_puts(buf);
+#else
+       fputs(buf, stdout);
+       fflush(stdout);
+#endif
       }
     }
   }
@@ -938,15 +954,15 @@ redirect_stdio(Sock *sock)
 /*  setbuf(stdout, NULL);  */
   fd = dup2(sock->socket, 1);
   if (fd != 1) {
-    fprintf(stderr, "Error connecting stdout to socket\n");
+    perror("Error connecting stdout to socket\n");
     return;
   }
   fd = dup2(sock->socket, 0);
   if (fd != 0) {
-    fprintf(stderr, "Error connecting stdin to socket\n");
+    perror("Error connecting stdin to socket\n");
     return;
   }
-  fprintf(stderr, "Redirected standard IO\n");
+  perror("Redirected standard IO\n");
   FD_CLR(sock->socket, &socket_mask);
 }
 
-- 
Camm Maguire			     		    camm@maguirefamily.org

\start
Date: Thu, 31 Jul 2014 11:49:16 -0400
From: Camm Maguire <camm@maguirefamily.org>
To: daly@axiom-developer.org
Subject: Re: [Axiom-developer] Couldn't protect

Hi Tim!  Any way to provide ssh access to this machine?  Also, I think I
need to know what you use for $AXIOM, as apparently this changes the
code in play.  I always use $(pwd)/mnt/linux, and $(pwd)/mnt/ubuntu on
your boxes.  (It seems to me that you should be able to consolidate this
to two, linux and MACOSX, at present, though mingw or cygwin might be
another.  Eventually, having a configure script determine all this would
be even better.)

I am trying your git source on a Debian 686 porterbox just to check, but
I'm pretty sure I won't see this failure.  I can add a few more
diagnostics to the output, as this seems to come up with some frequency
for you.  Or you can run the offending command under 'strace -f' and
post the voluminous output somewhere.  In a nutshell, the mprotect
syscall is failing, and there are only four possibilities, the most
likely being:

       EACCES The  memory  cannot be given the specified access.  This can happen, for example, if you mmap(2) a file to which you have read-only
              access, then ask mprotect() to mark it PROT_WRITE.

GCL must be able to execute in .data expanded by brk, and some system
security settings disallow this, under the assumption that all code
belongs in .text.  dlopen has to get around this somehow, and that could
be useful for use to understand someday to mitigate this issue.

Take care,

daly@axiom-developer.org writes:

> Camm,
>
> I'm building various Axiom versions. It works on ubuntu and on MACOSX
> (Intel Mac). However, on a debian image it fails with
>    Couldn't protect
>
> The details of the system are:
>
> uname -a
>
> Linux debian 3.2.0-4.686-pae #1 SMP Debian 3.2.57-3 i686 GNU/Linux
>
> cat /etc/os-release
>
> PRETTY_NAME="Debian GNU/Linux 7 (wheezy)"
> NAME="Debian GNU/Linux"
> VERSION_ID="7"
> VERSION="7 (wheezy)"
> ID=debian
> ANSI_COLOR="1;31"
> HOME_URL="http://www.debian.org/"
> SUPPORT_URL="http://www.debian.org/support/"
> BUG_REPORT_URL="http://bugs.debian.org/"
>
>
>
>
>

-- 
Camm Maguire			     		    camm@maguirefamily.org



\end{verbatim}
\eject
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\cleardoublepage
%\phantomsection
\addcontentsline{toc}{chapter}{Bibliography}
\bibliographystyle{axiom}
\bibliography{axiom}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\cleardoublepage
%\phantomsection
\addcontentsline{toc}{chapter}{Index}
\printindex
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\end{document}
